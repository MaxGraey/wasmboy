(function () {
  'use strict';

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(source);

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  var VNode = function VNode() {};

  var options = {};

  var stack = [];

  var EMPTY_CHILDREN = [];

  function h(nodeName, attributes) {
  	var children = EMPTY_CHILDREN,
  	    lastSimple,
  	    child,
  	    simple,
  	    i;
  	for (i = arguments.length; i-- > 2;) {
  		stack.push(arguments[i]);
  	}
  	if (attributes && attributes.children != null) {
  		if (!stack.length) stack.push(attributes.children);
  		delete attributes.children;
  	}
  	while (stack.length) {
  		if ((child = stack.pop()) && child.pop !== undefined) {
  			for (i = child.length; i--;) {
  				stack.push(child[i]);
  			}
  		} else {
  			if (typeof child === 'boolean') child = null;

  			if (simple = typeof nodeName !== 'function') {
  				if (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;
  			}

  			if (simple && lastSimple) {
  				children[children.length - 1] += child;
  			} else if (children === EMPTY_CHILDREN) {
  				children = [child];
  			} else {
  				children.push(child);
  			}

  			lastSimple = simple;
  		}
  	}

  	var p = new VNode();
  	p.nodeName = nodeName;
  	p.children = children;
  	p.attributes = attributes == null ? undefined : attributes;
  	p.key = attributes == null ? undefined : attributes.key;

  	if (options.vnode !== undefined) options.vnode(p);

  	return p;
  }

  function extend(obj, props) {
    for (var i in props) {
      obj[i] = props[i];
    }return obj;
  }

  var defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;

  function cloneElement(vnode, props) {
    return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);
  }

  var IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;

  var items = [];

  function enqueueRender(component) {
  	if (!component._dirty && (component._dirty = true) && items.push(component) == 1) {
  		(options.debounceRendering || defer)(rerender);
  	}
  }

  function rerender() {
  	var p,
  	    list = items;
  	items = [];
  	while (p = list.pop()) {
  		if (p._dirty) renderComponent(p);
  	}
  }

  function isSameNodeType(node, vnode, hydrating) {
  	if (typeof vnode === 'string' || typeof vnode === 'number') {
  		return node.splitText !== undefined;
  	}
  	if (typeof vnode.nodeName === 'string') {
  		return !node._componentConstructor && isNamedNode(node, vnode.nodeName);
  	}
  	return hydrating || node._componentConstructor === vnode.nodeName;
  }

  function isNamedNode(node, nodeName) {
  	return node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();
  }

  function getNodeProps(vnode) {
  	var props = extend({}, vnode.attributes);
  	props.children = vnode.children;

  	var defaultProps = vnode.nodeName.defaultProps;
  	if (defaultProps !== undefined) {
  		for (var i in defaultProps) {
  			if (props[i] === undefined) {
  				props[i] = defaultProps[i];
  			}
  		}
  	}

  	return props;
  }

  function createNode(nodeName, isSvg) {
  	var node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);
  	node.normalizedNodeName = nodeName;
  	return node;
  }

  function removeNode(node) {
  	var parentNode = node.parentNode;
  	if (parentNode) parentNode.removeChild(node);
  }

  function setAccessor(node, name, old, value, isSvg) {
  	if (name === 'className') name = 'class';

  	if (name === 'key') ; else if (name === 'ref') {
  		if (old) old(null);
  		if (value) value(node);
  	} else if (name === 'class' && !isSvg) {
  		node.className = value || '';
  	} else if (name === 'style') {
  		if (!value || typeof value === 'string' || typeof old === 'string') {
  			node.style.cssText = value || '';
  		}
  		if (value && typeof value === 'object') {
  			if (typeof old !== 'string') {
  				for (var i in old) {
  					if (!(i in value)) node.style[i] = '';
  				}
  			}
  			for (var i in value) {
  				node.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];
  			}
  		}
  	} else if (name === 'dangerouslySetInnerHTML') {
  		if (value) node.innerHTML = value.__html || '';
  	} else if (name[0] == 'o' && name[1] == 'n') {
  		var useCapture = name !== (name = name.replace(/Capture$/, ''));
  		name = name.toLowerCase().substring(2);
  		if (value) {
  			if (!old) node.addEventListener(name, eventProxy, useCapture);
  		} else {
  			node.removeEventListener(name, eventProxy, useCapture);
  		}
  		(node._listeners || (node._listeners = {}))[name] = value;
  	} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {
  		try {
  			node[name] = value == null ? '' : value;
  		} catch (e) {}
  		if ((value == null || value === false) && name != 'spellcheck') node.removeAttribute(name);
  	} else {
  		var ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));

  		if (value == null || value === false) {
  			if (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);
  		} else if (typeof value !== 'function') {
  			if (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);
  		}
  	}
  }

  function eventProxy(e) {
  	return this._listeners[e.type](options.event && options.event(e) || e);
  }

  var mounts = [];

  var diffLevel = 0;

  var isSvgMode = false;

  var hydrating = false;

  function flushMounts() {
  	var c;
  	while (c = mounts.pop()) {
  		if (options.afterMount) options.afterMount(c);
  		if (c.componentDidMount) c.componentDidMount();
  	}
  }

  function diff(dom, vnode, context, mountAll, parent, componentRoot) {
  	if (!diffLevel++) {
  		isSvgMode = parent != null && parent.ownerSVGElement !== undefined;

  		hydrating = dom != null && !('__preactattr_' in dom);
  	}

  	var ret = idiff(dom, vnode, context, mountAll, componentRoot);

  	if (parent && ret.parentNode !== parent) parent.appendChild(ret);

  	if (! --diffLevel) {
  		hydrating = false;

  		if (!componentRoot) flushMounts();
  	}

  	return ret;
  }

  function idiff(dom, vnode, context, mountAll, componentRoot) {
  	var out = dom,
  	    prevSvgMode = isSvgMode;

  	if (vnode == null || typeof vnode === 'boolean') vnode = '';

  	if (typeof vnode === 'string' || typeof vnode === 'number') {
  		if (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {
  			if (dom.nodeValue != vnode) {
  				dom.nodeValue = vnode;
  			}
  		} else {
  			out = document.createTextNode(vnode);
  			if (dom) {
  				if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
  				recollectNodeTree(dom, true);
  			}
  		}

  		out['__preactattr_'] = true;

  		return out;
  	}

  	var vnodeName = vnode.nodeName;
  	if (typeof vnodeName === 'function') {
  		return buildComponentFromVNode(dom, vnode, context, mountAll);
  	}

  	isSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;

  	vnodeName = String(vnodeName);
  	if (!dom || !isNamedNode(dom, vnodeName)) {
  		out = createNode(vnodeName, isSvgMode);

  		if (dom) {
  			while (dom.firstChild) {
  				out.appendChild(dom.firstChild);
  			}
  			if (dom.parentNode) dom.parentNode.replaceChild(out, dom);

  			recollectNodeTree(dom, true);
  		}
  	}

  	var fc = out.firstChild,
  	    props = out['__preactattr_'],
  	    vchildren = vnode.children;

  	if (props == null) {
  		props = out['__preactattr_'] = {};
  		for (var a = out.attributes, i = a.length; i--;) {
  			props[a[i].name] = a[i].value;
  		}
  	}

  	if (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {
  		if (fc.nodeValue != vchildren[0]) {
  			fc.nodeValue = vchildren[0];
  		}
  	} else if (vchildren && vchildren.length || fc != null) {
  			innerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);
  		}

  	diffAttributes(out, vnode.attributes, props);

  	isSvgMode = prevSvgMode;

  	return out;
  }

  function innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {
  	var originalChildren = dom.childNodes,
  	    children = [],
  	    keyed = {},
  	    keyedLen = 0,
  	    min = 0,
  	    len = originalChildren.length,
  	    childrenLen = 0,
  	    vlen = vchildren ? vchildren.length : 0,
  	    j,
  	    c,
  	    f,
  	    vchild,
  	    child;

  	if (len !== 0) {
  		for (var i = 0; i < len; i++) {
  			var _child = originalChildren[i],
  			    props = _child['__preactattr_'],
  			    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;
  			if (key != null) {
  				keyedLen++;
  				keyed[key] = _child;
  			} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {
  				children[childrenLen++] = _child;
  			}
  		}
  	}

  	if (vlen !== 0) {
  		for (var i = 0; i < vlen; i++) {
  			vchild = vchildren[i];
  			child = null;

  			var key = vchild.key;
  			if (key != null) {
  				if (keyedLen && keyed[key] !== undefined) {
  					child = keyed[key];
  					keyed[key] = undefined;
  					keyedLen--;
  				}
  			} else if (min < childrenLen) {
  					for (j = min; j < childrenLen; j++) {
  						if (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {
  							child = c;
  							children[j] = undefined;
  							if (j === childrenLen - 1) childrenLen--;
  							if (j === min) min++;
  							break;
  						}
  					}
  				}

  			child = idiff(child, vchild, context, mountAll);

  			f = originalChildren[i];
  			if (child && child !== dom && child !== f) {
  				if (f == null) {
  					dom.appendChild(child);
  				} else if (child === f.nextSibling) {
  					removeNode(f);
  				} else {
  					dom.insertBefore(child, f);
  				}
  			}
  		}
  	}

  	if (keyedLen) {
  		for (var i in keyed) {
  			if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);
  		}
  	}

  	while (min <= childrenLen) {
  		if ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);
  	}
  }

  function recollectNodeTree(node, unmountOnly) {
  	var component = node._component;
  	if (component) {
  		unmountComponent(component);
  	} else {
  		if (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);

  		if (unmountOnly === false || node['__preactattr_'] == null) {
  			removeNode(node);
  		}

  		removeChildren(node);
  	}
  }

  function removeChildren(node) {
  	node = node.lastChild;
  	while (node) {
  		var next = node.previousSibling;
  		recollectNodeTree(node, true);
  		node = next;
  	}
  }

  function diffAttributes(dom, attrs, old) {
  	var name;

  	for (name in old) {
  		if (!(attrs && attrs[name] != null) && old[name] != null) {
  			setAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);
  		}
  	}

  	for (name in attrs) {
  		if (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {
  			setAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);
  		}
  	}
  }

  var recyclerComponents = [];

  function createComponent(Ctor, props, context) {
  	var inst,
  	    i = recyclerComponents.length;

  	if (Ctor.prototype && Ctor.prototype.render) {
  		inst = new Ctor(props, context);
  		Component.call(inst, props, context);
  	} else {
  		inst = new Component(props, context);
  		inst.constructor = Ctor;
  		inst.render = doRender;
  	}

  	while (i--) {
  		if (recyclerComponents[i].constructor === Ctor) {
  			inst.nextBase = recyclerComponents[i].nextBase;
  			recyclerComponents.splice(i, 1);
  			return inst;
  		}
  	}

  	return inst;
  }

  function doRender(props, state, context) {
  	return this.constructor(props, context);
  }

  function setComponentProps(component, props, renderMode, context, mountAll) {
  	if (component._disable) return;
  	component._disable = true;

  	component.__ref = props.ref;
  	component.__key = props.key;
  	delete props.ref;
  	delete props.key;

  	if (typeof component.constructor.getDerivedStateFromProps === 'undefined') {
  		if (!component.base || mountAll) {
  			if (component.componentWillMount) component.componentWillMount();
  		} else if (component.componentWillReceiveProps) {
  			component.componentWillReceiveProps(props, context);
  		}
  	}

  	if (context && context !== component.context) {
  		if (!component.prevContext) component.prevContext = component.context;
  		component.context = context;
  	}

  	if (!component.prevProps) component.prevProps = component.props;
  	component.props = props;

  	component._disable = false;

  	if (renderMode !== 0) {
  		if (renderMode === 1 || options.syncComponentUpdates !== false || !component.base) {
  			renderComponent(component, 1, mountAll);
  		} else {
  			enqueueRender(component);
  		}
  	}

  	if (component.__ref) component.__ref(component);
  }

  function renderComponent(component, renderMode, mountAll, isChild) {
  	if (component._disable) return;

  	var props = component.props,
  	    state = component.state,
  	    context = component.context,
  	    previousProps = component.prevProps || props,
  	    previousState = component.prevState || state,
  	    previousContext = component.prevContext || context,
  	    isUpdate = component.base,
  	    nextBase = component.nextBase,
  	    initialBase = isUpdate || nextBase,
  	    initialChildComponent = component._component,
  	    skip = false,
  	    snapshot = previousContext,
  	    rendered,
  	    inst,
  	    cbase;

  	if (component.constructor.getDerivedStateFromProps) {
  		state = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));
  		component.state = state;
  	}

  	if (isUpdate) {
  		component.props = previousProps;
  		component.state = previousState;
  		component.context = previousContext;
  		if (renderMode !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {
  			skip = true;
  		} else if (component.componentWillUpdate) {
  			component.componentWillUpdate(props, state, context);
  		}
  		component.props = props;
  		component.state = state;
  		component.context = context;
  	}

  	component.prevProps = component.prevState = component.prevContext = component.nextBase = null;
  	component._dirty = false;

  	if (!skip) {
  		rendered = component.render(props, state, context);

  		if (component.getChildContext) {
  			context = extend(extend({}, context), component.getChildContext());
  		}

  		if (isUpdate && component.getSnapshotBeforeUpdate) {
  			snapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);
  		}

  		var childComponent = rendered && rendered.nodeName,
  		    toUnmount,
  		    base;

  		if (typeof childComponent === 'function') {

  			var childProps = getNodeProps(rendered);
  			inst = initialChildComponent;

  			if (inst && inst.constructor === childComponent && childProps.key == inst.__key) {
  				setComponentProps(inst, childProps, 1, context, false);
  			} else {
  				toUnmount = inst;

  				component._component = inst = createComponent(childComponent, childProps, context);
  				inst.nextBase = inst.nextBase || nextBase;
  				inst._parentComponent = component;
  				setComponentProps(inst, childProps, 0, context, false);
  				renderComponent(inst, 1, mountAll, true);
  			}

  			base = inst.base;
  		} else {
  			cbase = initialBase;

  			toUnmount = initialChildComponent;
  			if (toUnmount) {
  				cbase = component._component = null;
  			}

  			if (initialBase || renderMode === 1) {
  				if (cbase) cbase._component = null;
  				base = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);
  			}
  		}

  		if (initialBase && base !== initialBase && inst !== initialChildComponent) {
  			var baseParent = initialBase.parentNode;
  			if (baseParent && base !== baseParent) {
  				baseParent.replaceChild(base, initialBase);

  				if (!toUnmount) {
  					initialBase._component = null;
  					recollectNodeTree(initialBase, false);
  				}
  			}
  		}

  		if (toUnmount) {
  			unmountComponent(toUnmount);
  		}

  		component.base = base;
  		if (base && !isChild) {
  			var componentRef = component,
  			    t = component;
  			while (t = t._parentComponent) {
  				(componentRef = t).base = base;
  			}
  			base._component = componentRef;
  			base._componentConstructor = componentRef.constructor;
  		}
  	}

  	if (!isUpdate || mountAll) {
  		mounts.unshift(component);
  	} else if (!skip) {

  		if (component.componentDidUpdate) {
  			component.componentDidUpdate(previousProps, previousState, snapshot);
  		}
  		if (options.afterUpdate) options.afterUpdate(component);
  	}

  	while (component._renderCallbacks.length) {
  		component._renderCallbacks.pop().call(component);
  	}if (!diffLevel && !isChild) flushMounts();
  }

  function buildComponentFromVNode(dom, vnode, context, mountAll) {
  	var c = dom && dom._component,
  	    originalComponent = c,
  	    oldDom = dom,
  	    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,
  	    isOwner = isDirectOwner,
  	    props = getNodeProps(vnode);
  	while (c && !isOwner && (c = c._parentComponent)) {
  		isOwner = c.constructor === vnode.nodeName;
  	}

  	if (c && isOwner && (!mountAll || c._component)) {
  		setComponentProps(c, props, 3, context, mountAll);
  		dom = c.base;
  	} else {
  		if (originalComponent && !isDirectOwner) {
  			unmountComponent(originalComponent);
  			dom = oldDom = null;
  		}

  		c = createComponent(vnode.nodeName, props, context);
  		if (dom && !c.nextBase) {
  			c.nextBase = dom;

  			oldDom = null;
  		}
  		setComponentProps(c, props, 1, context, mountAll);
  		dom = c.base;

  		if (oldDom && dom !== oldDom) {
  			oldDom._component = null;
  			recollectNodeTree(oldDom, false);
  		}
  	}

  	return dom;
  }

  function unmountComponent(component) {
  	if (options.beforeUnmount) options.beforeUnmount(component);

  	var base = component.base;

  	component._disable = true;

  	if (component.componentWillUnmount) component.componentWillUnmount();

  	component.base = null;

  	var inner = component._component;
  	if (inner) {
  		unmountComponent(inner);
  	} else if (base) {
  		if (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);

  		component.nextBase = base;

  		removeNode(base);
  		recyclerComponents.push(component);

  		removeChildren(base);
  	}

  	if (component.__ref) component.__ref(null);
  }

  function Component(props, context) {
  	this._dirty = true;

  	this.context = context;

  	this.props = props;

  	this.state = this.state || {};

  	this._renderCallbacks = [];
  }

  extend(Component.prototype, {
  	setState: function setState(state, callback) {
  		if (!this.prevState) this.prevState = this.state;
  		this.state = extend(extend({}, this.state), typeof state === 'function' ? state(this.state, this.props) : state);
  		if (callback) this._renderCallbacks.push(callback);
  		enqueueRender(this);
  	},
  	forceUpdate: function forceUpdate(callback) {
  		if (callback) this._renderCallbacks.push(callback);
  		renderComponent(this, 2);
  	},
  	render: function render() {}
  });

  function render(vnode, parent, merge) {
    return diff(merge, vnode, {}, false, parent, false);
  }

  var preact = {
  	h: h,
  	createElement: h,
  	cloneElement: cloneElement,
  	Component: Component,
  	render: render,
  	rerender: rerender,
  	options: options
  };

  var preact$1 = /*#__PURE__*/Object.freeze({
    default: preact,
    h: h,
    createElement: h,
    cloneElement: cloneElement,
    Component: Component,
    render: render,
    rerender: rerender,
    options: options
  });

  function styleInject(css, ref) {
    if ( ref === void 0 ) ref = {};
    var insertAt = ref.insertAt;

    if (!css || typeof document === 'undefined') { return; }

    var head = document.head || document.getElementsByTagName('head')[0];
    var style = document.createElement('style');
    style.type = 'text/css';

    if (insertAt === 'top') {
      if (head.firstChild) {
        head.insertBefore(style, head.firstChild);
      } else {
        head.appendChild(style);
      }
    } else {
      head.appendChild(style);
    }

    if (style.styleSheet) {
      style.styleSheet.cssText = css;
    } else {
      style.appendChild(document.createTextNode(css));
    }
  }

  var css = "/*! bulma.io v0.7.2 | MIT License | github.com/jgthms/bulma */\n@-webkit-keyframes spinAround {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}\n@keyframes spinAround {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}\n\n.delete, .modal-close, .is-unselectable, .button, .file, .breadcrumb, .pagination-previous,\n.pagination-next,\n.pagination-link,\n.pagination-ellipsis, .tabs {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.select:not(.is-multiple):not(.is-loading)::after, .navbar-link:not(.is-arrowless)::after {\n  border: 3px solid transparent;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  -webkit-transform: rotate(-45deg);\n          transform: rotate(-45deg);\n  -webkit-transform-origin: center;\n          transform-origin: center;\n  width: 0.625em;\n}\n\n.box:not(:last-child), .content:not(:last-child), .notification:not(:last-child), .progress:not(:last-child), .table:not(:last-child), .table-container:not(:last-child), .title:not(:last-child),\n.subtitle:not(:last-child), .block:not(:last-child), .highlight:not(:last-child), .breadcrumb:not(:last-child), .level:not(:last-child), .list:not(:last-child), .message:not(:last-child), .tabs:not(:last-child) {\n  margin-bottom: 1.5rem;\n}\n\n.delete, .modal-close {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: rgba(10, 10, 10, 0.2);\n  border: none;\n  border-radius: 290486px;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n}\n\n.delete::before, .modal-close::before, .delete::after, .modal-close::after {\n  background-color: white;\n  content: \"\";\n  display: block;\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%) rotate(45deg);\n          transform: translateX(-50%) translateY(-50%) rotate(45deg);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.delete::before, .modal-close::before {\n  height: 2px;\n  width: 50%;\n}\n\n.delete::after, .modal-close::after {\n  height: 50%;\n  width: 2px;\n}\n\n.delete:hover, .modal-close:hover, .delete:focus, .modal-close:focus {\n  background-color: rgba(10, 10, 10, 0.3);\n}\n\n.delete:active, .modal-close:active {\n  background-color: rgba(10, 10, 10, 0.4);\n}\n\n.is-small.delete, .is-small.modal-close {\n  height: 16px;\n  max-height: 16px;\n  max-width: 16px;\n  min-height: 16px;\n  min-width: 16px;\n  width: 16px;\n}\n\n.is-medium.delete, .is-medium.modal-close {\n  height: 24px;\n  max-height: 24px;\n  max-width: 24px;\n  min-height: 24px;\n  min-width: 24px;\n  width: 24px;\n}\n\n.is-large.delete, .is-large.modal-close {\n  height: 32px;\n  max-height: 32px;\n  max-width: 32px;\n  min-height: 32px;\n  min-width: 32px;\n  width: 32px;\n}\n\n.button.is-loading::after, .select.is-loading::after, .control.is-loading::after, .loader {\n  -webkit-animation: spinAround 500ms infinite linear;\n          animation: spinAround 500ms infinite linear;\n  border: 2px solid #dbdbdb;\n  border-radius: 290486px;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em;\n}\n\n.is-overlay, .image.is-square img, .image.is-1by1 img, .image.is-5by4 img, .image.is-4by3 img, .image.is-3by2 img, .image.is-5by3 img, .image.is-16by9 img, .image.is-2by1 img, .image.is-3by1 img, .image.is-4by5 img, .image.is-3by4 img, .image.is-2by3 img, .image.is-3by5 img, .image.is-9by16 img, .image.is-1by2 img, .image.is-1by3 img, .modal, .modal-background, .hero-video {\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.button, .input,\n.textarea, .select select, .file-cta,\n.file-name, .pagination-previous,\n.pagination-next,\n.pagination-link,\n.pagination-ellipsis {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  align-items: center;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  box-shadow: none;\n  display: inline-flex;\n  font-size: 1rem;\n  height: 2.25em;\n  justify-content: flex-start;\n  line-height: 1.5;\n  padding-bottom: calc(0.375em - 1px);\n  padding-left: calc(0.625em - 1px);\n  padding-right: calc(0.625em - 1px);\n  padding-top: calc(0.375em - 1px);\n  position: relative;\n  vertical-align: top;\n}\n\n.button:focus, .input:focus,\n.textarea:focus, .select select:focus, .file-cta:focus,\n.file-name:focus, .pagination-previous:focus,\n.pagination-next:focus,\n.pagination-link:focus,\n.pagination-ellipsis:focus, .is-focused.button, .is-focused.input,\n.is-focused.textarea, .select select.is-focused, .is-focused.file-cta,\n.is-focused.file-name, .is-focused.pagination-previous,\n.is-focused.pagination-next,\n.is-focused.pagination-link,\n.is-focused.pagination-ellipsis, .button:active, .input:active,\n.textarea:active, .select select:active, .file-cta:active,\n.file-name:active, .pagination-previous:active,\n.pagination-next:active,\n.pagination-link:active,\n.pagination-ellipsis:active, .is-active.button, .is-active.input,\n.is-active.textarea, .select select.is-active, .is-active.file-cta,\n.is-active.file-name, .is-active.pagination-previous,\n.is-active.pagination-next,\n.is-active.pagination-link,\n.is-active.pagination-ellipsis {\n  outline: none;\n}\n\n.button[disabled], .input[disabled],\n.textarea[disabled], .select select[disabled], .file-cta[disabled],\n.file-name[disabled], .pagination-previous[disabled],\n.pagination-next[disabled],\n.pagination-link[disabled],\n.pagination-ellipsis[disabled] {\n  cursor: not-allowed;\n}\n\n/*! minireset.css v0.0.3 | MIT License | github.com/jgthms/minireset.css */\nhtml,\nbody,\np,\nol,\nul,\nli,\ndl,\ndt,\ndd,\nblockquote,\nfigure,\nfieldset,\nlegend,\ntextarea,\npre,\niframe,\nhr,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  padding: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 100%;\n  font-weight: normal;\n}\n\nul {\n  list-style: none;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  margin: 0;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, *::before, *::after {\n  box-sizing: inherit;\n}\n\nimg,\naudio,\nvideo {\n  height: auto;\n  max-width: 100%;\n}\n\niframe {\n  border: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n  text-align: left;\n}\n\nhtml {\n  background-color: white;\n  font-size: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  min-width: 300px;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  text-rendering: optimizeLegibility;\n  -webkit-text-size-adjust: 100%;\n     -moz-text-size-adjust: 100%;\n      -ms-text-size-adjust: 100%;\n          text-size-adjust: 100%;\n}\n\narticle,\naside,\nfigure,\nfooter,\nheader,\nhgroup,\nsection {\n  display: block;\n}\n\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n}\n\ncode,\npre {\n  -moz-osx-font-smoothing: auto;\n  -webkit-font-smoothing: auto;\n  font-family: monospace;\n}\n\nbody {\n  color: #4a4a4a;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n}\n\na {\n  color: #3273dc;\n  cursor: pointer;\n  text-decoration: none;\n}\n\na strong {\n  color: currentColor;\n}\n\na:hover {\n  color: #363636;\n}\n\ncode {\n  background-color: whitesmoke;\n  color: #ff3860;\n  font-size: 0.875em;\n  font-weight: normal;\n  padding: 0.25em 0.5em 0.25em;\n}\n\nhr {\n  background-color: whitesmoke;\n  border: none;\n  display: block;\n  height: 2px;\n  margin: 1.5rem 0;\n}\n\nimg {\n  height: auto;\n  max-width: 100%;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  vertical-align: baseline;\n}\n\nsmall {\n  font-size: 0.875em;\n}\n\nspan {\n  font-style: inherit;\n  font-weight: inherit;\n}\n\nstrong {\n  color: #363636;\n  font-weight: 700;\n}\n\npre {\n  -webkit-overflow-scrolling: touch;\n  background-color: whitesmoke;\n  color: #4a4a4a;\n  font-size: 0.875em;\n  overflow-x: auto;\n  padding: 1.25rem 1.5rem;\n  white-space: pre;\n  word-wrap: normal;\n}\n\npre code {\n  background-color: transparent;\n  color: currentColor;\n  font-size: 1em;\n  padding: 0;\n}\n\ntable td,\ntable th {\n  text-align: left;\n  vertical-align: top;\n}\n\ntable th {\n  color: #363636;\n}\n\n.is-clearfix::after {\n  clear: both;\n  content: \" \";\n  display: table;\n}\n\n.is-pulled-left {\n  float: left !important;\n}\n\n.is-pulled-right {\n  float: right !important;\n}\n\n.is-clipped {\n  overflow: hidden !important;\n}\n\n.is-size-1 {\n  font-size: 3rem !important;\n}\n\n.is-size-2 {\n  font-size: 2.5rem !important;\n}\n\n.is-size-3 {\n  font-size: 2rem !important;\n}\n\n.is-size-4 {\n  font-size: 1.5rem !important;\n}\n\n.is-size-5 {\n  font-size: 1.25rem !important;\n}\n\n.is-size-6 {\n  font-size: 1rem !important;\n}\n\n.is-size-7 {\n  font-size: 0.75rem !important;\n}\n\n@media screen and (max-width: 768px) {\n  .is-size-1-mobile {\n    font-size: 3rem !important;\n  }\n  .is-size-2-mobile {\n    font-size: 2.5rem !important;\n  }\n  .is-size-3-mobile {\n    font-size: 2rem !important;\n  }\n  .is-size-4-mobile {\n    font-size: 1.5rem !important;\n  }\n  .is-size-5-mobile {\n    font-size: 1.25rem !important;\n  }\n  .is-size-6-mobile {\n    font-size: 1rem !important;\n  }\n  .is-size-7-mobile {\n    font-size: 0.75rem !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .is-size-1-tablet {\n    font-size: 3rem !important;\n  }\n  .is-size-2-tablet {\n    font-size: 2.5rem !important;\n  }\n  .is-size-3-tablet {\n    font-size: 2rem !important;\n  }\n  .is-size-4-tablet {\n    font-size: 1.5rem !important;\n  }\n  .is-size-5-tablet {\n    font-size: 1.25rem !important;\n  }\n  .is-size-6-tablet {\n    font-size: 1rem !important;\n  }\n  .is-size-7-tablet {\n    font-size: 0.75rem !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .is-size-1-touch {\n    font-size: 3rem !important;\n  }\n  .is-size-2-touch {\n    font-size: 2.5rem !important;\n  }\n  .is-size-3-touch {\n    font-size: 2rem !important;\n  }\n  .is-size-4-touch {\n    font-size: 1.5rem !important;\n  }\n  .is-size-5-touch {\n    font-size: 1.25rem !important;\n  }\n  .is-size-6-touch {\n    font-size: 1rem !important;\n  }\n  .is-size-7-touch {\n    font-size: 0.75rem !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .is-size-1-desktop {\n    font-size: 3rem !important;\n  }\n  .is-size-2-desktop {\n    font-size: 2.5rem !important;\n  }\n  .is-size-3-desktop {\n    font-size: 2rem !important;\n  }\n  .is-size-4-desktop {\n    font-size: 1.5rem !important;\n  }\n  .is-size-5-desktop {\n    font-size: 1.25rem !important;\n  }\n  .is-size-6-desktop {\n    font-size: 1rem !important;\n  }\n  .is-size-7-desktop {\n    font-size: 0.75rem !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .is-size-1-widescreen {\n    font-size: 3rem !important;\n  }\n  .is-size-2-widescreen {\n    font-size: 2.5rem !important;\n  }\n  .is-size-3-widescreen {\n    font-size: 2rem !important;\n  }\n  .is-size-4-widescreen {\n    font-size: 1.5rem !important;\n  }\n  .is-size-5-widescreen {\n    font-size: 1.25rem !important;\n  }\n  .is-size-6-widescreen {\n    font-size: 1rem !important;\n  }\n  .is-size-7-widescreen {\n    font-size: 0.75rem !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .is-size-1-fullhd {\n    font-size: 3rem !important;\n  }\n  .is-size-2-fullhd {\n    font-size: 2.5rem !important;\n  }\n  .is-size-3-fullhd {\n    font-size: 2rem !important;\n  }\n  .is-size-4-fullhd {\n    font-size: 1.5rem !important;\n  }\n  .is-size-5-fullhd {\n    font-size: 1.25rem !important;\n  }\n  .is-size-6-fullhd {\n    font-size: 1rem !important;\n  }\n  .is-size-7-fullhd {\n    font-size: 0.75rem !important;\n  }\n}\n\n.has-text-centered {\n  text-align: center !important;\n}\n\n.has-text-justified {\n  text-align: justify !important;\n}\n\n.has-text-left {\n  text-align: left !important;\n}\n\n.has-text-right {\n  text-align: right !important;\n}\n\n@media screen and (max-width: 768px) {\n  .has-text-centered-mobile {\n    text-align: center !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .has-text-centered-tablet {\n    text-align: center !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .has-text-centered-tablet-only {\n    text-align: center !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .has-text-centered-touch {\n    text-align: center !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .has-text-centered-desktop {\n    text-align: center !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .has-text-centered-desktop-only {\n    text-align: center !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .has-text-centered-widescreen {\n    text-align: center !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .has-text-centered-widescreen-only {\n    text-align: center !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .has-text-centered-fullhd {\n    text-align: center !important;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .has-text-justified-mobile {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .has-text-justified-tablet {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .has-text-justified-tablet-only {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .has-text-justified-touch {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .has-text-justified-desktop {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .has-text-justified-desktop-only {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .has-text-justified-widescreen {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .has-text-justified-widescreen-only {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .has-text-justified-fullhd {\n    text-align: justify !important;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .has-text-left-mobile {\n    text-align: left !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .has-text-left-tablet {\n    text-align: left !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .has-text-left-tablet-only {\n    text-align: left !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .has-text-left-touch {\n    text-align: left !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .has-text-left-desktop {\n    text-align: left !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .has-text-left-desktop-only {\n    text-align: left !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .has-text-left-widescreen {\n    text-align: left !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .has-text-left-widescreen-only {\n    text-align: left !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .has-text-left-fullhd {\n    text-align: left !important;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .has-text-right-mobile {\n    text-align: right !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .has-text-right-tablet {\n    text-align: right !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .has-text-right-tablet-only {\n    text-align: right !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .has-text-right-touch {\n    text-align: right !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .has-text-right-desktop {\n    text-align: right !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .has-text-right-desktop-only {\n    text-align: right !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .has-text-right-widescreen {\n    text-align: right !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .has-text-right-widescreen-only {\n    text-align: right !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .has-text-right-fullhd {\n    text-align: right !important;\n  }\n}\n\n.is-capitalized {\n  text-transform: capitalize !important;\n}\n\n.is-lowercase {\n  text-transform: lowercase !important;\n}\n\n.is-uppercase {\n  text-transform: uppercase !important;\n}\n\n.is-italic {\n  font-style: italic !important;\n}\n\n.has-text-white {\n  color: white !important;\n}\n\na.has-text-white:hover, a.has-text-white:focus {\n  color: #e6e6e6 !important;\n}\n\n.has-background-white {\n  background-color: white !important;\n}\n\n.has-text-black {\n  color: #0a0a0a !important;\n}\n\na.has-text-black:hover, a.has-text-black:focus {\n  color: black !important;\n}\n\n.has-background-black {\n  background-color: #0a0a0a !important;\n}\n\n.has-text-light {\n  color: whitesmoke !important;\n}\n\na.has-text-light:hover, a.has-text-light:focus {\n  color: #dbdbdb !important;\n}\n\n.has-background-light {\n  background-color: whitesmoke !important;\n}\n\n.has-text-dark {\n  color: #363636 !important;\n}\n\na.has-text-dark:hover, a.has-text-dark:focus {\n  color: #1c1c1c !important;\n}\n\n.has-background-dark {\n  background-color: #363636 !important;\n}\n\n.has-text-primary {\n  color: #00d1b2 !important;\n}\n\na.has-text-primary:hover, a.has-text-primary:focus {\n  color: #009e86 !important;\n}\n\n.has-background-primary {\n  background-color: #00d1b2 !important;\n}\n\n.has-text-link {\n  color: #3273dc !important;\n}\n\na.has-text-link:hover, a.has-text-link:focus {\n  color: #205bbc !important;\n}\n\n.has-background-link {\n  background-color: #3273dc !important;\n}\n\n.has-text-info {\n  color: #209cee !important;\n}\n\na.has-text-info:hover, a.has-text-info:focus {\n  color: #0f81cc !important;\n}\n\n.has-background-info {\n  background-color: #209cee !important;\n}\n\n.has-text-success {\n  color: #23d160 !important;\n}\n\na.has-text-success:hover, a.has-text-success:focus {\n  color: #1ca64c !important;\n}\n\n.has-background-success {\n  background-color: #23d160 !important;\n}\n\n.has-text-warning {\n  color: #ffdd57 !important;\n}\n\na.has-text-warning:hover, a.has-text-warning:focus {\n  color: #ffd324 !important;\n}\n\n.has-background-warning {\n  background-color: #ffdd57 !important;\n}\n\n.has-text-danger {\n  color: #ff3860 !important;\n}\n\na.has-text-danger:hover, a.has-text-danger:focus {\n  color: #ff0537 !important;\n}\n\n.has-background-danger {\n  background-color: #ff3860 !important;\n}\n\n.has-text-black-bis {\n  color: #121212 !important;\n}\n\n.has-background-black-bis {\n  background-color: #121212 !important;\n}\n\n.has-text-black-ter {\n  color: #242424 !important;\n}\n\n.has-background-black-ter {\n  background-color: #242424 !important;\n}\n\n.has-text-grey-darker {\n  color: #363636 !important;\n}\n\n.has-background-grey-darker {\n  background-color: #363636 !important;\n}\n\n.has-text-grey-dark {\n  color: #4a4a4a !important;\n}\n\n.has-background-grey-dark {\n  background-color: #4a4a4a !important;\n}\n\n.has-text-grey {\n  color: #7a7a7a !important;\n}\n\n.has-background-grey {\n  background-color: #7a7a7a !important;\n}\n\n.has-text-grey-light {\n  color: #b5b5b5 !important;\n}\n\n.has-background-grey-light {\n  background-color: #b5b5b5 !important;\n}\n\n.has-text-grey-lighter {\n  color: #dbdbdb !important;\n}\n\n.has-background-grey-lighter {\n  background-color: #dbdbdb !important;\n}\n\n.has-text-white-ter {\n  color: whitesmoke !important;\n}\n\n.has-background-white-ter {\n  background-color: whitesmoke !important;\n}\n\n.has-text-white-bis {\n  color: #fafafa !important;\n}\n\n.has-background-white-bis {\n  background-color: #fafafa !important;\n}\n\n.has-text-weight-light {\n  font-weight: 300 !important;\n}\n\n.has-text-weight-normal {\n  font-weight: 400 !important;\n}\n\n.has-text-weight-semibold {\n  font-weight: 600 !important;\n}\n\n.has-text-weight-bold {\n  font-weight: 700 !important;\n}\n\n.is-block {\n  display: block !important;\n}\n\n@media screen and (max-width: 768px) {\n  .is-block-mobile {\n    display: block !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .is-block-tablet {\n    display: block !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .is-block-tablet-only {\n    display: block !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .is-block-touch {\n    display: block !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .is-block-desktop {\n    display: block !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .is-block-desktop-only {\n    display: block !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .is-block-widescreen {\n    display: block !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .is-block-widescreen-only {\n    display: block !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .is-block-fullhd {\n    display: block !important;\n  }\n}\n\n.is-flex {\n  display: flex !important;\n}\n\n@media screen and (max-width: 768px) {\n  .is-flex-mobile {\n    display: flex !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .is-flex-tablet {\n    display: flex !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .is-flex-tablet-only {\n    display: flex !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .is-flex-touch {\n    display: flex !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .is-flex-desktop {\n    display: flex !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .is-flex-desktop-only {\n    display: flex !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .is-flex-widescreen {\n    display: flex !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .is-flex-widescreen-only {\n    display: flex !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .is-flex-fullhd {\n    display: flex !important;\n  }\n}\n\n.is-inline {\n  display: inline !important;\n}\n\n@media screen and (max-width: 768px) {\n  .is-inline-mobile {\n    display: inline !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .is-inline-tablet {\n    display: inline !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .is-inline-tablet-only {\n    display: inline !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .is-inline-touch {\n    display: inline !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .is-inline-desktop {\n    display: inline !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .is-inline-desktop-only {\n    display: inline !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .is-inline-widescreen {\n    display: inline !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .is-inline-widescreen-only {\n    display: inline !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .is-inline-fullhd {\n    display: inline !important;\n  }\n}\n\n.is-inline-block {\n  display: inline-block !important;\n}\n\n@media screen and (max-width: 768px) {\n  .is-inline-block-mobile {\n    display: inline-block !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .is-inline-block-tablet {\n    display: inline-block !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .is-inline-block-tablet-only {\n    display: inline-block !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .is-inline-block-touch {\n    display: inline-block !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .is-inline-block-desktop {\n    display: inline-block !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .is-inline-block-desktop-only {\n    display: inline-block !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .is-inline-block-widescreen {\n    display: inline-block !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .is-inline-block-widescreen-only {\n    display: inline-block !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .is-inline-block-fullhd {\n    display: inline-block !important;\n  }\n}\n\n.is-inline-flex {\n  display: inline-flex !important;\n}\n\n@media screen and (max-width: 768px) {\n  .is-inline-flex-mobile {\n    display: inline-flex !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .is-inline-flex-tablet {\n    display: inline-flex !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .is-inline-flex-tablet-only {\n    display: inline-flex !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .is-inline-flex-touch {\n    display: inline-flex !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .is-inline-flex-desktop {\n    display: inline-flex !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .is-inline-flex-desktop-only {\n    display: inline-flex !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .is-inline-flex-widescreen {\n    display: inline-flex !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .is-inline-flex-widescreen-only {\n    display: inline-flex !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .is-inline-flex-fullhd {\n    display: inline-flex !important;\n  }\n}\n\n.is-hidden {\n  display: none !important;\n}\n\n.is-sr-only {\n  border: none !important;\n  clip: rect(0, 0, 0, 0) !important;\n  height: 0.01em !important;\n  overflow: hidden !important;\n  padding: 0 !important;\n  position: absolute !important;\n  white-space: nowrap !important;\n  width: 0.01em !important;\n}\n\n@media screen and (max-width: 768px) {\n  .is-hidden-mobile {\n    display: none !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .is-hidden-tablet {\n    display: none !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .is-hidden-tablet-only {\n    display: none !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .is-hidden-touch {\n    display: none !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .is-hidden-desktop {\n    display: none !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .is-hidden-desktop-only {\n    display: none !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .is-hidden-widescreen {\n    display: none !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .is-hidden-widescreen-only {\n    display: none !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .is-hidden-fullhd {\n    display: none !important;\n  }\n}\n\n.is-invisible {\n  visibility: hidden !important;\n}\n\n@media screen and (max-width: 768px) {\n  .is-invisible-mobile {\n    visibility: hidden !important;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .is-invisible-tablet {\n    visibility: hidden !important;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .is-invisible-tablet-only {\n    visibility: hidden !important;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .is-invisible-touch {\n    visibility: hidden !important;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .is-invisible-desktop {\n    visibility: hidden !important;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .is-invisible-desktop-only {\n    visibility: hidden !important;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .is-invisible-widescreen {\n    visibility: hidden !important;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .is-invisible-widescreen-only {\n    visibility: hidden !important;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .is-invisible-fullhd {\n    visibility: hidden !important;\n  }\n}\n\n.is-marginless {\n  margin: 0 !important;\n}\n\n.is-paddingless {\n  padding: 0 !important;\n}\n\n.is-radiusless {\n  border-radius: 0 !important;\n}\n\n.is-shadowless {\n  box-shadow: none !important;\n}\n\n.box {\n  background-color: white;\n  border-radius: 6px;\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n  color: #4a4a4a;\n  display: block;\n  padding: 1.25rem;\n}\n\na.box:hover, a.box:focus {\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px #3273dc;\n}\n\na.box:active {\n  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.2), 0 0 0 1px #3273dc;\n}\n\n.button {\n  background-color: white;\n  border-color: #dbdbdb;\n  border-width: 1px;\n  color: #363636;\n  cursor: pointer;\n  justify-content: center;\n  padding-bottom: calc(0.375em - 1px);\n  padding-left: 0.75em;\n  padding-right: 0.75em;\n  padding-top: calc(0.375em - 1px);\n  text-align: center;\n  white-space: nowrap;\n}\n\n.button strong {\n  color: inherit;\n}\n\n.button .icon, .button .icon.is-small, .button .icon.is-medium, .button .icon.is-large {\n  height: 1.5em;\n  width: 1.5em;\n}\n\n.button .icon:first-child:not(:last-child) {\n  margin-left: calc(-0.375em - 1px);\n  margin-right: 0.1875em;\n}\n\n.button .icon:last-child:not(:first-child) {\n  margin-left: 0.1875em;\n  margin-right: calc(-0.375em - 1px);\n}\n\n.button .icon:first-child:last-child {\n  margin-left: calc(-0.375em - 1px);\n  margin-right: calc(-0.375em - 1px);\n}\n\n.button:hover, .button.is-hovered {\n  border-color: #b5b5b5;\n  color: #363636;\n}\n\n.button:focus, .button.is-focused {\n  border-color: #3273dc;\n  color: #363636;\n}\n\n.button:focus:not(:active), .button.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);\n}\n\n.button:active, .button.is-active {\n  border-color: #4a4a4a;\n  color: #363636;\n}\n\n.button.is-text {\n  background-color: transparent;\n  border-color: transparent;\n  color: #4a4a4a;\n  text-decoration: underline;\n}\n\n.button.is-text:hover, .button.is-text.is-hovered, .button.is-text:focus, .button.is-text.is-focused {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.button.is-text:active, .button.is-text.is-active {\n  background-color: #e8e8e8;\n  color: #363636;\n}\n\n.button.is-text[disabled] {\n  background-color: transparent;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-white {\n  background-color: white;\n  border-color: transparent;\n  color: #0a0a0a;\n}\n\n.button.is-white:hover, .button.is-white.is-hovered {\n  background-color: #f9f9f9;\n  border-color: transparent;\n  color: #0a0a0a;\n}\n\n.button.is-white:focus, .button.is-white.is-focused {\n  border-color: transparent;\n  color: #0a0a0a;\n}\n\n.button.is-white:focus:not(:active), .button.is-white.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(255, 255, 255, 0.25);\n}\n\n.button.is-white:active, .button.is-white.is-active {\n  background-color: #f2f2f2;\n  border-color: transparent;\n  color: #0a0a0a;\n}\n\n.button.is-white[disabled] {\n  background-color: white;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-white.is-inverted {\n  background-color: #0a0a0a;\n  color: white;\n}\n\n.button.is-white.is-inverted:hover {\n  background-color: black;\n}\n\n.button.is-white.is-inverted[disabled] {\n  background-color: #0a0a0a;\n  border-color: transparent;\n  box-shadow: none;\n  color: white;\n}\n\n.button.is-white.is-loading::after {\n  border-color: transparent transparent #0a0a0a #0a0a0a !important;\n}\n\n.button.is-white.is-outlined {\n  background-color: transparent;\n  border-color: white;\n  color: white;\n}\n\n.button.is-white.is-outlined:hover, .button.is-white.is-outlined:focus {\n  background-color: white;\n  border-color: white;\n  color: #0a0a0a;\n}\n\n.button.is-white.is-outlined.is-loading::after {\n  border-color: transparent transparent white white !important;\n}\n\n.button.is-white.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: white;\n  box-shadow: none;\n  color: white;\n}\n\n.button.is-white.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: #0a0a0a;\n  color: #0a0a0a;\n}\n\n.button.is-white.is-inverted.is-outlined:hover, .button.is-white.is-inverted.is-outlined:focus {\n  background-color: #0a0a0a;\n  color: white;\n}\n\n.button.is-white.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #0a0a0a;\n  box-shadow: none;\n  color: #0a0a0a;\n}\n\n.button.is-black {\n  background-color: #0a0a0a;\n  border-color: transparent;\n  color: white;\n}\n\n.button.is-black:hover, .button.is-black.is-hovered {\n  background-color: #040404;\n  border-color: transparent;\n  color: white;\n}\n\n.button.is-black:focus, .button.is-black.is-focused {\n  border-color: transparent;\n  color: white;\n}\n\n.button.is-black:focus:not(:active), .button.is-black.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(10, 10, 10, 0.25);\n}\n\n.button.is-black:active, .button.is-black.is-active {\n  background-color: black;\n  border-color: transparent;\n  color: white;\n}\n\n.button.is-black[disabled] {\n  background-color: #0a0a0a;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-black.is-inverted {\n  background-color: white;\n  color: #0a0a0a;\n}\n\n.button.is-black.is-inverted:hover {\n  background-color: #f2f2f2;\n}\n\n.button.is-black.is-inverted[disabled] {\n  background-color: white;\n  border-color: transparent;\n  box-shadow: none;\n  color: #0a0a0a;\n}\n\n.button.is-black.is-loading::after {\n  border-color: transparent transparent white white !important;\n}\n\n.button.is-black.is-outlined {\n  background-color: transparent;\n  border-color: #0a0a0a;\n  color: #0a0a0a;\n}\n\n.button.is-black.is-outlined:hover, .button.is-black.is-outlined:focus {\n  background-color: #0a0a0a;\n  border-color: #0a0a0a;\n  color: white;\n}\n\n.button.is-black.is-outlined.is-loading::after {\n  border-color: transparent transparent #0a0a0a #0a0a0a !important;\n}\n\n.button.is-black.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #0a0a0a;\n  box-shadow: none;\n  color: #0a0a0a;\n}\n\n.button.is-black.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: white;\n  color: white;\n}\n\n.button.is-black.is-inverted.is-outlined:hover, .button.is-black.is-inverted.is-outlined:focus {\n  background-color: white;\n  color: #0a0a0a;\n}\n\n.button.is-black.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: white;\n  box-shadow: none;\n  color: white;\n}\n\n.button.is-light {\n  background-color: whitesmoke;\n  border-color: transparent;\n  color: #363636;\n}\n\n.button.is-light:hover, .button.is-light.is-hovered {\n  background-color: #eeeeee;\n  border-color: transparent;\n  color: #363636;\n}\n\n.button.is-light:focus, .button.is-light.is-focused {\n  border-color: transparent;\n  color: #363636;\n}\n\n.button.is-light:focus:not(:active), .button.is-light.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(245, 245, 245, 0.25);\n}\n\n.button.is-light:active, .button.is-light.is-active {\n  background-color: #e8e8e8;\n  border-color: transparent;\n  color: #363636;\n}\n\n.button.is-light[disabled] {\n  background-color: whitesmoke;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-light.is-inverted {\n  background-color: #363636;\n  color: whitesmoke;\n}\n\n.button.is-light.is-inverted:hover {\n  background-color: #292929;\n}\n\n.button.is-light.is-inverted[disabled] {\n  background-color: #363636;\n  border-color: transparent;\n  box-shadow: none;\n  color: whitesmoke;\n}\n\n.button.is-light.is-loading::after {\n  border-color: transparent transparent #363636 #363636 !important;\n}\n\n.button.is-light.is-outlined {\n  background-color: transparent;\n  border-color: whitesmoke;\n  color: whitesmoke;\n}\n\n.button.is-light.is-outlined:hover, .button.is-light.is-outlined:focus {\n  background-color: whitesmoke;\n  border-color: whitesmoke;\n  color: #363636;\n}\n\n.button.is-light.is-outlined.is-loading::after {\n  border-color: transparent transparent whitesmoke whitesmoke !important;\n}\n\n.button.is-light.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: whitesmoke;\n  box-shadow: none;\n  color: whitesmoke;\n}\n\n.button.is-light.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: #363636;\n  color: #363636;\n}\n\n.button.is-light.is-inverted.is-outlined:hover, .button.is-light.is-inverted.is-outlined:focus {\n  background-color: #363636;\n  color: whitesmoke;\n}\n\n.button.is-light.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #363636;\n  box-shadow: none;\n  color: #363636;\n}\n\n.button.is-dark {\n  background-color: #363636;\n  border-color: transparent;\n  color: whitesmoke;\n}\n\n.button.is-dark:hover, .button.is-dark.is-hovered {\n  background-color: #2f2f2f;\n  border-color: transparent;\n  color: whitesmoke;\n}\n\n.button.is-dark:focus, .button.is-dark.is-focused {\n  border-color: transparent;\n  color: whitesmoke;\n}\n\n.button.is-dark:focus:not(:active), .button.is-dark.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(54, 54, 54, 0.25);\n}\n\n.button.is-dark:active, .button.is-dark.is-active {\n  background-color: #292929;\n  border-color: transparent;\n  color: whitesmoke;\n}\n\n.button.is-dark[disabled] {\n  background-color: #363636;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-dark.is-inverted {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.button.is-dark.is-inverted:hover {\n  background-color: #e8e8e8;\n}\n\n.button.is-dark.is-inverted[disabled] {\n  background-color: whitesmoke;\n  border-color: transparent;\n  box-shadow: none;\n  color: #363636;\n}\n\n.button.is-dark.is-loading::after {\n  border-color: transparent transparent whitesmoke whitesmoke !important;\n}\n\n.button.is-dark.is-outlined {\n  background-color: transparent;\n  border-color: #363636;\n  color: #363636;\n}\n\n.button.is-dark.is-outlined:hover, .button.is-dark.is-outlined:focus {\n  background-color: #363636;\n  border-color: #363636;\n  color: whitesmoke;\n}\n\n.button.is-dark.is-outlined.is-loading::after {\n  border-color: transparent transparent #363636 #363636 !important;\n}\n\n.button.is-dark.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #363636;\n  box-shadow: none;\n  color: #363636;\n}\n\n.button.is-dark.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: whitesmoke;\n  color: whitesmoke;\n}\n\n.button.is-dark.is-inverted.is-outlined:hover, .button.is-dark.is-inverted.is-outlined:focus {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.button.is-dark.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: whitesmoke;\n  box-shadow: none;\n  color: whitesmoke;\n}\n\n.button.is-primary {\n  background-color: #00d1b2;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-primary:hover, .button.is-primary.is-hovered {\n  background-color: #00c4a7;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-primary:focus, .button.is-primary.is-focused {\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-primary:focus:not(:active), .button.is-primary.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(0, 209, 178, 0.25);\n}\n\n.button.is-primary:active, .button.is-primary.is-active {\n  background-color: #00b89c;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-primary[disabled] {\n  background-color: #00d1b2;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-primary.is-inverted {\n  background-color: #fff;\n  color: #00d1b2;\n}\n\n.button.is-primary.is-inverted:hover {\n  background-color: #f2f2f2;\n}\n\n.button.is-primary.is-inverted[disabled] {\n  background-color: #fff;\n  border-color: transparent;\n  box-shadow: none;\n  color: #00d1b2;\n}\n\n.button.is-primary.is-loading::after {\n  border-color: transparent transparent #fff #fff !important;\n}\n\n.button.is-primary.is-outlined {\n  background-color: transparent;\n  border-color: #00d1b2;\n  color: #00d1b2;\n}\n\n.button.is-primary.is-outlined:hover, .button.is-primary.is-outlined:focus {\n  background-color: #00d1b2;\n  border-color: #00d1b2;\n  color: #fff;\n}\n\n.button.is-primary.is-outlined.is-loading::after {\n  border-color: transparent transparent #00d1b2 #00d1b2 !important;\n}\n\n.button.is-primary.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #00d1b2;\n  box-shadow: none;\n  color: #00d1b2;\n}\n\n.button.is-primary.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: #fff;\n  color: #fff;\n}\n\n.button.is-primary.is-inverted.is-outlined:hover, .button.is-primary.is-inverted.is-outlined:focus {\n  background-color: #fff;\n  color: #00d1b2;\n}\n\n.button.is-primary.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #fff;\n  box-shadow: none;\n  color: #fff;\n}\n\n.button.is-link {\n  background-color: #3273dc;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-link:hover, .button.is-link.is-hovered {\n  background-color: #276cda;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-link:focus, .button.is-link.is-focused {\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-link:focus:not(:active), .button.is-link.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);\n}\n\n.button.is-link:active, .button.is-link.is-active {\n  background-color: #2366d1;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-link[disabled] {\n  background-color: #3273dc;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-link.is-inverted {\n  background-color: #fff;\n  color: #3273dc;\n}\n\n.button.is-link.is-inverted:hover {\n  background-color: #f2f2f2;\n}\n\n.button.is-link.is-inverted[disabled] {\n  background-color: #fff;\n  border-color: transparent;\n  box-shadow: none;\n  color: #3273dc;\n}\n\n.button.is-link.is-loading::after {\n  border-color: transparent transparent #fff #fff !important;\n}\n\n.button.is-link.is-outlined {\n  background-color: transparent;\n  border-color: #3273dc;\n  color: #3273dc;\n}\n\n.button.is-link.is-outlined:hover, .button.is-link.is-outlined:focus {\n  background-color: #3273dc;\n  border-color: #3273dc;\n  color: #fff;\n}\n\n.button.is-link.is-outlined.is-loading::after {\n  border-color: transparent transparent #3273dc #3273dc !important;\n}\n\n.button.is-link.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #3273dc;\n  box-shadow: none;\n  color: #3273dc;\n}\n\n.button.is-link.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: #fff;\n  color: #fff;\n}\n\n.button.is-link.is-inverted.is-outlined:hover, .button.is-link.is-inverted.is-outlined:focus {\n  background-color: #fff;\n  color: #3273dc;\n}\n\n.button.is-link.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #fff;\n  box-shadow: none;\n  color: #fff;\n}\n\n.button.is-info {\n  background-color: #209cee;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-info:hover, .button.is-info.is-hovered {\n  background-color: #1496ed;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-info:focus, .button.is-info.is-focused {\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-info:focus:not(:active), .button.is-info.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(32, 156, 238, 0.25);\n}\n\n.button.is-info:active, .button.is-info.is-active {\n  background-color: #118fe4;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-info[disabled] {\n  background-color: #209cee;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-info.is-inverted {\n  background-color: #fff;\n  color: #209cee;\n}\n\n.button.is-info.is-inverted:hover {\n  background-color: #f2f2f2;\n}\n\n.button.is-info.is-inverted[disabled] {\n  background-color: #fff;\n  border-color: transparent;\n  box-shadow: none;\n  color: #209cee;\n}\n\n.button.is-info.is-loading::after {\n  border-color: transparent transparent #fff #fff !important;\n}\n\n.button.is-info.is-outlined {\n  background-color: transparent;\n  border-color: #209cee;\n  color: #209cee;\n}\n\n.button.is-info.is-outlined:hover, .button.is-info.is-outlined:focus {\n  background-color: #209cee;\n  border-color: #209cee;\n  color: #fff;\n}\n\n.button.is-info.is-outlined.is-loading::after {\n  border-color: transparent transparent #209cee #209cee !important;\n}\n\n.button.is-info.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #209cee;\n  box-shadow: none;\n  color: #209cee;\n}\n\n.button.is-info.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: #fff;\n  color: #fff;\n}\n\n.button.is-info.is-inverted.is-outlined:hover, .button.is-info.is-inverted.is-outlined:focus {\n  background-color: #fff;\n  color: #209cee;\n}\n\n.button.is-info.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #fff;\n  box-shadow: none;\n  color: #fff;\n}\n\n.button.is-success {\n  background-color: #23d160;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-success:hover, .button.is-success.is-hovered {\n  background-color: #22c65b;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-success:focus, .button.is-success.is-focused {\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-success:focus:not(:active), .button.is-success.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(35, 209, 96, 0.25);\n}\n\n.button.is-success:active, .button.is-success.is-active {\n  background-color: #20bc56;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-success[disabled] {\n  background-color: #23d160;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-success.is-inverted {\n  background-color: #fff;\n  color: #23d160;\n}\n\n.button.is-success.is-inverted:hover {\n  background-color: #f2f2f2;\n}\n\n.button.is-success.is-inverted[disabled] {\n  background-color: #fff;\n  border-color: transparent;\n  box-shadow: none;\n  color: #23d160;\n}\n\n.button.is-success.is-loading::after {\n  border-color: transparent transparent #fff #fff !important;\n}\n\n.button.is-success.is-outlined {\n  background-color: transparent;\n  border-color: #23d160;\n  color: #23d160;\n}\n\n.button.is-success.is-outlined:hover, .button.is-success.is-outlined:focus {\n  background-color: #23d160;\n  border-color: #23d160;\n  color: #fff;\n}\n\n.button.is-success.is-outlined.is-loading::after {\n  border-color: transparent transparent #23d160 #23d160 !important;\n}\n\n.button.is-success.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #23d160;\n  box-shadow: none;\n  color: #23d160;\n}\n\n.button.is-success.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: #fff;\n  color: #fff;\n}\n\n.button.is-success.is-inverted.is-outlined:hover, .button.is-success.is-inverted.is-outlined:focus {\n  background-color: #fff;\n  color: #23d160;\n}\n\n.button.is-success.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #fff;\n  box-shadow: none;\n  color: #fff;\n}\n\n.button.is-warning {\n  background-color: #ffdd57;\n  border-color: transparent;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.button.is-warning:hover, .button.is-warning.is-hovered {\n  background-color: #ffdb4a;\n  border-color: transparent;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.button.is-warning:focus, .button.is-warning.is-focused {\n  border-color: transparent;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.button.is-warning:focus:not(:active), .button.is-warning.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(255, 221, 87, 0.25);\n}\n\n.button.is-warning:active, .button.is-warning.is-active {\n  background-color: #ffd83d;\n  border-color: transparent;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.button.is-warning[disabled] {\n  background-color: #ffdd57;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-warning.is-inverted {\n  background-color: rgba(0, 0, 0, 0.7);\n  color: #ffdd57;\n}\n\n.button.is-warning.is-inverted:hover {\n  background-color: rgba(0, 0, 0, 0.7);\n}\n\n.button.is-warning.is-inverted[disabled] {\n  background-color: rgba(0, 0, 0, 0.7);\n  border-color: transparent;\n  box-shadow: none;\n  color: #ffdd57;\n}\n\n.button.is-warning.is-loading::after {\n  border-color: transparent transparent rgba(0, 0, 0, 0.7) rgba(0, 0, 0, 0.7) !important;\n}\n\n.button.is-warning.is-outlined {\n  background-color: transparent;\n  border-color: #ffdd57;\n  color: #ffdd57;\n}\n\n.button.is-warning.is-outlined:hover, .button.is-warning.is-outlined:focus {\n  background-color: #ffdd57;\n  border-color: #ffdd57;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.button.is-warning.is-outlined.is-loading::after {\n  border-color: transparent transparent #ffdd57 #ffdd57 !important;\n}\n\n.button.is-warning.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #ffdd57;\n  box-shadow: none;\n  color: #ffdd57;\n}\n\n.button.is-warning.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: rgba(0, 0, 0, 0.7);\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.button.is-warning.is-inverted.is-outlined:hover, .button.is-warning.is-inverted.is-outlined:focus {\n  background-color: rgba(0, 0, 0, 0.7);\n  color: #ffdd57;\n}\n\n.button.is-warning.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: rgba(0, 0, 0, 0.7);\n  box-shadow: none;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.button.is-danger {\n  background-color: #ff3860;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-danger:hover, .button.is-danger.is-hovered {\n  background-color: #ff2b56;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-danger:focus, .button.is-danger.is-focused {\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-danger:focus:not(:active), .button.is-danger.is-focused:not(:active) {\n  box-shadow: 0 0 0 0.125em rgba(255, 56, 96, 0.25);\n}\n\n.button.is-danger:active, .button.is-danger.is-active {\n  background-color: #ff1f4b;\n  border-color: transparent;\n  color: #fff;\n}\n\n.button.is-danger[disabled] {\n  background-color: #ff3860;\n  border-color: transparent;\n  box-shadow: none;\n}\n\n.button.is-danger.is-inverted {\n  background-color: #fff;\n  color: #ff3860;\n}\n\n.button.is-danger.is-inverted:hover {\n  background-color: #f2f2f2;\n}\n\n.button.is-danger.is-inverted[disabled] {\n  background-color: #fff;\n  border-color: transparent;\n  box-shadow: none;\n  color: #ff3860;\n}\n\n.button.is-danger.is-loading::after {\n  border-color: transparent transparent #fff #fff !important;\n}\n\n.button.is-danger.is-outlined {\n  background-color: transparent;\n  border-color: #ff3860;\n  color: #ff3860;\n}\n\n.button.is-danger.is-outlined:hover, .button.is-danger.is-outlined:focus {\n  background-color: #ff3860;\n  border-color: #ff3860;\n  color: #fff;\n}\n\n.button.is-danger.is-outlined.is-loading::after {\n  border-color: transparent transparent #ff3860 #ff3860 !important;\n}\n\n.button.is-danger.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #ff3860;\n  box-shadow: none;\n  color: #ff3860;\n}\n\n.button.is-danger.is-inverted.is-outlined {\n  background-color: transparent;\n  border-color: #fff;\n  color: #fff;\n}\n\n.button.is-danger.is-inverted.is-outlined:hover, .button.is-danger.is-inverted.is-outlined:focus {\n  background-color: #fff;\n  color: #ff3860;\n}\n\n.button.is-danger.is-inverted.is-outlined[disabled] {\n  background-color: transparent;\n  border-color: #fff;\n  box-shadow: none;\n  color: #fff;\n}\n\n.button.is-small {\n  border-radius: 2px;\n  font-size: 0.75rem;\n}\n\n.button.is-medium {\n  font-size: 1.25rem;\n}\n\n.button.is-large {\n  font-size: 1.5rem;\n}\n\n.button[disabled] {\n  background-color: white;\n  border-color: #dbdbdb;\n  box-shadow: none;\n  opacity: 0.5;\n}\n\n.button.is-fullwidth {\n  display: flex;\n  width: 100%;\n}\n\n.button.is-loading {\n  color: transparent !important;\n  pointer-events: none;\n}\n\n.button.is-loading::after {\n  position: absolute;\n  left: calc(50% - (1em / 2));\n  top: calc(50% - (1em / 2));\n  position: absolute !important;\n}\n\n.button.is-static {\n  background-color: whitesmoke;\n  border-color: #dbdbdb;\n  color: #7a7a7a;\n  box-shadow: none;\n  pointer-events: none;\n}\n\n.button.is-rounded {\n  border-radius: 290486px;\n  padding-left: 1em;\n  padding-right: 1em;\n}\n\n.buttons {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n\n.buttons .button {\n  margin-bottom: 0.5rem;\n}\n\n.buttons .button:not(:last-child):not(.is-fullwidth) {\n  margin-right: 0.5rem;\n}\n\n.buttons:last-child {\n  margin-bottom: -0.5rem;\n}\n\n.buttons:not(:last-child) {\n  margin-bottom: 1rem;\n}\n\n.buttons.has-addons .button:not(:first-child) {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.buttons.has-addons .button:not(:last-child) {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n  margin-right: -1px;\n}\n\n.buttons.has-addons .button:last-child {\n  margin-right: 0;\n}\n\n.buttons.has-addons .button:hover, .buttons.has-addons .button.is-hovered {\n  z-index: 2;\n}\n\n.buttons.has-addons .button:focus, .buttons.has-addons .button.is-focused, .buttons.has-addons .button:active, .buttons.has-addons .button.is-active, .buttons.has-addons .button.is-selected {\n  z-index: 3;\n}\n\n.buttons.has-addons .button:focus:hover, .buttons.has-addons .button.is-focused:hover, .buttons.has-addons .button:active:hover, .buttons.has-addons .button.is-active:hover, .buttons.has-addons .button.is-selected:hover {\n  z-index: 4;\n}\n\n.buttons.has-addons .button.is-expanded {\n  flex-grow: 1;\n}\n\n.buttons.is-centered {\n  justify-content: center;\n}\n\n.buttons.is-right {\n  justify-content: flex-end;\n}\n\n.container {\n  margin: 0 auto;\n  position: relative;\n}\n\n@media screen and (min-width: 1088px) {\n  .container {\n    max-width: 960px;\n    width: 960px;\n  }\n  .container.is-fluid {\n    margin-left: 64px;\n    margin-right: 64px;\n    max-width: none;\n    width: auto;\n  }\n}\n\n@media screen and (max-width: 1279px) {\n  .container.is-widescreen {\n    max-width: 1152px;\n    width: auto;\n  }\n}\n\n@media screen and (max-width: 1471px) {\n  .container.is-fullhd {\n    max-width: 1344px;\n    width: auto;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .container {\n    max-width: 1152px;\n    width: 1152px;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .container {\n    max-width: 1344px;\n    width: 1344px;\n  }\n}\n\n.content li + li {\n  margin-top: 0.25em;\n}\n\n.content p:not(:last-child),\n.content dl:not(:last-child),\n.content ol:not(:last-child),\n.content ul:not(:last-child),\n.content blockquote:not(:last-child),\n.content pre:not(:last-child),\n.content table:not(:last-child) {\n  margin-bottom: 1em;\n}\n\n.content h1,\n.content h2,\n.content h3,\n.content h4,\n.content h5,\n.content h6 {\n  color: #363636;\n  font-weight: 600;\n  line-height: 1.125;\n}\n\n.content h1 {\n  font-size: 2em;\n  margin-bottom: 0.5em;\n}\n\n.content h1:not(:first-child) {\n  margin-top: 1em;\n}\n\n.content h2 {\n  font-size: 1.75em;\n  margin-bottom: 0.5714em;\n}\n\n.content h2:not(:first-child) {\n  margin-top: 1.1428em;\n}\n\n.content h3 {\n  font-size: 1.5em;\n  margin-bottom: 0.6666em;\n}\n\n.content h3:not(:first-child) {\n  margin-top: 1.3333em;\n}\n\n.content h4 {\n  font-size: 1.25em;\n  margin-bottom: 0.8em;\n}\n\n.content h5 {\n  font-size: 1.125em;\n  margin-bottom: 0.8888em;\n}\n\n.content h6 {\n  font-size: 1em;\n  margin-bottom: 1em;\n}\n\n.content blockquote {\n  background-color: whitesmoke;\n  border-left: 5px solid #dbdbdb;\n  padding: 1.25em 1.5em;\n}\n\n.content ol {\n  list-style-position: outside;\n  margin-left: 2em;\n  margin-top: 1em;\n}\n\n.content ol:not([type]) {\n  list-style-type: decimal;\n}\n\n.content ol:not([type]).is-lower-alpha {\n  list-style-type: lower-alpha;\n}\n\n.content ol:not([type]).is-lower-roman {\n  list-style-type: lower-roman;\n}\n\n.content ol:not([type]).is-upper-alpha {\n  list-style-type: upper-alpha;\n}\n\n.content ol:not([type]).is-upper-roman {\n  list-style-type: upper-roman;\n}\n\n.content ul {\n  list-style: disc outside;\n  margin-left: 2em;\n  margin-top: 1em;\n}\n\n.content ul ul {\n  list-style-type: circle;\n  margin-top: 0.5em;\n}\n\n.content ul ul ul {\n  list-style-type: square;\n}\n\n.content dd {\n  margin-left: 2em;\n}\n\n.content figure {\n  margin-left: 2em;\n  margin-right: 2em;\n  text-align: center;\n}\n\n.content figure:not(:first-child) {\n  margin-top: 2em;\n}\n\n.content figure:not(:last-child) {\n  margin-bottom: 2em;\n}\n\n.content figure img {\n  display: inline-block;\n}\n\n.content figure figcaption {\n  font-style: italic;\n}\n\n.content pre {\n  -webkit-overflow-scrolling: touch;\n  overflow-x: auto;\n  padding: 1.25em 1.5em;\n  white-space: pre;\n  word-wrap: normal;\n}\n\n.content sup,\n.content sub {\n  font-size: 75%;\n}\n\n.content table {\n  width: 100%;\n}\n\n.content table td,\n.content table th {\n  border: 1px solid #dbdbdb;\n  border-width: 0 0 1px;\n  padding: 0.5em 0.75em;\n  vertical-align: top;\n}\n\n.content table th {\n  color: #363636;\n  text-align: left;\n}\n\n.content table thead td,\n.content table thead th {\n  border-width: 0 0 2px;\n  color: #363636;\n}\n\n.content table tfoot td,\n.content table tfoot th {\n  border-width: 2px 0 0;\n  color: #363636;\n}\n\n.content table tbody tr:last-child td,\n.content table tbody tr:last-child th {\n  border-bottom-width: 0;\n}\n\n.content.is-small {\n  font-size: 0.75rem;\n}\n\n.content.is-medium {\n  font-size: 1.25rem;\n}\n\n.content.is-large {\n  font-size: 1.5rem;\n}\n\n.input,\n.textarea {\n  background-color: white;\n  border-color: #dbdbdb;\n  color: #363636;\n  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);\n  max-width: 100%;\n  width: 100%;\n}\n\n.input::-moz-placeholder,\n.textarea::-moz-placeholder {\n  color: rgba(54, 54, 54, 0.3);\n}\n\n.input::-webkit-input-placeholder,\n.textarea::-webkit-input-placeholder {\n  color: rgba(54, 54, 54, 0.3);\n}\n\n.input:-moz-placeholder,\n.textarea:-moz-placeholder {\n  color: rgba(54, 54, 54, 0.3);\n}\n\n.input:-ms-input-placeholder,\n.textarea:-ms-input-placeholder {\n  color: rgba(54, 54, 54, 0.3);\n}\n\n.input:hover, .input.is-hovered,\n.textarea:hover,\n.textarea.is-hovered {\n  border-color: #b5b5b5;\n}\n\n.input:focus, .input.is-focused, .input:active, .input.is-active,\n.textarea:focus,\n.textarea.is-focused,\n.textarea:active,\n.textarea.is-active {\n  border-color: #3273dc;\n  box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);\n}\n\n.input[disabled],\n.textarea[disabled] {\n  background-color: whitesmoke;\n  border-color: whitesmoke;\n  box-shadow: none;\n  color: #7a7a7a;\n}\n\n.input[disabled]::-moz-placeholder,\n.textarea[disabled]::-moz-placeholder {\n  color: rgba(122, 122, 122, 0.3);\n}\n\n.input[disabled]::-webkit-input-placeholder,\n.textarea[disabled]::-webkit-input-placeholder {\n  color: rgba(122, 122, 122, 0.3);\n}\n\n.input[disabled]:-moz-placeholder,\n.textarea[disabled]:-moz-placeholder {\n  color: rgba(122, 122, 122, 0.3);\n}\n\n.input[disabled]:-ms-input-placeholder,\n.textarea[disabled]:-ms-input-placeholder {\n  color: rgba(122, 122, 122, 0.3);\n}\n\n.input[readonly],\n.textarea[readonly] {\n  box-shadow: none;\n}\n\n.input.is-white,\n.textarea.is-white {\n  border-color: white;\n}\n\n.input.is-white:focus, .input.is-white.is-focused, .input.is-white:active, .input.is-white.is-active,\n.textarea.is-white:focus,\n.textarea.is-white.is-focused,\n.textarea.is-white:active,\n.textarea.is-white.is-active {\n  box-shadow: 0 0 0 0.125em rgba(255, 255, 255, 0.25);\n}\n\n.input.is-black,\n.textarea.is-black {\n  border-color: #0a0a0a;\n}\n\n.input.is-black:focus, .input.is-black.is-focused, .input.is-black:active, .input.is-black.is-active,\n.textarea.is-black:focus,\n.textarea.is-black.is-focused,\n.textarea.is-black:active,\n.textarea.is-black.is-active {\n  box-shadow: 0 0 0 0.125em rgba(10, 10, 10, 0.25);\n}\n\n.input.is-light,\n.textarea.is-light {\n  border-color: whitesmoke;\n}\n\n.input.is-light:focus, .input.is-light.is-focused, .input.is-light:active, .input.is-light.is-active,\n.textarea.is-light:focus,\n.textarea.is-light.is-focused,\n.textarea.is-light:active,\n.textarea.is-light.is-active {\n  box-shadow: 0 0 0 0.125em rgba(245, 245, 245, 0.25);\n}\n\n.input.is-dark,\n.textarea.is-dark {\n  border-color: #363636;\n}\n\n.input.is-dark:focus, .input.is-dark.is-focused, .input.is-dark:active, .input.is-dark.is-active,\n.textarea.is-dark:focus,\n.textarea.is-dark.is-focused,\n.textarea.is-dark:active,\n.textarea.is-dark.is-active {\n  box-shadow: 0 0 0 0.125em rgba(54, 54, 54, 0.25);\n}\n\n.input.is-primary,\n.textarea.is-primary {\n  border-color: #00d1b2;\n}\n\n.input.is-primary:focus, .input.is-primary.is-focused, .input.is-primary:active, .input.is-primary.is-active,\n.textarea.is-primary:focus,\n.textarea.is-primary.is-focused,\n.textarea.is-primary:active,\n.textarea.is-primary.is-active {\n  box-shadow: 0 0 0 0.125em rgba(0, 209, 178, 0.25);\n}\n\n.input.is-link,\n.textarea.is-link {\n  border-color: #3273dc;\n}\n\n.input.is-link:focus, .input.is-link.is-focused, .input.is-link:active, .input.is-link.is-active,\n.textarea.is-link:focus,\n.textarea.is-link.is-focused,\n.textarea.is-link:active,\n.textarea.is-link.is-active {\n  box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);\n}\n\n.input.is-info,\n.textarea.is-info {\n  border-color: #209cee;\n}\n\n.input.is-info:focus, .input.is-info.is-focused, .input.is-info:active, .input.is-info.is-active,\n.textarea.is-info:focus,\n.textarea.is-info.is-focused,\n.textarea.is-info:active,\n.textarea.is-info.is-active {\n  box-shadow: 0 0 0 0.125em rgba(32, 156, 238, 0.25);\n}\n\n.input.is-success,\n.textarea.is-success {\n  border-color: #23d160;\n}\n\n.input.is-success:focus, .input.is-success.is-focused, .input.is-success:active, .input.is-success.is-active,\n.textarea.is-success:focus,\n.textarea.is-success.is-focused,\n.textarea.is-success:active,\n.textarea.is-success.is-active {\n  box-shadow: 0 0 0 0.125em rgba(35, 209, 96, 0.25);\n}\n\n.input.is-warning,\n.textarea.is-warning {\n  border-color: #ffdd57;\n}\n\n.input.is-warning:focus, .input.is-warning.is-focused, .input.is-warning:active, .input.is-warning.is-active,\n.textarea.is-warning:focus,\n.textarea.is-warning.is-focused,\n.textarea.is-warning:active,\n.textarea.is-warning.is-active {\n  box-shadow: 0 0 0 0.125em rgba(255, 221, 87, 0.25);\n}\n\n.input.is-danger,\n.textarea.is-danger {\n  border-color: #ff3860;\n}\n\n.input.is-danger:focus, .input.is-danger.is-focused, .input.is-danger:active, .input.is-danger.is-active,\n.textarea.is-danger:focus,\n.textarea.is-danger.is-focused,\n.textarea.is-danger:active,\n.textarea.is-danger.is-active {\n  box-shadow: 0 0 0 0.125em rgba(255, 56, 96, 0.25);\n}\n\n.input.is-small,\n.textarea.is-small {\n  border-radius: 2px;\n  font-size: 0.75rem;\n}\n\n.input.is-medium,\n.textarea.is-medium {\n  font-size: 1.25rem;\n}\n\n.input.is-large,\n.textarea.is-large {\n  font-size: 1.5rem;\n}\n\n.input.is-fullwidth,\n.textarea.is-fullwidth {\n  display: block;\n  width: 100%;\n}\n\n.input.is-inline,\n.textarea.is-inline {\n  display: inline;\n  width: auto;\n}\n\n.input.is-rounded {\n  border-radius: 290486px;\n  padding-left: 1em;\n  padding-right: 1em;\n}\n\n.input.is-static {\n  background-color: transparent;\n  border-color: transparent;\n  box-shadow: none;\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.textarea {\n  display: block;\n  max-width: 100%;\n  min-width: 100%;\n  padding: 0.625em;\n  resize: vertical;\n}\n\n.textarea:not([rows]) {\n  max-height: 600px;\n  min-height: 120px;\n}\n\n.textarea[rows] {\n  height: initial;\n}\n\n.textarea.has-fixed-size {\n  resize: none;\n}\n\n.checkbox,\n.radio {\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1.25;\n  position: relative;\n}\n\n.checkbox input,\n.radio input {\n  cursor: pointer;\n}\n\n.checkbox:hover,\n.radio:hover {\n  color: #363636;\n}\n\n.checkbox[disabled],\n.radio[disabled] {\n  color: #7a7a7a;\n  cursor: not-allowed;\n}\n\n.radio + .radio {\n  margin-left: 0.5em;\n}\n\n.select {\n  display: inline-block;\n  max-width: 100%;\n  position: relative;\n  vertical-align: top;\n}\n\n.select:not(.is-multiple) {\n  height: 2.25em;\n}\n\n.select:not(.is-multiple):not(.is-loading)::after {\n  border-color: #3273dc;\n  right: 1.125em;\n  z-index: 4;\n}\n\n.select.is-rounded select {\n  border-radius: 290486px;\n  padding-left: 1em;\n}\n\n.select select {\n  background-color: white;\n  border-color: #dbdbdb;\n  color: #363636;\n  cursor: pointer;\n  display: block;\n  font-size: 1em;\n  max-width: 100%;\n  outline: none;\n}\n\n.select select::-moz-placeholder {\n  color: rgba(54, 54, 54, 0.3);\n}\n\n.select select::-webkit-input-placeholder {\n  color: rgba(54, 54, 54, 0.3);\n}\n\n.select select:-moz-placeholder {\n  color: rgba(54, 54, 54, 0.3);\n}\n\n.select select:-ms-input-placeholder {\n  color: rgba(54, 54, 54, 0.3);\n}\n\n.select select:hover, .select select.is-hovered {\n  border-color: #b5b5b5;\n}\n\n.select select:focus, .select select.is-focused, .select select:active, .select select.is-active {\n  border-color: #3273dc;\n  box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);\n}\n\n.select select[disabled] {\n  background-color: whitesmoke;\n  border-color: whitesmoke;\n  box-shadow: none;\n  color: #7a7a7a;\n}\n\n.select select[disabled]::-moz-placeholder {\n  color: rgba(122, 122, 122, 0.3);\n}\n\n.select select[disabled]::-webkit-input-placeholder {\n  color: rgba(122, 122, 122, 0.3);\n}\n\n.select select[disabled]:-moz-placeholder {\n  color: rgba(122, 122, 122, 0.3);\n}\n\n.select select[disabled]:-ms-input-placeholder {\n  color: rgba(122, 122, 122, 0.3);\n}\n\n.select select::-ms-expand {\n  display: none;\n}\n\n.select select[disabled]:hover {\n  border-color: whitesmoke;\n}\n\n.select select:not([multiple]) {\n  padding-right: 2.5em;\n}\n\n.select select[multiple] {\n  height: auto;\n  padding: 0;\n}\n\n.select select[multiple] option {\n  padding: 0.5em 1em;\n}\n\n.select:not(.is-multiple):not(.is-loading):hover::after {\n  border-color: #363636;\n}\n\n.select.is-white:not(:hover)::after {\n  border-color: white;\n}\n\n.select.is-white select {\n  border-color: white;\n}\n\n.select.is-white select:hover, .select.is-white select.is-hovered {\n  border-color: #f2f2f2;\n}\n\n.select.is-white select:focus, .select.is-white select.is-focused, .select.is-white select:active, .select.is-white select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(255, 255, 255, 0.25);\n}\n\n.select.is-black:not(:hover)::after {\n  border-color: #0a0a0a;\n}\n\n.select.is-black select {\n  border-color: #0a0a0a;\n}\n\n.select.is-black select:hover, .select.is-black select.is-hovered {\n  border-color: black;\n}\n\n.select.is-black select:focus, .select.is-black select.is-focused, .select.is-black select:active, .select.is-black select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(10, 10, 10, 0.25);\n}\n\n.select.is-light:not(:hover)::after {\n  border-color: whitesmoke;\n}\n\n.select.is-light select {\n  border-color: whitesmoke;\n}\n\n.select.is-light select:hover, .select.is-light select.is-hovered {\n  border-color: #e8e8e8;\n}\n\n.select.is-light select:focus, .select.is-light select.is-focused, .select.is-light select:active, .select.is-light select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(245, 245, 245, 0.25);\n}\n\n.select.is-dark:not(:hover)::after {\n  border-color: #363636;\n}\n\n.select.is-dark select {\n  border-color: #363636;\n}\n\n.select.is-dark select:hover, .select.is-dark select.is-hovered {\n  border-color: #292929;\n}\n\n.select.is-dark select:focus, .select.is-dark select.is-focused, .select.is-dark select:active, .select.is-dark select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(54, 54, 54, 0.25);\n}\n\n.select.is-primary:not(:hover)::after {\n  border-color: #00d1b2;\n}\n\n.select.is-primary select {\n  border-color: #00d1b2;\n}\n\n.select.is-primary select:hover, .select.is-primary select.is-hovered {\n  border-color: #00b89c;\n}\n\n.select.is-primary select:focus, .select.is-primary select.is-focused, .select.is-primary select:active, .select.is-primary select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(0, 209, 178, 0.25);\n}\n\n.select.is-link:not(:hover)::after {\n  border-color: #3273dc;\n}\n\n.select.is-link select {\n  border-color: #3273dc;\n}\n\n.select.is-link select:hover, .select.is-link select.is-hovered {\n  border-color: #2366d1;\n}\n\n.select.is-link select:focus, .select.is-link select.is-focused, .select.is-link select:active, .select.is-link select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(50, 115, 220, 0.25);\n}\n\n.select.is-info:not(:hover)::after {\n  border-color: #209cee;\n}\n\n.select.is-info select {\n  border-color: #209cee;\n}\n\n.select.is-info select:hover, .select.is-info select.is-hovered {\n  border-color: #118fe4;\n}\n\n.select.is-info select:focus, .select.is-info select.is-focused, .select.is-info select:active, .select.is-info select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(32, 156, 238, 0.25);\n}\n\n.select.is-success:not(:hover)::after {\n  border-color: #23d160;\n}\n\n.select.is-success select {\n  border-color: #23d160;\n}\n\n.select.is-success select:hover, .select.is-success select.is-hovered {\n  border-color: #20bc56;\n}\n\n.select.is-success select:focus, .select.is-success select.is-focused, .select.is-success select:active, .select.is-success select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(35, 209, 96, 0.25);\n}\n\n.select.is-warning:not(:hover)::after {\n  border-color: #ffdd57;\n}\n\n.select.is-warning select {\n  border-color: #ffdd57;\n}\n\n.select.is-warning select:hover, .select.is-warning select.is-hovered {\n  border-color: #ffd83d;\n}\n\n.select.is-warning select:focus, .select.is-warning select.is-focused, .select.is-warning select:active, .select.is-warning select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(255, 221, 87, 0.25);\n}\n\n.select.is-danger:not(:hover)::after {\n  border-color: #ff3860;\n}\n\n.select.is-danger select {\n  border-color: #ff3860;\n}\n\n.select.is-danger select:hover, .select.is-danger select.is-hovered {\n  border-color: #ff1f4b;\n}\n\n.select.is-danger select:focus, .select.is-danger select.is-focused, .select.is-danger select:active, .select.is-danger select.is-active {\n  box-shadow: 0 0 0 0.125em rgba(255, 56, 96, 0.25);\n}\n\n.select.is-small {\n  border-radius: 2px;\n  font-size: 0.75rem;\n}\n\n.select.is-medium {\n  font-size: 1.25rem;\n}\n\n.select.is-large {\n  font-size: 1.5rem;\n}\n\n.select.is-disabled::after {\n  border-color: #7a7a7a;\n}\n\n.select.is-fullwidth {\n  width: 100%;\n}\n\n.select.is-fullwidth select {\n  width: 100%;\n}\n\n.select.is-loading::after {\n  margin-top: 0;\n  position: absolute;\n  right: 0.625em;\n  top: 0.625em;\n  -webkit-transform: none;\n          transform: none;\n}\n\n.select.is-loading.is-small:after {\n  font-size: 0.75rem;\n}\n\n.select.is-loading.is-medium:after {\n  font-size: 1.25rem;\n}\n\n.select.is-loading.is-large:after {\n  font-size: 1.5rem;\n}\n\n.file {\n  align-items: stretch;\n  display: flex;\n  justify-content: flex-start;\n  position: relative;\n}\n\n.file.is-white .file-cta {\n  background-color: white;\n  border-color: transparent;\n  color: #0a0a0a;\n}\n\n.file.is-white:hover .file-cta, .file.is-white.is-hovered .file-cta {\n  background-color: #f9f9f9;\n  border-color: transparent;\n  color: #0a0a0a;\n}\n\n.file.is-white:focus .file-cta, .file.is-white.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(255, 255, 255, 0.25);\n  color: #0a0a0a;\n}\n\n.file.is-white:active .file-cta, .file.is-white.is-active .file-cta {\n  background-color: #f2f2f2;\n  border-color: transparent;\n  color: #0a0a0a;\n}\n\n.file.is-black .file-cta {\n  background-color: #0a0a0a;\n  border-color: transparent;\n  color: white;\n}\n\n.file.is-black:hover .file-cta, .file.is-black.is-hovered .file-cta {\n  background-color: #040404;\n  border-color: transparent;\n  color: white;\n}\n\n.file.is-black:focus .file-cta, .file.is-black.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(10, 10, 10, 0.25);\n  color: white;\n}\n\n.file.is-black:active .file-cta, .file.is-black.is-active .file-cta {\n  background-color: black;\n  border-color: transparent;\n  color: white;\n}\n\n.file.is-light .file-cta {\n  background-color: whitesmoke;\n  border-color: transparent;\n  color: #363636;\n}\n\n.file.is-light:hover .file-cta, .file.is-light.is-hovered .file-cta {\n  background-color: #eeeeee;\n  border-color: transparent;\n  color: #363636;\n}\n\n.file.is-light:focus .file-cta, .file.is-light.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(245, 245, 245, 0.25);\n  color: #363636;\n}\n\n.file.is-light:active .file-cta, .file.is-light.is-active .file-cta {\n  background-color: #e8e8e8;\n  border-color: transparent;\n  color: #363636;\n}\n\n.file.is-dark .file-cta {\n  background-color: #363636;\n  border-color: transparent;\n  color: whitesmoke;\n}\n\n.file.is-dark:hover .file-cta, .file.is-dark.is-hovered .file-cta {\n  background-color: #2f2f2f;\n  border-color: transparent;\n  color: whitesmoke;\n}\n\n.file.is-dark:focus .file-cta, .file.is-dark.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(54, 54, 54, 0.25);\n  color: whitesmoke;\n}\n\n.file.is-dark:active .file-cta, .file.is-dark.is-active .file-cta {\n  background-color: #292929;\n  border-color: transparent;\n  color: whitesmoke;\n}\n\n.file.is-primary .file-cta {\n  background-color: #00d1b2;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-primary:hover .file-cta, .file.is-primary.is-hovered .file-cta {\n  background-color: #00c4a7;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-primary:focus .file-cta, .file.is-primary.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(0, 209, 178, 0.25);\n  color: #fff;\n}\n\n.file.is-primary:active .file-cta, .file.is-primary.is-active .file-cta {\n  background-color: #00b89c;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-link .file-cta {\n  background-color: #3273dc;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-link:hover .file-cta, .file.is-link.is-hovered .file-cta {\n  background-color: #276cda;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-link:focus .file-cta, .file.is-link.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(50, 115, 220, 0.25);\n  color: #fff;\n}\n\n.file.is-link:active .file-cta, .file.is-link.is-active .file-cta {\n  background-color: #2366d1;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-info .file-cta {\n  background-color: #209cee;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-info:hover .file-cta, .file.is-info.is-hovered .file-cta {\n  background-color: #1496ed;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-info:focus .file-cta, .file.is-info.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(32, 156, 238, 0.25);\n  color: #fff;\n}\n\n.file.is-info:active .file-cta, .file.is-info.is-active .file-cta {\n  background-color: #118fe4;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-success .file-cta {\n  background-color: #23d160;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-success:hover .file-cta, .file.is-success.is-hovered .file-cta {\n  background-color: #22c65b;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-success:focus .file-cta, .file.is-success.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(35, 209, 96, 0.25);\n  color: #fff;\n}\n\n.file.is-success:active .file-cta, .file.is-success.is-active .file-cta {\n  background-color: #20bc56;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-warning .file-cta {\n  background-color: #ffdd57;\n  border-color: transparent;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.file.is-warning:hover .file-cta, .file.is-warning.is-hovered .file-cta {\n  background-color: #ffdb4a;\n  border-color: transparent;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.file.is-warning:focus .file-cta, .file.is-warning.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(255, 221, 87, 0.25);\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.file.is-warning:active .file-cta, .file.is-warning.is-active .file-cta {\n  background-color: #ffd83d;\n  border-color: transparent;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.file.is-danger .file-cta {\n  background-color: #ff3860;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-danger:hover .file-cta, .file.is-danger.is-hovered .file-cta {\n  background-color: #ff2b56;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-danger:focus .file-cta, .file.is-danger.is-focused .file-cta {\n  border-color: transparent;\n  box-shadow: 0 0 0.5em rgba(255, 56, 96, 0.25);\n  color: #fff;\n}\n\n.file.is-danger:active .file-cta, .file.is-danger.is-active .file-cta {\n  background-color: #ff1f4b;\n  border-color: transparent;\n  color: #fff;\n}\n\n.file.is-small {\n  font-size: 0.75rem;\n}\n\n.file.is-medium {\n  font-size: 1.25rem;\n}\n\n.file.is-medium .file-icon .fa {\n  font-size: 21px;\n}\n\n.file.is-large {\n  font-size: 1.5rem;\n}\n\n.file.is-large .file-icon .fa {\n  font-size: 28px;\n}\n\n.file.has-name .file-cta {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.file.has-name .file-name {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.file.has-name.is-empty .file-cta {\n  border-radius: 4px;\n}\n\n.file.has-name.is-empty .file-name {\n  display: none;\n}\n\n.file.is-boxed .file-label {\n  flex-direction: column;\n}\n\n.file.is-boxed .file-cta {\n  flex-direction: column;\n  height: auto;\n  padding: 1em 3em;\n}\n\n.file.is-boxed .file-name {\n  border-width: 0 1px 1px;\n}\n\n.file.is-boxed .file-icon {\n  height: 1.5em;\n  width: 1.5em;\n}\n\n.file.is-boxed .file-icon .fa {\n  font-size: 21px;\n}\n\n.file.is-boxed.is-small .file-icon .fa {\n  font-size: 14px;\n}\n\n.file.is-boxed.is-medium .file-icon .fa {\n  font-size: 28px;\n}\n\n.file.is-boxed.is-large .file-icon .fa {\n  font-size: 35px;\n}\n\n.file.is-boxed.has-name .file-cta {\n  border-radius: 4px 4px 0 0;\n}\n\n.file.is-boxed.has-name .file-name {\n  border-radius: 0 0 4px 4px;\n  border-width: 0 1px 1px;\n}\n\n.file.is-centered {\n  justify-content: center;\n}\n\n.file.is-fullwidth .file-label {\n  width: 100%;\n}\n\n.file.is-fullwidth .file-name {\n  flex-grow: 1;\n  max-width: none;\n}\n\n.file.is-right {\n  justify-content: flex-end;\n}\n\n.file.is-right .file-cta {\n  border-radius: 0 4px 4px 0;\n}\n\n.file.is-right .file-name {\n  border-radius: 4px 0 0 4px;\n  border-width: 1px 0 1px 1px;\n  order: -1;\n}\n\n.file-label {\n  align-items: stretch;\n  display: flex;\n  cursor: pointer;\n  justify-content: flex-start;\n  overflow: hidden;\n  position: relative;\n}\n\n.file-label:hover .file-cta {\n  background-color: #eeeeee;\n  color: #363636;\n}\n\n.file-label:hover .file-name {\n  border-color: #d5d5d5;\n}\n\n.file-label:active .file-cta {\n  background-color: #e8e8e8;\n  color: #363636;\n}\n\n.file-label:active .file-name {\n  border-color: #cfcfcf;\n}\n\n.file-input {\n  height: 100%;\n  left: 0;\n  opacity: 0;\n  outline: none;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n.file-cta,\n.file-name {\n  border-color: #dbdbdb;\n  border-radius: 4px;\n  font-size: 1em;\n  padding-left: 1em;\n  padding-right: 1em;\n  white-space: nowrap;\n}\n\n.file-cta {\n  background-color: whitesmoke;\n  color: #4a4a4a;\n}\n\n.file-name {\n  border-color: #dbdbdb;\n  border-style: solid;\n  border-width: 1px 1px 1px 0;\n  display: block;\n  max-width: 16em;\n  overflow: hidden;\n  text-align: left;\n  text-overflow: ellipsis;\n}\n\n.file-icon {\n  align-items: center;\n  display: flex;\n  height: 1em;\n  justify-content: center;\n  margin-right: 0.5em;\n  width: 1em;\n}\n\n.file-icon .fa {\n  font-size: 14px;\n}\n\n.label {\n  color: #363636;\n  display: block;\n  font-size: 1rem;\n  font-weight: 700;\n}\n\n.label:not(:last-child) {\n  margin-bottom: 0.5em;\n}\n\n.label.is-small {\n  font-size: 0.75rem;\n}\n\n.label.is-medium {\n  font-size: 1.25rem;\n}\n\n.label.is-large {\n  font-size: 1.5rem;\n}\n\n.help {\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 0.25rem;\n}\n\n.help.is-white {\n  color: white;\n}\n\n.help.is-black {\n  color: #0a0a0a;\n}\n\n.help.is-light {\n  color: whitesmoke;\n}\n\n.help.is-dark {\n  color: #363636;\n}\n\n.help.is-primary {\n  color: #00d1b2;\n}\n\n.help.is-link {\n  color: #3273dc;\n}\n\n.help.is-info {\n  color: #209cee;\n}\n\n.help.is-success {\n  color: #23d160;\n}\n\n.help.is-warning {\n  color: #ffdd57;\n}\n\n.help.is-danger {\n  color: #ff3860;\n}\n\n.field:not(:last-child) {\n  margin-bottom: 0.75rem;\n}\n\n.field.has-addons {\n  display: flex;\n  justify-content: flex-start;\n}\n\n.field.has-addons .control:not(:last-child) {\n  margin-right: -1px;\n}\n\n.field.has-addons .control:not(:first-child):not(:last-child) .button,\n.field.has-addons .control:not(:first-child):not(:last-child) .input,\n.field.has-addons .control:not(:first-child):not(:last-child) .select select {\n  border-radius: 0;\n}\n\n.field.has-addons .control:first-child .button,\n.field.has-addons .control:first-child .input,\n.field.has-addons .control:first-child .select select {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.field.has-addons .control:last-child .button,\n.field.has-addons .control:last-child .input,\n.field.has-addons .control:last-child .select select {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.field.has-addons .control .button:not([disabled]):hover, .field.has-addons .control .button:not([disabled]).is-hovered,\n.field.has-addons .control .input:not([disabled]):hover,\n.field.has-addons .control .input:not([disabled]).is-hovered,\n.field.has-addons .control .select select:not([disabled]):hover,\n.field.has-addons .control .select select:not([disabled]).is-hovered {\n  z-index: 2;\n}\n\n.field.has-addons .control .button:not([disabled]):focus, .field.has-addons .control .button:not([disabled]).is-focused, .field.has-addons .control .button:not([disabled]):active, .field.has-addons .control .button:not([disabled]).is-active,\n.field.has-addons .control .input:not([disabled]):focus,\n.field.has-addons .control .input:not([disabled]).is-focused,\n.field.has-addons .control .input:not([disabled]):active,\n.field.has-addons .control .input:not([disabled]).is-active,\n.field.has-addons .control .select select:not([disabled]):focus,\n.field.has-addons .control .select select:not([disabled]).is-focused,\n.field.has-addons .control .select select:not([disabled]):active,\n.field.has-addons .control .select select:not([disabled]).is-active {\n  z-index: 3;\n}\n\n.field.has-addons .control .button:not([disabled]):focus:hover, .field.has-addons .control .button:not([disabled]).is-focused:hover, .field.has-addons .control .button:not([disabled]):active:hover, .field.has-addons .control .button:not([disabled]).is-active:hover,\n.field.has-addons .control .input:not([disabled]):focus:hover,\n.field.has-addons .control .input:not([disabled]).is-focused:hover,\n.field.has-addons .control .input:not([disabled]):active:hover,\n.field.has-addons .control .input:not([disabled]).is-active:hover,\n.field.has-addons .control .select select:not([disabled]):focus:hover,\n.field.has-addons .control .select select:not([disabled]).is-focused:hover,\n.field.has-addons .control .select select:not([disabled]):active:hover,\n.field.has-addons .control .select select:not([disabled]).is-active:hover {\n  z-index: 4;\n}\n\n.field.has-addons .control.is-expanded {\n  flex-grow: 1;\n}\n\n.field.has-addons.has-addons-centered {\n  justify-content: center;\n}\n\n.field.has-addons.has-addons-right {\n  justify-content: flex-end;\n}\n\n.field.has-addons.has-addons-fullwidth .control {\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n.field.is-grouped {\n  display: flex;\n  justify-content: flex-start;\n}\n\n.field.is-grouped > .control {\n  flex-shrink: 0;\n}\n\n.field.is-grouped > .control:not(:last-child) {\n  margin-bottom: 0;\n  margin-right: 0.75rem;\n}\n\n.field.is-grouped > .control.is-expanded {\n  flex-grow: 1;\n  flex-shrink: 1;\n}\n\n.field.is-grouped.is-grouped-centered {\n  justify-content: center;\n}\n\n.field.is-grouped.is-grouped-right {\n  justify-content: flex-end;\n}\n\n.field.is-grouped.is-grouped-multiline {\n  flex-wrap: wrap;\n}\n\n.field.is-grouped.is-grouped-multiline > .control:last-child, .field.is-grouped.is-grouped-multiline > .control:not(:last-child) {\n  margin-bottom: 0.75rem;\n}\n\n.field.is-grouped.is-grouped-multiline:last-child {\n  margin-bottom: -0.75rem;\n}\n\n.field.is-grouped.is-grouped-multiline:not(:last-child) {\n  margin-bottom: 0;\n}\n\n@media screen and (min-width: 769px), print {\n  .field.is-horizontal {\n    display: flex;\n  }\n}\n\n.field-label .label {\n  font-size: inherit;\n}\n\n@media screen and (max-width: 768px) {\n  .field-label {\n    margin-bottom: 0.5rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .field-label {\n    flex-basis: 0;\n    flex-grow: 1;\n    flex-shrink: 0;\n    margin-right: 1.5rem;\n    text-align: right;\n  }\n  .field-label.is-small {\n    font-size: 0.75rem;\n    padding-top: 0.375em;\n  }\n  .field-label.is-normal {\n    padding-top: 0.375em;\n  }\n  .field-label.is-medium {\n    font-size: 1.25rem;\n    padding-top: 0.375em;\n  }\n  .field-label.is-large {\n    font-size: 1.5rem;\n    padding-top: 0.375em;\n  }\n}\n\n.field-body .field .field {\n  margin-bottom: 0;\n}\n\n@media screen and (min-width: 769px), print {\n  .field-body {\n    display: flex;\n    flex-basis: 0;\n    flex-grow: 5;\n    flex-shrink: 1;\n  }\n  .field-body .field {\n    margin-bottom: 0;\n  }\n  .field-body > .field {\n    flex-shrink: 1;\n  }\n  .field-body > .field:not(.is-narrow) {\n    flex-grow: 1;\n  }\n  .field-body > .field:not(:last-child) {\n    margin-right: 0.75rem;\n  }\n}\n\n.control {\n  clear: both;\n  font-size: 1rem;\n  position: relative;\n  text-align: left;\n}\n\n.control.has-icon .icon {\n  color: #dbdbdb;\n  height: 2.25em;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  width: 2.25em;\n  z-index: 4;\n}\n\n.control.has-icon .input:focus + .icon {\n  color: #7a7a7a;\n}\n\n.control.has-icon .input.is-small + .icon {\n  font-size: 0.75rem;\n}\n\n.control.has-icon .input.is-medium + .icon {\n  font-size: 1.25rem;\n}\n\n.control.has-icon .input.is-large + .icon {\n  font-size: 1.5rem;\n}\n\n.control.has-icon:not(.has-icon-right) .icon {\n  left: 0;\n}\n\n.control.has-icon:not(.has-icon-right) .input {\n  padding-left: 2.25em;\n}\n\n.control.has-icon.has-icon-right .icon {\n  right: 0;\n}\n\n.control.has-icon.has-icon-right .input {\n  padding-right: 2.25em;\n}\n\n.control.has-icons-left .input:focus ~ .icon,\n.control.has-icons-left .select:focus ~ .icon, .control.has-icons-right .input:focus ~ .icon,\n.control.has-icons-right .select:focus ~ .icon {\n  color: #7a7a7a;\n}\n\n.control.has-icons-left .input.is-small ~ .icon,\n.control.has-icons-left .select.is-small ~ .icon, .control.has-icons-right .input.is-small ~ .icon,\n.control.has-icons-right .select.is-small ~ .icon {\n  font-size: 0.75rem;\n}\n\n.control.has-icons-left .input.is-medium ~ .icon,\n.control.has-icons-left .select.is-medium ~ .icon, .control.has-icons-right .input.is-medium ~ .icon,\n.control.has-icons-right .select.is-medium ~ .icon {\n  font-size: 1.25rem;\n}\n\n.control.has-icons-left .input.is-large ~ .icon,\n.control.has-icons-left .select.is-large ~ .icon, .control.has-icons-right .input.is-large ~ .icon,\n.control.has-icons-right .select.is-large ~ .icon {\n  font-size: 1.5rem;\n}\n\n.control.has-icons-left .icon, .control.has-icons-right .icon {\n  color: #dbdbdb;\n  height: 2.25em;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  width: 2.25em;\n  z-index: 4;\n}\n\n.control.has-icons-left .input,\n.control.has-icons-left .select select {\n  padding-left: 2.25em;\n}\n\n.control.has-icons-left .icon.is-left {\n  left: 0;\n}\n\n.control.has-icons-right .input,\n.control.has-icons-right .select select {\n  padding-right: 2.25em;\n}\n\n.control.has-icons-right .icon.is-right {\n  right: 0;\n}\n\n.control.is-loading::after {\n  position: absolute !important;\n  right: 0.625em;\n  top: 0.625em;\n  z-index: 4;\n}\n\n.control.is-loading.is-small:after {\n  font-size: 0.75rem;\n}\n\n.control.is-loading.is-medium:after {\n  font-size: 1.25rem;\n}\n\n.control.is-loading.is-large:after {\n  font-size: 1.5rem;\n}\n\n.icon {\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n  height: 1.5rem;\n  width: 1.5rem;\n}\n\n.icon.is-small {\n  height: 1rem;\n  width: 1rem;\n}\n\n.icon.is-medium {\n  height: 2rem;\n  width: 2rem;\n}\n\n.icon.is-large {\n  height: 3rem;\n  width: 3rem;\n}\n\n.image {\n  display: block;\n  position: relative;\n}\n\n.image img {\n  display: block;\n  height: auto;\n  width: 100%;\n}\n\n.image img.is-rounded {\n  border-radius: 290486px;\n}\n\n.image.is-square img, .image.is-1by1 img, .image.is-5by4 img, .image.is-4by3 img, .image.is-3by2 img, .image.is-5by3 img, .image.is-16by9 img, .image.is-2by1 img, .image.is-3by1 img, .image.is-4by5 img, .image.is-3by4 img, .image.is-2by3 img, .image.is-3by5 img, .image.is-9by16 img, .image.is-1by2 img, .image.is-1by3 img {\n  height: 100%;\n  width: 100%;\n}\n\n.image.is-square, .image.is-1by1 {\n  padding-top: 100%;\n}\n\n.image.is-5by4 {\n  padding-top: 80%;\n}\n\n.image.is-4by3 {\n  padding-top: 75%;\n}\n\n.image.is-3by2 {\n  padding-top: 66.6666%;\n}\n\n.image.is-5by3 {\n  padding-top: 60%;\n}\n\n.image.is-16by9 {\n  padding-top: 56.25%;\n}\n\n.image.is-2by1 {\n  padding-top: 50%;\n}\n\n.image.is-3by1 {\n  padding-top: 33.3333%;\n}\n\n.image.is-4by5 {\n  padding-top: 125%;\n}\n\n.image.is-3by4 {\n  padding-top: 133.3333%;\n}\n\n.image.is-2by3 {\n  padding-top: 150%;\n}\n\n.image.is-3by5 {\n  padding-top: 166.6666%;\n}\n\n.image.is-9by16 {\n  padding-top: 177.7777%;\n}\n\n.image.is-1by2 {\n  padding-top: 200%;\n}\n\n.image.is-1by3 {\n  padding-top: 300%;\n}\n\n.image.is-16x16 {\n  height: 16px;\n  width: 16px;\n}\n\n.image.is-24x24 {\n  height: 24px;\n  width: 24px;\n}\n\n.image.is-32x32 {\n  height: 32px;\n  width: 32px;\n}\n\n.image.is-48x48 {\n  height: 48px;\n  width: 48px;\n}\n\n.image.is-64x64 {\n  height: 64px;\n  width: 64px;\n}\n\n.image.is-96x96 {\n  height: 96px;\n  width: 96px;\n}\n\n.image.is-128x128 {\n  height: 128px;\n  width: 128px;\n}\n\n.notification {\n  background-color: whitesmoke;\n  border-radius: 4px;\n  padding: 1.25rem 2.5rem 1.25rem 1.5rem;\n  position: relative;\n}\n\n.notification a:not(.button):not(.dropdown-item) {\n  color: currentColor;\n  text-decoration: underline;\n}\n\n.notification strong {\n  color: currentColor;\n}\n\n.notification code,\n.notification pre {\n  background: white;\n}\n\n.notification pre code {\n  background: transparent;\n}\n\n.notification > .delete {\n  position: absolute;\n  right: 0.5rem;\n  top: 0.5rem;\n}\n\n.notification .title,\n.notification .subtitle,\n.notification .content {\n  color: currentColor;\n}\n\n.notification.is-white {\n  background-color: white;\n  color: #0a0a0a;\n}\n\n.notification.is-black {\n  background-color: #0a0a0a;\n  color: white;\n}\n\n.notification.is-light {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.notification.is-dark {\n  background-color: #363636;\n  color: whitesmoke;\n}\n\n.notification.is-primary {\n  background-color: #00d1b2;\n  color: #fff;\n}\n\n.notification.is-link {\n  background-color: #3273dc;\n  color: #fff;\n}\n\n.notification.is-info {\n  background-color: #209cee;\n  color: #fff;\n}\n\n.notification.is-success {\n  background-color: #23d160;\n  color: #fff;\n}\n\n.notification.is-warning {\n  background-color: #ffdd57;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.notification.is-danger {\n  background-color: #ff3860;\n  color: #fff;\n}\n\n.progress {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  border: none;\n  border-radius: 290486px;\n  display: block;\n  height: 1rem;\n  overflow: hidden;\n  padding: 0;\n  width: 100%;\n}\n\n.progress::-webkit-progress-bar {\n  background-color: #dbdbdb;\n}\n\n.progress::-webkit-progress-value {\n  background-color: #4a4a4a;\n}\n\n.progress::-moz-progress-bar {\n  background-color: #4a4a4a;\n}\n\n.progress::-ms-fill {\n  background-color: #4a4a4a;\n  border: none;\n}\n\n.progress.is-white::-webkit-progress-value {\n  background-color: white;\n}\n\n.progress.is-white::-moz-progress-bar {\n  background-color: white;\n}\n\n.progress.is-white::-ms-fill {\n  background-color: white;\n}\n\n.progress.is-black::-webkit-progress-value {\n  background-color: #0a0a0a;\n}\n\n.progress.is-black::-moz-progress-bar {\n  background-color: #0a0a0a;\n}\n\n.progress.is-black::-ms-fill {\n  background-color: #0a0a0a;\n}\n\n.progress.is-light::-webkit-progress-value {\n  background-color: whitesmoke;\n}\n\n.progress.is-light::-moz-progress-bar {\n  background-color: whitesmoke;\n}\n\n.progress.is-light::-ms-fill {\n  background-color: whitesmoke;\n}\n\n.progress.is-dark::-webkit-progress-value {\n  background-color: #363636;\n}\n\n.progress.is-dark::-moz-progress-bar {\n  background-color: #363636;\n}\n\n.progress.is-dark::-ms-fill {\n  background-color: #363636;\n}\n\n.progress.is-primary::-webkit-progress-value {\n  background-color: #00d1b2;\n}\n\n.progress.is-primary::-moz-progress-bar {\n  background-color: #00d1b2;\n}\n\n.progress.is-primary::-ms-fill {\n  background-color: #00d1b2;\n}\n\n.progress.is-link::-webkit-progress-value {\n  background-color: #3273dc;\n}\n\n.progress.is-link::-moz-progress-bar {\n  background-color: #3273dc;\n}\n\n.progress.is-link::-ms-fill {\n  background-color: #3273dc;\n}\n\n.progress.is-info::-webkit-progress-value {\n  background-color: #209cee;\n}\n\n.progress.is-info::-moz-progress-bar {\n  background-color: #209cee;\n}\n\n.progress.is-info::-ms-fill {\n  background-color: #209cee;\n}\n\n.progress.is-success::-webkit-progress-value {\n  background-color: #23d160;\n}\n\n.progress.is-success::-moz-progress-bar {\n  background-color: #23d160;\n}\n\n.progress.is-success::-ms-fill {\n  background-color: #23d160;\n}\n\n.progress.is-warning::-webkit-progress-value {\n  background-color: #ffdd57;\n}\n\n.progress.is-warning::-moz-progress-bar {\n  background-color: #ffdd57;\n}\n\n.progress.is-warning::-ms-fill {\n  background-color: #ffdd57;\n}\n\n.progress.is-danger::-webkit-progress-value {\n  background-color: #ff3860;\n}\n\n.progress.is-danger::-moz-progress-bar {\n  background-color: #ff3860;\n}\n\n.progress.is-danger::-ms-fill {\n  background-color: #ff3860;\n}\n\n.progress.is-small {\n  height: 0.75rem;\n}\n\n.progress.is-medium {\n  height: 1.25rem;\n}\n\n.progress.is-large {\n  height: 1.5rem;\n}\n\n.table {\n  background-color: white;\n  color: #363636;\n}\n\n.table td,\n.table th {\n  border: 1px solid #dbdbdb;\n  border-width: 0 0 1px;\n  padding: 0.5em 0.75em;\n  vertical-align: top;\n}\n\n.table td.is-white,\n.table th.is-white {\n  background-color: white;\n  border-color: white;\n  color: #0a0a0a;\n}\n\n.table td.is-black,\n.table th.is-black {\n  background-color: #0a0a0a;\n  border-color: #0a0a0a;\n  color: white;\n}\n\n.table td.is-light,\n.table th.is-light {\n  background-color: whitesmoke;\n  border-color: whitesmoke;\n  color: #363636;\n}\n\n.table td.is-dark,\n.table th.is-dark {\n  background-color: #363636;\n  border-color: #363636;\n  color: whitesmoke;\n}\n\n.table td.is-primary,\n.table th.is-primary {\n  background-color: #00d1b2;\n  border-color: #00d1b2;\n  color: #fff;\n}\n\n.table td.is-link,\n.table th.is-link {\n  background-color: #3273dc;\n  border-color: #3273dc;\n  color: #fff;\n}\n\n.table td.is-info,\n.table th.is-info {\n  background-color: #209cee;\n  border-color: #209cee;\n  color: #fff;\n}\n\n.table td.is-success,\n.table th.is-success {\n  background-color: #23d160;\n  border-color: #23d160;\n  color: #fff;\n}\n\n.table td.is-warning,\n.table th.is-warning {\n  background-color: #ffdd57;\n  border-color: #ffdd57;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.table td.is-danger,\n.table th.is-danger {\n  background-color: #ff3860;\n  border-color: #ff3860;\n  color: #fff;\n}\n\n.table td.is-narrow,\n.table th.is-narrow {\n  white-space: nowrap;\n  width: 1%;\n}\n\n.table td.is-selected,\n.table th.is-selected {\n  background-color: #00d1b2;\n  color: #fff;\n}\n\n.table td.is-selected a,\n.table td.is-selected strong,\n.table th.is-selected a,\n.table th.is-selected strong {\n  color: currentColor;\n}\n\n.table th {\n  color: #363636;\n  text-align: left;\n}\n\n.table tr.is-selected {\n  background-color: #00d1b2;\n  color: #fff;\n}\n\n.table tr.is-selected a,\n.table tr.is-selected strong {\n  color: currentColor;\n}\n\n.table tr.is-selected td,\n.table tr.is-selected th {\n  border-color: #fff;\n  color: currentColor;\n}\n\n.table thead td,\n.table thead th {\n  border-width: 0 0 2px;\n  color: #363636;\n}\n\n.table tfoot td,\n.table tfoot th {\n  border-width: 2px 0 0;\n  color: #363636;\n}\n\n.table tbody tr:last-child td,\n.table tbody tr:last-child th {\n  border-bottom-width: 0;\n}\n\n.table.is-bordered td,\n.table.is-bordered th {\n  border-width: 1px;\n}\n\n.table.is-bordered tr:last-child td,\n.table.is-bordered tr:last-child th {\n  border-bottom-width: 1px;\n}\n\n.table.is-fullwidth {\n  width: 100%;\n}\n\n.table.is-hoverable tbody tr:not(.is-selected):hover {\n  background-color: #fafafa;\n}\n\n.table.is-hoverable.is-striped tbody tr:not(.is-selected):hover {\n  background-color: #fafafa;\n}\n\n.table.is-hoverable.is-striped tbody tr:not(.is-selected):hover:nth-child(even) {\n  background-color: whitesmoke;\n}\n\n.table.is-narrow td,\n.table.is-narrow th {\n  padding: 0.25em 0.5em;\n}\n\n.table.is-striped tbody tr:not(.is-selected):nth-child(even) {\n  background-color: #fafafa;\n}\n\n.table-container {\n  -webkit-overflow-scrolling: touch;\n  overflow: auto;\n  overflow-y: hidden;\n  max-width: 100%;\n}\n\n.tags {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n\n.tags .tag {\n  margin-bottom: 0.5rem;\n}\n\n.tags .tag:not(:last-child) {\n  margin-right: 0.5rem;\n}\n\n.tags:last-child {\n  margin-bottom: -0.5rem;\n}\n\n.tags:not(:last-child) {\n  margin-bottom: 1rem;\n}\n\n.tags.has-addons .tag {\n  margin-right: 0;\n}\n\n.tags.has-addons .tag:not(:first-child) {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n\n.tags.has-addons .tag:not(:last-child) {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.tags.is-centered {\n  justify-content: center;\n}\n\n.tags.is-centered .tag {\n  margin-right: 0.25rem;\n  margin-left: 0.25rem;\n}\n\n.tags.is-right {\n  justify-content: flex-end;\n}\n\n.tags.is-right .tag:not(:first-child) {\n  margin-left: 0.5rem;\n}\n\n.tags.is-right .tag:not(:last-child) {\n  margin-right: 0;\n}\n\n.tag:not(body) {\n  align-items: center;\n  background-color: whitesmoke;\n  border-radius: 4px;\n  color: #4a4a4a;\n  display: inline-flex;\n  font-size: 0.75rem;\n  height: 2em;\n  justify-content: center;\n  line-height: 1.5;\n  padding-left: 0.75em;\n  padding-right: 0.75em;\n  white-space: nowrap;\n}\n\n.tag:not(body) .delete {\n  margin-left: 0.25rem;\n  margin-right: -0.375rem;\n}\n\n.tag:not(body).is-white {\n  background-color: white;\n  color: #0a0a0a;\n}\n\n.tag:not(body).is-black {\n  background-color: #0a0a0a;\n  color: white;\n}\n\n.tag:not(body).is-light {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.tag:not(body).is-dark {\n  background-color: #363636;\n  color: whitesmoke;\n}\n\n.tag:not(body).is-primary {\n  background-color: #00d1b2;\n  color: #fff;\n}\n\n.tag:not(body).is-link {\n  background-color: #3273dc;\n  color: #fff;\n}\n\n.tag:not(body).is-info {\n  background-color: #209cee;\n  color: #fff;\n}\n\n.tag:not(body).is-success {\n  background-color: #23d160;\n  color: #fff;\n}\n\n.tag:not(body).is-warning {\n  background-color: #ffdd57;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.tag:not(body).is-danger {\n  background-color: #ff3860;\n  color: #fff;\n}\n\n.tag:not(body).is-medium {\n  font-size: 1rem;\n}\n\n.tag:not(body).is-large {\n  font-size: 1.25rem;\n}\n\n.tag:not(body) .icon:first-child:not(:last-child) {\n  margin-left: -0.375em;\n  margin-right: 0.1875em;\n}\n\n.tag:not(body) .icon:last-child:not(:first-child) {\n  margin-left: 0.1875em;\n  margin-right: -0.375em;\n}\n\n.tag:not(body) .icon:first-child:last-child {\n  margin-left: -0.375em;\n  margin-right: -0.375em;\n}\n\n.tag:not(body).is-delete {\n  margin-left: 1px;\n  padding: 0;\n  position: relative;\n  width: 2em;\n}\n\n.tag:not(body).is-delete::before, .tag:not(body).is-delete::after {\n  background-color: currentColor;\n  content: \"\";\n  display: block;\n  left: 50%;\n  position: absolute;\n  top: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%) rotate(45deg);\n          transform: translateX(-50%) translateY(-50%) rotate(45deg);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.tag:not(body).is-delete::before {\n  height: 1px;\n  width: 50%;\n}\n\n.tag:not(body).is-delete::after {\n  height: 50%;\n  width: 1px;\n}\n\n.tag:not(body).is-delete:hover, .tag:not(body).is-delete:focus {\n  background-color: #e8e8e8;\n}\n\n.tag:not(body).is-delete:active {\n  background-color: #dbdbdb;\n}\n\n.tag:not(body).is-rounded {\n  border-radius: 290486px;\n}\n\na.tag:hover {\n  text-decoration: underline;\n}\n\n.title,\n.subtitle {\n  word-break: break-word;\n}\n\n.title em,\n.title span,\n.subtitle em,\n.subtitle span {\n  font-weight: inherit;\n}\n\n.title sub,\n.subtitle sub {\n  font-size: 0.75em;\n}\n\n.title sup,\n.subtitle sup {\n  font-size: 0.75em;\n}\n\n.title .tag,\n.subtitle .tag {\n  vertical-align: middle;\n}\n\n.title {\n  color: #363636;\n  font-size: 2rem;\n  font-weight: 600;\n  line-height: 1.125;\n}\n\n.title strong {\n  color: inherit;\n  font-weight: inherit;\n}\n\n.title + .highlight {\n  margin-top: -0.75rem;\n}\n\n.title:not(.is-spaced) + .subtitle {\n  margin-top: -1.25rem;\n}\n\n.title.is-1 {\n  font-size: 3rem;\n}\n\n.title.is-2 {\n  font-size: 2.5rem;\n}\n\n.title.is-3 {\n  font-size: 2rem;\n}\n\n.title.is-4 {\n  font-size: 1.5rem;\n}\n\n.title.is-5 {\n  font-size: 1.25rem;\n}\n\n.title.is-6 {\n  font-size: 1rem;\n}\n\n.title.is-7 {\n  font-size: 0.75rem;\n}\n\n.subtitle {\n  color: #4a4a4a;\n  font-size: 1.25rem;\n  font-weight: 400;\n  line-height: 1.25;\n}\n\n.subtitle strong {\n  color: #363636;\n  font-weight: 600;\n}\n\n.subtitle:not(.is-spaced) + .title {\n  margin-top: -1.25rem;\n}\n\n.subtitle.is-1 {\n  font-size: 3rem;\n}\n\n.subtitle.is-2 {\n  font-size: 2.5rem;\n}\n\n.subtitle.is-3 {\n  font-size: 2rem;\n}\n\n.subtitle.is-4 {\n  font-size: 1.5rem;\n}\n\n.subtitle.is-5 {\n  font-size: 1.25rem;\n}\n\n.subtitle.is-6 {\n  font-size: 1rem;\n}\n\n.subtitle.is-7 {\n  font-size: 0.75rem;\n}\n\n.heading {\n  display: block;\n  font-size: 11px;\n  letter-spacing: 1px;\n  margin-bottom: 5px;\n  text-transform: uppercase;\n}\n\n.highlight {\n  font-weight: 400;\n  max-width: 100%;\n  overflow: hidden;\n  padding: 0;\n}\n\n.highlight pre {\n  overflow: auto;\n  max-width: 100%;\n}\n\n.number {\n  align-items: center;\n  background-color: whitesmoke;\n  border-radius: 290486px;\n  display: inline-flex;\n  font-size: 1.25rem;\n  height: 2em;\n  justify-content: center;\n  margin-right: 1.5rem;\n  min-width: 2.5em;\n  padding: 0.25rem 0.5rem;\n  text-align: center;\n  vertical-align: top;\n}\n\n.breadcrumb {\n  font-size: 1rem;\n  white-space: nowrap;\n}\n\n.breadcrumb a {\n  align-items: center;\n  color: #3273dc;\n  display: flex;\n  justify-content: center;\n  padding: 0 0.75em;\n}\n\n.breadcrumb a:hover {\n  color: #363636;\n}\n\n.breadcrumb li {\n  align-items: center;\n  display: flex;\n}\n\n.breadcrumb li:first-child a {\n  padding-left: 0;\n}\n\n.breadcrumb li.is-active a {\n  color: #363636;\n  cursor: default;\n  pointer-events: none;\n}\n\n.breadcrumb li + li::before {\n  color: #b5b5b5;\n  content: \"\\0002f\";\n}\n\n.breadcrumb ul,\n.breadcrumb ol {\n  align-items: flex-start;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n\n.breadcrumb .icon:first-child {\n  margin-right: 0.5em;\n}\n\n.breadcrumb .icon:last-child {\n  margin-left: 0.5em;\n}\n\n.breadcrumb.is-centered ol,\n.breadcrumb.is-centered ul {\n  justify-content: center;\n}\n\n.breadcrumb.is-right ol,\n.breadcrumb.is-right ul {\n  justify-content: flex-end;\n}\n\n.breadcrumb.is-small {\n  font-size: 0.75rem;\n}\n\n.breadcrumb.is-medium {\n  font-size: 1.25rem;\n}\n\n.breadcrumb.is-large {\n  font-size: 1.5rem;\n}\n\n.breadcrumb.has-arrow-separator li + li::before {\n  content: \"\\02192\";\n}\n\n.breadcrumb.has-bullet-separator li + li::before {\n  content: \"\\02022\";\n}\n\n.breadcrumb.has-dot-separator li + li::before {\n  content: \"\\000b7\";\n}\n\n.breadcrumb.has-succeeds-separator li + li::before {\n  content: \"\\0227B\";\n}\n\n.card {\n  background-color: white;\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n  color: #4a4a4a;\n  max-width: 100%;\n  position: relative;\n}\n\n.card-header {\n  background-color: transparent;\n  align-items: stretch;\n  box-shadow: 0 1px 2px rgba(10, 10, 10, 0.1);\n  display: flex;\n}\n\n.card-header-title {\n  align-items: center;\n  color: #363636;\n  display: flex;\n  flex-grow: 1;\n  font-weight: 700;\n  padding: 0.75rem;\n}\n\n.card-header-title.is-centered {\n  justify-content: center;\n}\n\n.card-header-icon {\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  padding: 0.75rem;\n}\n\n.card-image {\n  display: block;\n  position: relative;\n}\n\n.card-content {\n  background-color: transparent;\n  padding: 1.5rem;\n}\n\n.card-footer {\n  background-color: transparent;\n  border-top: 1px solid #dbdbdb;\n  align-items: stretch;\n  display: flex;\n}\n\n.card-footer-item {\n  align-items: center;\n  display: flex;\n  flex-basis: 0;\n  flex-grow: 1;\n  flex-shrink: 0;\n  justify-content: center;\n  padding: 0.75rem;\n}\n\n.card-footer-item:not(:last-child) {\n  border-right: 1px solid #dbdbdb;\n}\n\n.card .media:not(:last-child) {\n  margin-bottom: 0.75rem;\n}\n\n.dropdown {\n  display: inline-flex;\n  position: relative;\n  vertical-align: top;\n}\n\n.dropdown.is-active .dropdown-menu, .dropdown.is-hoverable:hover .dropdown-menu {\n  display: block;\n}\n\n.dropdown.is-right .dropdown-menu {\n  left: auto;\n  right: 0;\n}\n\n.dropdown.is-up .dropdown-menu {\n  bottom: 100%;\n  padding-bottom: 4px;\n  padding-top: initial;\n  top: auto;\n}\n\n.dropdown-menu {\n  display: none;\n  left: 0;\n  min-width: 12rem;\n  padding-top: 4px;\n  position: absolute;\n  top: 100%;\n  z-index: 20;\n}\n\n.dropdown-content {\n  background-color: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n}\n\n.dropdown-item {\n  color: #4a4a4a;\n  display: block;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  padding: 0.375rem 1rem;\n  position: relative;\n}\n\na.dropdown-item,\nbutton.dropdown-item {\n  padding-right: 3rem;\n  text-align: left;\n  white-space: nowrap;\n  width: 100%;\n}\n\na.dropdown-item:hover,\nbutton.dropdown-item:hover {\n  background-color: whitesmoke;\n  color: #0a0a0a;\n}\n\na.dropdown-item.is-active,\nbutton.dropdown-item.is-active {\n  background-color: #3273dc;\n  color: #fff;\n}\n\n.dropdown-divider {\n  background-color: #dbdbdb;\n  border: none;\n  display: block;\n  height: 1px;\n  margin: 0.5rem 0;\n}\n\n.level {\n  align-items: center;\n  justify-content: space-between;\n}\n\n.level code {\n  border-radius: 4px;\n}\n\n.level img {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.level.is-mobile {\n  display: flex;\n}\n\n.level.is-mobile .level-left,\n.level.is-mobile .level-right {\n  display: flex;\n}\n\n.level.is-mobile .level-left + .level-right {\n  margin-top: 0;\n}\n\n.level.is-mobile .level-item:not(:last-child) {\n  margin-bottom: 0;\n  margin-right: 0.75rem;\n}\n\n.level.is-mobile .level-item:not(.is-narrow) {\n  flex-grow: 1;\n}\n\n@media screen and (min-width: 769px), print {\n  .level {\n    display: flex;\n  }\n  .level > .level-item:not(.is-narrow) {\n    flex-grow: 1;\n  }\n}\n\n.level-item {\n  align-items: center;\n  display: flex;\n  flex-basis: auto;\n  flex-grow: 0;\n  flex-shrink: 0;\n  justify-content: center;\n}\n\n.level-item .title,\n.level-item .subtitle {\n  margin-bottom: 0;\n}\n\n@media screen and (max-width: 768px) {\n  .level-item:not(:last-child) {\n    margin-bottom: 0.75rem;\n  }\n}\n\n.level-left,\n.level-right {\n  flex-basis: auto;\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.level-left .level-item.is-flexible,\n.level-right .level-item.is-flexible {\n  flex-grow: 1;\n}\n\n@media screen and (min-width: 769px), print {\n  .level-left .level-item:not(:last-child),\n  .level-right .level-item:not(:last-child) {\n    margin-right: 0.75rem;\n  }\n}\n\n.level-left {\n  align-items: center;\n  justify-content: flex-start;\n}\n\n@media screen and (max-width: 768px) {\n  .level-left + .level-right {\n    margin-top: 1.5rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .level-left {\n    display: flex;\n  }\n}\n\n.level-right {\n  align-items: center;\n  justify-content: flex-end;\n}\n\n@media screen and (min-width: 769px), print {\n  .level-right {\n    display: flex;\n  }\n}\n\n.list {\n  background-color: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n}\n\n.list-item {\n  display: block;\n  padding: 0.5em 1em;\n}\n\n.list-item:not(a) {\n  color: #4a4a4a;\n}\n\n.list-item:first-child {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\n\n.list-item:last-child {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\n\n.list-item:not(:last-child) {\n  border-bottom: 1px solid #dbdbdb;\n}\n\n.list-item.is-active {\n  background-color: #3273dc;\n  color: #fff;\n}\n\na.list-item {\n  background-color: whitesmoke;\n  cursor: pointer;\n}\n\n.media {\n  align-items: flex-start;\n  display: flex;\n  text-align: left;\n}\n\n.media .content:not(:last-child) {\n  margin-bottom: 0.75rem;\n}\n\n.media .media {\n  border-top: 1px solid rgba(219, 219, 219, 0.5);\n  display: flex;\n  padding-top: 0.75rem;\n}\n\n.media .media .content:not(:last-child),\n.media .media .control:not(:last-child) {\n  margin-bottom: 0.5rem;\n}\n\n.media .media .media {\n  padding-top: 0.5rem;\n}\n\n.media .media .media + .media {\n  margin-top: 0.5rem;\n}\n\n.media + .media {\n  border-top: 1px solid rgba(219, 219, 219, 0.5);\n  margin-top: 1rem;\n  padding-top: 1rem;\n}\n\n.media.is-large + .media {\n  margin-top: 1.5rem;\n  padding-top: 1.5rem;\n}\n\n.media-left,\n.media-right {\n  flex-basis: auto;\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.media-left {\n  margin-right: 1rem;\n}\n\n.media-right {\n  margin-left: 1rem;\n}\n\n.media-content {\n  flex-basis: auto;\n  flex-grow: 1;\n  flex-shrink: 1;\n  text-align: left;\n}\n\n@media screen and (max-width: 768px) {\n  .media-content {\n    overflow-x: auto;\n  }\n}\n\n.menu {\n  font-size: 1rem;\n}\n\n.menu.is-small {\n  font-size: 0.75rem;\n}\n\n.menu.is-medium {\n  font-size: 1.25rem;\n}\n\n.menu.is-large {\n  font-size: 1.5rem;\n}\n\n.menu-list {\n  line-height: 1.25;\n}\n\n.menu-list a {\n  border-radius: 2px;\n  color: #4a4a4a;\n  display: block;\n  padding: 0.5em 0.75em;\n}\n\n.menu-list a:hover {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.menu-list a.is-active {\n  background-color: #3273dc;\n  color: #fff;\n}\n\n.menu-list li ul {\n  border-left: 1px solid #dbdbdb;\n  margin: 0.75em;\n  padding-left: 0.75em;\n}\n\n.menu-label {\n  color: #7a7a7a;\n  font-size: 0.75em;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n}\n\n.menu-label:not(:first-child) {\n  margin-top: 1em;\n}\n\n.menu-label:not(:last-child) {\n  margin-bottom: 1em;\n}\n\n.message {\n  background-color: whitesmoke;\n  border-radius: 4px;\n  font-size: 1rem;\n}\n\n.message strong {\n  color: currentColor;\n}\n\n.message a:not(.button):not(.tag) {\n  color: currentColor;\n  text-decoration: underline;\n}\n\n.message.is-small {\n  font-size: 0.75rem;\n}\n\n.message.is-medium {\n  font-size: 1.25rem;\n}\n\n.message.is-large {\n  font-size: 1.5rem;\n}\n\n.message.is-white {\n  background-color: white;\n}\n\n.message.is-white .message-header {\n  background-color: white;\n  color: #0a0a0a;\n}\n\n.message.is-white .message-body {\n  border-color: white;\n  color: #4d4d4d;\n}\n\n.message.is-black {\n  background-color: #fafafa;\n}\n\n.message.is-black .message-header {\n  background-color: #0a0a0a;\n  color: white;\n}\n\n.message.is-black .message-body {\n  border-color: #0a0a0a;\n  color: #090909;\n}\n\n.message.is-light {\n  background-color: #fafafa;\n}\n\n.message.is-light .message-header {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.message.is-light .message-body {\n  border-color: whitesmoke;\n  color: #505050;\n}\n\n.message.is-dark {\n  background-color: #fafafa;\n}\n\n.message.is-dark .message-header {\n  background-color: #363636;\n  color: whitesmoke;\n}\n\n.message.is-dark .message-body {\n  border-color: #363636;\n  color: #2a2a2a;\n}\n\n.message.is-primary {\n  background-color: #f5fffd;\n}\n\n.message.is-primary .message-header {\n  background-color: #00d1b2;\n  color: #fff;\n}\n\n.message.is-primary .message-body {\n  border-color: #00d1b2;\n  color: #021310;\n}\n\n.message.is-link {\n  background-color: #f6f9fe;\n}\n\n.message.is-link .message-header {\n  background-color: #3273dc;\n  color: #fff;\n}\n\n.message.is-link .message-body {\n  border-color: #3273dc;\n  color: #22509a;\n}\n\n.message.is-info {\n  background-color: #f6fbfe;\n}\n\n.message.is-info .message-header {\n  background-color: #209cee;\n  color: #fff;\n}\n\n.message.is-info .message-body {\n  border-color: #209cee;\n  color: #12537e;\n}\n\n.message.is-success {\n  background-color: #f6fef9;\n}\n\n.message.is-success .message-header {\n  background-color: #23d160;\n  color: #fff;\n}\n\n.message.is-success .message-body {\n  border-color: #23d160;\n  color: #0e301a;\n}\n\n.message.is-warning {\n  background-color: #fffdf5;\n}\n\n.message.is-warning .message-header {\n  background-color: #ffdd57;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.message.is-warning .message-body {\n  border-color: #ffdd57;\n  color: #3b3108;\n}\n\n.message.is-danger {\n  background-color: #fff5f7;\n}\n\n.message.is-danger .message-header {\n  background-color: #ff3860;\n  color: #fff;\n}\n\n.message.is-danger .message-body {\n  border-color: #ff3860;\n  color: #cd0930;\n}\n\n.message-header {\n  align-items: center;\n  background-color: #4a4a4a;\n  border-radius: 4px 4px 0 0;\n  color: #fff;\n  display: flex;\n  font-weight: 700;\n  justify-content: space-between;\n  line-height: 1.25;\n  padding: 0.75em 1em;\n  position: relative;\n}\n\n.message-header .delete {\n  flex-grow: 0;\n  flex-shrink: 0;\n  margin-left: 0.75em;\n}\n\n.message-header + .message-body {\n  border-width: 0;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n}\n\n.message-body {\n  border-color: #dbdbdb;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: 0 0 0 4px;\n  color: #4a4a4a;\n  padding: 1.25em 1.5em;\n}\n\n.message-body code,\n.message-body pre {\n  background-color: white;\n}\n\n.message-body pre code {\n  background-color: transparent;\n}\n\n.modal {\n  align-items: center;\n  display: none;\n  flex-direction: column;\n  justify-content: center;\n  overflow: hidden;\n  position: fixed;\n  z-index: 40;\n}\n\n.modal.is-active {\n  display: flex;\n}\n\n.modal-background {\n  background-color: rgba(10, 10, 10, 0.86);\n}\n\n.modal-content,\n.modal-card {\n  margin: 0 20px;\n  max-height: calc(100vh - 160px);\n  overflow: auto;\n  position: relative;\n  width: 100%;\n}\n\n@media screen and (min-width: 769px), print {\n  .modal-content,\n  .modal-card {\n    margin: 0 auto;\n    max-height: calc(100vh - 40px);\n    width: 640px;\n  }\n}\n\n.modal-close {\n  background: none;\n  height: 40px;\n  position: fixed;\n  right: 20px;\n  top: 20px;\n  width: 40px;\n}\n\n.modal-card {\n  display: flex;\n  flex-direction: column;\n  max-height: calc(100vh - 40px);\n  overflow: hidden;\n  -ms-overflow-y: visible;\n}\n\n.modal-card-head,\n.modal-card-foot {\n  align-items: center;\n  background-color: whitesmoke;\n  display: flex;\n  flex-shrink: 0;\n  justify-content: flex-start;\n  padding: 20px;\n  position: relative;\n}\n\n.modal-card-head {\n  border-bottom: 1px solid #dbdbdb;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n\n.modal-card-title {\n  color: #363636;\n  flex-grow: 1;\n  flex-shrink: 0;\n  font-size: 1.5rem;\n  line-height: 1;\n}\n\n.modal-card-foot {\n  border-bottom-left-radius: 6px;\n  border-bottom-right-radius: 6px;\n  border-top: 1px solid #dbdbdb;\n}\n\n.modal-card-foot .button:not(:last-child) {\n  margin-right: 10px;\n}\n\n.modal-card-body {\n  -webkit-overflow-scrolling: touch;\n  background-color: white;\n  flex-grow: 1;\n  flex-shrink: 1;\n  overflow: auto;\n  padding: 20px;\n}\n\n.navbar {\n  background-color: white;\n  min-height: 3.25rem;\n  position: relative;\n  z-index: 30;\n}\n\n.navbar.is-white {\n  background-color: white;\n  color: #0a0a0a;\n}\n\n.navbar.is-white .navbar-brand > .navbar-item,\n.navbar.is-white .navbar-brand .navbar-link {\n  color: #0a0a0a;\n}\n\n.navbar.is-white .navbar-brand > a.navbar-item:hover, .navbar.is-white .navbar-brand > a.navbar-item.is-active,\n.navbar.is-white .navbar-brand .navbar-link:hover,\n.navbar.is-white .navbar-brand .navbar-link.is-active {\n  background-color: #f2f2f2;\n  color: #0a0a0a;\n}\n\n.navbar.is-white .navbar-brand .navbar-link::after {\n  border-color: #0a0a0a;\n}\n\n.navbar.is-white .navbar-burger {\n  color: #0a0a0a;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-white .navbar-start > .navbar-item,\n  .navbar.is-white .navbar-start .navbar-link,\n  .navbar.is-white .navbar-end > .navbar-item,\n  .navbar.is-white .navbar-end .navbar-link {\n    color: #0a0a0a;\n  }\n  .navbar.is-white .navbar-start > a.navbar-item:hover, .navbar.is-white .navbar-start > a.navbar-item.is-active,\n  .navbar.is-white .navbar-start .navbar-link:hover,\n  .navbar.is-white .navbar-start .navbar-link.is-active,\n  .navbar.is-white .navbar-end > a.navbar-item:hover,\n  .navbar.is-white .navbar-end > a.navbar-item.is-active,\n  .navbar.is-white .navbar-end .navbar-link:hover,\n  .navbar.is-white .navbar-end .navbar-link.is-active {\n    background-color: #f2f2f2;\n    color: #0a0a0a;\n  }\n  .navbar.is-white .navbar-start .navbar-link::after,\n  .navbar.is-white .navbar-end .navbar-link::after {\n    border-color: #0a0a0a;\n  }\n  .navbar.is-white .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-white .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #f2f2f2;\n    color: #0a0a0a;\n  }\n  .navbar.is-white .navbar-dropdown a.navbar-item.is-active {\n    background-color: white;\n    color: #0a0a0a;\n  }\n}\n\n.navbar.is-black {\n  background-color: #0a0a0a;\n  color: white;\n}\n\n.navbar.is-black .navbar-brand > .navbar-item,\n.navbar.is-black .navbar-brand .navbar-link {\n  color: white;\n}\n\n.navbar.is-black .navbar-brand > a.navbar-item:hover, .navbar.is-black .navbar-brand > a.navbar-item.is-active,\n.navbar.is-black .navbar-brand .navbar-link:hover,\n.navbar.is-black .navbar-brand .navbar-link.is-active {\n  background-color: black;\n  color: white;\n}\n\n.navbar.is-black .navbar-brand .navbar-link::after {\n  border-color: white;\n}\n\n.navbar.is-black .navbar-burger {\n  color: white;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-black .navbar-start > .navbar-item,\n  .navbar.is-black .navbar-start .navbar-link,\n  .navbar.is-black .navbar-end > .navbar-item,\n  .navbar.is-black .navbar-end .navbar-link {\n    color: white;\n  }\n  .navbar.is-black .navbar-start > a.navbar-item:hover, .navbar.is-black .navbar-start > a.navbar-item.is-active,\n  .navbar.is-black .navbar-start .navbar-link:hover,\n  .navbar.is-black .navbar-start .navbar-link.is-active,\n  .navbar.is-black .navbar-end > a.navbar-item:hover,\n  .navbar.is-black .navbar-end > a.navbar-item.is-active,\n  .navbar.is-black .navbar-end .navbar-link:hover,\n  .navbar.is-black .navbar-end .navbar-link.is-active {\n    background-color: black;\n    color: white;\n  }\n  .navbar.is-black .navbar-start .navbar-link::after,\n  .navbar.is-black .navbar-end .navbar-link::after {\n    border-color: white;\n  }\n  .navbar.is-black .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-black .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: black;\n    color: white;\n  }\n  .navbar.is-black .navbar-dropdown a.navbar-item.is-active {\n    background-color: #0a0a0a;\n    color: white;\n  }\n}\n\n.navbar.is-light {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.navbar.is-light .navbar-brand > .navbar-item,\n.navbar.is-light .navbar-brand .navbar-link {\n  color: #363636;\n}\n\n.navbar.is-light .navbar-brand > a.navbar-item:hover, .navbar.is-light .navbar-brand > a.navbar-item.is-active,\n.navbar.is-light .navbar-brand .navbar-link:hover,\n.navbar.is-light .navbar-brand .navbar-link.is-active {\n  background-color: #e8e8e8;\n  color: #363636;\n}\n\n.navbar.is-light .navbar-brand .navbar-link::after {\n  border-color: #363636;\n}\n\n.navbar.is-light .navbar-burger {\n  color: #363636;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-light .navbar-start > .navbar-item,\n  .navbar.is-light .navbar-start .navbar-link,\n  .navbar.is-light .navbar-end > .navbar-item,\n  .navbar.is-light .navbar-end .navbar-link {\n    color: #363636;\n  }\n  .navbar.is-light .navbar-start > a.navbar-item:hover, .navbar.is-light .navbar-start > a.navbar-item.is-active,\n  .navbar.is-light .navbar-start .navbar-link:hover,\n  .navbar.is-light .navbar-start .navbar-link.is-active,\n  .navbar.is-light .navbar-end > a.navbar-item:hover,\n  .navbar.is-light .navbar-end > a.navbar-item.is-active,\n  .navbar.is-light .navbar-end .navbar-link:hover,\n  .navbar.is-light .navbar-end .navbar-link.is-active {\n    background-color: #e8e8e8;\n    color: #363636;\n  }\n  .navbar.is-light .navbar-start .navbar-link::after,\n  .navbar.is-light .navbar-end .navbar-link::after {\n    border-color: #363636;\n  }\n  .navbar.is-light .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-light .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #e8e8e8;\n    color: #363636;\n  }\n  .navbar.is-light .navbar-dropdown a.navbar-item.is-active {\n    background-color: whitesmoke;\n    color: #363636;\n  }\n}\n\n.navbar.is-dark {\n  background-color: #363636;\n  color: whitesmoke;\n}\n\n.navbar.is-dark .navbar-brand > .navbar-item,\n.navbar.is-dark .navbar-brand .navbar-link {\n  color: whitesmoke;\n}\n\n.navbar.is-dark .navbar-brand > a.navbar-item:hover, .navbar.is-dark .navbar-brand > a.navbar-item.is-active,\n.navbar.is-dark .navbar-brand .navbar-link:hover,\n.navbar.is-dark .navbar-brand .navbar-link.is-active {\n  background-color: #292929;\n  color: whitesmoke;\n}\n\n.navbar.is-dark .navbar-brand .navbar-link::after {\n  border-color: whitesmoke;\n}\n\n.navbar.is-dark .navbar-burger {\n  color: whitesmoke;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-dark .navbar-start > .navbar-item,\n  .navbar.is-dark .navbar-start .navbar-link,\n  .navbar.is-dark .navbar-end > .navbar-item,\n  .navbar.is-dark .navbar-end .navbar-link {\n    color: whitesmoke;\n  }\n  .navbar.is-dark .navbar-start > a.navbar-item:hover, .navbar.is-dark .navbar-start > a.navbar-item.is-active,\n  .navbar.is-dark .navbar-start .navbar-link:hover,\n  .navbar.is-dark .navbar-start .navbar-link.is-active,\n  .navbar.is-dark .navbar-end > a.navbar-item:hover,\n  .navbar.is-dark .navbar-end > a.navbar-item.is-active,\n  .navbar.is-dark .navbar-end .navbar-link:hover,\n  .navbar.is-dark .navbar-end .navbar-link.is-active {\n    background-color: #292929;\n    color: whitesmoke;\n  }\n  .navbar.is-dark .navbar-start .navbar-link::after,\n  .navbar.is-dark .navbar-end .navbar-link::after {\n    border-color: whitesmoke;\n  }\n  .navbar.is-dark .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-dark .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #292929;\n    color: whitesmoke;\n  }\n  .navbar.is-dark .navbar-dropdown a.navbar-item.is-active {\n    background-color: #363636;\n    color: whitesmoke;\n  }\n}\n\n.navbar.is-primary {\n  background-color: #00d1b2;\n  color: #fff;\n}\n\n.navbar.is-primary .navbar-brand > .navbar-item,\n.navbar.is-primary .navbar-brand .navbar-link {\n  color: #fff;\n}\n\n.navbar.is-primary .navbar-brand > a.navbar-item:hover, .navbar.is-primary .navbar-brand > a.navbar-item.is-active,\n.navbar.is-primary .navbar-brand .navbar-link:hover,\n.navbar.is-primary .navbar-brand .navbar-link.is-active {\n  background-color: #00b89c;\n  color: #fff;\n}\n\n.navbar.is-primary .navbar-brand .navbar-link::after {\n  border-color: #fff;\n}\n\n.navbar.is-primary .navbar-burger {\n  color: #fff;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-primary .navbar-start > .navbar-item,\n  .navbar.is-primary .navbar-start .navbar-link,\n  .navbar.is-primary .navbar-end > .navbar-item,\n  .navbar.is-primary .navbar-end .navbar-link {\n    color: #fff;\n  }\n  .navbar.is-primary .navbar-start > a.navbar-item:hover, .navbar.is-primary .navbar-start > a.navbar-item.is-active,\n  .navbar.is-primary .navbar-start .navbar-link:hover,\n  .navbar.is-primary .navbar-start .navbar-link.is-active,\n  .navbar.is-primary .navbar-end > a.navbar-item:hover,\n  .navbar.is-primary .navbar-end > a.navbar-item.is-active,\n  .navbar.is-primary .navbar-end .navbar-link:hover,\n  .navbar.is-primary .navbar-end .navbar-link.is-active {\n    background-color: #00b89c;\n    color: #fff;\n  }\n  .navbar.is-primary .navbar-start .navbar-link::after,\n  .navbar.is-primary .navbar-end .navbar-link::after {\n    border-color: #fff;\n  }\n  .navbar.is-primary .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-primary .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #00b89c;\n    color: #fff;\n  }\n  .navbar.is-primary .navbar-dropdown a.navbar-item.is-active {\n    background-color: #00d1b2;\n    color: #fff;\n  }\n}\n\n.navbar.is-link {\n  background-color: #3273dc;\n  color: #fff;\n}\n\n.navbar.is-link .navbar-brand > .navbar-item,\n.navbar.is-link .navbar-brand .navbar-link {\n  color: #fff;\n}\n\n.navbar.is-link .navbar-brand > a.navbar-item:hover, .navbar.is-link .navbar-brand > a.navbar-item.is-active,\n.navbar.is-link .navbar-brand .navbar-link:hover,\n.navbar.is-link .navbar-brand .navbar-link.is-active {\n  background-color: #2366d1;\n  color: #fff;\n}\n\n.navbar.is-link .navbar-brand .navbar-link::after {\n  border-color: #fff;\n}\n\n.navbar.is-link .navbar-burger {\n  color: #fff;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-link .navbar-start > .navbar-item,\n  .navbar.is-link .navbar-start .navbar-link,\n  .navbar.is-link .navbar-end > .navbar-item,\n  .navbar.is-link .navbar-end .navbar-link {\n    color: #fff;\n  }\n  .navbar.is-link .navbar-start > a.navbar-item:hover, .navbar.is-link .navbar-start > a.navbar-item.is-active,\n  .navbar.is-link .navbar-start .navbar-link:hover,\n  .navbar.is-link .navbar-start .navbar-link.is-active,\n  .navbar.is-link .navbar-end > a.navbar-item:hover,\n  .navbar.is-link .navbar-end > a.navbar-item.is-active,\n  .navbar.is-link .navbar-end .navbar-link:hover,\n  .navbar.is-link .navbar-end .navbar-link.is-active {\n    background-color: #2366d1;\n    color: #fff;\n  }\n  .navbar.is-link .navbar-start .navbar-link::after,\n  .navbar.is-link .navbar-end .navbar-link::after {\n    border-color: #fff;\n  }\n  .navbar.is-link .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-link .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #2366d1;\n    color: #fff;\n  }\n  .navbar.is-link .navbar-dropdown a.navbar-item.is-active {\n    background-color: #3273dc;\n    color: #fff;\n  }\n}\n\n.navbar.is-info {\n  background-color: #209cee;\n  color: #fff;\n}\n\n.navbar.is-info .navbar-brand > .navbar-item,\n.navbar.is-info .navbar-brand .navbar-link {\n  color: #fff;\n}\n\n.navbar.is-info .navbar-brand > a.navbar-item:hover, .navbar.is-info .navbar-brand > a.navbar-item.is-active,\n.navbar.is-info .navbar-brand .navbar-link:hover,\n.navbar.is-info .navbar-brand .navbar-link.is-active {\n  background-color: #118fe4;\n  color: #fff;\n}\n\n.navbar.is-info .navbar-brand .navbar-link::after {\n  border-color: #fff;\n}\n\n.navbar.is-info .navbar-burger {\n  color: #fff;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-info .navbar-start > .navbar-item,\n  .navbar.is-info .navbar-start .navbar-link,\n  .navbar.is-info .navbar-end > .navbar-item,\n  .navbar.is-info .navbar-end .navbar-link {\n    color: #fff;\n  }\n  .navbar.is-info .navbar-start > a.navbar-item:hover, .navbar.is-info .navbar-start > a.navbar-item.is-active,\n  .navbar.is-info .navbar-start .navbar-link:hover,\n  .navbar.is-info .navbar-start .navbar-link.is-active,\n  .navbar.is-info .navbar-end > a.navbar-item:hover,\n  .navbar.is-info .navbar-end > a.navbar-item.is-active,\n  .navbar.is-info .navbar-end .navbar-link:hover,\n  .navbar.is-info .navbar-end .navbar-link.is-active {\n    background-color: #118fe4;\n    color: #fff;\n  }\n  .navbar.is-info .navbar-start .navbar-link::after,\n  .navbar.is-info .navbar-end .navbar-link::after {\n    border-color: #fff;\n  }\n  .navbar.is-info .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-info .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #118fe4;\n    color: #fff;\n  }\n  .navbar.is-info .navbar-dropdown a.navbar-item.is-active {\n    background-color: #209cee;\n    color: #fff;\n  }\n}\n\n.navbar.is-success {\n  background-color: #23d160;\n  color: #fff;\n}\n\n.navbar.is-success .navbar-brand > .navbar-item,\n.navbar.is-success .navbar-brand .navbar-link {\n  color: #fff;\n}\n\n.navbar.is-success .navbar-brand > a.navbar-item:hover, .navbar.is-success .navbar-brand > a.navbar-item.is-active,\n.navbar.is-success .navbar-brand .navbar-link:hover,\n.navbar.is-success .navbar-brand .navbar-link.is-active {\n  background-color: #20bc56;\n  color: #fff;\n}\n\n.navbar.is-success .navbar-brand .navbar-link::after {\n  border-color: #fff;\n}\n\n.navbar.is-success .navbar-burger {\n  color: #fff;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-success .navbar-start > .navbar-item,\n  .navbar.is-success .navbar-start .navbar-link,\n  .navbar.is-success .navbar-end > .navbar-item,\n  .navbar.is-success .navbar-end .navbar-link {\n    color: #fff;\n  }\n  .navbar.is-success .navbar-start > a.navbar-item:hover, .navbar.is-success .navbar-start > a.navbar-item.is-active,\n  .navbar.is-success .navbar-start .navbar-link:hover,\n  .navbar.is-success .navbar-start .navbar-link.is-active,\n  .navbar.is-success .navbar-end > a.navbar-item:hover,\n  .navbar.is-success .navbar-end > a.navbar-item.is-active,\n  .navbar.is-success .navbar-end .navbar-link:hover,\n  .navbar.is-success .navbar-end .navbar-link.is-active {\n    background-color: #20bc56;\n    color: #fff;\n  }\n  .navbar.is-success .navbar-start .navbar-link::after,\n  .navbar.is-success .navbar-end .navbar-link::after {\n    border-color: #fff;\n  }\n  .navbar.is-success .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-success .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #20bc56;\n    color: #fff;\n  }\n  .navbar.is-success .navbar-dropdown a.navbar-item.is-active {\n    background-color: #23d160;\n    color: #fff;\n  }\n}\n\n.navbar.is-warning {\n  background-color: #ffdd57;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.navbar.is-warning .navbar-brand > .navbar-item,\n.navbar.is-warning .navbar-brand .navbar-link {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.navbar.is-warning .navbar-brand > a.navbar-item:hover, .navbar.is-warning .navbar-brand > a.navbar-item.is-active,\n.navbar.is-warning .navbar-brand .navbar-link:hover,\n.navbar.is-warning .navbar-brand .navbar-link.is-active {\n  background-color: #ffd83d;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.navbar.is-warning .navbar-brand .navbar-link::after {\n  border-color: rgba(0, 0, 0, 0.7);\n}\n\n.navbar.is-warning .navbar-burger {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-warning .navbar-start > .navbar-item,\n  .navbar.is-warning .navbar-start .navbar-link,\n  .navbar.is-warning .navbar-end > .navbar-item,\n  .navbar.is-warning .navbar-end .navbar-link {\n    color: rgba(0, 0, 0, 0.7);\n  }\n  .navbar.is-warning .navbar-start > a.navbar-item:hover, .navbar.is-warning .navbar-start > a.navbar-item.is-active,\n  .navbar.is-warning .navbar-start .navbar-link:hover,\n  .navbar.is-warning .navbar-start .navbar-link.is-active,\n  .navbar.is-warning .navbar-end > a.navbar-item:hover,\n  .navbar.is-warning .navbar-end > a.navbar-item.is-active,\n  .navbar.is-warning .navbar-end .navbar-link:hover,\n  .navbar.is-warning .navbar-end .navbar-link.is-active {\n    background-color: #ffd83d;\n    color: rgba(0, 0, 0, 0.7);\n  }\n  .navbar.is-warning .navbar-start .navbar-link::after,\n  .navbar.is-warning .navbar-end .navbar-link::after {\n    border-color: rgba(0, 0, 0, 0.7);\n  }\n  .navbar.is-warning .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-warning .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #ffd83d;\n    color: rgba(0, 0, 0, 0.7);\n  }\n  .navbar.is-warning .navbar-dropdown a.navbar-item.is-active {\n    background-color: #ffdd57;\n    color: rgba(0, 0, 0, 0.7);\n  }\n}\n\n.navbar.is-danger {\n  background-color: #ff3860;\n  color: #fff;\n}\n\n.navbar.is-danger .navbar-brand > .navbar-item,\n.navbar.is-danger .navbar-brand .navbar-link {\n  color: #fff;\n}\n\n.navbar.is-danger .navbar-brand > a.navbar-item:hover, .navbar.is-danger .navbar-brand > a.navbar-item.is-active,\n.navbar.is-danger .navbar-brand .navbar-link:hover,\n.navbar.is-danger .navbar-brand .navbar-link.is-active {\n  background-color: #ff1f4b;\n  color: #fff;\n}\n\n.navbar.is-danger .navbar-brand .navbar-link::after {\n  border-color: #fff;\n}\n\n.navbar.is-danger .navbar-burger {\n  color: #fff;\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar.is-danger .navbar-start > .navbar-item,\n  .navbar.is-danger .navbar-start .navbar-link,\n  .navbar.is-danger .navbar-end > .navbar-item,\n  .navbar.is-danger .navbar-end .navbar-link {\n    color: #fff;\n  }\n  .navbar.is-danger .navbar-start > a.navbar-item:hover, .navbar.is-danger .navbar-start > a.navbar-item.is-active,\n  .navbar.is-danger .navbar-start .navbar-link:hover,\n  .navbar.is-danger .navbar-start .navbar-link.is-active,\n  .navbar.is-danger .navbar-end > a.navbar-item:hover,\n  .navbar.is-danger .navbar-end > a.navbar-item.is-active,\n  .navbar.is-danger .navbar-end .navbar-link:hover,\n  .navbar.is-danger .navbar-end .navbar-link.is-active {\n    background-color: #ff1f4b;\n    color: #fff;\n  }\n  .navbar.is-danger .navbar-start .navbar-link::after,\n  .navbar.is-danger .navbar-end .navbar-link::after {\n    border-color: #fff;\n  }\n  .navbar.is-danger .navbar-item.has-dropdown:hover .navbar-link,\n  .navbar.is-danger .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #ff1f4b;\n    color: #fff;\n  }\n  .navbar.is-danger .navbar-dropdown a.navbar-item.is-active {\n    background-color: #ff3860;\n    color: #fff;\n  }\n}\n\n.navbar > .container {\n  align-items: stretch;\n  display: flex;\n  min-height: 3.25rem;\n  width: 100%;\n}\n\n.navbar.has-shadow {\n  box-shadow: 0 2px 0 0 whitesmoke;\n}\n\n.navbar.is-fixed-bottom, .navbar.is-fixed-top {\n  left: 0;\n  position: fixed;\n  right: 0;\n  z-index: 30;\n}\n\n.navbar.is-fixed-bottom {\n  bottom: 0;\n}\n\n.navbar.is-fixed-bottom.has-shadow {\n  box-shadow: 0 -2px 0 0 whitesmoke;\n}\n\n.navbar.is-fixed-top {\n  top: 0;\n}\n\nhtml.has-navbar-fixed-top,\nbody.has-navbar-fixed-top {\n  padding-top: 3.25rem;\n}\n\nhtml.has-navbar-fixed-bottom,\nbody.has-navbar-fixed-bottom {\n  padding-bottom: 3.25rem;\n}\n\n.navbar-brand,\n.navbar-tabs {\n  align-items: stretch;\n  display: flex;\n  flex-shrink: 0;\n  min-height: 3.25rem;\n}\n\n.navbar-brand a.navbar-item:hover {\n  background-color: transparent;\n}\n\n.navbar-tabs {\n  -webkit-overflow-scrolling: touch;\n  max-width: 100vw;\n  overflow-x: auto;\n  overflow-y: hidden;\n}\n\n.navbar-burger {\n  color: #4a4a4a;\n  cursor: pointer;\n  display: block;\n  height: 3.25rem;\n  position: relative;\n  width: 3.25rem;\n  margin-left: auto;\n}\n\n.navbar-burger span {\n  background-color: currentColor;\n  display: block;\n  height: 1px;\n  left: calc(50% - 8px);\n  position: absolute;\n  -webkit-transform-origin: center;\n          transform-origin: center;\n  transition-duration: 86ms;\n  transition-property: background-color, opacity, -webkit-transform;\n  transition-property: background-color, opacity, transform;\n  transition-property: background-color, opacity, transform, -webkit-transform;\n  transition-timing-function: ease-out;\n  width: 16px;\n}\n\n.navbar-burger span:nth-child(1) {\n  top: calc(50% - 6px);\n}\n\n.navbar-burger span:nth-child(2) {\n  top: calc(50% - 1px);\n}\n\n.navbar-burger span:nth-child(3) {\n  top: calc(50% + 4px);\n}\n\n.navbar-burger:hover {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.navbar-burger.is-active span:nth-child(1) {\n  -webkit-transform: translateY(5px) rotate(45deg);\n          transform: translateY(5px) rotate(45deg);\n}\n\n.navbar-burger.is-active span:nth-child(2) {\n  opacity: 0;\n}\n\n.navbar-burger.is-active span:nth-child(3) {\n  -webkit-transform: translateY(-5px) rotate(-45deg);\n          transform: translateY(-5px) rotate(-45deg);\n}\n\n.navbar-menu {\n  display: none;\n}\n\n.navbar-item,\n.navbar-link {\n  color: #4a4a4a;\n  display: block;\n  line-height: 1.5;\n  padding: 0.5rem 0.75rem;\n  position: relative;\n}\n\n.navbar-item .icon:only-child,\n.navbar-link .icon:only-child {\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\na.navbar-item,\n.navbar-link {\n  cursor: pointer;\n}\n\na.navbar-item:hover, a.navbar-item.is-active,\n.navbar-link:hover,\n.navbar-link.is-active {\n  background-color: #fafafa;\n  color: #3273dc;\n}\n\n.navbar-item {\n  display: block;\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.navbar-item img {\n  max-height: 1.75rem;\n}\n\n.navbar-item.has-dropdown {\n  padding: 0;\n}\n\n.navbar-item.is-expanded {\n  flex-grow: 1;\n  flex-shrink: 1;\n}\n\n.navbar-item.is-tab {\n  border-bottom: 1px solid transparent;\n  min-height: 3.25rem;\n  padding-bottom: calc(0.5rem - 1px);\n}\n\n.navbar-item.is-tab:hover {\n  background-color: transparent;\n  border-bottom-color: #3273dc;\n}\n\n.navbar-item.is-tab.is-active {\n  background-color: transparent;\n  border-bottom-color: #3273dc;\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  color: #3273dc;\n  padding-bottom: calc(0.5rem - 3px);\n}\n\n.navbar-content {\n  flex-grow: 1;\n  flex-shrink: 1;\n}\n\n.navbar-link:not(.is-arrowless) {\n  padding-right: 2.5em;\n}\n\n.navbar-link:not(.is-arrowless)::after {\n  border-color: #3273dc;\n  margin-top: -0.375em;\n  right: 1.125em;\n}\n\n.navbar-dropdown {\n  font-size: 0.875rem;\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n}\n\n.navbar-dropdown .navbar-item {\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n}\n\n.navbar-divider {\n  background-color: whitesmoke;\n  border: none;\n  display: none;\n  height: 2px;\n  margin: 0.5rem 0;\n}\n\n@media screen and (max-width: 1087px) {\n  .navbar > .container {\n    display: block;\n  }\n  .navbar-brand .navbar-item,\n  .navbar-tabs .navbar-item {\n    align-items: center;\n    display: flex;\n  }\n  .navbar-link::after {\n    display: none;\n  }\n  .navbar-menu {\n    background-color: white;\n    box-shadow: 0 8px 16px rgba(10, 10, 10, 0.1);\n    padding: 0.5rem 0;\n  }\n  .navbar-menu.is-active {\n    display: block;\n  }\n  .navbar.is-fixed-bottom-touch, .navbar.is-fixed-top-touch {\n    left: 0;\n    position: fixed;\n    right: 0;\n    z-index: 30;\n  }\n  .navbar.is-fixed-bottom-touch {\n    bottom: 0;\n  }\n  .navbar.is-fixed-bottom-touch.has-shadow {\n    box-shadow: 0 -2px 3px rgba(10, 10, 10, 0.1);\n  }\n  .navbar.is-fixed-top-touch {\n    top: 0;\n  }\n  .navbar.is-fixed-top .navbar-menu, .navbar.is-fixed-top-touch .navbar-menu {\n    -webkit-overflow-scrolling: touch;\n    max-height: calc(100vh - 3.25rem);\n    overflow: auto;\n  }\n  html.has-navbar-fixed-top-touch,\n  body.has-navbar-fixed-top-touch {\n    padding-top: 3.25rem;\n  }\n  html.has-navbar-fixed-bottom-touch,\n  body.has-navbar-fixed-bottom-touch {\n    padding-bottom: 3.25rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .navbar,\n  .navbar-menu,\n  .navbar-start,\n  .navbar-end {\n    align-items: stretch;\n    display: flex;\n  }\n  .navbar {\n    min-height: 3.25rem;\n  }\n  .navbar.is-spaced {\n    padding: 1rem 2rem;\n  }\n  .navbar.is-spaced .navbar-start,\n  .navbar.is-spaced .navbar-end {\n    align-items: center;\n  }\n  .navbar.is-spaced a.navbar-item,\n  .navbar.is-spaced .navbar-link {\n    border-radius: 4px;\n  }\n  .navbar.is-transparent a.navbar-item:hover, .navbar.is-transparent a.navbar-item.is-active,\n  .navbar.is-transparent .navbar-link:hover,\n  .navbar.is-transparent .navbar-link.is-active {\n    background-color: transparent !important;\n  }\n  .navbar.is-transparent .navbar-item.has-dropdown.is-active .navbar-link, .navbar.is-transparent .navbar-item.has-dropdown.is-hoverable:hover .navbar-link {\n    background-color: transparent !important;\n  }\n  .navbar.is-transparent .navbar-dropdown a.navbar-item:hover {\n    background-color: whitesmoke;\n    color: #0a0a0a;\n  }\n  .navbar.is-transparent .navbar-dropdown a.navbar-item.is-active {\n    background-color: whitesmoke;\n    color: #3273dc;\n  }\n  .navbar-burger {\n    display: none;\n  }\n  .navbar-item,\n  .navbar-link {\n    align-items: center;\n    display: flex;\n  }\n  .navbar-item {\n    display: flex;\n  }\n  .navbar-item.has-dropdown {\n    align-items: stretch;\n  }\n  .navbar-item.has-dropdown-up .navbar-link::after {\n    -webkit-transform: rotate(135deg) translate(0.25em, -0.25em);\n            transform: rotate(135deg) translate(0.25em, -0.25em);\n  }\n  .navbar-item.has-dropdown-up .navbar-dropdown {\n    border-bottom: 2px solid #dbdbdb;\n    border-radius: 6px 6px 0 0;\n    border-top: none;\n    bottom: 100%;\n    box-shadow: 0 -8px 8px rgba(10, 10, 10, 0.1);\n    top: auto;\n  }\n  .navbar-item.is-active .navbar-dropdown, .navbar-item.is-hoverable:hover .navbar-dropdown {\n    display: block;\n  }\n  .navbar.is-spaced .navbar-item.is-active .navbar-dropdown, .navbar-item.is-active .navbar-dropdown.is-boxed, .navbar.is-spaced .navbar-item.is-hoverable:hover .navbar-dropdown, .navbar-item.is-hoverable:hover .navbar-dropdown.is-boxed {\n    opacity: 1;\n    pointer-events: auto;\n    -webkit-transform: translateY(0);\n            transform: translateY(0);\n  }\n  .navbar-menu {\n    flex-grow: 1;\n    flex-shrink: 0;\n  }\n  .navbar-start {\n    justify-content: flex-start;\n    margin-right: auto;\n  }\n  .navbar-end {\n    justify-content: flex-end;\n    margin-left: auto;\n  }\n  .navbar-dropdown {\n    background-color: white;\n    border-bottom-left-radius: 6px;\n    border-bottom-right-radius: 6px;\n    border-top: 2px solid #dbdbdb;\n    box-shadow: 0 8px 8px rgba(10, 10, 10, 0.1);\n    display: none;\n    font-size: 0.875rem;\n    left: 0;\n    min-width: 100%;\n    position: absolute;\n    top: 100%;\n    z-index: 20;\n  }\n  .navbar-dropdown .navbar-item {\n    padding: 0.375rem 1rem;\n    white-space: nowrap;\n  }\n  .navbar-dropdown a.navbar-item {\n    padding-right: 3rem;\n  }\n  .navbar-dropdown a.navbar-item:hover {\n    background-color: whitesmoke;\n    color: #0a0a0a;\n  }\n  .navbar-dropdown a.navbar-item.is-active {\n    background-color: whitesmoke;\n    color: #3273dc;\n  }\n  .navbar.is-spaced .navbar-dropdown, .navbar-dropdown.is-boxed {\n    border-radius: 6px;\n    border-top: none;\n    box-shadow: 0 8px 8px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\n    display: block;\n    opacity: 0;\n    pointer-events: none;\n    top: calc(100% + (-4px));\n    -webkit-transform: translateY(-5px);\n            transform: translateY(-5px);\n    transition-duration: 86ms;\n    transition-property: opacity, -webkit-transform;\n    transition-property: opacity, transform;\n    transition-property: opacity, transform, -webkit-transform;\n  }\n  .navbar-dropdown.is-right {\n    left: auto;\n    right: 0;\n  }\n  .navbar-divider {\n    display: block;\n  }\n  .navbar > .container .navbar-brand,\n  .container > .navbar .navbar-brand {\n    margin-left: -.75rem;\n  }\n  .navbar > .container .navbar-menu,\n  .container > .navbar .navbar-menu {\n    margin-right: -.75rem;\n  }\n  .navbar.is-fixed-bottom-desktop, .navbar.is-fixed-top-desktop {\n    left: 0;\n    position: fixed;\n    right: 0;\n    z-index: 30;\n  }\n  .navbar.is-fixed-bottom-desktop {\n    bottom: 0;\n  }\n  .navbar.is-fixed-bottom-desktop.has-shadow {\n    box-shadow: 0 -2px 3px rgba(10, 10, 10, 0.1);\n  }\n  .navbar.is-fixed-top-desktop {\n    top: 0;\n  }\n  html.has-navbar-fixed-top-desktop,\n  body.has-navbar-fixed-top-desktop {\n    padding-top: 3.25rem;\n  }\n  html.has-navbar-fixed-bottom-desktop,\n  body.has-navbar-fixed-bottom-desktop {\n    padding-bottom: 3.25rem;\n  }\n  html.has-spaced-navbar-fixed-top,\n  body.has-spaced-navbar-fixed-top {\n    padding-top: 5.25rem;\n  }\n  html.has-spaced-navbar-fixed-bottom,\n  body.has-spaced-navbar-fixed-bottom {\n    padding-bottom: 5.25rem;\n  }\n  a.navbar-item.is-active,\n  .navbar-link.is-active {\n    color: #0a0a0a;\n  }\n  a.navbar-item.is-active:not(:hover),\n  .navbar-link.is-active:not(:hover) {\n    background-color: transparent;\n  }\n  .navbar-item.has-dropdown:hover .navbar-link, .navbar-item.has-dropdown.is-active .navbar-link {\n    background-color: #fafafa;\n  }\n}\n\n.pagination {\n  font-size: 1rem;\n  margin: -0.25rem;\n}\n\n.pagination.is-small {\n  font-size: 0.75rem;\n}\n\n.pagination.is-medium {\n  font-size: 1.25rem;\n}\n\n.pagination.is-large {\n  font-size: 1.5rem;\n}\n\n.pagination.is-rounded .pagination-previous,\n.pagination.is-rounded .pagination-next {\n  padding-left: 1em;\n  padding-right: 1em;\n  border-radius: 290486px;\n}\n\n.pagination.is-rounded .pagination-link {\n  border-radius: 290486px;\n}\n\n.pagination,\n.pagination-list {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n}\n\n.pagination-previous,\n.pagination-next,\n.pagination-link,\n.pagination-ellipsis {\n  font-size: 1em;\n  padding-left: 0.5em;\n  padding-right: 0.5em;\n  justify-content: center;\n  margin: 0.25rem;\n  text-align: center;\n}\n\n.pagination-previous,\n.pagination-next,\n.pagination-link {\n  border-color: #dbdbdb;\n  color: #363636;\n  min-width: 2.25em;\n}\n\n.pagination-previous:hover,\n.pagination-next:hover,\n.pagination-link:hover {\n  border-color: #b5b5b5;\n  color: #363636;\n}\n\n.pagination-previous:focus,\n.pagination-next:focus,\n.pagination-link:focus {\n  border-color: #3273dc;\n}\n\n.pagination-previous:active,\n.pagination-next:active,\n.pagination-link:active {\n  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.2);\n}\n\n.pagination-previous[disabled],\n.pagination-next[disabled],\n.pagination-link[disabled] {\n  background-color: #dbdbdb;\n  border-color: #dbdbdb;\n  box-shadow: none;\n  color: #7a7a7a;\n  opacity: 0.5;\n}\n\n.pagination-previous,\n.pagination-next {\n  padding-left: 0.75em;\n  padding-right: 0.75em;\n  white-space: nowrap;\n}\n\n.pagination-link.is-current {\n  background-color: #3273dc;\n  border-color: #3273dc;\n  color: #fff;\n}\n\n.pagination-ellipsis {\n  color: #b5b5b5;\n  pointer-events: none;\n}\n\n.pagination-list {\n  flex-wrap: wrap;\n}\n\n@media screen and (max-width: 768px) {\n  .pagination {\n    flex-wrap: wrap;\n  }\n  .pagination-previous,\n  .pagination-next {\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n  .pagination-list li {\n    flex-grow: 1;\n    flex-shrink: 1;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .pagination-list {\n    flex-grow: 1;\n    flex-shrink: 1;\n    justify-content: flex-start;\n    order: 1;\n  }\n  .pagination-previous {\n    order: 2;\n  }\n  .pagination-next {\n    order: 3;\n  }\n  .pagination {\n    justify-content: space-between;\n  }\n  .pagination.is-centered .pagination-previous {\n    order: 1;\n  }\n  .pagination.is-centered .pagination-list {\n    justify-content: center;\n    order: 2;\n  }\n  .pagination.is-centered .pagination-next {\n    order: 3;\n  }\n  .pagination.is-right .pagination-previous {\n    order: 1;\n  }\n  .pagination.is-right .pagination-next {\n    order: 2;\n  }\n  .pagination.is-right .pagination-list {\n    justify-content: flex-end;\n    order: 3;\n  }\n}\n\n.panel {\n  font-size: 1rem;\n}\n\n.panel:not(:last-child) {\n  margin-bottom: 1.5rem;\n}\n\n.panel-heading,\n.panel-tabs,\n.panel-block {\n  border-bottom: 1px solid #dbdbdb;\n  border-left: 1px solid #dbdbdb;\n  border-right: 1px solid #dbdbdb;\n}\n\n.panel-heading:first-child,\n.panel-tabs:first-child,\n.panel-block:first-child {\n  border-top: 1px solid #dbdbdb;\n}\n\n.panel-heading {\n  background-color: whitesmoke;\n  border-radius: 4px 4px 0 0;\n  color: #363636;\n  font-size: 1.25em;\n  font-weight: 300;\n  line-height: 1.25;\n  padding: 0.5em 0.75em;\n}\n\n.panel-tabs {\n  align-items: flex-end;\n  display: flex;\n  font-size: 0.875em;\n  justify-content: center;\n}\n\n.panel-tabs a {\n  border-bottom: 1px solid #dbdbdb;\n  margin-bottom: -1px;\n  padding: 0.5em;\n}\n\n.panel-tabs a.is-active {\n  border-bottom-color: #4a4a4a;\n  color: #363636;\n}\n\n.panel-list a {\n  color: #4a4a4a;\n}\n\n.panel-list a:hover {\n  color: #3273dc;\n}\n\n.panel-block {\n  align-items: center;\n  color: #363636;\n  display: flex;\n  justify-content: flex-start;\n  padding: 0.5em 0.75em;\n}\n\n.panel-block input[type=\"checkbox\"] {\n  margin-right: 0.75em;\n}\n\n.panel-block > .control {\n  flex-grow: 1;\n  flex-shrink: 1;\n  width: 100%;\n}\n\n.panel-block.is-wrapped {\n  flex-wrap: wrap;\n}\n\n.panel-block.is-active {\n  border-left-color: #3273dc;\n  color: #363636;\n}\n\n.panel-block.is-active .panel-icon {\n  color: #3273dc;\n}\n\na.panel-block,\nlabel.panel-block {\n  cursor: pointer;\n}\n\na.panel-block:hover,\nlabel.panel-block:hover {\n  background-color: whitesmoke;\n}\n\n.panel-icon {\n  display: inline-block;\n  font-size: 14px;\n  height: 1em;\n  line-height: 1em;\n  text-align: center;\n  vertical-align: top;\n  width: 1em;\n  color: #7a7a7a;\n  margin-right: 0.75em;\n}\n\n.panel-icon .fa {\n  font-size: inherit;\n  line-height: inherit;\n}\n\n.tabs {\n  -webkit-overflow-scrolling: touch;\n  align-items: stretch;\n  display: flex;\n  font-size: 1rem;\n  justify-content: space-between;\n  overflow: hidden;\n  overflow-x: auto;\n  white-space: nowrap;\n}\n\n.tabs a {\n  align-items: center;\n  border-bottom-color: #dbdbdb;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  color: #4a4a4a;\n  display: flex;\n  justify-content: center;\n  margin-bottom: -1px;\n  padding: 0.5em 1em;\n  vertical-align: top;\n}\n\n.tabs a:hover {\n  border-bottom-color: #363636;\n  color: #363636;\n}\n\n.tabs li {\n  display: block;\n}\n\n.tabs li.is-active a {\n  border-bottom-color: #3273dc;\n  color: #3273dc;\n}\n\n.tabs ul {\n  align-items: center;\n  border-bottom-color: #dbdbdb;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  display: flex;\n  flex-grow: 1;\n  flex-shrink: 0;\n  justify-content: flex-start;\n}\n\n.tabs ul.is-left {\n  padding-right: 0.75em;\n}\n\n.tabs ul.is-center {\n  flex: none;\n  justify-content: center;\n  padding-left: 0.75em;\n  padding-right: 0.75em;\n}\n\n.tabs ul.is-right {\n  justify-content: flex-end;\n  padding-left: 0.75em;\n}\n\n.tabs .icon:first-child {\n  margin-right: 0.5em;\n}\n\n.tabs .icon:last-child {\n  margin-left: 0.5em;\n}\n\n.tabs.is-centered ul {\n  justify-content: center;\n}\n\n.tabs.is-right ul {\n  justify-content: flex-end;\n}\n\n.tabs.is-boxed a {\n  border: 1px solid transparent;\n  border-radius: 4px 4px 0 0;\n}\n\n.tabs.is-boxed a:hover {\n  background-color: whitesmoke;\n  border-bottom-color: #dbdbdb;\n}\n\n.tabs.is-boxed li.is-active a {\n  background-color: white;\n  border-color: #dbdbdb;\n  border-bottom-color: transparent !important;\n}\n\n.tabs.is-fullwidth li {\n  flex-grow: 1;\n  flex-shrink: 0;\n}\n\n.tabs.is-toggle a {\n  border-color: #dbdbdb;\n  border-style: solid;\n  border-width: 1px;\n  margin-bottom: 0;\n  position: relative;\n}\n\n.tabs.is-toggle a:hover {\n  background-color: whitesmoke;\n  border-color: #b5b5b5;\n  z-index: 2;\n}\n\n.tabs.is-toggle li + li {\n  margin-left: -1px;\n}\n\n.tabs.is-toggle li:first-child a {\n  border-radius: 4px 0 0 4px;\n}\n\n.tabs.is-toggle li:last-child a {\n  border-radius: 0 4px 4px 0;\n}\n\n.tabs.is-toggle li.is-active a {\n  background-color: #3273dc;\n  border-color: #3273dc;\n  color: #fff;\n  z-index: 1;\n}\n\n.tabs.is-toggle ul {\n  border-bottom: none;\n}\n\n.tabs.is-toggle.is-toggle-rounded li:first-child a {\n  border-bottom-left-radius: 290486px;\n  border-top-left-radius: 290486px;\n  padding-left: 1.25em;\n}\n\n.tabs.is-toggle.is-toggle-rounded li:last-child a {\n  border-bottom-right-radius: 290486px;\n  border-top-right-radius: 290486px;\n  padding-right: 1.25em;\n}\n\n.tabs.is-small {\n  font-size: 0.75rem;\n}\n\n.tabs.is-medium {\n  font-size: 1.25rem;\n}\n\n.tabs.is-large {\n  font-size: 1.5rem;\n}\n\n.column {\n  display: block;\n  flex-basis: 0;\n  flex-grow: 1;\n  flex-shrink: 1;\n  padding: 0.75rem;\n}\n\n.columns.is-mobile > .column.is-narrow {\n  flex: none;\n}\n\n.columns.is-mobile > .column.is-full {\n  flex: none;\n  width: 100%;\n}\n\n.columns.is-mobile > .column.is-three-quarters {\n  flex: none;\n  width: 75%;\n}\n\n.columns.is-mobile > .column.is-two-thirds {\n  flex: none;\n  width: 66.6666%;\n}\n\n.columns.is-mobile > .column.is-half {\n  flex: none;\n  width: 50%;\n}\n\n.columns.is-mobile > .column.is-one-third {\n  flex: none;\n  width: 33.3333%;\n}\n\n.columns.is-mobile > .column.is-one-quarter {\n  flex: none;\n  width: 25%;\n}\n\n.columns.is-mobile > .column.is-one-fifth {\n  flex: none;\n  width: 20%;\n}\n\n.columns.is-mobile > .column.is-two-fifths {\n  flex: none;\n  width: 40%;\n}\n\n.columns.is-mobile > .column.is-three-fifths {\n  flex: none;\n  width: 60%;\n}\n\n.columns.is-mobile > .column.is-four-fifths {\n  flex: none;\n  width: 80%;\n}\n\n.columns.is-mobile > .column.is-offset-three-quarters {\n  margin-left: 75%;\n}\n\n.columns.is-mobile > .column.is-offset-two-thirds {\n  margin-left: 66.6666%;\n}\n\n.columns.is-mobile > .column.is-offset-half {\n  margin-left: 50%;\n}\n\n.columns.is-mobile > .column.is-offset-one-third {\n  margin-left: 33.3333%;\n}\n\n.columns.is-mobile > .column.is-offset-one-quarter {\n  margin-left: 25%;\n}\n\n.columns.is-mobile > .column.is-offset-one-fifth {\n  margin-left: 20%;\n}\n\n.columns.is-mobile > .column.is-offset-two-fifths {\n  margin-left: 40%;\n}\n\n.columns.is-mobile > .column.is-offset-three-fifths {\n  margin-left: 60%;\n}\n\n.columns.is-mobile > .column.is-offset-four-fifths {\n  margin-left: 80%;\n}\n\n.columns.is-mobile > .column.is-1 {\n  flex: none;\n  width: 8.33333%;\n}\n\n.columns.is-mobile > .column.is-offset-1 {\n  margin-left: 8.33333%;\n}\n\n.columns.is-mobile > .column.is-2 {\n  flex: none;\n  width: 16.66667%;\n}\n\n.columns.is-mobile > .column.is-offset-2 {\n  margin-left: 16.66667%;\n}\n\n.columns.is-mobile > .column.is-3 {\n  flex: none;\n  width: 25%;\n}\n\n.columns.is-mobile > .column.is-offset-3 {\n  margin-left: 25%;\n}\n\n.columns.is-mobile > .column.is-4 {\n  flex: none;\n  width: 33.33333%;\n}\n\n.columns.is-mobile > .column.is-offset-4 {\n  margin-left: 33.33333%;\n}\n\n.columns.is-mobile > .column.is-5 {\n  flex: none;\n  width: 41.66667%;\n}\n\n.columns.is-mobile > .column.is-offset-5 {\n  margin-left: 41.66667%;\n}\n\n.columns.is-mobile > .column.is-6 {\n  flex: none;\n  width: 50%;\n}\n\n.columns.is-mobile > .column.is-offset-6 {\n  margin-left: 50%;\n}\n\n.columns.is-mobile > .column.is-7 {\n  flex: none;\n  width: 58.33333%;\n}\n\n.columns.is-mobile > .column.is-offset-7 {\n  margin-left: 58.33333%;\n}\n\n.columns.is-mobile > .column.is-8 {\n  flex: none;\n  width: 66.66667%;\n}\n\n.columns.is-mobile > .column.is-offset-8 {\n  margin-left: 66.66667%;\n}\n\n.columns.is-mobile > .column.is-9 {\n  flex: none;\n  width: 75%;\n}\n\n.columns.is-mobile > .column.is-offset-9 {\n  margin-left: 75%;\n}\n\n.columns.is-mobile > .column.is-10 {\n  flex: none;\n  width: 83.33333%;\n}\n\n.columns.is-mobile > .column.is-offset-10 {\n  margin-left: 83.33333%;\n}\n\n.columns.is-mobile > .column.is-11 {\n  flex: none;\n  width: 91.66667%;\n}\n\n.columns.is-mobile > .column.is-offset-11 {\n  margin-left: 91.66667%;\n}\n\n.columns.is-mobile > .column.is-12 {\n  flex: none;\n  width: 100%;\n}\n\n.columns.is-mobile > .column.is-offset-12 {\n  margin-left: 100%;\n}\n\n@media screen and (max-width: 768px) {\n  .column.is-narrow-mobile {\n    flex: none;\n  }\n  .column.is-full-mobile {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-three-quarters-mobile {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-two-thirds-mobile {\n    flex: none;\n    width: 66.6666%;\n  }\n  .column.is-half-mobile {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-one-third-mobile {\n    flex: none;\n    width: 33.3333%;\n  }\n  .column.is-one-quarter-mobile {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-one-fifth-mobile {\n    flex: none;\n    width: 20%;\n  }\n  .column.is-two-fifths-mobile {\n    flex: none;\n    width: 40%;\n  }\n  .column.is-three-fifths-mobile {\n    flex: none;\n    width: 60%;\n  }\n  .column.is-four-fifths-mobile {\n    flex: none;\n    width: 80%;\n  }\n  .column.is-offset-three-quarters-mobile {\n    margin-left: 75%;\n  }\n  .column.is-offset-two-thirds-mobile {\n    margin-left: 66.6666%;\n  }\n  .column.is-offset-half-mobile {\n    margin-left: 50%;\n  }\n  .column.is-offset-one-third-mobile {\n    margin-left: 33.3333%;\n  }\n  .column.is-offset-one-quarter-mobile {\n    margin-left: 25%;\n  }\n  .column.is-offset-one-fifth-mobile {\n    margin-left: 20%;\n  }\n  .column.is-offset-two-fifths-mobile {\n    margin-left: 40%;\n  }\n  .column.is-offset-three-fifths-mobile {\n    margin-left: 60%;\n  }\n  .column.is-offset-four-fifths-mobile {\n    margin-left: 80%;\n  }\n  .column.is-1-mobile {\n    flex: none;\n    width: 8.33333%;\n  }\n  .column.is-offset-1-mobile {\n    margin-left: 8.33333%;\n  }\n  .column.is-2-mobile {\n    flex: none;\n    width: 16.66667%;\n  }\n  .column.is-offset-2-mobile {\n    margin-left: 16.66667%;\n  }\n  .column.is-3-mobile {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-offset-3-mobile {\n    margin-left: 25%;\n  }\n  .column.is-4-mobile {\n    flex: none;\n    width: 33.33333%;\n  }\n  .column.is-offset-4-mobile {\n    margin-left: 33.33333%;\n  }\n  .column.is-5-mobile {\n    flex: none;\n    width: 41.66667%;\n  }\n  .column.is-offset-5-mobile {\n    margin-left: 41.66667%;\n  }\n  .column.is-6-mobile {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-offset-6-mobile {\n    margin-left: 50%;\n  }\n  .column.is-7-mobile {\n    flex: none;\n    width: 58.33333%;\n  }\n  .column.is-offset-7-mobile {\n    margin-left: 58.33333%;\n  }\n  .column.is-8-mobile {\n    flex: none;\n    width: 66.66667%;\n  }\n  .column.is-offset-8-mobile {\n    margin-left: 66.66667%;\n  }\n  .column.is-9-mobile {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-offset-9-mobile {\n    margin-left: 75%;\n  }\n  .column.is-10-mobile {\n    flex: none;\n    width: 83.33333%;\n  }\n  .column.is-offset-10-mobile {\n    margin-left: 83.33333%;\n  }\n  .column.is-11-mobile {\n    flex: none;\n    width: 91.66667%;\n  }\n  .column.is-offset-11-mobile {\n    margin-left: 91.66667%;\n  }\n  .column.is-12-mobile {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-offset-12-mobile {\n    margin-left: 100%;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .column.is-narrow, .column.is-narrow-tablet {\n    flex: none;\n  }\n  .column.is-full, .column.is-full-tablet {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-three-quarters, .column.is-three-quarters-tablet {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-two-thirds, .column.is-two-thirds-tablet {\n    flex: none;\n    width: 66.6666%;\n  }\n  .column.is-half, .column.is-half-tablet {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-one-third, .column.is-one-third-tablet {\n    flex: none;\n    width: 33.3333%;\n  }\n  .column.is-one-quarter, .column.is-one-quarter-tablet {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-one-fifth, .column.is-one-fifth-tablet {\n    flex: none;\n    width: 20%;\n  }\n  .column.is-two-fifths, .column.is-two-fifths-tablet {\n    flex: none;\n    width: 40%;\n  }\n  .column.is-three-fifths, .column.is-three-fifths-tablet {\n    flex: none;\n    width: 60%;\n  }\n  .column.is-four-fifths, .column.is-four-fifths-tablet {\n    flex: none;\n    width: 80%;\n  }\n  .column.is-offset-three-quarters, .column.is-offset-three-quarters-tablet {\n    margin-left: 75%;\n  }\n  .column.is-offset-two-thirds, .column.is-offset-two-thirds-tablet {\n    margin-left: 66.6666%;\n  }\n  .column.is-offset-half, .column.is-offset-half-tablet {\n    margin-left: 50%;\n  }\n  .column.is-offset-one-third, .column.is-offset-one-third-tablet {\n    margin-left: 33.3333%;\n  }\n  .column.is-offset-one-quarter, .column.is-offset-one-quarter-tablet {\n    margin-left: 25%;\n  }\n  .column.is-offset-one-fifth, .column.is-offset-one-fifth-tablet {\n    margin-left: 20%;\n  }\n  .column.is-offset-two-fifths, .column.is-offset-two-fifths-tablet {\n    margin-left: 40%;\n  }\n  .column.is-offset-three-fifths, .column.is-offset-three-fifths-tablet {\n    margin-left: 60%;\n  }\n  .column.is-offset-four-fifths, .column.is-offset-four-fifths-tablet {\n    margin-left: 80%;\n  }\n  .column.is-1, .column.is-1-tablet {\n    flex: none;\n    width: 8.33333%;\n  }\n  .column.is-offset-1, .column.is-offset-1-tablet {\n    margin-left: 8.33333%;\n  }\n  .column.is-2, .column.is-2-tablet {\n    flex: none;\n    width: 16.66667%;\n  }\n  .column.is-offset-2, .column.is-offset-2-tablet {\n    margin-left: 16.66667%;\n  }\n  .column.is-3, .column.is-3-tablet {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-offset-3, .column.is-offset-3-tablet {\n    margin-left: 25%;\n  }\n  .column.is-4, .column.is-4-tablet {\n    flex: none;\n    width: 33.33333%;\n  }\n  .column.is-offset-4, .column.is-offset-4-tablet {\n    margin-left: 33.33333%;\n  }\n  .column.is-5, .column.is-5-tablet {\n    flex: none;\n    width: 41.66667%;\n  }\n  .column.is-offset-5, .column.is-offset-5-tablet {\n    margin-left: 41.66667%;\n  }\n  .column.is-6, .column.is-6-tablet {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-offset-6, .column.is-offset-6-tablet {\n    margin-left: 50%;\n  }\n  .column.is-7, .column.is-7-tablet {\n    flex: none;\n    width: 58.33333%;\n  }\n  .column.is-offset-7, .column.is-offset-7-tablet {\n    margin-left: 58.33333%;\n  }\n  .column.is-8, .column.is-8-tablet {\n    flex: none;\n    width: 66.66667%;\n  }\n  .column.is-offset-8, .column.is-offset-8-tablet {\n    margin-left: 66.66667%;\n  }\n  .column.is-9, .column.is-9-tablet {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-offset-9, .column.is-offset-9-tablet {\n    margin-left: 75%;\n  }\n  .column.is-10, .column.is-10-tablet {\n    flex: none;\n    width: 83.33333%;\n  }\n  .column.is-offset-10, .column.is-offset-10-tablet {\n    margin-left: 83.33333%;\n  }\n  .column.is-11, .column.is-11-tablet {\n    flex: none;\n    width: 91.66667%;\n  }\n  .column.is-offset-11, .column.is-offset-11-tablet {\n    margin-left: 91.66667%;\n  }\n  .column.is-12, .column.is-12-tablet {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-offset-12, .column.is-offset-12-tablet {\n    margin-left: 100%;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .column.is-narrow-touch {\n    flex: none;\n  }\n  .column.is-full-touch {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-three-quarters-touch {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-two-thirds-touch {\n    flex: none;\n    width: 66.6666%;\n  }\n  .column.is-half-touch {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-one-third-touch {\n    flex: none;\n    width: 33.3333%;\n  }\n  .column.is-one-quarter-touch {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-one-fifth-touch {\n    flex: none;\n    width: 20%;\n  }\n  .column.is-two-fifths-touch {\n    flex: none;\n    width: 40%;\n  }\n  .column.is-three-fifths-touch {\n    flex: none;\n    width: 60%;\n  }\n  .column.is-four-fifths-touch {\n    flex: none;\n    width: 80%;\n  }\n  .column.is-offset-three-quarters-touch {\n    margin-left: 75%;\n  }\n  .column.is-offset-two-thirds-touch {\n    margin-left: 66.6666%;\n  }\n  .column.is-offset-half-touch {\n    margin-left: 50%;\n  }\n  .column.is-offset-one-third-touch {\n    margin-left: 33.3333%;\n  }\n  .column.is-offset-one-quarter-touch {\n    margin-left: 25%;\n  }\n  .column.is-offset-one-fifth-touch {\n    margin-left: 20%;\n  }\n  .column.is-offset-two-fifths-touch {\n    margin-left: 40%;\n  }\n  .column.is-offset-three-fifths-touch {\n    margin-left: 60%;\n  }\n  .column.is-offset-four-fifths-touch {\n    margin-left: 80%;\n  }\n  .column.is-1-touch {\n    flex: none;\n    width: 8.33333%;\n  }\n  .column.is-offset-1-touch {\n    margin-left: 8.33333%;\n  }\n  .column.is-2-touch {\n    flex: none;\n    width: 16.66667%;\n  }\n  .column.is-offset-2-touch {\n    margin-left: 16.66667%;\n  }\n  .column.is-3-touch {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-offset-3-touch {\n    margin-left: 25%;\n  }\n  .column.is-4-touch {\n    flex: none;\n    width: 33.33333%;\n  }\n  .column.is-offset-4-touch {\n    margin-left: 33.33333%;\n  }\n  .column.is-5-touch {\n    flex: none;\n    width: 41.66667%;\n  }\n  .column.is-offset-5-touch {\n    margin-left: 41.66667%;\n  }\n  .column.is-6-touch {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-offset-6-touch {\n    margin-left: 50%;\n  }\n  .column.is-7-touch {\n    flex: none;\n    width: 58.33333%;\n  }\n  .column.is-offset-7-touch {\n    margin-left: 58.33333%;\n  }\n  .column.is-8-touch {\n    flex: none;\n    width: 66.66667%;\n  }\n  .column.is-offset-8-touch {\n    margin-left: 66.66667%;\n  }\n  .column.is-9-touch {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-offset-9-touch {\n    margin-left: 75%;\n  }\n  .column.is-10-touch {\n    flex: none;\n    width: 83.33333%;\n  }\n  .column.is-offset-10-touch {\n    margin-left: 83.33333%;\n  }\n  .column.is-11-touch {\n    flex: none;\n    width: 91.66667%;\n  }\n  .column.is-offset-11-touch {\n    margin-left: 91.66667%;\n  }\n  .column.is-12-touch {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-offset-12-touch {\n    margin-left: 100%;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .column.is-narrow-desktop {\n    flex: none;\n  }\n  .column.is-full-desktop {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-three-quarters-desktop {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-two-thirds-desktop {\n    flex: none;\n    width: 66.6666%;\n  }\n  .column.is-half-desktop {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-one-third-desktop {\n    flex: none;\n    width: 33.3333%;\n  }\n  .column.is-one-quarter-desktop {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-one-fifth-desktop {\n    flex: none;\n    width: 20%;\n  }\n  .column.is-two-fifths-desktop {\n    flex: none;\n    width: 40%;\n  }\n  .column.is-three-fifths-desktop {\n    flex: none;\n    width: 60%;\n  }\n  .column.is-four-fifths-desktop {\n    flex: none;\n    width: 80%;\n  }\n  .column.is-offset-three-quarters-desktop {\n    margin-left: 75%;\n  }\n  .column.is-offset-two-thirds-desktop {\n    margin-left: 66.6666%;\n  }\n  .column.is-offset-half-desktop {\n    margin-left: 50%;\n  }\n  .column.is-offset-one-third-desktop {\n    margin-left: 33.3333%;\n  }\n  .column.is-offset-one-quarter-desktop {\n    margin-left: 25%;\n  }\n  .column.is-offset-one-fifth-desktop {\n    margin-left: 20%;\n  }\n  .column.is-offset-two-fifths-desktop {\n    margin-left: 40%;\n  }\n  .column.is-offset-three-fifths-desktop {\n    margin-left: 60%;\n  }\n  .column.is-offset-four-fifths-desktop {\n    margin-left: 80%;\n  }\n  .column.is-1-desktop {\n    flex: none;\n    width: 8.33333%;\n  }\n  .column.is-offset-1-desktop {\n    margin-left: 8.33333%;\n  }\n  .column.is-2-desktop {\n    flex: none;\n    width: 16.66667%;\n  }\n  .column.is-offset-2-desktop {\n    margin-left: 16.66667%;\n  }\n  .column.is-3-desktop {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-offset-3-desktop {\n    margin-left: 25%;\n  }\n  .column.is-4-desktop {\n    flex: none;\n    width: 33.33333%;\n  }\n  .column.is-offset-4-desktop {\n    margin-left: 33.33333%;\n  }\n  .column.is-5-desktop {\n    flex: none;\n    width: 41.66667%;\n  }\n  .column.is-offset-5-desktop {\n    margin-left: 41.66667%;\n  }\n  .column.is-6-desktop {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-offset-6-desktop {\n    margin-left: 50%;\n  }\n  .column.is-7-desktop {\n    flex: none;\n    width: 58.33333%;\n  }\n  .column.is-offset-7-desktop {\n    margin-left: 58.33333%;\n  }\n  .column.is-8-desktop {\n    flex: none;\n    width: 66.66667%;\n  }\n  .column.is-offset-8-desktop {\n    margin-left: 66.66667%;\n  }\n  .column.is-9-desktop {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-offset-9-desktop {\n    margin-left: 75%;\n  }\n  .column.is-10-desktop {\n    flex: none;\n    width: 83.33333%;\n  }\n  .column.is-offset-10-desktop {\n    margin-left: 83.33333%;\n  }\n  .column.is-11-desktop {\n    flex: none;\n    width: 91.66667%;\n  }\n  .column.is-offset-11-desktop {\n    margin-left: 91.66667%;\n  }\n  .column.is-12-desktop {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-offset-12-desktop {\n    margin-left: 100%;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .column.is-narrow-widescreen {\n    flex: none;\n  }\n  .column.is-full-widescreen {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-three-quarters-widescreen {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-two-thirds-widescreen {\n    flex: none;\n    width: 66.6666%;\n  }\n  .column.is-half-widescreen {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-one-third-widescreen {\n    flex: none;\n    width: 33.3333%;\n  }\n  .column.is-one-quarter-widescreen {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-one-fifth-widescreen {\n    flex: none;\n    width: 20%;\n  }\n  .column.is-two-fifths-widescreen {\n    flex: none;\n    width: 40%;\n  }\n  .column.is-three-fifths-widescreen {\n    flex: none;\n    width: 60%;\n  }\n  .column.is-four-fifths-widescreen {\n    flex: none;\n    width: 80%;\n  }\n  .column.is-offset-three-quarters-widescreen {\n    margin-left: 75%;\n  }\n  .column.is-offset-two-thirds-widescreen {\n    margin-left: 66.6666%;\n  }\n  .column.is-offset-half-widescreen {\n    margin-left: 50%;\n  }\n  .column.is-offset-one-third-widescreen {\n    margin-left: 33.3333%;\n  }\n  .column.is-offset-one-quarter-widescreen {\n    margin-left: 25%;\n  }\n  .column.is-offset-one-fifth-widescreen {\n    margin-left: 20%;\n  }\n  .column.is-offset-two-fifths-widescreen {\n    margin-left: 40%;\n  }\n  .column.is-offset-three-fifths-widescreen {\n    margin-left: 60%;\n  }\n  .column.is-offset-four-fifths-widescreen {\n    margin-left: 80%;\n  }\n  .column.is-1-widescreen {\n    flex: none;\n    width: 8.33333%;\n  }\n  .column.is-offset-1-widescreen {\n    margin-left: 8.33333%;\n  }\n  .column.is-2-widescreen {\n    flex: none;\n    width: 16.66667%;\n  }\n  .column.is-offset-2-widescreen {\n    margin-left: 16.66667%;\n  }\n  .column.is-3-widescreen {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-offset-3-widescreen {\n    margin-left: 25%;\n  }\n  .column.is-4-widescreen {\n    flex: none;\n    width: 33.33333%;\n  }\n  .column.is-offset-4-widescreen {\n    margin-left: 33.33333%;\n  }\n  .column.is-5-widescreen {\n    flex: none;\n    width: 41.66667%;\n  }\n  .column.is-offset-5-widescreen {\n    margin-left: 41.66667%;\n  }\n  .column.is-6-widescreen {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-offset-6-widescreen {\n    margin-left: 50%;\n  }\n  .column.is-7-widescreen {\n    flex: none;\n    width: 58.33333%;\n  }\n  .column.is-offset-7-widescreen {\n    margin-left: 58.33333%;\n  }\n  .column.is-8-widescreen {\n    flex: none;\n    width: 66.66667%;\n  }\n  .column.is-offset-8-widescreen {\n    margin-left: 66.66667%;\n  }\n  .column.is-9-widescreen {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-offset-9-widescreen {\n    margin-left: 75%;\n  }\n  .column.is-10-widescreen {\n    flex: none;\n    width: 83.33333%;\n  }\n  .column.is-offset-10-widescreen {\n    margin-left: 83.33333%;\n  }\n  .column.is-11-widescreen {\n    flex: none;\n    width: 91.66667%;\n  }\n  .column.is-offset-11-widescreen {\n    margin-left: 91.66667%;\n  }\n  .column.is-12-widescreen {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-offset-12-widescreen {\n    margin-left: 100%;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .column.is-narrow-fullhd {\n    flex: none;\n  }\n  .column.is-full-fullhd {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-three-quarters-fullhd {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-two-thirds-fullhd {\n    flex: none;\n    width: 66.6666%;\n  }\n  .column.is-half-fullhd {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-one-third-fullhd {\n    flex: none;\n    width: 33.3333%;\n  }\n  .column.is-one-quarter-fullhd {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-one-fifth-fullhd {\n    flex: none;\n    width: 20%;\n  }\n  .column.is-two-fifths-fullhd {\n    flex: none;\n    width: 40%;\n  }\n  .column.is-three-fifths-fullhd {\n    flex: none;\n    width: 60%;\n  }\n  .column.is-four-fifths-fullhd {\n    flex: none;\n    width: 80%;\n  }\n  .column.is-offset-three-quarters-fullhd {\n    margin-left: 75%;\n  }\n  .column.is-offset-two-thirds-fullhd {\n    margin-left: 66.6666%;\n  }\n  .column.is-offset-half-fullhd {\n    margin-left: 50%;\n  }\n  .column.is-offset-one-third-fullhd {\n    margin-left: 33.3333%;\n  }\n  .column.is-offset-one-quarter-fullhd {\n    margin-left: 25%;\n  }\n  .column.is-offset-one-fifth-fullhd {\n    margin-left: 20%;\n  }\n  .column.is-offset-two-fifths-fullhd {\n    margin-left: 40%;\n  }\n  .column.is-offset-three-fifths-fullhd {\n    margin-left: 60%;\n  }\n  .column.is-offset-four-fifths-fullhd {\n    margin-left: 80%;\n  }\n  .column.is-1-fullhd {\n    flex: none;\n    width: 8.33333%;\n  }\n  .column.is-offset-1-fullhd {\n    margin-left: 8.33333%;\n  }\n  .column.is-2-fullhd {\n    flex: none;\n    width: 16.66667%;\n  }\n  .column.is-offset-2-fullhd {\n    margin-left: 16.66667%;\n  }\n  .column.is-3-fullhd {\n    flex: none;\n    width: 25%;\n  }\n  .column.is-offset-3-fullhd {\n    margin-left: 25%;\n  }\n  .column.is-4-fullhd {\n    flex: none;\n    width: 33.33333%;\n  }\n  .column.is-offset-4-fullhd {\n    margin-left: 33.33333%;\n  }\n  .column.is-5-fullhd {\n    flex: none;\n    width: 41.66667%;\n  }\n  .column.is-offset-5-fullhd {\n    margin-left: 41.66667%;\n  }\n  .column.is-6-fullhd {\n    flex: none;\n    width: 50%;\n  }\n  .column.is-offset-6-fullhd {\n    margin-left: 50%;\n  }\n  .column.is-7-fullhd {\n    flex: none;\n    width: 58.33333%;\n  }\n  .column.is-offset-7-fullhd {\n    margin-left: 58.33333%;\n  }\n  .column.is-8-fullhd {\n    flex: none;\n    width: 66.66667%;\n  }\n  .column.is-offset-8-fullhd {\n    margin-left: 66.66667%;\n  }\n  .column.is-9-fullhd {\n    flex: none;\n    width: 75%;\n  }\n  .column.is-offset-9-fullhd {\n    margin-left: 75%;\n  }\n  .column.is-10-fullhd {\n    flex: none;\n    width: 83.33333%;\n  }\n  .column.is-offset-10-fullhd {\n    margin-left: 83.33333%;\n  }\n  .column.is-11-fullhd {\n    flex: none;\n    width: 91.66667%;\n  }\n  .column.is-offset-11-fullhd {\n    margin-left: 91.66667%;\n  }\n  .column.is-12-fullhd {\n    flex: none;\n    width: 100%;\n  }\n  .column.is-offset-12-fullhd {\n    margin-left: 100%;\n  }\n}\n\n.columns {\n  margin-left: -0.75rem;\n  margin-right: -0.75rem;\n  margin-top: -0.75rem;\n}\n\n.columns:last-child {\n  margin-bottom: -0.75rem;\n}\n\n.columns:not(:last-child) {\n  margin-bottom: calc(1.5rem - 0.75rem);\n}\n\n.columns.is-centered {\n  justify-content: center;\n}\n\n.columns.is-gapless {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n}\n\n.columns.is-gapless > .column {\n  margin: 0;\n  padding: 0 !important;\n}\n\n.columns.is-gapless:not(:last-child) {\n  margin-bottom: 1.5rem;\n}\n\n.columns.is-gapless:last-child {\n  margin-bottom: 0;\n}\n\n.columns.is-mobile {\n  display: flex;\n}\n\n.columns.is-multiline {\n  flex-wrap: wrap;\n}\n\n.columns.is-vcentered {\n  align-items: center;\n}\n\n@media screen and (min-width: 769px), print {\n  .columns:not(.is-desktop) {\n    display: flex;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-desktop {\n    display: flex;\n  }\n}\n\n.columns.is-variable {\n  --columnGap: 0.75rem;\n  margin-left: calc(-1 * var(--columnGap));\n  margin-right: calc(-1 * var(--columnGap));\n}\n\n.columns.is-variable .column {\n  padding-left: var(--columnGap);\n  padding-right: var(--columnGap);\n}\n\n.columns.is-variable.is-0 {\n  --columnGap: 0rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-0-mobile {\n    --columnGap: 0rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-0-tablet {\n    --columnGap: 0rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-0-tablet-only {\n    --columnGap: 0rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-0-touch {\n    --columnGap: 0rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-0-desktop {\n    --columnGap: 0rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-0-desktop-only {\n    --columnGap: 0rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-0-widescreen {\n    --columnGap: 0rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-0-widescreen-only {\n    --columnGap: 0rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-0-fullhd {\n    --columnGap: 0rem;\n  }\n}\n\n.columns.is-variable.is-1 {\n  --columnGap: 0.25rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-1-mobile {\n    --columnGap: 0.25rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-1-tablet {\n    --columnGap: 0.25rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-1-tablet-only {\n    --columnGap: 0.25rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-1-touch {\n    --columnGap: 0.25rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-1-desktop {\n    --columnGap: 0.25rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-1-desktop-only {\n    --columnGap: 0.25rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-1-widescreen {\n    --columnGap: 0.25rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-1-widescreen-only {\n    --columnGap: 0.25rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-1-fullhd {\n    --columnGap: 0.25rem;\n  }\n}\n\n.columns.is-variable.is-2 {\n  --columnGap: 0.5rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-2-mobile {\n    --columnGap: 0.5rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-2-tablet {\n    --columnGap: 0.5rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-2-tablet-only {\n    --columnGap: 0.5rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-2-touch {\n    --columnGap: 0.5rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-2-desktop {\n    --columnGap: 0.5rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-2-desktop-only {\n    --columnGap: 0.5rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-2-widescreen {\n    --columnGap: 0.5rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-2-widescreen-only {\n    --columnGap: 0.5rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-2-fullhd {\n    --columnGap: 0.5rem;\n  }\n}\n\n.columns.is-variable.is-3 {\n  --columnGap: 0.75rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-3-mobile {\n    --columnGap: 0.75rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-3-tablet {\n    --columnGap: 0.75rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-3-tablet-only {\n    --columnGap: 0.75rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-3-touch {\n    --columnGap: 0.75rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-3-desktop {\n    --columnGap: 0.75rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-3-desktop-only {\n    --columnGap: 0.75rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-3-widescreen {\n    --columnGap: 0.75rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-3-widescreen-only {\n    --columnGap: 0.75rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-3-fullhd {\n    --columnGap: 0.75rem;\n  }\n}\n\n.columns.is-variable.is-4 {\n  --columnGap: 1rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-4-mobile {\n    --columnGap: 1rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-4-tablet {\n    --columnGap: 1rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-4-tablet-only {\n    --columnGap: 1rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-4-touch {\n    --columnGap: 1rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-4-desktop {\n    --columnGap: 1rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-4-desktop-only {\n    --columnGap: 1rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-4-widescreen {\n    --columnGap: 1rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-4-widescreen-only {\n    --columnGap: 1rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-4-fullhd {\n    --columnGap: 1rem;\n  }\n}\n\n.columns.is-variable.is-5 {\n  --columnGap: 1.25rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-5-mobile {\n    --columnGap: 1.25rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-5-tablet {\n    --columnGap: 1.25rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-5-tablet-only {\n    --columnGap: 1.25rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-5-touch {\n    --columnGap: 1.25rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-5-desktop {\n    --columnGap: 1.25rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-5-desktop-only {\n    --columnGap: 1.25rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-5-widescreen {\n    --columnGap: 1.25rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-5-widescreen-only {\n    --columnGap: 1.25rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-5-fullhd {\n    --columnGap: 1.25rem;\n  }\n}\n\n.columns.is-variable.is-6 {\n  --columnGap: 1.5rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-6-mobile {\n    --columnGap: 1.5rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-6-tablet {\n    --columnGap: 1.5rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-6-tablet-only {\n    --columnGap: 1.5rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-6-touch {\n    --columnGap: 1.5rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-6-desktop {\n    --columnGap: 1.5rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-6-desktop-only {\n    --columnGap: 1.5rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-6-widescreen {\n    --columnGap: 1.5rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-6-widescreen-only {\n    --columnGap: 1.5rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-6-fullhd {\n    --columnGap: 1.5rem;\n  }\n}\n\n.columns.is-variable.is-7 {\n  --columnGap: 1.75rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-7-mobile {\n    --columnGap: 1.75rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-7-tablet {\n    --columnGap: 1.75rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-7-tablet-only {\n    --columnGap: 1.75rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-7-touch {\n    --columnGap: 1.75rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-7-desktop {\n    --columnGap: 1.75rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-7-desktop-only {\n    --columnGap: 1.75rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-7-widescreen {\n    --columnGap: 1.75rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-7-widescreen-only {\n    --columnGap: 1.75rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-7-fullhd {\n    --columnGap: 1.75rem;\n  }\n}\n\n.columns.is-variable.is-8 {\n  --columnGap: 2rem;\n}\n\n@media screen and (max-width: 768px) {\n  .columns.is-variable.is-8-mobile {\n    --columnGap: 2rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .columns.is-variable.is-8-tablet {\n    --columnGap: 2rem;\n  }\n}\n\n@media screen and (min-width: 769px) and (max-width: 1087px) {\n  .columns.is-variable.is-8-tablet-only {\n    --columnGap: 2rem;\n  }\n}\n\n@media screen and (max-width: 1087px) {\n  .columns.is-variable.is-8-touch {\n    --columnGap: 2rem;\n  }\n}\n\n@media screen and (min-width: 1088px) {\n  .columns.is-variable.is-8-desktop {\n    --columnGap: 2rem;\n  }\n}\n\n@media screen and (min-width: 1088px) and (max-width: 1279px) {\n  .columns.is-variable.is-8-desktop-only {\n    --columnGap: 2rem;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .columns.is-variable.is-8-widescreen {\n    --columnGap: 2rem;\n  }\n}\n\n@media screen and (min-width: 1280px) and (max-width: 1471px) {\n  .columns.is-variable.is-8-widescreen-only {\n    --columnGap: 2rem;\n  }\n}\n\n@media screen and (min-width: 1472px) {\n  .columns.is-variable.is-8-fullhd {\n    --columnGap: 2rem;\n  }\n}\n\n.tile {\n  align-items: stretch;\n  display: block;\n  flex-basis: 0;\n  flex-grow: 1;\n  flex-shrink: 1;\n  min-height: -webkit-min-content;\n  min-height: -moz-min-content;\n  min-height: min-content;\n}\n\n.tile.is-ancestor {\n  margin-left: -0.75rem;\n  margin-right: -0.75rem;\n  margin-top: -0.75rem;\n}\n\n.tile.is-ancestor:last-child {\n  margin-bottom: -0.75rem;\n}\n\n.tile.is-ancestor:not(:last-child) {\n  margin-bottom: 0.75rem;\n}\n\n.tile.is-child {\n  margin: 0 !important;\n}\n\n.tile.is-parent {\n  padding: 0.75rem;\n}\n\n.tile.is-vertical {\n  flex-direction: column;\n}\n\n.tile.is-vertical > .tile.is-child:not(:last-child) {\n  margin-bottom: 1.5rem !important;\n}\n\n@media screen and (min-width: 769px), print {\n  .tile:not(.is-child) {\n    display: flex;\n  }\n  .tile.is-1 {\n    flex: none;\n    width: 8.33333%;\n  }\n  .tile.is-2 {\n    flex: none;\n    width: 16.66667%;\n  }\n  .tile.is-3 {\n    flex: none;\n    width: 25%;\n  }\n  .tile.is-4 {\n    flex: none;\n    width: 33.33333%;\n  }\n  .tile.is-5 {\n    flex: none;\n    width: 41.66667%;\n  }\n  .tile.is-6 {\n    flex: none;\n    width: 50%;\n  }\n  .tile.is-7 {\n    flex: none;\n    width: 58.33333%;\n  }\n  .tile.is-8 {\n    flex: none;\n    width: 66.66667%;\n  }\n  .tile.is-9 {\n    flex: none;\n    width: 75%;\n  }\n  .tile.is-10 {\n    flex: none;\n    width: 83.33333%;\n  }\n  .tile.is-11 {\n    flex: none;\n    width: 91.66667%;\n  }\n  .tile.is-12 {\n    flex: none;\n    width: 100%;\n  }\n}\n\n.hero {\n  align-items: stretch;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.hero .navbar {\n  background: none;\n}\n\n.hero .tabs ul {\n  border-bottom: none;\n}\n\n.hero.is-white {\n  background-color: white;\n  color: #0a0a0a;\n}\n\n.hero.is-white a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-white strong {\n  color: inherit;\n}\n\n.hero.is-white .title {\n  color: #0a0a0a;\n}\n\n.hero.is-white .subtitle {\n  color: rgba(10, 10, 10, 0.9);\n}\n\n.hero.is-white .subtitle a:not(.button),\n.hero.is-white .subtitle strong {\n  color: #0a0a0a;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-white .navbar-menu {\n    background-color: white;\n  }\n}\n\n.hero.is-white .navbar-item,\n.hero.is-white .navbar-link {\n  color: rgba(10, 10, 10, 0.7);\n}\n\n.hero.is-white a.navbar-item:hover, .hero.is-white a.navbar-item.is-active,\n.hero.is-white .navbar-link:hover,\n.hero.is-white .navbar-link.is-active {\n  background-color: #f2f2f2;\n  color: #0a0a0a;\n}\n\n.hero.is-white .tabs a {\n  color: #0a0a0a;\n  opacity: 0.9;\n}\n\n.hero.is-white .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-white .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-white .tabs.is-boxed a, .hero.is-white .tabs.is-toggle a {\n  color: #0a0a0a;\n}\n\n.hero.is-white .tabs.is-boxed a:hover, .hero.is-white .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-white .tabs.is-boxed li.is-active a, .hero.is-white .tabs.is-boxed li.is-active a:hover, .hero.is-white .tabs.is-toggle li.is-active a, .hero.is-white .tabs.is-toggle li.is-active a:hover {\n  background-color: #0a0a0a;\n  border-color: #0a0a0a;\n  color: white;\n}\n\n.hero.is-white.is-bold {\n  background-image: linear-gradient(141deg, #e6e6e6 0%, white 71%, white 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-white.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #e6e6e6 0%, white 71%, white 100%);\n  }\n}\n\n.hero.is-black {\n  background-color: #0a0a0a;\n  color: white;\n}\n\n.hero.is-black a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-black strong {\n  color: inherit;\n}\n\n.hero.is-black .title {\n  color: white;\n}\n\n.hero.is-black .subtitle {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.hero.is-black .subtitle a:not(.button),\n.hero.is-black .subtitle strong {\n  color: white;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-black .navbar-menu {\n    background-color: #0a0a0a;\n  }\n}\n\n.hero.is-black .navbar-item,\n.hero.is-black .navbar-link {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.hero.is-black a.navbar-item:hover, .hero.is-black a.navbar-item.is-active,\n.hero.is-black .navbar-link:hover,\n.hero.is-black .navbar-link.is-active {\n  background-color: black;\n  color: white;\n}\n\n.hero.is-black .tabs a {\n  color: white;\n  opacity: 0.9;\n}\n\n.hero.is-black .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-black .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-black .tabs.is-boxed a, .hero.is-black .tabs.is-toggle a {\n  color: white;\n}\n\n.hero.is-black .tabs.is-boxed a:hover, .hero.is-black .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-black .tabs.is-boxed li.is-active a, .hero.is-black .tabs.is-boxed li.is-active a:hover, .hero.is-black .tabs.is-toggle li.is-active a, .hero.is-black .tabs.is-toggle li.is-active a:hover {\n  background-color: white;\n  border-color: white;\n  color: #0a0a0a;\n}\n\n.hero.is-black.is-bold {\n  background-image: linear-gradient(141deg, black 0%, #0a0a0a 71%, #181616 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-black.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, black 0%, #0a0a0a 71%, #181616 100%);\n  }\n}\n\n.hero.is-light {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.hero.is-light a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-light strong {\n  color: inherit;\n}\n\n.hero.is-light .title {\n  color: #363636;\n}\n\n.hero.is-light .subtitle {\n  color: rgba(54, 54, 54, 0.9);\n}\n\n.hero.is-light .subtitle a:not(.button),\n.hero.is-light .subtitle strong {\n  color: #363636;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-light .navbar-menu {\n    background-color: whitesmoke;\n  }\n}\n\n.hero.is-light .navbar-item,\n.hero.is-light .navbar-link {\n  color: rgba(54, 54, 54, 0.7);\n}\n\n.hero.is-light a.navbar-item:hover, .hero.is-light a.navbar-item.is-active,\n.hero.is-light .navbar-link:hover,\n.hero.is-light .navbar-link.is-active {\n  background-color: #e8e8e8;\n  color: #363636;\n}\n\n.hero.is-light .tabs a {\n  color: #363636;\n  opacity: 0.9;\n}\n\n.hero.is-light .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-light .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-light .tabs.is-boxed a, .hero.is-light .tabs.is-toggle a {\n  color: #363636;\n}\n\n.hero.is-light .tabs.is-boxed a:hover, .hero.is-light .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-light .tabs.is-boxed li.is-active a, .hero.is-light .tabs.is-boxed li.is-active a:hover, .hero.is-light .tabs.is-toggle li.is-active a, .hero.is-light .tabs.is-toggle li.is-active a:hover {\n  background-color: #363636;\n  border-color: #363636;\n  color: whitesmoke;\n}\n\n.hero.is-light.is-bold {\n  background-image: linear-gradient(141deg, #dfd8d9 0%, whitesmoke 71%, white 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-light.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #dfd8d9 0%, whitesmoke 71%, white 100%);\n  }\n}\n\n.hero.is-dark {\n  background-color: #363636;\n  color: whitesmoke;\n}\n\n.hero.is-dark a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-dark strong {\n  color: inherit;\n}\n\n.hero.is-dark .title {\n  color: whitesmoke;\n}\n\n.hero.is-dark .subtitle {\n  color: rgba(245, 245, 245, 0.9);\n}\n\n.hero.is-dark .subtitle a:not(.button),\n.hero.is-dark .subtitle strong {\n  color: whitesmoke;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-dark .navbar-menu {\n    background-color: #363636;\n  }\n}\n\n.hero.is-dark .navbar-item,\n.hero.is-dark .navbar-link {\n  color: rgba(245, 245, 245, 0.7);\n}\n\n.hero.is-dark a.navbar-item:hover, .hero.is-dark a.navbar-item.is-active,\n.hero.is-dark .navbar-link:hover,\n.hero.is-dark .navbar-link.is-active {\n  background-color: #292929;\n  color: whitesmoke;\n}\n\n.hero.is-dark .tabs a {\n  color: whitesmoke;\n  opacity: 0.9;\n}\n\n.hero.is-dark .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-dark .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-dark .tabs.is-boxed a, .hero.is-dark .tabs.is-toggle a {\n  color: whitesmoke;\n}\n\n.hero.is-dark .tabs.is-boxed a:hover, .hero.is-dark .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-dark .tabs.is-boxed li.is-active a, .hero.is-dark .tabs.is-boxed li.is-active a:hover, .hero.is-dark .tabs.is-toggle li.is-active a, .hero.is-dark .tabs.is-toggle li.is-active a:hover {\n  background-color: whitesmoke;\n  border-color: whitesmoke;\n  color: #363636;\n}\n\n.hero.is-dark.is-bold {\n  background-image: linear-gradient(141deg, #1f191a 0%, #363636 71%, #46403f 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-dark.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #1f191a 0%, #363636 71%, #46403f 100%);\n  }\n}\n\n.hero.is-primary {\n  background-color: #00d1b2;\n  color: #fff;\n}\n\n.hero.is-primary a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-primary strong {\n  color: inherit;\n}\n\n.hero.is-primary .title {\n  color: #fff;\n}\n\n.hero.is-primary .subtitle {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.hero.is-primary .subtitle a:not(.button),\n.hero.is-primary .subtitle strong {\n  color: #fff;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-primary .navbar-menu {\n    background-color: #00d1b2;\n  }\n}\n\n.hero.is-primary .navbar-item,\n.hero.is-primary .navbar-link {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.hero.is-primary a.navbar-item:hover, .hero.is-primary a.navbar-item.is-active,\n.hero.is-primary .navbar-link:hover,\n.hero.is-primary .navbar-link.is-active {\n  background-color: #00b89c;\n  color: #fff;\n}\n\n.hero.is-primary .tabs a {\n  color: #fff;\n  opacity: 0.9;\n}\n\n.hero.is-primary .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-primary .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-primary .tabs.is-boxed a, .hero.is-primary .tabs.is-toggle a {\n  color: #fff;\n}\n\n.hero.is-primary .tabs.is-boxed a:hover, .hero.is-primary .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-primary .tabs.is-boxed li.is-active a, .hero.is-primary .tabs.is-boxed li.is-active a:hover, .hero.is-primary .tabs.is-toggle li.is-active a, .hero.is-primary .tabs.is-toggle li.is-active a:hover {\n  background-color: #fff;\n  border-color: #fff;\n  color: #00d1b2;\n}\n\n.hero.is-primary.is-bold {\n  background-image: linear-gradient(141deg, #009e6c 0%, #00d1b2 71%, #00e7eb 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-primary.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #009e6c 0%, #00d1b2 71%, #00e7eb 100%);\n  }\n}\n\n.hero.is-link {\n  background-color: #3273dc;\n  color: #fff;\n}\n\n.hero.is-link a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-link strong {\n  color: inherit;\n}\n\n.hero.is-link .title {\n  color: #fff;\n}\n\n.hero.is-link .subtitle {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.hero.is-link .subtitle a:not(.button),\n.hero.is-link .subtitle strong {\n  color: #fff;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-link .navbar-menu {\n    background-color: #3273dc;\n  }\n}\n\n.hero.is-link .navbar-item,\n.hero.is-link .navbar-link {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.hero.is-link a.navbar-item:hover, .hero.is-link a.navbar-item.is-active,\n.hero.is-link .navbar-link:hover,\n.hero.is-link .navbar-link.is-active {\n  background-color: #2366d1;\n  color: #fff;\n}\n\n.hero.is-link .tabs a {\n  color: #fff;\n  opacity: 0.9;\n}\n\n.hero.is-link .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-link .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-link .tabs.is-boxed a, .hero.is-link .tabs.is-toggle a {\n  color: #fff;\n}\n\n.hero.is-link .tabs.is-boxed a:hover, .hero.is-link .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-link .tabs.is-boxed li.is-active a, .hero.is-link .tabs.is-boxed li.is-active a:hover, .hero.is-link .tabs.is-toggle li.is-active a, .hero.is-link .tabs.is-toggle li.is-active a:hover {\n  background-color: #fff;\n  border-color: #fff;\n  color: #3273dc;\n}\n\n.hero.is-link.is-bold {\n  background-image: linear-gradient(141deg, #1577c6 0%, #3273dc 71%, #4366e5 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-link.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #1577c6 0%, #3273dc 71%, #4366e5 100%);\n  }\n}\n\n.hero.is-info {\n  background-color: #209cee;\n  color: #fff;\n}\n\n.hero.is-info a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-info strong {\n  color: inherit;\n}\n\n.hero.is-info .title {\n  color: #fff;\n}\n\n.hero.is-info .subtitle {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.hero.is-info .subtitle a:not(.button),\n.hero.is-info .subtitle strong {\n  color: #fff;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-info .navbar-menu {\n    background-color: #209cee;\n  }\n}\n\n.hero.is-info .navbar-item,\n.hero.is-info .navbar-link {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.hero.is-info a.navbar-item:hover, .hero.is-info a.navbar-item.is-active,\n.hero.is-info .navbar-link:hover,\n.hero.is-info .navbar-link.is-active {\n  background-color: #118fe4;\n  color: #fff;\n}\n\n.hero.is-info .tabs a {\n  color: #fff;\n  opacity: 0.9;\n}\n\n.hero.is-info .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-info .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-info .tabs.is-boxed a, .hero.is-info .tabs.is-toggle a {\n  color: #fff;\n}\n\n.hero.is-info .tabs.is-boxed a:hover, .hero.is-info .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-info .tabs.is-boxed li.is-active a, .hero.is-info .tabs.is-boxed li.is-active a:hover, .hero.is-info .tabs.is-toggle li.is-active a, .hero.is-info .tabs.is-toggle li.is-active a:hover {\n  background-color: #fff;\n  border-color: #fff;\n  color: #209cee;\n}\n\n.hero.is-info.is-bold {\n  background-image: linear-gradient(141deg, #04a6d7 0%, #209cee 71%, #3287f5 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-info.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #04a6d7 0%, #209cee 71%, #3287f5 100%);\n  }\n}\n\n.hero.is-success {\n  background-color: #23d160;\n  color: #fff;\n}\n\n.hero.is-success a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-success strong {\n  color: inherit;\n}\n\n.hero.is-success .title {\n  color: #fff;\n}\n\n.hero.is-success .subtitle {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.hero.is-success .subtitle a:not(.button),\n.hero.is-success .subtitle strong {\n  color: #fff;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-success .navbar-menu {\n    background-color: #23d160;\n  }\n}\n\n.hero.is-success .navbar-item,\n.hero.is-success .navbar-link {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.hero.is-success a.navbar-item:hover, .hero.is-success a.navbar-item.is-active,\n.hero.is-success .navbar-link:hover,\n.hero.is-success .navbar-link.is-active {\n  background-color: #20bc56;\n  color: #fff;\n}\n\n.hero.is-success .tabs a {\n  color: #fff;\n  opacity: 0.9;\n}\n\n.hero.is-success .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-success .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-success .tabs.is-boxed a, .hero.is-success .tabs.is-toggle a {\n  color: #fff;\n}\n\n.hero.is-success .tabs.is-boxed a:hover, .hero.is-success .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-success .tabs.is-boxed li.is-active a, .hero.is-success .tabs.is-boxed li.is-active a:hover, .hero.is-success .tabs.is-toggle li.is-active a, .hero.is-success .tabs.is-toggle li.is-active a:hover {\n  background-color: #fff;\n  border-color: #fff;\n  color: #23d160;\n}\n\n.hero.is-success.is-bold {\n  background-image: linear-gradient(141deg, #12af2f 0%, #23d160 71%, #2ce28a 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-success.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #12af2f 0%, #23d160 71%, #2ce28a 100%);\n  }\n}\n\n.hero.is-warning {\n  background-color: #ffdd57;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.hero.is-warning a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-warning strong {\n  color: inherit;\n}\n\n.hero.is-warning .title {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.hero.is-warning .subtitle {\n  color: rgba(0, 0, 0, 0.9);\n}\n\n.hero.is-warning .subtitle a:not(.button),\n.hero.is-warning .subtitle strong {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-warning .navbar-menu {\n    background-color: #ffdd57;\n  }\n}\n\n.hero.is-warning .navbar-item,\n.hero.is-warning .navbar-link {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.hero.is-warning a.navbar-item:hover, .hero.is-warning a.navbar-item.is-active,\n.hero.is-warning .navbar-link:hover,\n.hero.is-warning .navbar-link.is-active {\n  background-color: #ffd83d;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.hero.is-warning .tabs a {\n  color: rgba(0, 0, 0, 0.7);\n  opacity: 0.9;\n}\n\n.hero.is-warning .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-warning .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-warning .tabs.is-boxed a, .hero.is-warning .tabs.is-toggle a {\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.hero.is-warning .tabs.is-boxed a:hover, .hero.is-warning .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-warning .tabs.is-boxed li.is-active a, .hero.is-warning .tabs.is-boxed li.is-active a:hover, .hero.is-warning .tabs.is-toggle li.is-active a, .hero.is-warning .tabs.is-toggle li.is-active a:hover {\n  background-color: rgba(0, 0, 0, 0.7);\n  border-color: rgba(0, 0, 0, 0.7);\n  color: #ffdd57;\n}\n\n.hero.is-warning.is-bold {\n  background-image: linear-gradient(141deg, #ffaf24 0%, #ffdd57 71%, #fffa70 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-warning.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #ffaf24 0%, #ffdd57 71%, #fffa70 100%);\n  }\n}\n\n.hero.is-danger {\n  background-color: #ff3860;\n  color: #fff;\n}\n\n.hero.is-danger a:not(.button):not(.dropdown-item):not(.tag),\n.hero.is-danger strong {\n  color: inherit;\n}\n\n.hero.is-danger .title {\n  color: #fff;\n}\n\n.hero.is-danger .subtitle {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.hero.is-danger .subtitle a:not(.button),\n.hero.is-danger .subtitle strong {\n  color: #fff;\n}\n\n@media screen and (max-width: 1087px) {\n  .hero.is-danger .navbar-menu {\n    background-color: #ff3860;\n  }\n}\n\n.hero.is-danger .navbar-item,\n.hero.is-danger .navbar-link {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.hero.is-danger a.navbar-item:hover, .hero.is-danger a.navbar-item.is-active,\n.hero.is-danger .navbar-link:hover,\n.hero.is-danger .navbar-link.is-active {\n  background-color: #ff1f4b;\n  color: #fff;\n}\n\n.hero.is-danger .tabs a {\n  color: #fff;\n  opacity: 0.9;\n}\n\n.hero.is-danger .tabs a:hover {\n  opacity: 1;\n}\n\n.hero.is-danger .tabs li.is-active a {\n  opacity: 1;\n}\n\n.hero.is-danger .tabs.is-boxed a, .hero.is-danger .tabs.is-toggle a {\n  color: #fff;\n}\n\n.hero.is-danger .tabs.is-boxed a:hover, .hero.is-danger .tabs.is-toggle a:hover {\n  background-color: rgba(10, 10, 10, 0.1);\n}\n\n.hero.is-danger .tabs.is-boxed li.is-active a, .hero.is-danger .tabs.is-boxed li.is-active a:hover, .hero.is-danger .tabs.is-toggle li.is-active a, .hero.is-danger .tabs.is-toggle li.is-active a:hover {\n  background-color: #fff;\n  border-color: #fff;\n  color: #ff3860;\n}\n\n.hero.is-danger.is-bold {\n  background-image: linear-gradient(141deg, #ff0561 0%, #ff3860 71%, #ff5257 100%);\n}\n\n@media screen and (max-width: 768px) {\n  .hero.is-danger.is-bold .navbar-menu {\n    background-image: linear-gradient(141deg, #ff0561 0%, #ff3860 71%, #ff5257 100%);\n  }\n}\n\n.hero.is-small .hero-body {\n  padding-bottom: 1.5rem;\n  padding-top: 1.5rem;\n}\n\n@media screen and (min-width: 769px), print {\n  .hero.is-medium .hero-body {\n    padding-bottom: 9rem;\n    padding-top: 9rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .hero.is-large .hero-body {\n    padding-bottom: 18rem;\n    padding-top: 18rem;\n  }\n}\n\n.hero.is-halfheight .hero-body, .hero.is-fullheight .hero-body, .hero.is-fullheight-with-navbar .hero-body {\n  align-items: center;\n  display: flex;\n}\n\n.hero.is-halfheight .hero-body > .container, .hero.is-fullheight .hero-body > .container, .hero.is-fullheight-with-navbar .hero-body > .container {\n  flex-grow: 1;\n  flex-shrink: 1;\n}\n\n.hero.is-halfheight {\n  min-height: 50vh;\n}\n\n.hero.is-fullheight {\n  min-height: 100vh;\n}\n\n.hero.is-fullheight-with-navbar {\n  min-height: calc(100vh - 3.25rem);\n}\n\n.hero-video {\n  overflow: hidden;\n}\n\n.hero-video video {\n  left: 50%;\n  min-height: 100%;\n  min-width: 100%;\n  position: absolute;\n  top: 50%;\n  -webkit-transform: translate3d(-50%, -50%, 0);\n          transform: translate3d(-50%, -50%, 0);\n}\n\n.hero-video.is-transparent {\n  opacity: 0.3;\n}\n\n@media screen and (max-width: 768px) {\n  .hero-video {\n    display: none;\n  }\n}\n\n.hero-buttons {\n  margin-top: 1.5rem;\n}\n\n@media screen and (max-width: 768px) {\n  .hero-buttons .button {\n    display: flex;\n  }\n  .hero-buttons .button:not(:last-child) {\n    margin-bottom: 0.75rem;\n  }\n}\n\n@media screen and (min-width: 769px), print {\n  .hero-buttons {\n    display: flex;\n    justify-content: center;\n  }\n  .hero-buttons .button:not(:last-child) {\n    margin-right: 1.5rem;\n  }\n}\n\n.hero-head,\n.hero-foot {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.hero-body {\n  flex-grow: 1;\n  flex-shrink: 0;\n  padding: 3rem 1.5rem;\n}\n\n.section {\n  padding: 3rem 1.5rem;\n}\n\n@media screen and (min-width: 1088px) {\n  .section.is-medium {\n    padding: 9rem 1.5rem;\n  }\n  .section.is-large {\n    padding: 18rem 1.5rem;\n  }\n}\n\n.footer {\n  background-color: #fafafa;\n  padding: 3rem 1.5rem 6rem;\n}";
  styleInject(css);

  var css$1 = "/* General styles for the debugger, and the index component */\n\nhtml,\nbody {\n  font: 14px/1.21 'Helvetica Neue', arial, sans-serif;\n  font-weight: 400;\n  /* For mobile phones to be able to scroll the view into place */\n  min-height: 600px;\n}\n\nh1 {\n  text-align: center;\n  font-weight: bold !important;\n}\n\np {\n  text-align: center;\n  max-width: 640px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\nbutton {\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\ninput[type='checkbox'] {\n  margin-left: 5px;\n}\n\n.hide {\n  display: none;\n}\n\n.notification {\n  width: 50vw;\n  max-width: 400px;\n  color: #fafafa;\n  background-color: rgba(0, 0, 0, 0.65) !important;\n  position: fixed !important;\n  bottom: 10px;\n  right: 20px;\n  text-overflow: wrap !important;\n  z-index: 100000;\n}\n\n.wasmboy {\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.wasmboy__title {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  font-size: 1rem;\n}\n\n.wasmboy__canvas-container {\n  text-align: center;\n}\n\n.wasmboy__canvas-container__canvas {\n  border: 1px solid black;\n\n  /* Width and height are 160x144 pixel aspect ratio in vw */\n  width: 50vw;\n  height: 45vw;\n  min-width: 160px;\n  min-height: 144px;\n  max-width: 640px;\n  max-height: 576px;\n}\n\n/* https://atomiks.github.io/30-seconds-of-css/ */\n@keyframes donut-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n.donut {\n  display: inline-block;\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: #7983ff;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  animation: donut-spin 1.2s linear infinite;\n}\n\n/* animate.css https://github.com/daneden/animate.css/blob/master/animate.css */\n.animated {\n  -webkit-animation-duration: 0.5s;\n  animation-duration: 0.5s;\n  -webkit-animation-fill-mode: both;\n  animation-fill-mode: both;\n}\n\n@-webkit-keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n.fadeIn {\n  -webkit-animation-name: fadeIn;\n  animation-name: fadeIn;\n}\n\n.modal-background {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  border: 5px solid rgba(0, 0, 0, 0.75);\n  border-radius: 5px;\n  background-color: #f5f5f5;\n  color: #020202;\n  padding: 10px;\n\n  width: 80vw;\n  height: 80vh;\n  max-width: 800px;\n  max-height: 800px;\n  min-width: 250px;\n  min-height: 300px;\n\n  overflow: auto;\n  z-index: 101;\n}\n";
  styleInject(css$1);

  var css$2 = "html {\n  background-color: #fcfcfc;\n}\n\n.wasmboy-benchmark {\n  padding: 10px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.wasmboy-benchmark__title {\n  margin-bottom: 20px;\n}\n\n.wasmboy-benchmark__link {\n  text-align: center;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.wasmboy-benchmark__notices {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.donut-center {\n  width: 100%;\n  height: 100px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.load-rom__load-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.load-rom__load-buttons > * {\n  margin-right: 10px;\n}\n\n.load-rom__load-buttons .file-button {\n  border-color: #dbdbdb !important;\n}\n\n.runner__frames-to-run > label {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.runner__frames-to-run > label > * {\n  margin-right: 10px;\n  width: initial;\n}\n\n.runner__frames-to-run > label > button {\n  flex-grow: 1;\n}\n\n.runner__output {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.runner__output > div {\n  text-align: center;\n}\n\n.runner__output > div > canvas {\n  min-width: 160px;\n  min-height: 144px;\n}\n\n.results {\n  text-align: center;\n}\n\n.results button {\n  word-wrap: break-word;\n  margin-bottom: 10px;\n}\n\n.results table {\n  margin-top: 10px;\n  min-height: 100px;\n  margin-bottom: 10px;\n}\n";
  styleInject(css$2);

  function valoo(v) {
    const cb = [];
    function value(c) {
      if (arguments.length) cb.map(f => { f && f(v=c); });
      return v;
    }
    value.on = c => {
      const i = cb.push(c)-1;
      return () => { cb[i] = 0; };
    };
    return value;
  }

  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation. All rights reserved.
  Licensed under the Apache License, Version 2.0 (the "License"); you may not use
  this file except in compliance with the License. You may obtain a copy of the
  License at http://www.apache.org/licenses/LICENSE-2.0

  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
  MERCHANTABLITY OR NON-INFRINGEMENT.

  See the Apache Version 2.0 License for specific language governing permissions
  and limitations under the License.
  ***************************************************************************** */

  var __assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
      return t;
  };

  var browsers = [
      ['firefox', /Firefox\/([0-9\.]+)(?:\s|$)/],
      ['opera', /Opera\/([0-9\.]+)(?:\s|$)/],
      ['opera', /OPR\/([0-9\.]+)(:?\s|$)$/],
      ['edge', /Edge\/([0-9\._]+)/],
      ['ie', /Trident\/7\.0.*rv\:([0-9\.]+)\).*Gecko$/],
      ['ie', /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
      ['ie', /MSIE\s(7\.0)/],
      ['safari', /Version\/([0-9\._]+).*Safari/],
      ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
      ['bb10', /BB10;\sTouch.*Version\/([0-9\.]+)/],
      ['android', /Android\s([0-9\.]+)/],
      ['ios', /Version\/([0-9\._]+).*Mobile.*Safari.*/],
      ['yandexbrowser', /YaBrowser\/([0-9\._]+)/],
      ['crios', /CriOS\/([0-9\.]+)(:?\s|$)/]
  ];
  var os = [
      'Windows Phone',
      'Android',
      'CentOS',
      { name: 'Chrome OS', pattern: 'CrOS' },
      'Debian',
      'Fedora',
      'FreeBSD',
      'Gentoo',
      'Haiku',
      'Kubuntu',
      'Linux Mint',
      'OpenBSD',
      'Red Hat',
      'SuSE',
      'Ubuntu',
      'Xubuntu',
      'Cygwin',
      'Symbian OS',
      'hpwOS',
      'webOS ',
      'webOS',
      'Tablet OS',
      'Tizen',
      'Linux',
      'Mac OS X',
      'Macintosh',
      'Mac',
      'Windows 98;',
      'Windows '
  ];
  var osVersions = {
      '10.0': '10',
      '6.4': '10 Technical Preview',
      '6.3': '8.1',
      '6.2': '8',
      '6.1': 'Server 2008 R2 / 7',
      '6.0': 'Server 2008 / Vista',
      '5.2': 'Server 2003 / XP 64-bit',
      '5.1': 'XP',
      '5.01': '2000 SP1',
      '5.0': '2000',
      '4.0': 'NT',
      '4.90': 'ME'
  };

  var mobileRegExp = new RegExp(['(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|',
      'compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|',
      'midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)',
      '\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|',
      'wap|windows ce|xda|xiino'].join(''), 'i');
  var mobilePrefixRegExp = new RegExp(['1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|',
      'ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|',
      'avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|',
      'cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|',
      'ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|',
      'g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|',
      'hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|',
      'i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|',
      'kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])',
      '|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|',
      'mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|',
      'n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|',
      'op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|',
      'po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|',
      'raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|',
      'se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|k\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|',
      'so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|',
      'tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|',
      'veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|',
      'w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-'].join(''), 'i');

  var Detector = /** @class */ (function () {
      function Detector(userAgent, navigator, process) {
          this.navigator = navigator;
          this.process = process;
          this.userAgent = userAgent
              ? userAgent
              : this.navigator ? (navigator.userAgent || navigator.vendor) : '';
      }
      Detector.prototype.detect = function () {
          if (this.process && !this.userAgent) {
              var version = this.process.version.slice(1).split('.').slice(0, 3);
              var versionTail = Array.prototype.slice.call(version, 1).join('') || '0';
              return {
                  name: 'node',
                  version: version.join('.'),
                  versionNumber: parseFloat(version[0] + "." + versionTail),
                  mobile: false,
                  os: this.process.platform
              };
          }
          if (!this.userAgent)
              this.handleMissingError();
          return __assign({}, this.checkBrowser(), this.checkMobile(), this.checkOs());
      };
      Detector.prototype.checkBrowser = function () {
          var _this = this;
          return browsers
              .filter(function (definition) { return definition[1].test(_this.userAgent); })
              .map(function (definition) {
              var match = definition[1].exec(_this.userAgent);
              var version = match && match[1].split(/[._]/).slice(0, 3);
              var versionTails = Array.prototype.slice.call(version, 1).join('') || '0';
              if (version && version.length < 3)
                  Array.prototype.push.apply(version, version.length === 1 ? [0, 0] : [0]);
              return {
                  name: String(definition[0]),
                  version: version.join('.'),
                  versionNumber: Number(version[0] + "." + versionTails)
              };
          })
              .shift();
      };
      Detector.prototype.checkMobile = function () {
          var agentPrefix = this.userAgent.substr(0, 4);
          var mobile = mobileRegExp.test(this.userAgent) || mobilePrefixRegExp.test(agentPrefix);
          return { mobile: mobile };
      };
      Detector.prototype.checkOs = function () {
          var _this = this;
          return os
              .map(function (definition) {
              var name = definition.name || definition;
              var pattern = _this.getOsPattern(definition);
              return {
                  name: name,
                  pattern: pattern,
                  value: RegExp("\\b" + pattern.replace(/([ -])(?!$)/g, '$1?') + "(?:x?[\\d._]+|[ \\w.]*)", 'i').exec(_this.userAgent)
              };
          })
              .filter(function (definition) { return definition.value; })
              .map(function (definition) {
              var os$$1 = definition.value[0] || '';
              var osSuffix;
              if (definition.pattern &&
                  definition.name &&
                  /^Win/i.test(os$$1) &&
                  !/^Windows Phone /i.test(os$$1) &&
                  (osSuffix = osVersions[os$$1.replace(/[^\d.]/g, '')]))
                  os$$1 = "Windows " + osSuffix;
              if (definition.pattern && definition.name)
                  os$$1 = os$$1.replace(RegExp(definition.pattern, 'i'), definition.name);
              os$$1 = os$$1
                  .replace(/ ce$/i, ' CE')
                  .replace(/\bhpw/i, 'web')
                  .replace(/\bMacintosh\b/, 'Mac OS')
                  .replace(/_PowerPC\b/i, ' OS')
                  .replace(/\b(OS X) [^ \d]+/i, '$1')
                  .replace(/\bMac (OS X)\b/, '$1')
                  .replace(/\/(\d)/, ' $1')
                  .replace(/_/g, '.')
                  .replace(/(?: BePC|[ .]*fc[ \d.]+)$/i, '')
                  .replace(/\bx86\.64\b/gi, 'x86_64')
                  .replace(/\b(Windows Phone) OS\b/, '$1')
                  .replace(/\b(Chrome OS \w+) [\d.]+\b/, '$1')
                  .split(' on ')[0]
                  .trim();
              os$$1 = /^(?:webOS|i(?:OS|P))/.test(os$$1)
                  ? os$$1
                  : (os$$1.charAt(0).toUpperCase() + os$$1.slice(1));
              return { os: os$$1 };
          })
              .shift();
      };
      Detector.prototype.getOsPattern = function (definition) {
          var definitionInterface = definition;
          return (typeof definition === 'string'
              ? definition
              : undefined) ||
              definitionInterface.pattern ||
              definitionInterface.name;
      };
      Detector.prototype.handleMissingError = function () {
          throw new Error('Please give user-agent.\n> browser(navigator.userAgent or res.headers[\'user-agent\']).');
      };
      return Detector;
  }());

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  var _global = createCommonjsModule(function (module) {
  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math
    ? window : typeof self != 'undefined' && self.Math == Math ? self
    // eslint-disable-next-line no-new-func
    : Function('return this')();
  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
  });

  var _core = createCommonjsModule(function (module) {
  var core = module.exports = { version: '2.5.7' };
  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
  });
  var _core_1 = _core.version;

  var _isObject = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };

  var _anObject = function (it) {
    if (!_isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };

  var _fails = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };

  // Thank's IE8 for his funny defineProperty
  var _descriptors = !_fails(function () {
    return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
  });

  var document$1 = _global.document;
  // typeof document.createElement is 'object' in old IE
  var is = _isObject(document$1) && _isObject(document$1.createElement);
  var _domCreate = function (it) {
    return is ? document$1.createElement(it) : {};
  };

  var _ie8DomDefine = !_descriptors && !_fails(function () {
    return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
  });

  // 7.1.1 ToPrimitive(input [, PreferredType])

  // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string
  var _toPrimitive$1 = function (it, S) {
    if (!_isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };

  var dP = Object.defineProperty;

  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    _anObject(O);
    P = _toPrimitive$1(P, true);
    _anObject(Attributes);
    if (_ie8DomDefine) try {
      return dP(O, P, Attributes);
    } catch (e) { /* empty */ }
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };

  var _objectDp = {
  	f: f
  };

  var _propertyDesc = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };

  var _hide = _descriptors ? function (object, key, value) {
    return _objectDp.f(object, key, _propertyDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };

  var hasOwnProperty = {}.hasOwnProperty;
  var _has = function (it, key) {
    return hasOwnProperty.call(it, key);
  };

  var id$1 = 0;
  var px = Math.random();
  var _uid = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id$1 + px).toString(36));
  };

  var _redefine = createCommonjsModule(function (module) {
  var SRC = _uid('src');
  var TO_STRING = 'toString';
  var $toString = Function[TO_STRING];
  var TPL = ('' + $toString).split(TO_STRING);

  _core.inspectSource = function (it) {
    return $toString.call(it);
  };

  (module.exports = function (O, key, val, safe) {
    var isFunction = typeof val == 'function';
    if (isFunction) _has(val, 'name') || _hide(val, 'name', key);
    if (O[key] === val) return;
    if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
    if (O === _global) {
      O[key] = val;
    } else if (!safe) {
      delete O[key];
      _hide(O, key, val);
    } else if (O[key]) {
      O[key] = val;
    } else {
      _hide(O, key, val);
    }
  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
  })(Function.prototype, TO_STRING, function toString() {
    return typeof this == 'function' && this[SRC] || $toString.call(this);
  });
  });

  var _aFunction = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };

  // optional / simple context binding

  var _ctx = function (fn, that, length) {
    _aFunction(fn);
    if (that === undefined) return fn;
    switch (length) {
      case 1: return function (a) {
        return fn.call(that, a);
      };
      case 2: return function (a, b) {
        return fn.call(that, a, b);
      };
      case 3: return function (a, b, c) {
        return fn.call(that, a, b, c);
      };
    }
    return function (/* ...args */) {
      return fn.apply(that, arguments);
    };
  };

  var PROTOTYPE = 'prototype';

  var $export = function (type, name, source) {
    var IS_FORCED = type & $export.F;
    var IS_GLOBAL = type & $export.G;
    var IS_STATIC = type & $export.S;
    var IS_PROTO = type & $export.P;
    var IS_BIND = type & $export.B;
    var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];
    var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
    var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
    var key, own, out, exp;
    if (IS_GLOBAL) source = name;
    for (key in source) {
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined;
      // export native or passed
      out = (own ? target : source)[key];
      // bind timers to global for call from export context
      exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
      // extend global
      if (target) _redefine(target, key, out, type & $export.U);
      // export
      if (exports[key] != out) _hide(exports, key, exp);
      if (IS_PROTO && expProto[key] != out) expProto[key] = out;
    }
  };
  _global.core = _core;
  // type bitmap
  $export.F = 1;   // forced
  $export.G = 2;   // global
  $export.S = 4;   // static
  $export.P = 8;   // proto
  $export.B = 16;  // bind
  $export.W = 32;  // wrap
  $export.U = 64;  // safe
  $export.R = 128; // real proto method for `library`
  var _export = $export;

  var toString = {}.toString;

  var _cof = function (it) {
    return toString.call(it).slice(8, -1);
  };

  // fallback for non-array-like ES3 and non-enumerable old V8 strings

  // eslint-disable-next-line no-prototype-builtins
  var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return _cof(it) == 'String' ? it.split('') : Object(it);
  };

  // 7.2.1 RequireObjectCoercible(argument)
  var _defined = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };

  // 7.1.13 ToObject(argument)

  var _toObject = function (it) {
    return Object(_defined(it));
  };

  // 7.1.4 ToInteger
  var ceil = Math.ceil;
  var floor = Math.floor;
  var _toInteger = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };

  // 7.1.15 ToLength

  var min = Math.min;
  var _toLength = function (it) {
    return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
  };

  // 7.2.2 IsArray(argument)

  var _isArray = Array.isArray || function isArray(arg) {
    return _cof(arg) == 'Array';
  };

  var _shared = createCommonjsModule(function (module) {
  var SHARED = '__core-js_shared__';
  var store = _global[SHARED] || (_global[SHARED] = {});

  (module.exports = function (key, value) {
    return store[key] || (store[key] = value !== undefined ? value : {});
  })('versions', []).push({
    version: _core.version,
    mode: 'global',
    copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
  });
  });

  var _wks = createCommonjsModule(function (module) {
  var store = _shared('wks');

  var Symbol = _global.Symbol;
  var USE_SYMBOL = typeof Symbol == 'function';

  var $exports = module.exports = function (name) {
    return store[name] || (store[name] =
      USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
  };

  $exports.store = store;
  });

  var SPECIES = _wks('species');

  var _arraySpeciesConstructor = function (original) {
    var C;
    if (_isArray(original)) {
      C = original.constructor;
      // cross-realm fallback
      if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;
      if (_isObject(C)) {
        C = C[SPECIES];
        if (C === null) C = undefined;
      }
    } return C === undefined ? Array : C;
  };

  // 9.4.2.3 ArraySpeciesCreate(originalArray, length)


  var _arraySpeciesCreate = function (original, length) {
    return new (_arraySpeciesConstructor(original))(length);
  };

  // 0 -> Array#forEach
  // 1 -> Array#map
  // 2 -> Array#filter
  // 3 -> Array#some
  // 4 -> Array#every
  // 5 -> Array#find
  // 6 -> Array#findIndex





  var _arrayMethods = function (TYPE, $create) {
    var IS_MAP = TYPE == 1;
    var IS_FILTER = TYPE == 2;
    var IS_SOME = TYPE == 3;
    var IS_EVERY = TYPE == 4;
    var IS_FIND_INDEX = TYPE == 6;
    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
    var create = $create || _arraySpeciesCreate;
    return function ($this, callbackfn, that) {
      var O = _toObject($this);
      var self = _iobject(O);
      var f = _ctx(callbackfn, that, 3);
      var length = _toLength(self.length);
      var index = 0;
      var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
      var val, res;
      for (;length > index; index++) if (NO_HOLES || index in self) {
        val = self[index];
        res = f(val, index, O);
        if (TYPE) {
          if (IS_MAP) result[index] = res;   // map
          else if (res) switch (TYPE) {
            case 3: return true;             // some
            case 5: return val;              // find
            case 6: return index;            // findIndex
            case 2: result.push(val);        // filter
          } else if (IS_EVERY) return false; // every
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
  };

  var _strictMethod = function (method, arg) {
    return !!method && _fails(function () {
      // eslint-disable-next-line no-useless-call
      arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
    });
  };

  var $filter = _arrayMethods(2);

  _export(_export.P + _export.F * !_strictMethod([].filter, true), 'Array', {
    // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
    filter: function filter(callbackfn /* , thisArg */) {
      return $filter(this, callbackfn, arguments[1]);
    }
  });

  var filter = _core.Array.filter;

  var $map = _arrayMethods(1);

  _export(_export.P + _export.F * !_strictMethod([].map, true), 'Array', {
    // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
    map: function map(callbackfn /* , thisArg */) {
      return $map(this, callbackfn, arguments[1]);
    }
  });

  var map = _core.Array.map;

  var _stringWs = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
    '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

  var space = '[' + _stringWs + ']';
  var non = '\u200b\u0085';
  var ltrim = RegExp('^' + space + space + '*');
  var rtrim = RegExp(space + space + '*$');

  var exporter = function (KEY, exec, ALIAS) {
    var exp = {};
    var FORCE = _fails(function () {
      return !!_stringWs[KEY]() || non[KEY]() != non;
    });
    var fn = exp[KEY] = FORCE ? exec(trim) : _stringWs[KEY];
    if (ALIAS) exp[ALIAS] = fn;
    _export(_export.P + _export.F * FORCE, 'String', exp);
  };

  // 1 -> String#trimLeft
  // 2 -> String#trimRight
  // 3 -> String#trim
  var trim = exporter.trim = function (string, TYPE) {
    string = String(_defined(string));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };

  var _stringTrim = exporter;

  // 21.1.3.25 String.prototype.trim()
  _stringTrim('trim', function ($trim) {
    return function trim() {
      return $trim(this, 3);
    };
  });

  var trim$1 = _core.String.trim;

  var injectableNavigator = typeof window !== 'undefined'
      ? window.navigator
      : undefined;
  var injectableProcess = typeof process !== 'undefined'
      ? process
      : undefined;
  function browserDetect (userAgent) {
      var detector = new Detector(userAgent, injectableNavigator, injectableProcess);
      return detector.detect();
  }

  var name = "wasmboy";
  var description = "Gameboy / Gameboy Color Emulator written for Web Assembly using AssemblyScript. Shell/Debugger in Preact";
  var keywords = [
  	"web-assembly",
  	"webassembly",
  	"gameboy",
  	"emulator",
  	"emulation",
  	"assemblyscript",
  	"gameboy-color"
  ];
  var author = "Aaron Turner";
  var version = "0.3.2";
  var license = "Apache-2.0";
  var homepage = "https://wasmboy.app";
  var repository = {
  	type: "git",
  	url: "git+https://github.com/torch2424/wasmBoy.git"
  };
  var bugs = {
  	url: "https://github.com/torch2424/wasmBoy/issues"
  };
  var main = "dist/wasmboy.wasm.cjs.js";
  var module$1 = "dist/wasmboy.wasm.esm.js";
  var browser = "dist/wasmboy.wasm.umd.js";
  var iife = "dist/wasmboy.wasm.iife.js";
  var scripts = {
  	prepare: "npx run-s core:build lib:build:wasm lib:build:ts",
  	start: "npx concurrently --kill-others --names \"DEBUGGER,CORE,LIB\" -c \"bgBlue.bold,bgMagenta.bold,bgGreen.bold\" \"npm run debugger:watch\" \"npm run core:watch\" \"npm run lib:watch:wasm\"",
  	"start:ts": "npx concurrently --kill-others --names \"DEBUGGER,LIBANDCORETS\" -c \"bgBlue.bold,bgGreen.bold\" \"npm run debugger:watch\" \"npm run lib:watch:ts\"",
  	dev: "npm run start",
  	watch: "npm run start",
  	"dev:ts": "npm run start:ts",
  	"watch:ts": "npm run start:ts",
  	build: "npx run-s core:build lib:build:wasm",
  	deploy: "npx run-s lib:deploy demo:deploy",
  	prettier: "npm run prettier:lint:fix",
  	"prettier:lint": "npx run-s prettier:lint:message prettier:lint:list",
  	"prettier:lint:message": "echo \"Listing unlinted files, will show nothing if everything is fine.\"",
  	"prettier:lint:list": "npx prettier --config .prettierrc --list-different rollup.*.js preact.config.js demo/**/*.js demo/**/*.css lib/**/*.js core/**/*.ts",
  	"prettier:lint:fix": "npx prettier --config .prettierrc --write rollup.*.js preact.config.js demo/**/*.js demo/**/*.css lib/**/*.js core/**/*.ts",
  	precommit: "npx pretty-quick --staged",
  	"core:watch": "npx watch \"npm run core:build\" core",
  	"core:build": "npx run-s core:build:asc core:build:dist core:build:done",
  	"core:build:asc": "npx asc core/index.ts -b dist/core/core.untouched.wasm -t dist/core/core.untouched.wast -O3 --validate --sourceMap core/dist/core.untouched.wasm.map --memoryBase 0",
  	"core:build:asc:measure": "npm run core:build:asc -- --measure --noEmit",
  	"core:build:ts:measure": "npx tsc --project core/tsconfig.json --noEmit --extendedDiagnostics",
  	"core:build:dist": "npx run-s core:build:dist:mkdir core:build:dist:cp",
  	"core:build:dist:mkdir": "mkdir -p build/assets",
  	"core:build:dist:cp": "cp dist/core/*.untouched.* build/assets",
  	"core:build:done": "echo \"Built Core!\"",
  	"lib:build": "npx run-s lib:build:wasm lib:build:ts",
  	"lib:watch:wasm": "npx rollup -c -w --environment WASM",
  	"lib:build:wasm": "npx rollup -c --environment PROD,WASM",
  	"lib:watch:ts": "npx rollup -c -w --environment TS",
  	"lib:build:ts": "npx rollup -c --environment PROD,TS",
  	"lib:build:ts:esnext": "npx rollup -c --environment PROD,TS,ES_NEXT",
  	"lib:build:ts:getcoreclosure": "npx rollup -c --environment PROD,TS,GET_CORE_CLOSURE",
  	"lib:deploy": "npx run-s core:build lib:build:wasm lib:build:ts lib:deploy:np",
  	"lib:deploy:np": "npx np",
  	test: "npm run test:accuracy",
  	"test:accuracy": "npx run-s build test:accuracy:nobuild",
  	"test:accuracy:nobuild": "node --experimental-worker node_modules/mocha/bin/_mocha test/accuracy/accuracy-test.js --exit",
  	"test:perf": "npm run test:performance",
  	"test:performance": "npx run-s build test:performance:nobuild",
  	"test:performance:nobuild": "node --experimental-worker node_modules/mocha/bin/_mocha test/performance/performance-test.js --exit",
  	"debugger:watch": "preact watch --src demo/debugger",
  	"debugger:serve": "npx run-s debugger:build debugger:serve:nobuild",
  	"debugger:serve:nobuild": "preact serve",
  	"debugger:build": "preact build -p --src demo/debugger --no-prerender --service-worker false",
  	"benchmark:build": "npx rollup -c --environment PROD,TS,BENCHMARK",
  	"benchmark:dev": "npm run benchmark:watch",
  	"benchmark:watch": "npx rollup -c -w --environment TS,BENCHMARK,SERVE",
  	"amp:build": "npx rollup -c --environment PROD,TS,AMP",
  	"amp:dev": "npm run amp:watch",
  	"amp:watch": "npx rollup -c -w --environment TS,AMP,SERVE",
  	"demo:cname": "echo 'wasmboy.app' > build/CNAME",
  	"demo:build": "npx run-s core:build lib:build debugger:build benchmark:build amp:build",
  	"demo:dist": "cp -r dist/ build/dist",
  	"demo:gh-pages": "npx gh-pages -d build",
  	"demo:deploy": "npx run-s demo:build demo:dist demo:cname demo:gh-pages"
  };
  var files = [
  	"dist",
  	"README.md",
  	"LICENSE"
  ];
  var dependencies = {
  	"audiobuffer-to-wav": "git+https://github.com/torch2424/audiobuffer-to-wav.git#es-module-rollup",
  	idb: "^2.1.3",
  	raf: "^3.4.0",
  	"responsive-gamepad": "0.1.3"
  };
  var devDependencies = {
  	"@ampproject/rollup-plugin-closure-compiler": "^0.7.2",
  	"@babel/core": "^7.1.2",
  	"@babel/plugin-proposal-class-properties": "^7.1.0",
  	"@babel/plugin-proposal-object-rest-spread": "^7.0.0",
  	"@babel/plugin-transform-react-jsx": "^7.0.0",
  	assemblyscript: "github:AssemblyScript/assemblyscript#c769f65bacd5392e5c9efab112b33244fc0a0c8f",
  	"babel-plugin-filter-imports": "^2.0.3",
  	"babel-preset-env": "^1.6.1",
  	"big-integer": "^1.6.38",
  	"browser-detect": "^0.2.28",
  	bulma: "^0.7.1",
  	"chart.js": "^2.7.3",
  	"chartjs-plugin-downsample": "^1.0.2",
  	concurrently: "^3.5.1",
  	"gh-pages": "^1.1.0",
  	husky: "^1.0.0-rc.8",
  	"load-script": "^1.0.0",
  	"markdown-table": "^1.1.1",
  	microseconds: "^0.1.0",
  	mocha: "^5.0.1",
  	np: "^3.0.0",
  	"npm-run-all": "^4.1.5",
  	"performance-now": "^2.1.0",
  	"pngjs-image": "^0.11.7",
  	preact: "^8.2.1",
  	"preact-cli": "^2.2.1",
  	"preact-compat": "^3.17.0",
  	"preact-portal": "^1.1.3",
  	prettier: "^1.12.1",
  	"pretty-quick": "^1.6.0",
  	"recursive-readdir-sync": "^1.0.6",
  	rollup: "^0.66.1",
  	"rollup-plugin-babel": "^4.0.3",
  	"rollup-plugin-bundle-size": "^1.0.2",
  	"rollup-plugin-commonjs": "^9.2.0",
  	"rollup-plugin-copy-glob": "^0.2.2",
  	"rollup-plugin-json": "^3.1.0",
  	"rollup-plugin-node-resolve": "^3.4.0",
  	"rollup-plugin-postcss": "^1.6.2",
  	"rollup-plugin-replace": "^2.1.0",
  	"rollup-plugin-serve": "^0.6.0",
  	"rollup-plugin-typescript": "^1.0.0",
  	"rollup-plugin-url": "^1.4.0",
  	"source-map-loader": "^0.2.4",
  	"stats-lite": "^2.2.0",
  	tslib: "^1.9.3",
  	typescript: "^3.1.3",
  	"uglifyjs-webpack-plugin": "^1.2.3",
  	"url-loader": "^1.0.1",
  	valoo: "^2.1.0",
  	watch: "^1.0.2",
  	"webpack-dev-server": "^3.1.10"
  };
  var packageJson = {
  	name: name,
  	description: description,
  	keywords: keywords,
  	author: author,
  	version: version,
  	license: license,
  	homepage: homepage,
  	repository: repository,
  	bugs: bugs,
  	main: main,
  	module: module$1,
  	browser: browser,
  	iife: iife,
  	scripts: scripts,
  	files: files,
  	dependencies: dependencies,
  	devDependencies: devDependencies
  };

  var wasmModuleUrl = "data:application/wasm;base64,"; // Import object for our core js wrapper
  // Log throttling for our core
  // The same log can't be output more than once every half second

  let logRequest = {};
  const wasmImportObject = {
    env: {
      log: (message, arg0, arg1, arg2, arg3, arg4, arg5) => {
        // Grab our string
        var len = new Uint32Array(wasmInstance.exports.memory.buffer, message, 1)[0];
        var str = String.fromCharCode.apply(null, new Uint16Array(wasmInstance.exports.memory.buffer, message + 4, len));
        if (arg0 !== -9999) str = str.replace('$0', arg0);
        if (arg1 !== -9999) str = str.replace('$1', arg1);
        if (arg2 !== -9999) str = str.replace('$2', arg2);
        if (arg3 !== -9999) str = str.replace('$3', arg3);
        if (arg4 !== -9999) str = str.replace('$4', arg4);
        if (arg5 !== -9999) str = str.replace('$5', arg5);
        console.log('[WasmBoy] ' + str);
      },
      hexLog: (arg0, arg1, arg2, arg3, arg4, arg5) => {
        if (!logRequest[arg0]) {
          // Grab our arguments, and log as hex
          let logString = '[WasmBoy]';
          if (arg0 !== -9999) logString += ` 0x${arg0.toString(16)} `;
          if (arg1 !== -9999) logString += ` 0x${arg1.toString(16)} `;
          if (arg2 !== -9999) logString += ` 0x${arg2.toString(16)} `;
          if (arg3 !== -9999) logString += ` 0x${arg3.toString(16)} `;
          if (arg4 !== -9999) logString += ` 0x${arg4.toString(16)} `;
          if (arg5 !== -9999) logString += ` 0x${arg5.toString(16)} `; // Uncomment to unthrottle

          console.log(logString); // Comment the lines below to disable throttle

          /*logRequest[arg0] = true;
          setTimeout(() => {
            console.log(logString);
            logRequest[arg0] = false;
          }, logThrottleLength);*/
        }
      }
    }
  }; // JS Implementation of Instantiating the Wasm Build

  const wasmBrowserInstantiate = async wasmModuleUrl$$1 => {
    let response = undefined; // Safari does not support .instantiateStreaming()
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming

    if (WebAssembly.instantiateStreaming) {
      response = await WebAssembly.instantiateStreaming(fetch(wasmModuleUrl$$1), wasmImportObject);
    } else {
      const fetchAndInstantiateTask = async () => {
        const wasmArrayBuffer = await fetch(wasmModuleUrl$$1).then(response => response.arrayBuffer());
        return WebAssembly.instantiate(wasmArrayBuffer, wasmImportObject);
      };

      response = await fetchAndInstantiateTask();
    }

    return response;
  };

  const readBase64Buffer = base64String => {
    return Buffer.from(base64String.split(',')[1], 'base64');
  };

  const wasmNodeInstantiate = async wasmModuleUrl$$1 => {
    const wasmBuffer = readBase64Buffer(wasmModuleUrl$$1);
    return await WebAssembly.instantiate(wasmBuffer, wasmImportObject);
  }; // Function to instantiate our wasm and respond back


  const getWasmBoyWasmCore = async isInBrowser => {
    let response = undefined; // Allow forcing the browser mode, but also check manually

    if (isInBrowser) {
      response = await wasmBrowserInstantiate(wasmModuleUrl);
    } else {
      if (typeof window !== 'undefined' || typeof self !== 'undefined') {
        response = await wasmBrowserInstantiate(wasmModuleUrl);
      } else {
        response = await wasmNodeInstantiate(wasmModuleUrl);
      }
    } // Set our wasmInstance and byte memory in the main thread


    const instance = response.instance;
    const byteMemory = new Uint8Array(instance.exports.memory.buffer);
    return {
      instance,
      byteMemory,
      type: 'Web Assembly'
    };
  };

  // Banner placed by rollup to mock out some items on our esm build
  // This is useful for things like wasmmemory
  const wasmboyMemorySize = 0x8b0000; // Simply initialized to the size we need

  const wasmByteMemory = new Uint8ClampedArray(wasmboyMemorySize); // Memory mock

  const memory = {
    size: () => {
      return wasmboyMemorySize;
    },
    grow: () => {},
    wasmByteMemory: wasmByteMemory
  };

  const load = offset => {
    return wasmByteMemory[offset];
  };

  const store = (offset, value) => {
    wasmByteMemory[offset] = value;
  };

  const abs = value => {
    return Math.abs(value);
  }; // Constants that will be shared by the wasm core of the emulator
  // And libraries built around the wasm (such as the official JS), or @CryZe wasmboy-rs
  // ----------------------------------
  // Wasmboy Memory Map
  // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing
  // ----------------------------------
  // WasmBoy


  var WASMBOY_MEMORY_LOCATION = 0x000000;
  var WASMBOY_MEMORY_SIZE = 0x8b0000;
  var WASMBOY_WASM_PAGES = WASMBOY_MEMORY_SIZE / 1024 / 64; // AssemblyScript

  var ASSEMBLYSCRIPT_MEMORY_LOCATION = 0x000000;
  var ASSEMBLYSCRIPT_MEMORY_SIZE = 0x000400; // WasmBoy States

  var WASMBOY_STATE_LOCATION = 0x000400;
  var WASMBOY_STATE_SIZE = 0x000400; // Gameboy Internal Memory

  var GAMEBOY_INTERNAL_MEMORY_LOCATION = 0x000800;
  var GAMEBOY_INTERNAL_MEMORY_SIZE = 0x00ffff;
  var VIDEO_RAM_LOCATION = 0x000800;
  var VIDEO_RAM_SIZE = 0x004000;
  var WORK_RAM_LOCATION = 0x004800;
  var WORK_RAM_SIZE = 0x008000;
  var OTHER_GAMEBOY_INTERNAL_MEMORY_LOCATION = 0x00c800;
  var OTHER_GAMEBOY_INTERNAL_MEMORY_SIZE = 0x004000; // Graphics Output

  var GRAPHICS_OUTPUT_LOCATION = 0x010800;
  var GRAPHICS_OUTPUT_SIZE = 0x07f400;
  var GBC_PALETTE_LOCATION = 0x010800;
  var GBC_PALETTE_SIZE = 0x000200;
  var BG_PRIORITY_MAP_LOCATION = 0x011000;
  var BG_PRIORITY_MAP_SIZE = 0x005c00;
  var FRAME_LOCATION = 0x016c00;
  var FRAME_SIZE = 0x016c00;
  var BACKGROUND_MAP_LOCATION = 0x038c00;
  var BACKGROUND_MAP_SIZE = 0x030000;
  var TILE_DATA_LOCATION = 0x068c00;
  var TILE_DATA_SIZE = 0x024000;
  var OAM_TILES_LOCATION = 0x08cc00;
  var OAM_TILES_SIZE = 0x003000; // Audio Output

  var AUDIO_BUFFER_LOCATION = 0x08fc00;
  var AUDIO_BUFFER_SIZE = 0x020000; // Catridge Memory

  var CARTRIDGE_RAM_LOCATION = 0x0afc00;
  var CARTRIDGE_RAM_SIZE = 0x020000;
  var CARTRIDGE_ROM_LOCATION = 0x0cfc00;
  var CARTRIDGE_ROM_SIZE = 0x7e0400;

  var Config =
  /** @class */
  function () {
    function Config() {} // Boot Rom


    Config.enableBootRom = false; // GBC Preference

    Config.useGbcWhenAvailable = true; // Batch Processing

    Config.audioBatchProcessing = false;
    Config.graphicsBatchProcessing = false;
    Config.timersBatchProcessing = false; // Scanline Rendering

    Config.graphicsDisableScanlineRendering = false; // Acumulate Sound Samples

    Config.audioAccumulateSamples = false; // Tile Rednering

    Config.tileRendering = false;
    Config.tileCaching = false;
    return Config;
  }(); // Grouped registers
  // possible overload these later to performace actions
  // AF, BC, DE, HL


  function concatenateBytes(highByte, lowByte) {
    //https://stackoverflow.com/questions/38298412/convert-two-bytes-into-signed-16-bit-integer-in-javascript
    return (highByte & 0xff) << 8 | lowByte & 0xff;
  }

  function splitHighByte(groupedByte) {
    return (groupedByte & 0xff00) >> 8;
  }

  function splitLowByte(groupedByte) {
    return groupedByte & 0x00ff;
  }

  function rotateByteLeft(value) {
    // Rotate left
    // https://stackoverflow.com/questions/19204750/how-do-i-perform-a-circular-rotation-of-a-byte
    // 4-bit example:
    // 1010 -> 0100 | 0001
    return u8Portable(value << 1 | value >> 7);
  }

  function rotateByteLeftThroughCarry(value) {
    // Example: https://github.com/nakardo/node-gameboy/blob/master/lib/cpu/opcodes.js
    // Through carry meaning, instead of raotating the bit that gets dropped off, but the carry there instead
    return u8Portable(value << 1 | getCarryFlag$$1());
  }

  function rotateByteRight(value) {
    // Rotate right
    // 4-bit example:
    // 1010 -> 0101 | 0000
    return u8Portable(value >> 1 | value << 7);
  }

  function rotateByteRightThroughCarry(value) {
    // Example: https://github.com/nakardo/node-gameboy/blob/master/lib/cpu/opcodes.js
    // Through carry meaning, instead of raotating the bit that gets dropped off, put the carry there instead
    return u8Portable(value >> 1 | getCarryFlag$$1() << 7);
  }

  function setBitOnByte(bitPosition, byte) {
    return byte | 0x01 << bitPosition;
  }

  function resetBitOnByte(bitPosition, byte) {
    return byte & ~(0x01 << bitPosition);
  }

  function checkBitOnByte(bitPosition, byte) {
    // Perforamnce improvements
    // https://github.com/AssemblyScript/assemblyscript/issues/40
    return (byte & 1 << bitPosition) != 0;
  } // Portable Code for JS Wasm Benchmarking


  function u8Portable(param) {
    return param & 0xff;
  }

  function u16Portable(param) {
    return param & 0xffff;
  }

  function i8Portable(param) {
    // JS ints are all i32, therefore, get the sign bit, and then convert accordingly
    // Example: https://blog.michaelyin.info/convert-8bit-byte-to-signed-int/
    var response = param;

    if (checkBitOnByte(7, response)) {
      response = (256 - param) * -1;
    }

    return response;
  }

  function i32Portable(param) {
    return param | 0;
  } // Set flag bit on on register F. For instance set zero flag to zero -> (7, 0)


  function setFlagBit(flagBit, flagValue) {
    var bitwiseOperand = u8Portable(1 << flagBit);

    if (flagValue > 0) {
      Cpu.registerF = Cpu.registerF | bitwiseOperand;
    } else {
      // XOR out the two ones
      bitwiseOperand = 0xff ^ bitwiseOperand;
      Cpu.registerF = Cpu.registerF & bitwiseOperand;
    }

    return Cpu.registerF;
  } // Overload the set flag bit for ease of use


  function setZeroFlag$$1(value) {
    setFlagBit(7, value);
  }

  function setSubtractFlag(value) {
    setFlagBit(6, value);
  }

  function setHalfCarryFlag(value) {
    setFlagBit(5, value);
  }

  function setCarryFlag(value) {
    setFlagBit(4, value);
  } // Getters for flags


  function getZeroFlag$$1() {
    return Cpu.registerF >> 7 & 0x01;
  }

  function getSubtractFlag() {
    return Cpu.registerF >> 6 & 0x01;
  }

  function getHalfCarryFlag() {
    return Cpu.registerF >> 5 & 0x01;
  }

  function getCarryFlag$$1() {
    return Cpu.registerF >> 4 & 0x01;
  } // Must be run before the register actually performs the add
  // amountToAdd i16, since max number can be an u8


  function checkAndSetEightBitHalfCarryFlag(value, amountToAdd) {
    if (amountToAdd >= 0) {
      // https://robdor.com/2016/08/10/gameboy-emulator-half-carry-flag/
      var result = u8Portable((value & 0x0f) + (amountToAdd & 0x0f)) & 0x10;

      if (result !== 0x00) {
        setHalfCarryFlag(1);
      } else {
        setHalfCarryFlag(0);
      }
    } else {
      // From: https://github.com/djhworld/gomeboycolor/blob/master/src/cpu/index.go
      // CTRL+F "subBytes(a, b byte)"
      if ((abs(amountToAdd) & 0x0f) > (value & 0x0f)) {
        setHalfCarryFlag(1);
      } else {
        setHalfCarryFlag(0);
      }
    }
  }

  function checkAndSetEightBitCarryFlag(value, amountToAdd) {
    if (amountToAdd >= 0) {
      var result = u8Portable(value + amountToAdd);

      if (value > result) {
        setCarryFlag(1);
      } else {
        setCarryFlag(0);
      }
    } else {
      if (abs(amountToAdd) > value) {
        setCarryFlag(1);
      } else {
        setCarryFlag(0);
      }
    }
  } // Function to handle 16 bit addition overflow, and set the carry flags accordingly
  // i32 on valueTwo to support passing signed immedaite values


  function checkAndSetSixteenBitFlagsAddOverflow(valueOne, valueTwo, useStackPointerBits) {
    // need to differentiate between HL and SP
    // HL carries are at 11 and 15, SP carries are at 3 and 7 :p
    if (useStackPointerBits) {
      // Logic from : https://github.com/nakardo/node-gameboy/blob/master/lib/cpu/opcodes.js
      // CTRL+F add_sp_n
      // using the stack pointer bits means we can safely assume the value is signed
      var signedValueOne = valueOne;
      var result = signedValueOne + valueTwo;
      var flagXor = signedValueOne ^ valueTwo ^ result;

      if ((flagXor & 0x10) !== 0) {
        setHalfCarryFlag(1);
      } else {
        setHalfCarryFlag(0);
      }

      if ((flagXor & 0x100) !== 0) {
        setCarryFlag(1);
      } else {
        setCarryFlag(0);
      }
    } else {
      // Logic from: https://github.com/djhworld/gomeboycolor/blob/master/src/cpu/index.go
      // CTRL+F addWords
      // Value two is not signed
      var result = u16Portable(valueOne + valueTwo); // Check the carry flag by allowing the overflow

      if (result < valueOne) {
        setCarryFlag(1);
      } else {
        setCarryFlag(0);
      } // To check for half carry flag (bit 15), by XOR'ing valyes, and and'ing the bit in question


      var halfCarryXor = valueOne ^ valueTwo ^ result;
      var halfCarryAnd = u16Portable(halfCarryXor & 0x1000);

      if (halfCarryAnd !== 0x00) {
        setHalfCarryFlag(1);
      } else {
        setHalfCarryFlag(0);
      }
    }
  } // Class for GBC Color palletes
  // http://gbdev.gg8.se/wiki/articles/Video_Display#FF68_-_BCPS.2FBGPI_-_CGB_Mode_Only_-_Background_Palette_Index


  var Palette =
  /** @class */
  function () {
    function Palette() {}

    Palette.memoryLocationBackgroundPaletteIndex = 0xff68;
    Palette.memoryLocationBackgroundPaletteData = 0xff69;
    Palette.memoryLocationSpritePaletteIndex = 0xff6a;
    Palette.memoryLocationSpritePaletteData = 0xff6b;
    return Palette;
  }();

  function initializePalette() {
    if (Cpu.GBCEnabled) {
      // GBC Palettes
      eightBitStoreIntoGBMemory(0xff68, 0xc0);
      eightBitStoreIntoGBMemory(0xff69, 0xff);
      eightBitStoreIntoGBMemory(0xff6a, 0xc1);
      eightBitStoreIntoGBMemory(0xff6b, 0x0d);
    } else {
      // GBC Palettes
      eightBitStoreIntoGBMemory(0xff68, 0xff);
      eightBitStoreIntoGBMemory(0xff69, 0xff);
      eightBitStoreIntoGBMemory(0xff6a, 0xff);
      eightBitStoreIntoGBMemory(0xff6b, 0xff);
    }
  } // Simple get pallete color or monochroime GB
  // shouldRepresentColorByColorId is good for debugging tile data for GBC games that don't have
  // monochromePalettes


  function getMonochromeColorFromPalette(colorId, paletteMemoryLocation, shouldRepresentColorByColorId) {
    if (shouldRepresentColorByColorId === void 0) {
      shouldRepresentColorByColorId = false;
    } // Shift our paletteByte, 2 times for each color ID
    // And off any extra bytes
    // Return our Color (00 - white, 01 - light grey, 10 Dark grey, or 11 - Black)


    var color = colorId;

    if (!shouldRepresentColorByColorId) {
      color = eightBitLoadFromGBMemory(paletteMemoryLocation) >> colorId * 2 & 0x03;
    } // Since our max is 254, and max is 3.
    // monochrome color palette is modified from bgb
    // TODO: Make these colors into a constant


    var rgbColor = 242;

    switch (color) {
      case 0:
        break;

      case 1:
        rgbColor = 160;
        break;

      case 2:
        rgbColor = 88;
        break;

      case 3:
        rgbColor = 8;
        break;
    }

    return rgbColor;
  }

  function writeColorPaletteToMemory(offset, value) {
    // FF68
    //  Bit 0-5   Index (00-3F)
    if (offset === Palette.memoryLocationBackgroundPaletteData || offset === Palette.memoryLocationSpritePaletteData) {
      // Get the palette index
      var paletteIndex = eightBitLoadFromGBMemory(offset - 1); // Clear the 6th bit, as it does nothing

      paletteIndex = resetBitOnByte(6, paletteIndex); // Check if we are changing the sprite pallete data

      var isSprite = false;

      if (offset === Palette.memoryLocationSpritePaletteData) {
        isSprite = true;
      }

      storePaletteByteInWasmMemory(paletteIndex, value, isSprite);
      incrementPaletteIndexIfSet(paletteIndex, offset - 1);
    }
  } // Functions to Handle Write to pallete data registers
  // http://gbdev.gg8.se/wiki/articles/Video_Display#FF68_-_BCPS.2FBGPI_-_CGB_Mode_Only_-_Background_Palette_Index
  // Function to handle incrementing the pallete index if required


  function incrementPaletteIndexIfSet(paletteIndex, offset) {
    // Check ther auto increment box
    if (checkBitOnByte(7, paletteIndex)) {
      // Increment the index, and return the value before the increment
      // Ensure we don't ouverflow our auto increment bit
      paletteIndex += 1;
      paletteIndex = setBitOnByte(7, paletteIndex);
      eightBitStoreIntoGBMemory(offset, paletteIndex);
    }
  } // FF68
  // Bit 0-5   Index (00-3F)
  // Bit 7     Auto Increment  (0=Disabled, 1=Increment after Writing)
  // Index is 00-0x3F because the means 0 - 63 (64),
  // and apparently there are 8 bytes per pallete to describe Color 0-3 (4 colors),
  // and 0-7 (8 palltetes). Therefore, 64!


  function getRgbColorFromPalette(paletteId, colorId, isSprite) {
    // Each Pallete takes 8 bytes, so multiply by 8 to get the pallete
    // And Each color takes 2 bytes, therefore, multiple by 2 for the correct color bytes in the palette
    var paletteIndex = paletteId * 8 + colorId * 2; // Load the Color that is seperated into two bytes

    var paletteHighByte = loadPaletteByteFromWasmMemory(paletteIndex + 1, isSprite);
    var paletteLowByte = loadPaletteByteFromWasmMemory(paletteIndex, isSprite); // Return the concatenated color byte

    return concatenateBytes(paletteHighByte, paletteLowByte);
  } // Function to return the color from a passed 16 bit color pallette


  function getColorComponentFromRgb(colorId, colorRgb) {
    // Get our bitmask for the color ID
    // bit mask tested good :)
    var bitMask = 0x1f << colorId * 5;
    var colorValue = (colorRgb & bitMask) >> colorId * 5; // Goal is to reach 254 for each color, so 255 / 31 (0x1F) ~8 TODO: Make exact
    // Want 5 bits for each

    return colorValue * 8;
  } // Function to load a byte from our Gbc Palette memory


  function loadPaletteByteFromWasmMemory(paletteIndexByte, isSprite) {
    // Clear the top two bits to just get the bottom palette Index
    var paletteIndex = paletteIndexByte & 0x3f; // Move over the palette index to not overlap the background has 0x3F, so Zero for Sprites is 0x40)

    if (isSprite) {
      paletteIndex += 0x40;
    }

    return load(GBC_PALETTE_LOCATION + paletteIndex);
  } // Function to store a byte to our Gbc Palette memory


  function storePaletteByteInWasmMemory(paletteIndexByte, value, isSprite) {
    // Clear the top two bits to just get the bottom palette Index
    var paletteIndex = paletteIndexByte & 0x3f; // Move over the palette index to not overlap the background (has 0x3F, so Zero for Sprites is 0x40)

    if (isSprite) {
      paletteIndex += 0x40;
    }

    store(GBC_PALETTE_LOCATION + paletteIndex, value);
  } // https://github.com/torch2424/wasmBoy/issues/51


  function addPriorityforPixel(x, y, colorId, hasGbcBgPriority) {
    if (colorId === void 0) {
      colorId = 0;
    }

    if (hasGbcBgPriority === void 0) {
      hasGbcBgPriority = false;
    }

    var bgPriorityByte = colorId & 0x03;

    if (hasGbcBgPriority) {
      bgPriorityByte = setBitOnByte(2, bgPriorityByte);
    }

    store(BG_PRIORITY_MAP_LOCATION + getPixelStart(x, y), bgPriorityByte);
  }

  function getPriorityforPixel(x, y) {
    return load(BG_PRIORITY_MAP_LOCATION + getPixelStart(x, y));
  }

  function clearPriorityMap() {
    for (var y = 0; y < 144; y++) {
      for (var x = 0; x < 160; x++) {
        store(BG_PRIORITY_MAP_LOCATION + getPixelStart(x, y), 0);
      }
    }
  }

  function getPixelStart(x, y) {
    // Get the pixel number
    return y * 160 + x;
  } // Functions for performance hacks, and debugging tiles


  var TileCache =
  /** @class */
  function () {
    function TileCache() {}

    TileCache.tileId = -1;
    TileCache.horizontalFlip = false;
    TileCache.nextXIndexToPerformCacheCheck = -1;
    return TileCache;
  }();

  function resetTileCache() {
    TileCache.tileId = -1;
    TileCache.nextXIndexToPerformCacheCheck = -1;
  }

  function drawPixelsFromLineOfTile(tileId, tileDataMemoryLocation, vramBankId, tileLineXStart, tileLineXEnd, tileLineY, outputLineX, outputLineY, outputWidth, wasmMemoryStart, shouldRepresentMonochromeColorByColorId, paletteLocation, bgMapAttributes) {
    if (shouldRepresentMonochromeColorByColorId === void 0) {
      shouldRepresentMonochromeColorByColorId = false;
    }

    if (paletteLocation === void 0) {
      paletteLocation = 0;
    }

    if (bgMapAttributes === void 0) {
      bgMapAttributes = -1;
    } // Get our number of pixels drawn


    var pixelsDrawn = 0; // Get our tile data address

    var tileDataAddress = getTileDataAddress(tileDataMemoryLocation, tileId); // Get the bytes for our tile

    var byteOneForLineOfTilePixels = loadFromVramBank(tileDataAddress + tileLineY * 2, vramBankId);
    var byteTwoForLineOfTilePixels = loadFromVramBank(tileDataAddress + tileLineY * 2 + 1, vramBankId); // Loop through our X values to draw

    for (var x = tileLineXStart; x <= tileLineXEnd; x++) {
      // First find where we are going to do our final output x
      // And don't allow any width overflow
      var iteratedOutputX = outputLineX + (x - tileLineXStart);

      if (iteratedOutputX < outputWidth) {
        // However, We need to reverse our byte (if not horizontally flipped),
        // As pixel 0 is on byte 7, and pixel 1 is on byte 6, etc...
        // Therefore, is pixelX was 2, then really is need to be 5
        // So 2 - 7 = -5, * 1 = 5
        // Or to simplify, 7 - 2 = 5 haha!
        var pixelXInTile = x;

        if (bgMapAttributes < 0 || !checkBitOnByte(5, bgMapAttributes)) {
          pixelXInTile = 7 - pixelXInTile;
        } // Get our pallete colors for the tile


        var paletteColorId = 0;

        if (checkBitOnByte(pixelXInTile, byteTwoForLineOfTilePixels)) {
          // Byte one represents the second bit in our color id, so bit shift
          paletteColorId += 1;
          paletteColorId = paletteColorId << 1;
        }

        if (checkBitOnByte(pixelXInTile, byteOneForLineOfTilePixels)) {
          paletteColorId += 1;
        } // Get the pallete


        var red = 0;
        var green = 0;
        var blue = 0; // Check if we should draw color or not

        if (bgMapAttributes >= 0) {
          // Call the helper function to grab the correct color from the palette
          // Get the palette index byte
          var bgPalette = bgMapAttributes & 0x07;
          var rgbColorPalette = getRgbColorFromPalette(bgPalette, paletteColorId, false); // Split off into red green and blue

          red = getColorComponentFromRgb(0, rgbColorPalette);
          green = getColorComponentFromRgb(1, rgbColorPalette);
          blue = getColorComponentFromRgb(2, rgbColorPalette);
        } else {
          if (paletteLocation <= 0) {
            paletteLocation = Graphics.memoryLocationBackgroundPalette;
          }

          var monochromeColor = getMonochromeColorFromPalette(paletteColorId, paletteLocation, shouldRepresentMonochromeColorByColorId);
          red = monochromeColor;
          green = monochromeColor;
          blue = monochromeColor;
        } // Finally Lets place a pixel in memory
        // Find where our tile line would start


        var pixelStart = getTilePixelStart(iteratedOutputX, outputLineY, outputWidth);
        store(wasmMemoryStart + pixelStart, red);
        store(wasmMemoryStart + pixelStart + 1, green);
        store(wasmMemoryStart + pixelStart + 2, blue);
        var gbcBgPriority = false;

        if (bgMapAttributes >= 0) {
          gbcBgPriority = checkBitOnByte(7, bgMapAttributes);
        } // Lastly, add the pixel to our background priority map
        // https://github.com/torch2424/wasmBoy/issues/51
        // Bits 0 & 1 will represent the color Id drawn by the BG/Window
        // Bit 2 will represent if the Bg/Window has GBC priority.


        addPriorityforPixel(iteratedOutputX, outputLineY, paletteColorId, gbcBgPriority);
        pixelsDrawn++;
      }
    }

    return pixelsDrawn;
  }

  function getTilePixelStart(outputLineX, outputLineY, outputWidth) {
    // Finally Lets place a pixel in memory
    var pixelStart = outputLineY * outputWidth + outputLineX; // Each pixel takes 3 slots, therefore, multiply by 3!

    return pixelStart * 3;
  }

  function getTileDataAddress(tileDataMemoryLocation, tileIdFromTileMap) {
    // Watch this part of The ultimate gameboy talk: https://youtu.be/HyzD8pNlpwI?t=30m50s
    // A line of 8 pixels on a single tile, is represented by 2 bytes.
    // since a single tile is 8x8 pixels, 8 * 2 = 16 bytes
    // Get the tile ID's tile addess from tile data.
    // For instance, let's say our first line of tile data represents tiles for letters:
    // a b c d e f g
    // And we have tileId 0x02. That means we want the tile for the 'c' character
    // Since each tile is 16 bytes, it would be the starting tileDataAddress + (tileId * tileSize), to skip over tiles we dont want
    // The whole signed thing is weird, and has something to do how the second set of tile data is stored :p
    if (tileDataMemoryLocation === Graphics.memoryLocationTileDataSelectZeroStart) {
      // Treat the tile Id as a signed int, subtract an offset of 128
      // if the tileId was 0 then the tile would be in memory region 0x9000-0x900F
      // NOTE: Assemblyscript, Can't cast to i16, need to make negative manually
      var signedTileId = tileIdFromTileMap + 128;

      if (checkBitOnByte(7, tileIdFromTileMap)) {
        signedTileId = tileIdFromTileMap - 128;
      }

      return tileDataMemoryLocation + signedTileId * 16;
    } // if the background layout gave us the tileId 0, then the tile data would be between 0x8000-0x800F.


    return tileDataMemoryLocation + tileIdFromTileMap * 16;
  } // Functions to help with Handling Duty on Square Channels
  // Since there are no 2d arrays, we will use a byte to represent duty cycles (wave form from percentages)


  function isDutyCycleClockPositiveOrNegativeForWaveform(channelDuty, waveFormPositionOnDuty) {
    // Get our Wave Form According to the Duty
    // Default to a duty of 1
    // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Square_Wave
    switch (channelDuty) {
      case 0x01:
        // 1000 0001
        return checkBitOnByte(waveFormPositionOnDuty, 0x81);

      case 0x02:
        // 1000 0111
        return checkBitOnByte(waveFormPositionOnDuty, 0x87);

      case 0x03:
        // 0111 1110
        return checkBitOnByte(waveFormPositionOnDuty, 0x7e);

      default:
        // 0000 0001
        return checkBitOnByte(waveFormPositionOnDuty, 0x01);
    }
  } // NOTE: Tons of Copy-pasta btween channels, because Classes cannot be instantiated yet in assemblyscript


  var Channel1 =
  /** @class */
  function () {
    function Channel1() {}

    Channel1.updateNRx0 = function (value) {
      Channel1.NRx0SweepPeriod = (value & 0x70) >> 4;
      Channel1.NRx0Negate = checkBitOnByte(3, value);
      Channel1.NRx0SweepShift = value & 0x07;
    };

    Channel1.updateNRx1 = function (value) {
      Channel1.NRx1Duty = value >> 6 & 0x03;
      Channel1.NRx1LengthLoad = value & 0x3f; // Also need to set our length counter. Taken from the old, setChannelLengthCounter
      // Channel length is determined by 64 (or 256 if channel 3), - the length load
      // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Registers
      // Note, this will be different for channel 3

      Channel1.lengthCounter = 64 - Channel1.NRx1LengthLoad;
    };

    Channel1.updateNRx2 = function (value) {
      Channel1.NRx2StartingVolume = value >> 4 & 0x0f;
      Channel1.NRx2EnvelopeAddMode = checkBitOnByte(3, value);
      Channel1.NRx2EnvelopePeriod = value & 0x07; // Also, get our channel is dac enabled

      Channel1.isDacEnabled = (value & 0xf8) > 0;
    };

    Channel1.updateNRx3 = function (value) {
      Channel1.NRx3FrequencyLSB = value; // Update Channel Frequency

      var frequency = Channel1.NRx4FrequencyMSB << 8 | Channel1.NRx3FrequencyLSB;
      Channel1.frequency = frequency;
    };

    Channel1.updateNRx4 = function (value) {
      Channel1.NRx4LengthEnabled = checkBitOnByte(6, value);
      Channel1.NRx4FrequencyMSB = value & 0x07; // Update Channel Frequency

      var frequency = Channel1.NRx4FrequencyMSB << 8 | Channel1.NRx3FrequencyLSB;
      Channel1.frequency = frequency;
    }; // Function to save the state of the class


    Channel1.saveState = function () {
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x00, Channel1.saveStateSlot), Channel1.isEnabled);
      store(getSaveStateMemoryOffset(0x01, Channel1.saveStateSlot), Channel1.frequencyTimer);
      store(getSaveStateMemoryOffset(0x05, Channel1.saveStateSlot), Channel1.envelopeCounter);
      store(getSaveStateMemoryOffset(0x09, Channel1.saveStateSlot), Channel1.lengthCounter);
      store(getSaveStateMemoryOffset(0x0e, Channel1.saveStateSlot), Channel1.volume);
      store(getSaveStateMemoryOffset(0x13, Channel1.saveStateSlot), Channel1.dutyCycle);
      store(getSaveStateMemoryOffset(0x14, Channel1.saveStateSlot), Channel1.waveFormPositionOnDuty);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x19, Channel1.saveStateSlot), Channel1.isSweepEnabled);
      store(getSaveStateMemoryOffset(0x1a, Channel1.saveStateSlot), Channel1.sweepCounter);
      store(getSaveStateMemoryOffset(0x1f, Channel1.saveStateSlot), Channel1.sweepShadowFrequency);
    }; // Function to load the save state from memory


    Channel1.loadState = function () {
      Channel1.isEnabled = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x00, Channel1.saveStateSlot));
      Channel1.frequencyTimer = load(getSaveStateMemoryOffset(0x01, Channel1.saveStateSlot));
      Channel1.envelopeCounter = load(getSaveStateMemoryOffset(0x05, Channel1.saveStateSlot));
      Channel1.lengthCounter = load(getSaveStateMemoryOffset(0x09, Channel1.saveStateSlot));
      Channel1.volume = load(getSaveStateMemoryOffset(0x0e, Channel1.saveStateSlot));
      Channel1.dutyCycle = load(getSaveStateMemoryOffset(0x13, Channel1.saveStateSlot));
      Channel1.waveFormPositionOnDuty = load(getSaveStateMemoryOffset(0x14, Channel1.saveStateSlot));
      Channel1.isSweepEnabled = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x19, Channel1.saveStateSlot));
      Channel1.sweepCounter = load(getSaveStateMemoryOffset(0x1a, Channel1.saveStateSlot));
      Channel1.sweepShadowFrequency = load(getSaveStateMemoryOffset(0x1f, Channel1.saveStateSlot));
    };

    Channel1.initialize = function () {
      eightBitStoreIntoGBMemory(Channel1.memoryLocationNRx0, 0x80);
      eightBitStoreIntoGBMemory(Channel1.memoryLocationNRx1, 0xbf);
      eightBitStoreIntoGBMemory(Channel1.memoryLocationNRx2, 0xf3);
      eightBitStoreIntoGBMemory(Channel1.memoryLocationNRx3, 0xc1);
      eightBitStoreIntoGBMemory(Channel1.memoryLocationNRx4, 0xbf);
    }; // Function to get a sample using the cycle counter on the channel


    Channel1.getSampleFromCycleCounter = function () {
      var accumulatedCycles = Channel1.cycleCounter;
      Channel1.cycleCounter = 0;
      return Channel1.getSample(accumulatedCycles);
    }; // Function to reset our timer, useful for GBC double speed mode


    Channel1.resetTimer = function () {
      Channel1.frequencyTimer = (2048 - Channel1.frequency) * 4; // TODO: Ensure this is correct for GBC Double Speed Mode

      if (Cpu.GBCDoubleSpeed) {
        Channel1.frequencyTimer = Channel1.frequencyTimer * 2;
      }
    };

    Channel1.getSample = function (numberOfCycles) {
      // Decrement our channel timer
      Channel1.frequencyTimer -= numberOfCycles;

      if (Channel1.frequencyTimer <= 0) {
        // Get the amount that overflowed so we don't drop cycles
        var overflowAmount = abs(Channel1.frequencyTimer); // Reset our timer
        // A square channel's frequency timer period is set to (2048-frequency)*4.
        // Four duty cycles are available, each waveform taking 8 frequency timer clocks to cycle through:

        Channel1.resetTimer();
        Channel1.frequencyTimer -= overflowAmount; // Also increment our duty cycle
        // What is duty? https://en.wikipedia.org/wiki/Duty_cycle
        // Duty cycle for square wave: http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Square_Wave

        Channel1.waveFormPositionOnDuty += 1;

        if (Channel1.waveFormPositionOnDuty >= 8) {
          Channel1.waveFormPositionOnDuty = 0;
        }
      } // Get our ourput volume


      var outputVolume = 0; // Finally to set our output volume, the channel must be enabled,
      // Our channel DAC must be enabled, and we must be in an active state
      // Of our duty cycle

      if (Channel1.isEnabled && Channel1.isDacEnabled) {
        outputVolume = Channel1.volume;
      } else {
        // Return silence
        // Since range from -15 - 15, or 0 to 30 for our unsigned
        return 15;
      } // Get the current sampleValue


      var sample = 1;

      if (!isDutyCycleClockPositiveOrNegativeForWaveform(Channel1.NRx1Duty, Channel1.waveFormPositionOnDuty)) {
        sample = sample * -1;
      }

      sample = sample * outputVolume; // Square Waves Can range from -15 - 15. Therefore simply add 15

      sample = sample + 15;
      return sample;
    }; //http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Trigger_Event


    Channel1.trigger = function () {
      Channel1.isEnabled = true;

      if (Channel1.lengthCounter === 0) {
        Channel1.lengthCounter = 64;
      } // Reset our timer
      // A square channel's frequency timer period is set to (2048-frequency)*4.
      // Four duty cycles are available, each waveform taking 8 frequency timer clocks to cycle through:


      Channel1.resetTimer();
      Channel1.envelopeCounter = Channel1.NRx2EnvelopePeriod;
      Channel1.volume = Channel1.NRx2StartingVolume; // Handle Channel Sweep
      // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware

      Channel1.sweepShadowFrequency = Channel1.frequency; // Reset back to the sweep period

      Channel1.sweepCounter = Channel1.NRx0SweepPeriod; // The internal enabled flag is set if either the sweep period or shift are non-zero, cleared otherwise.

      if (Channel1.NRx0SweepPeriod > 0 && Channel1.NRx0SweepShift > 0) {
        Channel1.isSweepEnabled = true;
      } else {
        Channel1.isSweepEnabled = false;
      } // If the sweep shift is non-zero, frequency calculation and the overflow check are performed immediately.


      if (Channel1.NRx0SweepShift > 0) {
        calculateSweepAndCheckOverflow();
      } // Finally if DAC is off, channel is still disabled


      if (!Channel1.isDacEnabled) {
        Channel1.isEnabled = false;
      }
    }; // Function to determine if the current channel would update when getting the sample
    // This is used to accumulate samples


    Channel1.willChannelUpdate = function (numberOfCycles) {
      //Increment our cycle counter
      Channel1.cycleCounter += numberOfCycles; // Dac enabled status cached by accumulator

      if (Channel1.frequencyTimer - Channel1.cycleCounter > 0) {
        return false;
      }

      return true;
    };

    Channel1.updateSweep = function () {
      // Obscure behavior
      // TODO: The volume envelope and sweep timers treat a period of 0 as 8.
      // Decrement the sweep counter
      Channel1.sweepCounter -= 1;

      if (Channel1.sweepCounter <= 0) {
        // Reset back to the sweep period
        Channel1.sweepCounter = Channel1.NRx0SweepPeriod; // Calculate our sweep
        // When it generates a clock and the sweep's internal enabled flag is set and the sweep period is not zero,
        // a new frequency is calculated and the overflow check is performed.

        if (Channel1.isSweepEnabled && Channel1.NRx0SweepPeriod > 0) {
          calculateSweepAndCheckOverflow();
        }
      }
    };

    Channel1.updateLength = function () {
      if (Channel1.lengthCounter > 0 && Channel1.NRx4LengthEnabled) {
        Channel1.lengthCounter -= 1;
      }

      if (Channel1.lengthCounter === 0) {
        Channel1.isEnabled = false;
      }
    };

    Channel1.updateEnvelope = function () {
      // Obscure behavior
      // TODO: The volume envelope and sweep timers treat a period of 0 as 8.
      Channel1.envelopeCounter -= 1;

      if (Channel1.envelopeCounter <= 0) {
        Channel1.envelopeCounter = Channel1.NRx2EnvelopePeriod; // When the timer generates a clock and the envelope period is NOT zero, a new volume is calculated
        // NOTE: There is some weiirrdd obscure behavior where zero can equal 8, so watch out for that
        // If notes are sustained for too long, this is probably why

        if (Channel1.envelopeCounter !== 0) {
          if (Channel1.NRx2EnvelopeAddMode && Channel1.volume < 15) {
            Channel1.volume += 1;
          } else if (!Channel1.NRx2EnvelopeAddMode && Channel1.volume > 0) {
            Channel1.volume -= 1;
          }
        }
      }
    };

    Channel1.setFrequency = function (frequency) {
      // Get the high and low bits
      var passedFrequencyHighBits = frequency >> 8;
      var passedFrequencyLowBits = frequency & 0xff; // Get the new register 4

      var register4 = eightBitLoadFromGBMemory(Channel1.memoryLocationNRx4); // Knock off lower 3 bits, and Or on our high bits

      var newRegister4 = register4 & 0xf8;
      newRegister4 = newRegister4 | passedFrequencyHighBits; // Set the registers

      eightBitStoreIntoGBMemory(Channel1.memoryLocationNRx3, passedFrequencyLowBits);
      eightBitStoreIntoGBMemory(Channel1.memoryLocationNRx4, newRegister4); // Save the frequency for ourselves without triggering memory traps

      Channel1.NRx3FrequencyLSB = passedFrequencyLowBits;
      Channel1.NRx4FrequencyMSB = passedFrequencyHighBits;
      Channel1.frequency = Channel1.NRx4FrequencyMSB << 8 | Channel1.NRx3FrequencyLSB;
    }; // Cycle Counter for our sound accumulator


    Channel1.cycleCounter = 0; // Squarewave channel with volume envelope and frequency sweep functions.
    // NR10 -> Sweep Register R/W

    Channel1.memoryLocationNRx0 = 0xff10; // -PPP NSSS Sweep period, negate, shift

    Channel1.NRx0SweepPeriod = 0;
    Channel1.NRx0Negate = false;
    Channel1.NRx0SweepShift = 0; // NR11 -> Sound length/Wave pattern duty (R/W)

    Channel1.memoryLocationNRx1 = 0xff11; // DDLL LLLL Duty, Length load (64-L)

    Channel1.NRx1Duty = 0;
    Channel1.NRx1LengthLoad = 0; // NR12 -> Volume Envelope (R/W)

    Channel1.memoryLocationNRx2 = 0xff12; // VVVV APPP Starting volume, Envelope add mode, period

    Channel1.NRx2StartingVolume = 0;
    Channel1.NRx2EnvelopeAddMode = false;
    Channel1.NRx2EnvelopePeriod = 0; // NR13 -> Frequency lo (W)

    Channel1.memoryLocationNRx3 = 0xff13; // FFFF FFFF Frequency LSB

    Channel1.NRx3FrequencyLSB = 0; // NR14 -> Frequency hi (R/W)

    Channel1.memoryLocationNRx4 = 0xff14; // TL-- -FFF Trigger, Length enable, Frequency MSB

    Channel1.NRx4LengthEnabled = false;
    Channel1.NRx4FrequencyMSB = 0; // Channel Properties

    Channel1.channelNumber = 1;
    Channel1.isEnabled = false;
    Channel1.isDacEnabled = false;
    Channel1.frequency = 0;
    Channel1.frequencyTimer = 0x00;
    Channel1.envelopeCounter = 0x00;
    Channel1.lengthCounter = 0x00;
    Channel1.volume = 0x00; // Square Wave properties

    Channel1.dutyCycle = 0x00;
    Channel1.waveFormPositionOnDuty = 0x00; // Channel 1 Sweep

    Channel1.isSweepEnabled = false;
    Channel1.sweepCounter = 0x00;
    Channel1.sweepShadowFrequency = 0x00; // Save States

    Channel1.saveStateSlot = 7;
    return Channel1;
  }(); // Sweep Specific functions


  function calculateSweepAndCheckOverflow() {
    var newFrequency = getNewFrequencyFromSweep(); // 7FF is the highest value of the frequency: 111 1111 1111

    if (newFrequency <= 0x7ff && Channel1.NRx0SweepShift > 0) {
      // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware
      // If the new frequency is 2047 or less and the sweep shift is not zero,
      // this new frequency is written back to the shadow frequency and square 1's frequency in NR13 and NR14,
      // then frequency calculation and overflow check are run AGAIN immediately using this new value,
      // but this second new frequency is not written back.
      Channel1.sweepShadowFrequency = newFrequency;
      Channel1.setFrequency(newFrequency); // Re calculate the new frequency

      newFrequency = getNewFrequencyFromSweep();
    } // Next check if the new Frequency is above 0x7FF
    // if So, disable our sweep


    if (newFrequency > 0x7ff) {
      Channel1.isEnabled = false;
    }
  } // Function to determing a new sweep in the current context


  function getNewFrequencyFromSweep() {
    // Start our new frequency, by making it equal to the "shadow frequency"
    var newFrequency = Channel1.sweepShadowFrequency;
    newFrequency = newFrequency >> Channel1.NRx0SweepShift; // Check for sweep negation

    if (Channel1.NRx0Negate) {
      newFrequency = Channel1.sweepShadowFrequency - newFrequency;
    } else {
      newFrequency = Channel1.sweepShadowFrequency + newFrequency;
    }

    return newFrequency;
  } // NOTE: Tons of Copy-pasta btween channels, because Classes cannot be instantiated yet in assemblyscript


  var Channel2 =
  /** @class */
  function () {
    function Channel2() {}

    Channel2.updateNRx1 = function (value) {
      Channel2.NRx1Duty = value >> 6 & 0x03;
      Channel2.NRx1LengthLoad = value & 0x3f; // Also need to set our length counter. Taken from the old, setChannelLengthCounter
      // Channel length is determined by 64 (or 256 if channel 3), - the length load
      // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Registers
      // Note, this will be different for channel 3

      Channel2.lengthCounter = 64 - Channel2.NRx1LengthLoad;
    };

    Channel2.updateNRx2 = function (value) {
      Channel2.NRx2StartingVolume = value >> 4 & 0x0f;
      Channel2.NRx2EnvelopeAddMode = checkBitOnByte(3, value);
      Channel2.NRx2EnvelopePeriod = value & 0x07; // Also, get our channel is dac enabled

      Channel2.isDacEnabled = (value & 0xf8) > 0;
    };

    Channel2.updateNRx3 = function (value) {
      Channel2.NRx3FrequencyLSB = value; // Update Channel Frequency

      var frequency = Channel2.NRx4FrequencyMSB << 8 | Channel2.NRx3FrequencyLSB;
      Channel2.frequency = frequency;
    };

    Channel2.updateNRx4 = function (value) {
      Channel2.NRx4LengthEnabled = checkBitOnByte(6, value);
      Channel2.NRx4FrequencyMSB = value & 0x07; // Update Channel Frequency

      var frequency = Channel2.NRx4FrequencyMSB << 8 | Channel2.NRx3FrequencyLSB;
      Channel2.frequency = frequency;
    }; // Function to save the state of the class


    Channel2.saveState = function () {
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x00, Channel2.saveStateSlot), Channel2.isEnabled);
      store(getSaveStateMemoryOffset(0x01, Channel2.saveStateSlot), Channel2.frequencyTimer);
      store(getSaveStateMemoryOffset(0x05, Channel2.saveStateSlot), Channel2.envelopeCounter);
      store(getSaveStateMemoryOffset(0x09, Channel2.saveStateSlot), Channel2.lengthCounter);
      store(getSaveStateMemoryOffset(0x0e, Channel2.saveStateSlot), Channel2.volume);
      store(getSaveStateMemoryOffset(0x13, Channel2.saveStateSlot), Channel2.dutyCycle);
      store(getSaveStateMemoryOffset(0x14, Channel2.saveStateSlot), Channel2.waveFormPositionOnDuty);
    }; // Function to load the save state from memory


    Channel2.loadState = function () {
      Channel2.isEnabled = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x00, Channel2.saveStateSlot));
      Channel2.frequencyTimer = load(getSaveStateMemoryOffset(0x01, Channel2.saveStateSlot));
      Channel2.envelopeCounter = load(getSaveStateMemoryOffset(0x05, Channel2.saveStateSlot));
      Channel2.lengthCounter = load(getSaveStateMemoryOffset(0x09, Channel2.saveStateSlot));
      Channel2.volume = load(getSaveStateMemoryOffset(0x0e, Channel2.saveStateSlot));
      Channel2.dutyCycle = load(getSaveStateMemoryOffset(0x13, Channel2.saveStateSlot));
      Channel2.waveFormPositionOnDuty = load(getSaveStateMemoryOffset(0x14, Channel2.saveStateSlot));
    };

    Channel2.initialize = function () {
      eightBitStoreIntoGBMemory(Channel2.memoryLocationNRx1 - 1, 0xff);
      eightBitStoreIntoGBMemory(Channel2.memoryLocationNRx1, 0x3f);
      eightBitStoreIntoGBMemory(Channel2.memoryLocationNRx2, 0x00);
      eightBitStoreIntoGBMemory(Channel2.memoryLocationNRx3, 0x00);
      eightBitStoreIntoGBMemory(Channel2.memoryLocationNRx4, 0xb8);
    }; // Function to get a sample using the cycle counter on the channel


    Channel2.getSampleFromCycleCounter = function () {
      var accumulatedCycles = Channel2.cycleCounter;
      Channel2.cycleCounter = 0;
      return Channel2.getSample(accumulatedCycles);
    }; // Function to reset our timer, useful for GBC double speed mode


    Channel2.resetTimer = function () {
      Channel2.frequencyTimer = (2048 - Channel2.frequency) * 4; // TODO: Ensure this is correct for GBC Double Speed Mode

      if (Cpu.GBCDoubleSpeed) {
        Channel2.frequencyTimer = Channel2.frequencyTimer * 2;
      }
    };

    Channel2.getSample = function (numberOfCycles) {
      // Decrement our channel timer
      Channel2.frequencyTimer -= numberOfCycles;

      if (Channel2.frequencyTimer <= 0) {
        // Get the amount that overflowed so we don't drop cycles
        var overflowAmount = abs(Channel2.frequencyTimer); // Reset our timer
        // A square channel's frequency timer period is set to (2048-frequency)*4.
        // Four duty cycles are available, each waveform taking 8 frequency timer clocks to cycle through:

        Channel2.resetTimer();
        Channel2.frequencyTimer -= overflowAmount; // Also increment our duty cycle
        // What is duty? https://en.wikipedia.org/wiki/Duty_cycle
        // Duty cycle for square wave: http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Square_Wave

        Channel2.waveFormPositionOnDuty += 1;

        if (Channel2.waveFormPositionOnDuty >= 8) {
          Channel2.waveFormPositionOnDuty = 0;
        }
      } // Get our ourput volume


      var outputVolume = 0; // Finally to set our output volume, the channel must be enabled,
      // Our channel DAC must be enabled, and we must be in an active state
      // Of our duty cycle

      if (Channel2.isEnabled && Channel2.isDacEnabled) {
        outputVolume = Channel2.volume;
      } else {
        // Return silence
        // Since range from -15 - 15, or 0 to 30 for our unsigned
        return 15;
      } // Get the current sampleValue


      var sample = 1;

      if (!isDutyCycleClockPositiveOrNegativeForWaveform(Channel2.NRx1Duty, Channel2.waveFormPositionOnDuty)) {
        sample = sample * -1;
      }

      sample = sample * outputVolume; // Square Waves Can range from -15 - 15. Therefore simply add 15

      sample = sample + 15;
      return sample;
    }; //http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Trigger_Event


    Channel2.trigger = function () {
      Channel2.isEnabled = true;

      if (Channel2.lengthCounter === 0) {
        Channel2.lengthCounter = 64;
      } // Reset our timer
      // A square channel's frequency timer period is set to (2048-frequency)*4.
      // Four duty cycles are available, each waveform taking 8 frequency timer clocks to cycle through:


      Channel2.resetTimer();
      Channel2.envelopeCounter = Channel2.NRx2EnvelopePeriod;
      Channel2.volume = Channel2.NRx2StartingVolume; // Finally if DAC is off, channel is still disabled

      if (!Channel2.isDacEnabled) {
        Channel2.isEnabled = false;
      }
    }; // Function to determine if the current channel would update when getting the sample
    // This is used to accumulate samples


    Channel2.willChannelUpdate = function (numberOfCycles) {
      //Increment our cycle counter
      Channel2.cycleCounter += numberOfCycles; // Dac enabled status cached by accumulator

      if (Channel2.frequencyTimer - Channel2.cycleCounter > 0) {
        return false;
      }

      return true;
    };

    Channel2.updateLength = function () {
      if (Channel2.lengthCounter > 0 && Channel2.NRx4LengthEnabled) {
        Channel2.lengthCounter -= 1;
      }

      if (Channel2.lengthCounter === 0) {
        Channel2.isEnabled = false;
      }
    };

    Channel2.updateEnvelope = function () {
      // Obscure behavior
      // TODO: The volume envelope and sweep timers treat a period of 0 as 8.
      Channel2.envelopeCounter -= 1;

      if (Channel2.envelopeCounter <= 0) {
        Channel2.envelopeCounter = Channel2.NRx2EnvelopePeriod; // When the timer generates a clock and the envelope period is NOT zero, a new volume is calculated
        // NOTE: There is some weiirrdd obscure behavior where zero can equal 8, so watch out for that

        if (Channel2.envelopeCounter !== 0) {
          if (Channel2.NRx2EnvelopeAddMode && Channel2.volume < 15) {
            Channel2.volume += 1;
          } else if (!Channel2.NRx2EnvelopeAddMode && Channel2.volume > 0) {
            Channel2.volume -= 1;
          }
        }
      }
    };

    Channel2.setFrequency = function (frequency) {
      // Get the high and low bits
      var passedFrequencyHighBits = frequency >> 8;
      var passedFrequencyLowBits = frequency & 0xff; // Get the new register 4

      var register4 = eightBitLoadFromGBMemory(Channel2.memoryLocationNRx4); // Knock off lower 3 bits, and Or on our high bits

      var newRegister4 = register4 & 0xf8;
      newRegister4 = newRegister4 | passedFrequencyHighBits; // Set the registers

      eightBitStoreIntoGBMemory(Channel2.memoryLocationNRx3, passedFrequencyLowBits);
      eightBitStoreIntoGBMemory(Channel2.memoryLocationNRx4, newRegister4); // Save the frequency for ourselves without triggering memory traps

      Channel2.NRx3FrequencyLSB = passedFrequencyLowBits;
      Channel2.NRx4FrequencyMSB = passedFrequencyHighBits;
      Channel2.frequency = Channel2.NRx4FrequencyMSB << 8 | Channel2.NRx3FrequencyLSB;
    }; // Cycle Counter for our sound accumulator


    Channel2.cycleCounter = 0; // Squarewave channel with volume envelope functions only.
    // NR21 -> Sound length/Wave pattern duty (R/W)

    Channel2.memoryLocationNRx1 = 0xff16; // DDLL LLLL Duty, Length load (64-L)

    Channel2.NRx1Duty = 0;
    Channel2.NRx1LengthLoad = 0; // NR22 -> Volume Envelope (R/W)

    Channel2.memoryLocationNRx2 = 0xff17; // VVVV APPP Starting volume, Envelope add mode, period

    Channel2.NRx2StartingVolume = 0;
    Channel2.NRx2EnvelopeAddMode = false;
    Channel2.NRx2EnvelopePeriod = 0; // NR23 -> Frequency lo (W)

    Channel2.memoryLocationNRx3 = 0xff18; // FFFF FFFF Frequency LSB

    Channel2.NRx3FrequencyLSB = 0; // NR24 -> Frequency hi (R/W)

    Channel2.memoryLocationNRx4 = 0xff19; // TL-- -FFF Trigger, Length enable, Frequency MSB

    Channel2.NRx4LengthEnabled = false;
    Channel2.NRx4FrequencyMSB = 0; // Channel Properties

    Channel2.channelNumber = 2;
    Channel2.isEnabled = false;
    Channel2.isDacEnabled = false;
    Channel2.frequency = 0;
    Channel2.frequencyTimer = 0x00;
    Channel2.envelopeCounter = 0x00;
    Channel2.lengthCounter = 0x00;
    Channel2.volume = 0x00; // Square Wave properties

    Channel2.dutyCycle = 0x00;
    Channel2.waveFormPositionOnDuty = 0x00; // Save States

    Channel2.saveStateSlot = 8;
    return Channel2;
  }(); // NOTE: Tons of Copy-pasta btween channels, because Classes cannot be instantiated yet in assemblyscript


  var Channel3 =
  /** @class */
  function () {
    function Channel3() {} // E--- ---- DAC power


    Channel3.updateNRx0 = function (value) {
      Channel3.isDacEnabled = checkBitOnByte(7, value);
    };

    Channel3.updateNRx1 = function (value) {
      Channel3.NRx1LengthLoad = value; // Also need to set our length counter. Taken from the old, setChannelLengthCounter
      // Channel length is determined by 64 (or 256 if channel 3), - the length load
      // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Registers
      // Note, this will be different for channel 3
      // Supposed to be 256, so subtracting 255 and then adding 1 if that makes sense

      Channel3.lengthCounter = 256 - Channel3.NRx1LengthLoad;
    };

    Channel3.updateNRx2 = function (value) {
      Channel3.NRx2VolumeCode = value >> 5 & 0x0f;
    };

    Channel3.updateNRx3 = function (value) {
      Channel3.NRx3FrequencyLSB = value; // Update Channel Frequency

      var frequency = Channel3.NRx4FrequencyMSB << 8 | Channel3.NRx3FrequencyLSB;
      Channel3.frequency = frequency;
    };

    Channel3.updateNRx4 = function (value) {
      Channel3.NRx4LengthEnabled = checkBitOnByte(6, value);
      Channel3.NRx4FrequencyMSB = value & 0x07; // Update Channel Frequency

      var frequency = Channel3.NRx4FrequencyMSB << 8 | Channel3.NRx3FrequencyLSB;
      Channel3.frequency = frequency;
    }; // Function to save the state of the class


    Channel3.saveState = function () {
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x00, Channel3.saveStateSlot), Channel3.isEnabled);
      store(getSaveStateMemoryOffset(0x01, Channel3.saveStateSlot), Channel3.frequencyTimer);
      store(getSaveStateMemoryOffset(0x05, Channel3.saveStateSlot), Channel3.lengthCounter);
      store(getSaveStateMemoryOffset(0x09, Channel3.saveStateSlot), Channel3.waveTablePosition);
    }; // Function to load the save state from memory


    Channel3.loadState = function () {
      Channel3.isEnabled = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x00, Channel3.saveStateSlot));
      Channel3.frequencyTimer = load(getSaveStateMemoryOffset(0x01, Channel3.saveStateSlot));
      Channel3.lengthCounter = load(getSaveStateMemoryOffset(0x05, Channel3.saveStateSlot));
      Channel3.waveTablePosition = load(getSaveStateMemoryOffset(0x09, Channel3.saveStateSlot));
    };

    Channel3.initialize = function () {
      eightBitStoreIntoGBMemory(Channel3.memoryLocationNRx0, 0x7f);
      eightBitStoreIntoGBMemory(Channel3.memoryLocationNRx1, 0xff);
      eightBitStoreIntoGBMemory(Channel3.memoryLocationNRx2, 0x9f);
      eightBitStoreIntoGBMemory(Channel3.memoryLocationNRx3, 0x00);
      eightBitStoreIntoGBMemory(Channel3.memoryLocationNRx4, 0xb8); // The volume code changed

      Channel3.volumeCodeChanged = true;
    }; // Function to get a sample using the cycle counter on the channel


    Channel3.getSampleFromCycleCounter = function () {
      var accumulatedCycles = Channel3.cycleCounter;
      Channel3.cycleCounter = 0;
      return Channel3.getSample(accumulatedCycles);
    }; // Function to reset our timer, useful for GBC double speed mode


    Channel3.resetTimer = function () {
      Channel3.frequencyTimer = (2048 - Channel3.frequency) * 2; // TODO: Ensure this is correct for GBC Double Speed Mode

      if (Cpu.GBCDoubleSpeed) {
        Channel3.frequencyTimer = Channel3.frequencyTimer * 2;
      }
    };

    Channel3.getSample = function (numberOfCycles) {
      // Decrement our channel timer
      Channel3.frequencyTimer -= numberOfCycles;

      if (Channel3.frequencyTimer <= 0) {
        // Get the amount that overflowed so we don't drop cycles
        var overflowAmount = abs(Channel3.frequencyTimer); // Reset our timer
        // A wave channel's frequency timer period is set to (2048-frequency) * 2.
        // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Wave_Channel

        Channel3.resetTimer();
        Channel3.frequencyTimer -= overflowAmount; // Advance the wave table position, and loop back if needed

        Channel3.waveTablePosition += 1;

        if (Channel3.waveTablePosition >= 32) {
          Channel3.waveTablePosition = 0;
        }
      } // Get our ourput volume


      var outputVolume = 0;
      var volumeCode = Channel3.volumeCode; // Finally to set our output volume, the channel must be enabled,
      // Our channel DAC must be enabled, and we must be in an active state
      // Of our duty cycle

      if (Channel3.isEnabled && Channel3.isDacEnabled) {
        // Get our volume code
        if (Channel3.volumeCodeChanged) {
          volumeCode = eightBitLoadFromGBMemory(Channel3.memoryLocationNRx2);
          volumeCode = volumeCode >> 5;
          volumeCode = volumeCode & 0x0f;
          Channel3.volumeCode = volumeCode;
          Channel3.volumeCodeChanged = false;
        }
      } else {
        // Return silence
        // Since range from -15 - 15, or 0 to 30 for our unsigned
        return 15;
      } // Get the current sample


      var sample = 0; // Will Find the position, and knock off any remainder

      var positionIndexToAdd = Channel3.waveTablePosition / 2;
      var memoryLocationWaveSample = Channel3.memoryLocationWaveTable + positionIndexToAdd;
      sample = eightBitLoadFromGBMemory(memoryLocationWaveSample); // Need to grab the top or lower half for the correct sample

      if (Channel3.waveTablePosition % 2 === 0) {
        // First sample
        sample = sample >> 4;
        sample = sample & 0x0f;
      } else {
        // Second Samples
        sample = sample & 0x0f;
      } // Shift our sample and set our volume depending on the volume code
      // Since we can't multiply by float, simply divide by 4, 2, 1
      // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Wave_Channel


      switch (volumeCode) {
        case 0:
          sample = sample >> 4;
          break;

        case 1:
          // Dont Shift sample
          outputVolume = 1;
          break;

        case 2:
          sample = sample >> 1;
          outputVolume = 2;
          break;

        default:
          sample = sample >> 2;
          outputVolume = 4;
          break;
      } // Spply out output volume


      if (outputVolume > 0) {
        sample = sample / outputVolume;
      } else {
        sample = 0;
      } // Square Waves Can range from -15 - 15. Therefore simply add 15


      sample = sample + 15;
      return sample;
    }; //http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Trigger_Event


    Channel3.trigger = function () {
      Channel3.isEnabled = true;

      if (Channel3.lengthCounter === 0) {
        Channel3.lengthCounter = 256;
      } // Reset our timer
      // A wave channel's frequency timer period is set to (2048-frequency)*2.


      Channel3.resetTimer(); // Reset our wave table position

      Channel3.waveTablePosition = 0; // Finally if DAC is off, channel is still disabled

      if (!Channel3.isDacEnabled) {
        Channel3.isEnabled = false;
      }
    }; // Function to determine if the current channel would update when getting the sample
    // This is used to accumulate samples


    Channel3.willChannelUpdate = function (numberOfCycles) {
      //Increment our cycle counter
      Channel3.cycleCounter += numberOfCycles; // Dac enabled status cached by accumulator

      if (Channel3.frequencyTimer - Channel3.cycleCounter > 0 && !Channel3.volumeCodeChanged) {
        return false;
      }

      return true;
    };

    Channel3.updateLength = function () {
      if (Channel3.lengthCounter > 0 && Channel3.NRx4LengthEnabled) {
        Channel3.lengthCounter -= 1;
      }

      if (Channel3.lengthCounter === 0) {
        Channel3.isEnabled = false;
      }
    }; // Cycle Counter for our sound accumulator


    Channel3.cycleCounter = 0; // Voluntary Wave channel with 32 4-bit programmable samples, played in sequence.
    // NR30 -> Sound on/off (R/W)

    Channel3.memoryLocationNRx0 = 0xff1a; // NR31 -> Sound length (R/W)

    Channel3.memoryLocationNRx1 = 0xff1b; // LLLL LLLL Length load (256-L)

    Channel3.NRx1LengthLoad = 0; // NR32 -> Select ouput level (R/W)

    Channel3.memoryLocationNRx2 = 0xff1c; // -VV- ---- Volume code (00=0%, 01=100%, 10=50%, 11=25%)

    Channel3.NRx2VolumeCode = 0; // NR33 -> Frequency lower data (W)

    Channel3.memoryLocationNRx3 = 0xff1d; // FFFF FFFF Frequency LSB

    Channel3.NRx3FrequencyLSB = 0; // NR34 -> Frequency higher data (R/W)

    Channel3.memoryLocationNRx4 = 0xff1e; // TL-- -FFF Trigger, Length enable, Frequency MSB

    Channel3.NRx4LengthEnabled = false;
    Channel3.NRx4FrequencyMSB = 0; // Our wave table location

    Channel3.memoryLocationWaveTable = 0xff30; // Channel Properties

    Channel3.channelNumber = 3;
    Channel3.isEnabled = false;
    Channel3.isDacEnabled = false;
    Channel3.frequency = 0;
    Channel3.frequencyTimer = 0x00;
    Channel3.lengthCounter = 0x00;
    Channel3.waveTablePosition = 0x00;
    Channel3.volumeCode = 0x00;
    Channel3.volumeCodeChanged = false; // Save States

    Channel3.saveStateSlot = 9;
    return Channel3;
  }(); // NOTE: Tons of Copy-pasta btween channels, because Classes cannot be instantiated yet in assemblyscript


  var Channel4 =
  /** @class */
  function () {
    function Channel4() {}

    Channel4.updateNRx1 = function (value) {
      Channel4.NRx1LengthLoad = value & 0x3f; // Also need to set our length counter. Taken from the old, setChannelLengthCounter
      // Channel length is determined by 64 (or 256 if channel 3), - the length load
      // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Registers
      // Note, this will be different for channel 3

      Channel4.lengthCounter = 64 - Channel4.NRx1LengthLoad;
    };

    Channel4.updateNRx2 = function (value) {
      Channel4.NRx2StartingVolume = value >> 4 & 0x0f;
      Channel4.NRx2EnvelopeAddMode = checkBitOnByte(3, value);
      Channel4.NRx2EnvelopePeriod = value & 0x07; // Also, get our channel is dac enabled

      Channel4.isDacEnabled = (value & 0xf8) > 0;
    };

    Channel4.updateNRx3 = function (value) {
      Channel4.NRx3ClockShift = value >> 4;
      Channel4.NRx3WidthMode = checkBitOnByte(3, value);
      Channel4.NRx3DivisorCode = value & 0x07; // Also, get our divisor

      switch (Channel4.NRx3DivisorCode) {
        case 0:
          Channel4.divisor = 8;
          return;

        case 1:
          Channel4.divisor = 16;
          return;

        case 2:
          Channel4.divisor = 32;
          return;

        case 3:
          Channel4.divisor = 48;
          return;

        case 4:
          Channel4.divisor = 64;
          return;

        case 5:
          Channel4.divisor = 80;
          return;

        case 6:
          Channel4.divisor = 96;
          return;

        case 7:
          Channel4.divisor = 112;
          return;
      }
    };

    Channel4.updateNRx4 = function (value) {
      Channel4.NRx4LengthEnabled = checkBitOnByte(6, value);
    }; // Function to save the state of the class


    Channel4.saveState = function () {
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x00, Channel4.saveStateSlot), Channel4.isEnabled);
      store(getSaveStateMemoryOffset(0x01, Channel4.saveStateSlot), Channel4.frequencyTimer);
      store(getSaveStateMemoryOffset(0x05, Channel4.saveStateSlot), Channel4.envelopeCounter);
      store(getSaveStateMemoryOffset(0x09, Channel4.saveStateSlot), Channel4.lengthCounter);
      store(getSaveStateMemoryOffset(0x0e, Channel4.saveStateSlot), Channel4.volume);
      store(getSaveStateMemoryOffset(0x13, Channel4.saveStateSlot), Channel4.linearFeedbackShiftRegister);
    }; // Function to load the save state from memory


    Channel4.loadState = function () {
      Channel4.isEnabled = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x00, Channel4.saveStateSlot));
      Channel4.frequencyTimer = load(getSaveStateMemoryOffset(0x01, Channel4.saveStateSlot));
      Channel4.envelopeCounter = load(getSaveStateMemoryOffset(0x05, Channel4.saveStateSlot));
      Channel4.lengthCounter = load(getSaveStateMemoryOffset(0x09, Channel4.saveStateSlot));
      Channel4.volume = load(getSaveStateMemoryOffset(0x0e, Channel4.saveStateSlot));
      Channel4.linearFeedbackShiftRegister = load(getSaveStateMemoryOffset(0x13, Channel4.saveStateSlot));
    };

    Channel4.initialize = function () {
      eightBitStoreIntoGBMemory(Channel4.memoryLocationNRx1 - 1, 0xff);
      eightBitStoreIntoGBMemory(Channel4.memoryLocationNRx1, 0xff);
      eightBitStoreIntoGBMemory(Channel4.memoryLocationNRx2, 0x00);
      eightBitStoreIntoGBMemory(Channel4.memoryLocationNRx3, 0x00);
      eightBitStoreIntoGBMemory(Channel4.memoryLocationNRx4, 0xbf);
    }; // Function to get a sample using the cycle counter on the channel


    Channel4.getSampleFromCycleCounter = function () {
      var accumulatedCycles = Channel4.cycleCounter;
      Channel4.cycleCounter = 0;
      return Channel4.getSample(accumulatedCycles);
    };

    Channel4.getSample = function (numberOfCycles) {
      // Decrement our channel timer
      Channel4.frequencyTimer -= numberOfCycles;

      if (Channel4.frequencyTimer <= 0) {
        // Get the amount that overflowed so we don't drop cycles
        var overflowAmount = abs(Channel4.frequencyTimer); // Reset our timer

        Channel4.frequencyTimer = Channel4.getNoiseChannelFrequencyPeriod();
        Channel4.frequencyTimer -= overflowAmount; // Do some cool stuff with lfsr
        // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Noise_Channel
        // First XOR bit zero and one

        var lfsrBitZero = Channel4.linearFeedbackShiftRegister & 0x01;
        var lfsrBitOne = Channel4.linearFeedbackShiftRegister >> 1;
        lfsrBitOne = lfsrBitOne & 0x01;
        var xorLfsrBitZeroOne = lfsrBitZero ^ lfsrBitOne; // Shift all lsfr bits by one

        Channel4.linearFeedbackShiftRegister = Channel4.linearFeedbackShiftRegister >> 1; // Place the XOR result on bit 15

        Channel4.linearFeedbackShiftRegister = Channel4.linearFeedbackShiftRegister | xorLfsrBitZeroOne << 14; // If the width mode is set, set xor on bit 6, and make lfsr 7 bit

        if (Channel4.NRx3WidthMode) {
          // Make 7 bit, by knocking off lower bits. Want to keeps bits 8 - 16, and then or on 7
          Channel4.linearFeedbackShiftRegister = Channel4.linearFeedbackShiftRegister & ~0x40;
          Channel4.linearFeedbackShiftRegister = Channel4.linearFeedbackShiftRegister | xorLfsrBitZeroOne << 6;
        }
      } // Get our ourput volume, set to zero for silence


      var outputVolume = 0; // Finally to set our output volume, the channel must be enabled,
      // Our channel DAC must be enabled, and we must be in an active state
      // Of our duty cycle

      if (Channel4.isEnabled && Channel4.isDacEnabled) {
        outputVolume = Channel4.volume;
      } else {
        // Return silence
        // Since range from -15 - 15, or 0 to 30 for our unsigned
        return 15;
      } // Declare our sample


      var sample = 0; // Wave form output is bit zero of lfsr, INVERTED

      if (!checkBitOnByte(0, Channel4.linearFeedbackShiftRegister)) {
        sample = 1;
      } else {
        sample = -1;
      }

      sample = sample * outputVolume; // Noise Can range from -15 - 15. Therefore simply add 15

      sample = sample + 15;
      return sample;
    }; //http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Trigger_Event


    Channel4.trigger = function () {
      Channel4.isEnabled = true;

      if (Channel4.lengthCounter === 0) {
        Channel4.lengthCounter = 64;
      } // Reset our timers


      Channel4.frequencyTimer = Channel4.getNoiseChannelFrequencyPeriod();
      Channel4.envelopeCounter = Channel4.NRx2EnvelopePeriod;
      Channel4.volume = Channel4.NRx2StartingVolume; // Noise channel's LFSR bits are all set to 1.

      Channel4.linearFeedbackShiftRegister = 0x7fff; // Finally if DAC is off, channel is still disabled

      if (!Channel4.isDacEnabled) {
        Channel4.isEnabled = false;
      }
    }; // Function to determine if the current channel would update when getting the sample
    // This is used to accumulate samples


    Channel4.willChannelUpdate = function (numberOfCycles) {
      //Increment our cycle counter
      Channel4.cycleCounter += numberOfCycles; // Dac enabled status cached by accumulator

      if (Channel4.frequencyTimer - Channel4.cycleCounter > 0) {
        return false;
      }

      return true;
    };

    Channel4.getNoiseChannelFrequencyPeriod = function () {
      // Get our divisor from the divisor code, and shift by the clock shift
      var response = Channel4.divisor << Channel4.NRx3ClockShift;

      if (Cpu.GBCDoubleSpeed) {
        response = response * 2;
      }

      return response;
    };

    Channel4.updateLength = function () {
      if (Channel4.lengthCounter > 0 && Channel4.NRx4LengthEnabled) {
        Channel4.lengthCounter -= 1;
      }

      if (Channel4.lengthCounter === 0) {
        Channel4.isEnabled = false;
      }
    };

    Channel4.updateEnvelope = function () {
      // Obscure behavior
      // TODO: The volume envelope and sweep timers treat a period of 0 as 8.
      Channel4.envelopeCounter -= 1;

      if (Channel4.envelopeCounter <= 0) {
        Channel4.envelopeCounter = Channel4.NRx2EnvelopePeriod; // When the timer generates a clock and the envelope period is NOT zero, a new volume is calculated
        // NOTE: There is some weiirrdd obscure behavior where zero can equal 8, so watch out for that

        if (Channel4.envelopeCounter !== 0) {
          if (Channel4.NRx2EnvelopeAddMode && Channel4.volume < 15) {
            Channel4.volume += 1;
          } else if (!Channel4.NRx2EnvelopeAddMode && Channel4.volume > 0) {
            Channel4.volume -= 1;
          }
        }
      }
    }; // Cycle Counter for our sound accumulator


    Channel4.cycleCounter = 0; // Channel 4
    // 'white noise' channel with volume envelope functions.
    // NR41 -> Sound length (R/W)

    Channel4.memoryLocationNRx1 = 0xff20; // --LL LLLL Length load (64-L)

    Channel4.NRx1LengthLoad = 0; // NR42 -> Volume Envelope (R/W)

    Channel4.memoryLocationNRx2 = 0xff21; // VVVV APPP Starting volume, Envelope add mode, period

    Channel4.NRx2StartingVolume = 0;
    Channel4.NRx2EnvelopeAddMode = false;
    Channel4.NRx2EnvelopePeriod = 0; // NR43 -> Polynomial Counter (R/W)

    Channel4.memoryLocationNRx3 = 0xff22; // SSSS WDDD Clock shift, Width mode of LFSR, Divisor code

    Channel4.NRx3ClockShift = 0;
    Channel4.NRx3WidthMode = false;
    Channel4.NRx3DivisorCode = 0; // NR44 -> Trigger, Length Enable

    Channel4.memoryLocationNRx4 = 0xff23; // TL-- ---- Trigger, Length enable

    Channel4.NRx4LengthEnabled = false; // Channel Properties

    Channel4.channelNumber = 4;
    Channel4.isEnabled = false;
    Channel4.isDacEnabled = false;
    Channel4.frequencyTimer = 0x00;
    Channel4.envelopeCounter = 0x00;
    Channel4.lengthCounter = 0x00;
    Channel4.volume = 0x00;
    Channel4.divisor = 0; // Noise properties
    // NOTE: Is only 15 bits

    Channel4.linearFeedbackShiftRegister = 0x00; // Save States

    Channel4.saveStateSlot = 10;
    return Channel4;
  }(); // Another class simply for accumulating samples
  // Default everything to silence


  var SoundAccumulator =
  /** @class */
  function () {
    function SoundAccumulator() {}

    SoundAccumulator.channel1Sample = 15;
    SoundAccumulator.channel2Sample = 15;
    SoundAccumulator.channel3Sample = 15;
    SoundAccumulator.channel4Sample = 15;
    SoundAccumulator.channel1DacEnabled = false;
    SoundAccumulator.channel2DacEnabled = false;
    SoundAccumulator.channel3DacEnabled = false;
    SoundAccumulator.channel4DacEnabled = false;
    SoundAccumulator.leftChannelSampleUnsignedByte = 127;
    SoundAccumulator.rightChannelSampleUnsignedByte = 127;
    SoundAccumulator.mixerVolumeChanged = false;
    SoundAccumulator.mixerEnabledChanged = false; //If a channel was updated, need to also track if we need to need to mix them again

    SoundAccumulator.needToRemixSamples = false;
    return SoundAccumulator;
  }();

  function initializeSoundAccumulator() {
    SoundAccumulator.channel1Sample = 15;
    SoundAccumulator.channel2Sample = 15;
    SoundAccumulator.channel3Sample = 15;
    SoundAccumulator.channel4Sample = 15;
    SoundAccumulator.channel1DacEnabled = false;
    SoundAccumulator.channel2DacEnabled = false;
    SoundAccumulator.channel3DacEnabled = false;
    SoundAccumulator.channel4DacEnabled = false;
    SoundAccumulator.leftChannelSampleUnsignedByte = 127;
    SoundAccumulator.rightChannelSampleUnsignedByte = 127;
    SoundAccumulator.mixerVolumeChanged = true;
    SoundAccumulator.mixerEnabledChanged = true;
    SoundAccumulator.needToRemixSamples = false;
  }

  function accumulateSound(numberOfCycles) {
    // Check if any of the individual channels will update
    var channel1WillUpdate = Channel1.willChannelUpdate(numberOfCycles) || didChannelDacChange(Channel1.channelNumber);
    var channel2WillUpdate = Channel2.willChannelUpdate(numberOfCycles) || didChannelDacChange(Channel2.channelNumber);
    var channel3WillUpdate = Channel3.willChannelUpdate(numberOfCycles) || didChannelDacChange(Channel3.channelNumber);
    var channel4WillUpdate = Channel4.willChannelUpdate(numberOfCycles) || didChannelDacChange(Channel4.channelNumber);

    if (channel1WillUpdate) {
      SoundAccumulator.channel1Sample = Channel1.getSampleFromCycleCounter();
    }

    if (channel2WillUpdate) {
      SoundAccumulator.channel2Sample = Channel2.getSampleFromCycleCounter();
    }

    if (channel3WillUpdate) {
      SoundAccumulator.channel3Sample = Channel3.getSampleFromCycleCounter();
    }

    if (channel4WillUpdate) {
      SoundAccumulator.channel4Sample = Channel4.getSampleFromCycleCounter();
    } // If any channel updated, we need to re-mix our samples


    if (channel1WillUpdate || channel2WillUpdate || channel3WillUpdate || channel4WillUpdate) {
      SoundAccumulator.needToRemixSamples = true;
    } // Do Some downsampling magic


    Sound.downSampleCycleCounter += numberOfCycles * Sound.downSampleCycleMultiplier;

    if (Sound.downSampleCycleCounter >= Sound.maxDownSampleCycles()) {
      // Reset the downsample counter
      // Don't set to zero to catch overflowed cycles
      Sound.downSampleCycleCounter -= Sound.maxDownSampleCycles();

      if (SoundAccumulator.needToRemixSamples || SoundAccumulator.mixerVolumeChanged || SoundAccumulator.mixerEnabledChanged) {
        mixChannelSamples(SoundAccumulator.channel1Sample, SoundAccumulator.channel2Sample, SoundAccumulator.channel3Sample, SoundAccumulator.channel4Sample);
      } // Finally Simply place the accumulated sample in memory
      // Set our volumes in memory
      // +1 so it can not be zero


      setLeftAndRightOutputForAudioQueue(SoundAccumulator.leftChannelSampleUnsignedByte + 1, SoundAccumulator.rightChannelSampleUnsignedByte + 1, Sound.audioQueueIndex);
      Sound.audioQueueIndex += 1; // Don't allow our audioQueueIndex to overflow into other parts of the wasmBoy memory map
      // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit#gid=0
      // Not 0xFFFF because we need half of 64kb since we store left and right channel

      if (Sound.audioQueueIndex >= Sound.wasmBoyMemoryMaxBufferSize / 2 - 1) {
        Sound.audioQueueIndex -= 1;
      }
    }
  } // Function used by SoundAccumulator to find out if a channel Dac Changed


  function didChannelDacChange(channelNumber) {
    switch (channelNumber) {
      case Channel1.channelNumber:
        if (SoundAccumulator.channel1DacEnabled !== Channel1.isDacEnabled) {
          SoundAccumulator.channel1DacEnabled = Channel1.isDacEnabled;
          return true;
        }

        return false;

      case Channel2.channelNumber:
        if (SoundAccumulator.channel2DacEnabled !== Channel2.isDacEnabled) {
          SoundAccumulator.channel2DacEnabled = Channel2.isDacEnabled;
          return true;
        }

        return false;

      case Channel3.channelNumber:
        if (SoundAccumulator.channel3DacEnabled !== Channel3.isDacEnabled) {
          SoundAccumulator.channel3DacEnabled = Channel3.isDacEnabled;
          return true;
        }

        return false;

      case Channel4.channelNumber:
        if (SoundAccumulator.channel4DacEnabled !== Channel4.isDacEnabled) {
          SoundAccumulator.channel4DacEnabled = Channel4.isDacEnabled;
          return true;
        }

        return false;
    }

    return false;
  } // https://emu-docs.org/Game%20Boy/gb_sound.txt


  var Sound =
  /** @class */
  function () {
    function Sound() {} // Number of cycles to run in each batch process
    // This number should be in sync so that sound doesn't run too many cyles at once
    // and does not exceed the minimum number of cyles for either down sampling, or
    // How often we change the frame, or a channel's update process


    Sound.batchProcessCycles = function () {
      if (Cpu.GBCDoubleSpeed) {
        return 174;
      }

      return 87;
    };

    Sound.updateNR50 = function (value) {
      Sound.NR50LeftMixerVolume = value >> 4 & 0x07;
      Sound.NR50RightMixerVolume = value & 0x07;
    };

    Sound.updateNR51 = function (value) {
      Sound.NR51IsChannel4EnabledOnLeftOutput = checkBitOnByte(7, value);
      Sound.NR51IsChannel3EnabledOnLeftOutput = checkBitOnByte(6, value);
      Sound.NR51IsChannel2EnabledOnLeftOutput = checkBitOnByte(5, value);
      Sound.NR51IsChannel1EnabledOnLeftOutput = checkBitOnByte(4, value);
      Sound.NR51IsChannel4EnabledOnRightOutput = checkBitOnByte(3, value);
      Sound.NR51IsChannel3EnabledOnRightOutput = checkBitOnByte(2, value);
      Sound.NR51IsChannel2EnabledOnRightOutput = checkBitOnByte(1, value);
      Sound.NR51IsChannel1EnabledOnRightOutput = checkBitOnByte(0, value);
    };

    Sound.updateNR52 = function (value) {
      Sound.NR52IsSoundEnabled = checkBitOnByte(7, value);
    };

    Sound.maxFrameSequenceCycles = function () {
      if (Cpu.GBCDoubleSpeed) {
        return 16384;
      }

      return 8192;
    };

    Sound.maxDownSampleCycles = function () {
      return Cpu.CLOCK_SPEED();
    }; // Function to save the state of the class


    Sound.saveState = function () {
      store(getSaveStateMemoryOffset(0x00, Sound.saveStateSlot), Sound.frameSequenceCycleCounter);
      store(getSaveStateMemoryOffset(0x04, Sound.saveStateSlot), Sound.downSampleCycleCounter);
      store(getSaveStateMemoryOffset(0x05, Sound.saveStateSlot), Sound.frameSequencer);
    }; // Function to load the save state from memory


    Sound.loadState = function () {
      Sound.frameSequenceCycleCounter = load(getSaveStateMemoryOffset(0x00, Sound.saveStateSlot));
      Sound.downSampleCycleCounter = load(getSaveStateMemoryOffset(0x04, Sound.saveStateSlot));
      Sound.frameSequencer = load(getSaveStateMemoryOffset(0x05, Sound.saveStateSlot));
      clearAudioBuffer();
    }; // Current cycles
    // This will be used for batch processing
    // https://github.com/binji/binjgb/commit/e028f45e805bc0b0aa4697224a209f9ae514c954
    // TODO: May Also need to do this for Reads


    Sound.currentCycles = 0; // Channel control / On-OFF / Volume (RW)

    Sound.memoryLocationNR50 = 0xff24;
    Sound.NR50LeftMixerVolume = 0;
    Sound.NR50RightMixerVolume = 0; // 0xFF25 selects which output each channel goes to, Referred to as NR51

    Sound.memoryLocationNR51 = 0xff25;
    Sound.NR51IsChannel1EnabledOnLeftOutput = true;
    Sound.NR51IsChannel2EnabledOnLeftOutput = true;
    Sound.NR51IsChannel3EnabledOnLeftOutput = true;
    Sound.NR51IsChannel4EnabledOnLeftOutput = true;
    Sound.NR51IsChannel1EnabledOnRightOutput = true;
    Sound.NR51IsChannel2EnabledOnRightOutput = true;
    Sound.NR51IsChannel3EnabledOnRightOutput = true;
    Sound.NR51IsChannel4EnabledOnRightOutput = true; // Sound on/off

    Sound.memoryLocationNR52 = 0xff26;
    Sound.NR52IsSoundEnabled = true; // $FF30 -- $FF3F is the load register space for the 4-bit samples for channel 3

    Sound.memoryLocationChannel3LoadRegisterStart = 0xff30; // Need to count how often we need to increment our frame sequencer
    // Which you can read about below

    Sound.frameSequenceCycleCounter = 0x0000; // Also need to downsample our audio to average audio qualty
    // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/
    // Want to do 48000hz, so CpuRate / Sound Rate, 4194304 / 48000 ~ 87 cycles

    Sound.downSampleCycleCounter = 0x00;
    Sound.downSampleCycleMultiplier = 48000; // Frame sequencer controls what should be updated and and ticked
    // Everyt time the sound is updated :) It is updated everytime the
    // Cycle counter reaches the max cycle

    Sound.frameSequencer = 0x00; // Our current sample number we are passing back to the wasmboy memory map
    // Found that a static number of samples doesn't work well on mobile
    // Will just update the queue index, grab as much as we can whenever we need more audio, then reset
    // NOTE: Giving a really large sample rate gives more latency, but less pops!
    //static readonly MAX_NUMBER_OF_SAMPLES: i32 = 4096;

    Sound.audioQueueIndex = 0x0000;
    Sound.wasmBoyMemoryMaxBufferSize = 0x20000; // Save States

    Sound.saveStateSlot = 6;
    return Sound;
  }(); // Initialize sound registers
  // From: https://emu-docs.org/Game%20Boy/gb_sound.txt


  function initializeSound() {
    // Reset Stateful variables
    Sound.currentCycles = 0;
    Sound.NR50LeftMixerVolume = 0;
    Sound.NR50RightMixerVolume = 0;
    Sound.NR51IsChannel1EnabledOnLeftOutput = true;
    Sound.NR51IsChannel2EnabledOnLeftOutput = true;
    Sound.NR51IsChannel3EnabledOnLeftOutput = true;
    Sound.NR51IsChannel4EnabledOnLeftOutput = true;
    Sound.NR51IsChannel1EnabledOnRightOutput = true;
    Sound.NR51IsChannel2EnabledOnRightOutput = true;
    Sound.NR51IsChannel3EnabledOnRightOutput = true;
    Sound.NR51IsChannel4EnabledOnRightOutput = true;
    Sound.NR52IsSoundEnabled = true;
    Sound.frameSequenceCycleCounter = 0x0000;
    Sound.downSampleCycleCounter = 0x00;
    Sound.frameSequencer = 0x00;
    Sound.audioQueueIndex = 0x0000; // intiialize our channels

    Channel1.initialize();
    Channel2.initialize();
    Channel3.initialize();
    Channel4.initialize(); // Other Sound Registers

    eightBitStoreIntoGBMemory(Sound.memoryLocationNR50, 0x77);
    eightBitStoreIntoGBMemory(Sound.memoryLocationNR51, 0xf3);
    eightBitStoreIntoGBMemory(Sound.memoryLocationNR52, 0xf1);
    initializeSoundAccumulator();
  } // Function to batch process our audio after we skipped so many cycles


  function batchProcessAudio() {
    if (Sound.currentCycles < Sound.batchProcessCycles()) {
      return;
    }

    while (Sound.currentCycles >= Sound.batchProcessCycles()) {
      updateSound(Sound.batchProcessCycles());
      Sound.currentCycles = Sound.currentCycles - Sound.batchProcessCycles();
    }
  } // Function for updating sound


  function updateSound(numberOfCycles) {
    // Check if our frameSequencer updated
    var frameSequencerUpdated = updateFrameSequencer(numberOfCycles);

    if (Config.audioAccumulateSamples && !frameSequencerUpdated) {
      accumulateSound(numberOfCycles);
    } else {
      calculateSound(numberOfCycles);
    }
  } // Funciton to get the current Audio Queue index


  function getNumberOfSamplesInAudioBuffer() {
    return Sound.audioQueueIndex;
  } // Function to reset the audio queue


  function clearAudioBuffer() {
    Sound.audioQueueIndex = 0;
  }

  function calculateSound(numberOfCycles) {
    // Update all of our channels
    // All samples will be returned as 0 to 30
    // 0 being -1.0, and 30 being 1.0
    // (see blurb at top)
    var channel1Sample = Channel1.getSample(numberOfCycles);
    var channel2Sample = Channel2.getSample(numberOfCycles);
    var channel3Sample = Channel3.getSample(numberOfCycles);
    var channel4Sample = Channel4.getSample(numberOfCycles); // TODO: Allow individual channels to be muted
    // let channel1Sample: i32 = 15;
    // let channel2Sample: i32 = 15;
    // let channel3Sample: i32 = 15;
    // let channel4Sample: i32 = 15;
    // Save the samples in the accumulator

    SoundAccumulator.channel1Sample = channel1Sample;
    SoundAccumulator.channel2Sample = channel2Sample;
    SoundAccumulator.channel3Sample = channel3Sample;
    SoundAccumulator.channel4Sample = channel4Sample; // Do Some downsampling magic

    Sound.downSampleCycleCounter += numberOfCycles * Sound.downSampleCycleMultiplier;

    if (Sound.downSampleCycleCounter >= Sound.maxDownSampleCycles()) {
      // Reset the downsample counter
      // Don't set to zero to catch overflowed cycles
      Sound.downSampleCycleCounter -= Sound.maxDownSampleCycles(); // Mixe our samples

      var mixedSample = mixChannelSamples(channel1Sample, channel2Sample, channel3Sample, channel4Sample);
      var leftChannelSampleUnsignedByte = splitHighByte(mixedSample);
      var rightChannelSampleUnsignedByte = splitLowByte(mixedSample); // Set our volumes in memory
      // +1 so it can not be zero

      setLeftAndRightOutputForAudioQueue(leftChannelSampleUnsignedByte + 1, rightChannelSampleUnsignedByte + 1, Sound.audioQueueIndex);
      Sound.audioQueueIndex += 1; // Don't allow our audioQueueIndex to overflow into other parts of the wasmBoy memory map
      // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit#gid=0
      // Not 0xFFFF because we need half of 64kb since we store left and right channel

      if (Sound.audioQueueIndex >= Sound.wasmBoyMemoryMaxBufferSize / 2 - 1) {
        Sound.audioQueueIndex -= 1;
      }
    }
  }

  function updateFrameSequencer(numberOfCycles) {
    // APU runs at 4194304 / 512
    // Or Cpu.clockSpeed / 512
    // Which means, we need to update once every 8192 cycles :)
    Sound.frameSequenceCycleCounter += numberOfCycles;

    if (Sound.frameSequenceCycleCounter >= Sound.maxFrameSequenceCycles()) {
      // Reset the frameSequenceCycleCounter
      // Not setting to zero as we do not want to drop cycles
      Sound.frameSequenceCycleCounter -= Sound.maxFrameSequenceCycles(); // Check our frame sequencer
      // https://gist.github.com/drhelius/3652407

      switch (Sound.frameSequencer) {
        case 0:
          // Update Length on Channels
          Channel1.updateLength();
          Channel2.updateLength();
          Channel3.updateLength();
          Channel4.updateLength();
          break;

        /* Do Nothing on one */

        case 2:
          // Update Sweep and Length on Channels
          Channel1.updateLength();
          Channel2.updateLength();
          Channel3.updateLength();
          Channel4.updateLength();
          Channel1.updateSweep();
          break;

        /* Do Nothing on three */

        case 4:
          // Update Length on Channels
          Channel1.updateLength();
          Channel2.updateLength();
          Channel3.updateLength();
          Channel4.updateLength();
          break;

        /* Do Nothing on five */

        case 6:
          // Update Sweep and Length on Channels
          Channel1.updateLength();
          Channel2.updateLength();
          Channel3.updateLength();
          Channel4.updateLength();
          Channel1.updateSweep();
          break;

        case 7:
          // Update Envelope on channels
          Channel1.updateEnvelope();
          Channel2.updateEnvelope();
          Channel4.updateEnvelope();
          break;
      } // Update our frame sequencer


      Sound.frameSequencer += 1;

      if (Sound.frameSequencer >= 8) {
        Sound.frameSequencer = 0;
      }

      return true;
    }

    return false;
  }

  function mixChannelSamples(channel1Sample, channel2Sample, channel3Sample, channel4Sample) {
    // Do Some Cool mixing
    // NR50 FF24 ALLL BRRR Vin L enable, Left vol, Vin R enable, Right vol
    // NR51 FF25 NW21 NW21 Left enables, Right enables
    // NR52 FF26 P--- NW21 Power control/status, Channel length statuses
    // NW21 = 4 bits on byte
    // 3 -> Channel 4, 2 -> Channel 3, 1 -> Channel 2, 0 -> Channel 1
    if (channel1Sample === void 0) {
      channel1Sample = 15;
    }

    if (channel2Sample === void 0) {
      channel2Sample = 15;
    }

    if (channel3Sample === void 0) {
      channel3Sample = 15;
    }

    if (channel4Sample === void 0) {
      channel4Sample = 15;
    } // Matt's Proccess
    // I push out 1024 samples at a time and use 96000 hz sampling rate, so I guess i'm a bit less than one frame,
    // but I let the queue fill up with 4 x 1024 samples before I start waiting for the audio
    // TODO: Vin Mixing


    SoundAccumulator.mixerVolumeChanged = false; // Get our channel volume for left/right

    var leftChannelSample = 0;
    var rightChannelSample = 0; // Find the sample for the left if enabled
    // other wise add silence (15) for the channel

    if (Sound.NR51IsChannel1EnabledOnLeftOutput) {
      leftChannelSample += channel1Sample;
    } else {
      leftChannelSample += 15;
    }

    if (Sound.NR51IsChannel2EnabledOnLeftOutput) {
      leftChannelSample += channel2Sample;
    } else {
      leftChannelSample += 15;
    }

    if (Sound.NR51IsChannel3EnabledOnLeftOutput) {
      leftChannelSample += channel3Sample;
    } else {
      leftChannelSample += 15;
    }

    if (Sound.NR51IsChannel4EnabledOnLeftOutput) {
      leftChannelSample += channel4Sample;
    } else {
      leftChannelSample += 15;
    } // Find the sample for the right if enabled
    // other wise add silence (15) for the channel


    if (Sound.NR51IsChannel1EnabledOnRightOutput) {
      rightChannelSample += channel1Sample;
    } else {
      rightChannelSample += 15;
    }

    if (Sound.NR51IsChannel2EnabledOnRightOutput) {
      rightChannelSample += channel2Sample;
    } else {
      rightChannelSample += 15;
    }

    if (Sound.NR51IsChannel3EnabledOnRightOutput) {
      rightChannelSample += channel3Sample;
    } else {
      rightChannelSample += 15;
    }

    if (Sound.NR51IsChannel4EnabledOnRightOutput) {
      rightChannelSample += channel4Sample;
    } else {
      rightChannelSample += 15;
    } // Update our accumulator


    SoundAccumulator.mixerEnabledChanged = false;
    SoundAccumulator.needToRemixSamples = false; // Finally multiply our volumes by the mixer volume
    // Mixer volume can be at most 7 + 1
    // Can be at most 7, because we only have 3 bits, 111 = 7
    // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Mixer
    // Done in the getSampleAsUnsignedByte(), since we are doing some weirdness there :)
    // Convert our samples from unsigned 32 to unsigned byte
    // Reason being, We want to be able to pass in wasm memory as usigned byte. Javascript will handle the conversion back

    var leftChannelSampleUnsignedByte = getSampleAsUnsignedByte(leftChannelSample, Sound.NR50LeftMixerVolume + 1);
    var rightChannelSampleUnsignedByte = getSampleAsUnsignedByte(rightChannelSample, Sound.NR50RightMixerVolume + 1); // Save these samples in the accumulator

    SoundAccumulator.leftChannelSampleUnsignedByte = leftChannelSampleUnsignedByte;
    SoundAccumulator.rightChannelSampleUnsignedByte = rightChannelSampleUnsignedByte;
    return concatenateBytes(leftChannelSampleUnsignedByte, rightChannelSampleUnsignedByte);
  }

  function getSampleAsUnsignedByte(sample, mixerVolume) {
    // If the sample is silence, return silence as unsigned byte
    // Silence is common, and should be checked for performance
    if (sample === 60) {
      return 127;
    } // convert to a signed, precise scale of -6000 to 6000 (cheap way of -1.0 to 1.0)
    // Multiply by the mixer volume fraction (to find the actual volume)


    var precision = 100000;
    var convertedSample = sample - 60;
    convertedSample = convertedSample * precision; // Multiply by the mixer volume fraction (to find the actual volume)

    convertedSample = convertedSample * mixerVolume / 8; // Convert back to scale of 0 to 120

    convertedSample = convertedSample / precision;
    convertedSample = convertedSample + 60; // Finally, convert to an unsigned byte scale
    // With Four Channels (0 to 30) and no global volume. Max is 120
    // max unsigned byte goal is 254 (see blurb at top).
    // 120 / 254 should give the correct conversion
    // For example, 120 / 254 = 0.47244094488188976
    // Multiply by 1000 to increase the float into an int
    // so, 120 * 1000 / (0.47244094488188976 * 1000) should give approximate answer for max mixer volume

    var maxDivider = 120 * precision / 254;
    convertedSample = convertedSample * precision / maxDivider; // Ensure we have an i32 and not a float for JS builds

    convertedSample = i32Portable(convertedSample);
    return convertedSample;
  } // Function to set our left and right channels at the correct queue index


  function setLeftAndRightOutputForAudioQueue(leftVolume, rightVolume, audioQueueIndex) {
    // Get our stereo index
    var audioQueueOffset = AUDIO_BUFFER_LOCATION + audioQueueIndex * 2; // Store our volumes
    // +1 that way we don't have empty data to ensure that the value is set

    store(audioQueueOffset, leftVolume + 1);
    store(audioQueueOffset + 1, rightVolume + 1);
  } // Functions involved in R/W of sound registers
  // Function to check and handle writes to sound registers


  function SoundRegisterWriteTraps(offset, value) {
    if (offset !== Sound.memoryLocationNR52 && !Sound.NR52IsSoundEnabled) {
      // Block all writes to any sound register EXCEPT NR52!
      // This is under the assumption that the check for
      // offset >= 0xFF10 && offset <= 0xFF26
      // is done in writeTraps.ts (which it is)
      // NOTE: Except on DMG, length can still be written (whatever that means)
      return false;
    }

    switch (offset) {
      // Handle NRx0 on Channels
      case Channel1.memoryLocationNRx0:
        Channel1.updateNRx0(value);
        return true;

      case Channel3.memoryLocationNRx0:
        Channel3.updateNRx0(value);
        return true;
      // Handle NRx1 (Length Counter) on Channels

      case Channel1.memoryLocationNRx1:
        Channel1.updateNRx1(value);
        return true;

      case Channel2.memoryLocationNRx1:
        Channel2.updateNRx1(value);
        return true;

      case Channel3.memoryLocationNRx1:
        Channel3.updateNRx1(value);
        return true;

      case Channel4.memoryLocationNRx1:
        Channel4.updateNRx1(value);
        return true;
      // Handle NRx2 (Envelope / Volume) on Channels

      case Channel1.memoryLocationNRx2:
        Channel1.updateNRx2(value);
        return true;

      case Channel2.memoryLocationNRx2:
        Channel2.updateNRx2(value);
        return true;

      case Channel3.memoryLocationNRx2:
        // Check if channel 3's volume code was written too
        // This is handcy to know for accumulation of samples
        Channel3.volumeCodeChanged = true;
        Channel3.updateNRx2(value);
        return true;

      case Channel4.memoryLocationNRx2:
        Channel4.updateNRx2(value);
        return true;
      // Handle NRx3 (Frequency / Noise Properties) on Channels

      case Channel1.memoryLocationNRx3:
        Channel1.updateNRx3(value);
        return true;

      case Channel2.memoryLocationNRx3:
        Channel2.updateNRx3(value);
        return true;

      case Channel3.memoryLocationNRx3:
        Channel3.updateNRx3(value);
        return true;

      case Channel4.memoryLocationNRx3:
        Channel4.updateNRx3(value);
        return true;
      // Check our NRx4 registers to trap our trigger bits

      case Channel1.memoryLocationNRx4:
        if (checkBitOnByte(7, value)) {
          Channel1.updateNRx4(value);
          Channel1.trigger();
        }

        return true;

      case Channel2.memoryLocationNRx4:
        if (checkBitOnByte(7, value)) {
          Channel2.updateNRx4(value);
          Channel2.trigger();
        }

        return true;

      case Channel3.memoryLocationNRx4:
        if (checkBitOnByte(7, value)) {
          Channel3.updateNRx4(value);
          Channel3.trigger();
        }

        return true;

      case Channel4.memoryLocationNRx4:
        if (checkBitOnByte(7, value)) {
          Channel4.updateNRx4(value);
          Channel4.trigger();
        }

        return true;
      // Tell the sound accumulator if volumes changes

      case Sound.memoryLocationNR50:
        Sound.updateNR50(value);
        SoundAccumulator.mixerVolumeChanged = true;
        return true;
      // Tell the sound accumulator if volumes changes

      case Sound.memoryLocationNR51:
        Sound.updateNR51(value);
        SoundAccumulator.mixerEnabledChanged = true;
        return true;

      case Sound.memoryLocationNR52:
        // Reset all registers except NR52
        Sound.updateNR52(value);

        if (!checkBitOnByte(7, value)) {
          for (var i = 0xff10; i < 0xff26; i++) {
            eightBitStoreIntoGBMemory(i, 0x00);
          }
        }

        return true;
    } // We did not handle the write, Allow the write


    return true;
  } // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Registers


  function SoundRegisterReadTraps(offset) {
    // TODO: OR All Registers
    // This will fix bugs in orcale of ages :)
    if (offset === Sound.memoryLocationNR52) {
      // Get our registerNR52
      var registerNR52 = eightBitLoadFromGBMemory(Sound.memoryLocationNR52); // Knock off lower 7 bits

      registerNR52 = registerNR52 & 0x80; // Or from the table

      registerNR52 = registerNR52 | 0x70;
      return registerNR52;
    }

    return -1;
  }

  var Interrupts =
  /** @class */
  function () {
    function Interrupts() {}

    Interrupts.updateInterruptEnabled = function (value) {
      Interrupts.isVBlankInterruptEnabled = checkBitOnByte(Interrupts.bitPositionVBlankInterrupt, value);
      Interrupts.isLcdInterruptEnabled = checkBitOnByte(Interrupts.bitPositionLcdInterrupt, value);
      Interrupts.isTimerInterruptEnabled = checkBitOnByte(Interrupts.bitPositionTimerInterrupt, value);
      Interrupts.isJoypadInterruptEnabled = checkBitOnByte(Interrupts.bitPositionJoypadInterrupt, value);
      Interrupts.interruptsEnabledValue = value;
    };

    Interrupts.updateInterruptRequested = function (value) {
      Interrupts.isVBlankInterruptRequested = checkBitOnByte(Interrupts.bitPositionVBlankInterrupt, value);
      Interrupts.isLcdInterruptRequested = checkBitOnByte(Interrupts.bitPositionLcdInterrupt, value);
      Interrupts.isTimerInterruptRequested = checkBitOnByte(Interrupts.bitPositionTimerInterrupt, value);
      Interrupts.isJoypadInterruptRequested = checkBitOnByte(Interrupts.bitPositionJoypadInterrupt, value);
      Interrupts.interruptsRequestedValue = value;
    }; // Function to return if we have any pending interrupts


    Interrupts.areInterruptsPending = function () {
      return (Interrupts.interruptsRequestedValue & Interrupts.interruptsEnabledValue & 0x1f) > 0;
    }; // Function to save the state of the class


    Interrupts.saveState = function () {
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x00, Interrupts.saveStateSlot), Interrupts.masterInterruptSwitch);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x01, Interrupts.saveStateSlot), Interrupts.masterInterruptSwitchDelay); // Interrupts enabled and requested are stored in actual GB memory, thus, don't need to be saved
    }; // Function to load the save state from memory


    Interrupts.loadState = function () {
      Interrupts.masterInterruptSwitch = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x00, Interrupts.saveStateSlot));
      Interrupts.masterInterruptSwitchDelay = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x01, Interrupts.saveStateSlot));
      Interrupts.updateInterruptEnabled(eightBitLoadFromGBMemory(Interrupts.memoryLocationInterruptEnabled));
      Interrupts.updateInterruptRequested(eightBitLoadFromGBMemory(Interrupts.memoryLocationInterruptRequest));
    };

    Interrupts.masterInterruptSwitch = false; // According to mooneye, interrupts are not handled until AFTER
    // Next instruction
    // https://github.com/Gekkio/mooneye-gb/blob/master/docs/accuracy.markdown

    Interrupts.masterInterruptSwitchDelay = false; // Biut position for each part of the interrupts HW registers

    Interrupts.bitPositionVBlankInterrupt = 0;
    Interrupts.bitPositionLcdInterrupt = 1;
    Interrupts.bitPositionTimerInterrupt = 2;
    Interrupts.bitPositionJoypadInterrupt = 4;
    Interrupts.memoryLocationInterruptEnabled = 0xffff; // A.K.A interrupt Flag (IE)
    // Cache which Interrupts are enabled

    Interrupts.interruptsEnabledValue = 0;
    Interrupts.isVBlankInterruptEnabled = false;
    Interrupts.isLcdInterruptEnabled = false;
    Interrupts.isTimerInterruptEnabled = false;
    Interrupts.isJoypadInterruptEnabled = false;
    Interrupts.memoryLocationInterruptRequest = 0xff0f; // A.K.A interrupt Flag (IF)
    // Cache which Interrupts are requested

    Interrupts.interruptsRequestedValue = 0;
    Interrupts.isVBlankInterruptRequested = false;
    Interrupts.isLcdInterruptRequested = false;
    Interrupts.isTimerInterruptRequested = false;
    Interrupts.isJoypadInterruptRequested = false; // Save States

    Interrupts.saveStateSlot = 2;
    return Interrupts;
  }();

  function initializeInterrupts() {
    // Values from BGB
    // IE
    Interrupts.updateInterruptEnabled(0x00);
    eightBitStoreIntoGBMemory(Interrupts.memoryLocationInterruptEnabled, Interrupts.interruptsEnabledValue); // IF

    Interrupts.updateInterruptRequested(0xe1);
    eightBitStoreIntoGBMemory(Interrupts.memoryLocationInterruptRequest, Interrupts.interruptsRequestedValue);
  } // NOTE: Interrupts should be handled before reading an opcode


  function checkInterrupts() {
    // First check for our delay was enabled
    if (Interrupts.masterInterruptSwitchDelay) {
      Interrupts.masterInterruptSwitch = true;
      Interrupts.masterInterruptSwitchDelay = false;
    } // Check if we have an enabled and requested interrupt


    var isAnInterruptRequestedAndEnabledValue = Interrupts.interruptsEnabledValue & Interrupts.interruptsRequestedValue & 0x1f;

    if (isAnInterruptRequestedAndEnabledValue > 0) {
      // Boolean to track if interrupts were handled
      // Interrupt handling requires 20 cycles
      // https://github.com/Gekkio/mooneye-gb/blob/master/docs/accuracy.markdown#what-is-the-exact-timing-of-cpu-servicing-an-interrupt
      var wasInterruptHandled = false; // Service our interrupts, if we have the master switch enabled
      // https://www.reddit.com/r/EmuDev/comments/5ie3k7/infinite_loop_trying_to_pass_blarggs_interrupt/

      if (Interrupts.masterInterruptSwitch && !Cpu.isHaltNoJump) {
        if (Interrupts.isVBlankInterruptEnabled && Interrupts.isVBlankInterruptRequested) {
          _handleInterrupt(Interrupts.bitPositionVBlankInterrupt);

          wasInterruptHandled = true;
        } else if (Interrupts.isLcdInterruptEnabled && Interrupts.isLcdInterruptRequested) {
          _handleInterrupt(Interrupts.bitPositionLcdInterrupt);

          wasInterruptHandled = true;
        } else if (Interrupts.isTimerInterruptEnabled && Interrupts.isTimerInterruptRequested) {
          _handleInterrupt(Interrupts.bitPositionTimerInterrupt);

          wasInterruptHandled = true;
        } else if (Interrupts.isJoypadInterruptEnabled && Interrupts.isJoypadInterruptRequested) {
          _handleInterrupt(Interrupts.bitPositionJoypadInterrupt);

          wasInterruptHandled = true;
        }
      }

      var interuptHandlerCycles = 0;

      if (wasInterruptHandled) {
        // Interrupt handling requires 20 cycles, TCAGBD
        interuptHandlerCycles = 20;

        if (Cpu.isHalted()) {
          // If the CPU was halted, now is the time to un-halt
          // Should be done here when the jump occurs according to:
          // https://www.reddit.com/r/EmuDev/comments/6fmjch/gb_glitches_in_links_awakening_and_pok%C3%A9mon_gold/
          Cpu.exitHaltAndStop();
          interuptHandlerCycles += 4;
        }
      }

      if (Cpu.isHalted()) {
        Cpu.exitHaltAndStop();
      }

      return interuptHandlerCycles;
    }

    return 0;
  }

  function _handleInterrupt(bitPosition) {
    // Disable the master switch
    setInterrupts(false); // Disable the bit on the interruptRequest

    var interruptRequest = eightBitLoadFromGBMemory(Interrupts.memoryLocationInterruptRequest);
    interruptRequest = resetBitOnByte(bitPosition, interruptRequest);
    Interrupts.interruptsRequestedValue = interruptRequest;
    eightBitStoreIntoGBMemory(Interrupts.memoryLocationInterruptRequest, interruptRequest); // Push the programCounter onto the stacks
    // Push the next instruction, not the halt itself (TCAGBD).

    Cpu.stackPointer = Cpu.stackPointer - 2;

    if (Cpu.isHalted()) {
      // TODO: This breaks Pokemon Yellow, And OG Link's awakening. Find out why...
      // sixteenBitStoreIntoGBMemory(Cpu.stackPointer, Cpu.programCounter + 1);
      sixteenBitStoreIntoGBMemory(Cpu.stackPointer, Cpu.programCounter);
    } else {
      sixteenBitStoreIntoGBMemory(Cpu.stackPointer, Cpu.programCounter);
    } // Jump to the correct interrupt location
    // Also puiggyback off of the switch to reset our HW Register caching
    // http://www.codeslinger.co.uk/pages/projects/gameboy/interupts.html


    switch (bitPosition) {
      case Interrupts.bitPositionVBlankInterrupt:
        Interrupts.isVBlankInterruptRequested = false;
        Cpu.programCounter = 0x40;
        break;

      case Interrupts.bitPositionLcdInterrupt:
        Interrupts.isLcdInterruptRequested = false;
        Cpu.programCounter = 0x48;
        break;

      case Interrupts.bitPositionTimerInterrupt:
        Interrupts.isTimerInterruptRequested = false;
        Cpu.programCounter = 0x50;
        break;

      case Interrupts.bitPositionJoypadInterrupt:
        Interrupts.isJoypadInterruptRequested = false;
        Cpu.programCounter = 0x60;
        break;
    }
  }

  function _requestInterrupt(bitPosition) {
    var interruptRequest = eightBitLoadFromGBMemory(Interrupts.memoryLocationInterruptRequest); // Pass to set the correct interrupt bit on interruptRequest

    interruptRequest = setBitOnByte(bitPosition, interruptRequest);
    Interrupts.interruptsRequestedValue = interruptRequest;
    eightBitStoreIntoGBMemory(Interrupts.memoryLocationInterruptRequest, interruptRequest);
  }

  function setInterrupts(value) {
    // If we are enabling interrupts,
    // we want to wait 4 cycles before enabling
    if (value) {
      Interrupts.masterInterruptSwitchDelay = true;
    } else {
      Interrupts.masterInterruptSwitch = false;
    }
  }

  function requestVBlankInterrupt() {
    Interrupts.isVBlankInterruptRequested = true;

    _requestInterrupt(Interrupts.bitPositionVBlankInterrupt);
  }

  function requestLcdInterrupt() {
    Interrupts.isLcdInterruptRequested = true;

    _requestInterrupt(Interrupts.bitPositionLcdInterrupt);
  }

  function requestTimerInterrupt() {
    Interrupts.isTimerInterruptRequested = true;

    _requestInterrupt(Interrupts.bitPositionTimerInterrupt);
  }

  function requestJoypadInterrupt() {
    Interrupts.isJoypadInterruptRequested = true;

    _requestInterrupt(Interrupts.bitPositionJoypadInterrupt);
  }

  var Timers =
  /** @class */
  function () {
    function Timers() {} // Number of cycles to run in each batch process


    Timers.batchProcessCycles = function () {
      return 256;
    };

    Timers.updateDividerRegister = function (value) {
      var oldDividerRegister = Timers.dividerRegister;
      Timers.dividerRegister = 0;
      eightBitStoreIntoGBMemory(Timers.memoryLocationDividerRegister, 0);

      if (Timers.timerEnabled && _checkDividerRegisterFallingEdgeDetector(oldDividerRegister, Timers.dividerRegister)) {
        _incrementTimerCounter();
      }
    };

    Timers.updateTimerCounter = function (value) {
      if (Timers.timerEnabled) {
        // From binjgb, dont write TIMA if we were just reset
        if (Timers.timerCounterWasReset) {
          return;
        } // Mooneye Test, tima_write_reloading
        // Writing in this strange delay cycle, will cancel
        // Both the interrupt and the TMA reload


        if (Timers.timerCounterOverflowDelay) {
          Timers.timerCounterOverflowDelay = false;
        }
      }

      Timers.timerCounter = value;
    };

    Timers.updateTimerModulo = function (value) {
      Timers.timerModulo = value; // Mooneye Test, tma_write_reloading
      // Don't update if we were reloading

      if (Timers.timerEnabled && Timers.timerCounterWasReset) {
        Timers.timerCounter = Timers.timerModulo;
        Timers.timerCounterWasReset = false;
      }
    };

    Timers.updateTimerControl = function (value) {
      // Get some initial values
      var oldTimerEnabled = Timers.timerEnabled;
      Timers.timerEnabled = checkBitOnByte(2, value);
      var newTimerInputClock = value & 0x03; // Do some obscure behavior for if we should increment TIMA
      // This does the timer increments from rapid_toggle mooneye tests

      if (!oldTimerEnabled) {
        var oldTimerCounterMaskBit = _getTimerCounterMaskBit(Timers.timerInputClock);

        var newTimerCounterMaskBit = _getTimerCounterMaskBit(newTimerInputClock);

        var shouldIncrementTimerCounter = false;

        if (Timers.timerEnabled) {
          shouldIncrementTimerCounter = checkBitOnByte(oldTimerCounterMaskBit, Timers.dividerRegister);
        } else {
          shouldIncrementTimerCounter = checkBitOnByte(oldTimerCounterMaskBit, Timers.dividerRegister) && checkBitOnByte(newTimerCounterMaskBit, Timers.dividerRegister);
        }

        if (shouldIncrementTimerCounter) {
          _incrementTimerCounter();
        }
      }

      Timers.timerInputClock = newTimerInputClock;
    }; // Function to save the state of the class
    // TODO: Save state for new properties on Timers


    Timers.saveState = function () {
      store(getSaveStateMemoryOffset(0x00, Timers.saveStateSlot), Timers.currentCycles);
      store(getSaveStateMemoryOffset(0x04, Timers.saveStateSlot), Timers.dividerRegister);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x08, Timers.saveStateSlot), Timers.timerCounterOverflowDelay);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x0b, Timers.saveStateSlot), Timers.timerCounterWasReset);
      eightBitStoreIntoGBMemory(Timers.memoryLocationTimerCounter, Timers.timerCounter);
    }; // Function to load the save state from memory


    Timers.loadState = function () {
      Timers.currentCycles = load(getSaveStateMemoryOffset(0x00, Timers.saveStateSlot));
      Timers.dividerRegister = load(getSaveStateMemoryOffset(0x04, Timers.saveStateSlot));
      Timers.timerCounterOverflowDelay = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x08, Timers.saveStateSlot));
      Timers.timerCounterWasReset = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x0b, Timers.saveStateSlot));
      Timers.timerCounter = eightBitLoadFromGBMemory(Timers.memoryLocationTimerCounter);
      Timers.timerModulo = eightBitLoadFromGBMemory(Timers.memoryLocationTimerModulo);
      Timers.timerInputClock = eightBitLoadFromGBMemory(Timers.memoryLocationTimerControl);
    }; // Current cycles
    // This will be used for batch processing


    Timers.currentCycles = 0; // Divider Register = DIV
    // Divider Register is 16 bits.
    // Divider Register when read is just the upper 8 bits
    // But internally is used as the full 16
    // Essentially dividerRegister is an always counting clock
    // DIV Drives everything, it is the heart of the timer.
    // All other timing registers base them selves relative to the DIV register
    // Think of the div register as like a cycle counter :)
    // DIV will increment TIMA, whenever there is a falling edge, see below for that.

    Timers.memoryLocationDividerRegister = 0xff04; // DIV

    Timers.dividerRegister = 0; // timerCounter = TIMA
    // TIMA is the actual counter.
    // Whenever the DIV gets the falling edge, and other obscure cases,
    // This is incremented. When this overflows, we need to fire an interrupt.

    Timers.memoryLocationTimerCounter = 0xff05;
    Timers.timerCounter = 0;
    Timers.timerCounterOverflowDelay = false;
    Timers.timerCounterWasReset = false;
    Timers.timerCounterMask = 0; // Timer Modulo = TMA
    // TMA is what TIMA (Notice the I :p) is counting from, and TIMA will load
    // Whenever TIMA overflow.
    // For instance, we count like 1,2,3,4,5,6,7,8,9, and then overflow to 10.
    // TMA would be like "Hey, start counting from 5 whenever we reset"
    // Then we would be like 5,6,7,8,9...5,6,7,8,9...etc...

    Timers.memoryLocationTimerModulo = 0xff06;
    Timers.timerModulo = 0; // Timer Control = TAC
    // TAC Says how fast we are counting.
    // TAC controls which bit we are watching for the falling edge on the DIV register
    // And whenever the bit has the falling edge, we increment TIMA (The thing counting).
    // Therefore, depending on the value, we will either count faster or slower.

    Timers.memoryLocationTimerControl = 0xff07; // Bit 2    - Timer Stop  (0=Stop, 1=Start)
    // Bits 1-0 - Input Clock Select
    //            00:   4096 Hz    (~4194 Hz SGB) (1024 cycles)
    //            01: 262144 Hz  (~268400 Hz SGB) (16 cycles)
    //            10:  65536 Hz   (~67110 Hz SGB) (64 cycles)
    //            11:  16384 Hz   (~16780 Hz SGB) (256 cycles)

    Timers.timerEnabled = false;
    Timers.timerInputClock = 0; // Save States

    Timers.saveStateSlot = 5;
    return Timers;
  }();

  function initializeTimers() {
    // Reset stateful Variables
    Timers.currentCycles = 0;
    Timers.dividerRegister = 0;
    Timers.timerCounter = 0;
    Timers.timerModulo = 0;
    Timers.timerEnabled = false;
    Timers.timerInputClock = 0;
    Timers.timerCounterOverflowDelay = false;
    Timers.timerCounterWasReset = false;

    if (Cpu.GBCEnabled) {
      // DIV
      eightBitStoreIntoGBMemory(0xff04, 0x1e);
      Timers.dividerRegister = 0x1ea0; // 0xFF05 -> 0xFF06 = 0x00
      // TAC

      eightBitStoreIntoGBMemory(0xff07, 0xf8);
      Timers.timerInputClock = 0xf8;
    } else {
      // DIV
      eightBitStoreIntoGBMemory(0xff04, 0xab);
      Timers.dividerRegister = 0xabcc; // 0xFF05 -> 0xFF06 = 0x00
      // TAC

      eightBitStoreIntoGBMemory(0xff07, 0xf8);
      Timers.timerInputClock = 0xf8;
    }
  } // Batch Process Timers
  // Only checked on writes
  // Function to batch process our Timers after we skipped so many cycles


  function batchProcessTimers() {
    // TODO: Did a timer rewrite, make a proper batch processing
    // For timers
    updateTimers(Timers.currentCycles);
    Timers.currentCycles = 0;
  }

  function updateTimers(numberOfCycles) {
    // Want to increment 4 cycles at a time like an actual GB would
    var cyclesIncreased = 0;

    while (cyclesIncreased < numberOfCycles) {
      var oldDividerRegister = Timers.dividerRegister;
      cyclesIncreased += 4;
      Timers.dividerRegister += 4;

      if (Timers.dividerRegister > 0xffff) {
        Timers.dividerRegister -= 0x10000;
      }

      if (Timers.timerEnabled) {
        if (Timers.timerCounterOverflowDelay) {
          Timers.timerCounter = Timers.timerModulo; // Fire off timer interrupt

          requestTimerInterrupt();
          Timers.timerCounterOverflowDelay = false;
          Timers.timerCounterWasReset = true;
        } else if (Timers.timerCounterWasReset) {
          Timers.timerCounterWasReset = false;
        }

        if (_checkDividerRegisterFallingEdgeDetector(oldDividerRegister, Timers.dividerRegister)) {
          _incrementTimerCounter();
        }
      }
    }
  } // Function to increment our Timer Counter
  // This fires off interrupts once we overflow


  function _incrementTimerCounter() {
    Timers.timerCounter += 1;

    if (Timers.timerCounter > 255) {
      // Whenever the timer overflows, there is a slight delay (4 cycles)
      // Of when TIMA gets TMA's value, and the interrupt is fired.
      // Thus we will set the delay, which can be handled in the update timer or write trap
      Timers.timerCounterOverflowDelay = true;
      Timers.timerCounter = 0;
    }
  } // Function to act as our falling edge detector
  // Whenever we have a falling edge, we need to increment TIMA
  // http://gbdev.gg8.se/wiki/articles/Timer_Obscure_Behaviour
  // https://github.com/binji/binjgb/blob/master/src/emulator.c#L1944


  function _checkDividerRegisterFallingEdgeDetector(oldDividerRegister, newDividerRegister) {
    // Get our mask
    var timerCounterMaskBit = _getTimerCounterMaskBit(Timers.timerInputClock); // If the old register's watched bit was zero,
    // but after adding the new registers wastch bit is now 1


    if (checkBitOnByte(timerCounterMaskBit, oldDividerRegister) && !checkBitOnByte(timerCounterMaskBit, newDividerRegister)) {
      return true;
    }

    return false;
  } // Function to get our current tima mask bit
  // used for our falling edge detector
  // See The docs linked above, or TCAGB for this bit mapping


  function _getTimerCounterMaskBit(timerInputClock) {
    switch (timerInputClock) {
      case 0x00:
        return 9;

      case 0x01:
        return 3;

      case 0x02:
        return 5;

      case 0x03:
        return 7;
    }

    return 0;
  } // http://www.codeslinger.co.uk/pages/projects/gameboy/joypad.html
  // Joypad Register
  // Taken from pandocs
  // Bit 7 - Not used
  // Bit 6 - Not used
  // Bit 5 - P15 Select Button Keys (0=Select)
  // Bit 4 - P14 Select Direction Keys (0=Select)
  // Bit 3 - P13 Input Down or Start (0=Pressed) (Read Only)
  // Bit 2 - P12 Input Up or Select (0=Pressed) (Read Only)
  // Bit 1 - P11 Input Left or Button B (0=Pressed) (Read Only)
  // Bit 0 - P10 Input Right or Button A (0=Pressed) (Read Only)
  // Button Ids will be the following:
  // UP - 0
  // RIGHT - 1
  // DOWN - 2
  // LEFT - 3
  // A - 4
  // B - 5
  // SELECT - 6
  // START - 7


  var Joypad =
  /** @class */
  function () {
    function Joypad() {}

    Joypad.updateJoypad = function (value) {
      Joypad.joypadRegisterFlipped = value ^ 0xff;
      Joypad.isDpadType = checkBitOnByte(4, Joypad.joypadRegisterFlipped);
      Joypad.isButtonType = checkBitOnByte(5, Joypad.joypadRegisterFlipped);
    }; // Function to save the state of the class


    Joypad.saveState = function () {}; // Function to load the save state from memory


    Joypad.loadState = function () {
      Joypad.updateJoypad(eightBitLoadFromGBMemory(Joypad.memoryLocationJoypadRegister));
    };

    Joypad.up = false;
    Joypad.down = false;
    Joypad.left = false;
    Joypad.right = false;
    Joypad.a = false;
    Joypad.b = false;
    Joypad.select = false;
    Joypad.start = false;
    Joypad.memoryLocationJoypadRegister = 0xff00; // Cache some values on the Joypad register

    Joypad.joypadRegisterFlipped = 0;
    Joypad.isDpadType = false;
    Joypad.isButtonType = false; // Save States
    // Not doing anything for Joypad for now

    Joypad.saveStateSlot = 3;
    return Joypad;
  }();

  function getJoypadState() {
    // Get the joypad register
    var joypadRegister = Joypad.joypadRegisterFlipped;

    if (Joypad.isDpadType) {
      // D-pad buttons
      // Up
      if (Joypad.up) {
        joypadRegister = resetBitOnByte(2, joypadRegister);
      } else {
        joypadRegister = setBitOnByte(2, joypadRegister);
      } // Right


      if (Joypad.right) {
        joypadRegister = resetBitOnByte(0, joypadRegister);
      } else {
        joypadRegister = setBitOnByte(0, joypadRegister);
      } // Down


      if (Joypad.down) {
        joypadRegister = resetBitOnByte(3, joypadRegister);
      } else {
        joypadRegister = setBitOnByte(3, joypadRegister);
      } // Left


      if (Joypad.left) {
        joypadRegister = resetBitOnByte(1, joypadRegister);
      } else {
        joypadRegister = setBitOnByte(1, joypadRegister);
      }
    } else if (Joypad.isButtonType) {
      // A
      if (Joypad.a) {
        joypadRegister = resetBitOnByte(0, joypadRegister);
      } else {
        joypadRegister = setBitOnByte(0, joypadRegister);
      } // B


      if (Joypad.b) {
        joypadRegister = resetBitOnByte(1, joypadRegister);
      } else {
        joypadRegister = setBitOnByte(1, joypadRegister);
      } // Select


      if (Joypad.select) {
        joypadRegister = resetBitOnByte(2, joypadRegister);
      } else {
        joypadRegister = setBitOnByte(2, joypadRegister);
      } // Start


      if (Joypad.start) {
        joypadRegister = resetBitOnByte(3, joypadRegister);
      } else {
        joypadRegister = setBitOnByte(3, joypadRegister);
      }
    } // Set the top 4 bits to on


    joypadRegister = joypadRegister | 0xf0;
    return joypadRegister;
  }

  function setJoypadState(up, right, down, left, a, b, select, start) {
    if (up > 0) {
      _pressJoypadButton(0);
    } else {
      _releaseJoypadButton(0);
    }

    if (right > 0) {
      _pressJoypadButton(1);
    } else {
      _releaseJoypadButton(1);
    }

    if (down > 0) {
      _pressJoypadButton(2);
    } else {
      _releaseJoypadButton(2);
    }

    if (left > 0) {
      _pressJoypadButton(3);
    } else {
      _releaseJoypadButton(3);
    }

    if (a > 0) {
      _pressJoypadButton(4);
    } else {
      _releaseJoypadButton(4);
    }

    if (b > 0) {
      _pressJoypadButton(5);
    } else {
      _releaseJoypadButton(5);
    }

    if (select > 0) {
      _pressJoypadButton(6);
    } else {
      _releaseJoypadButton(6);
    }

    if (start > 0) {
      _pressJoypadButton(7);
    } else {
      _releaseJoypadButton(7);
    }
  }

  function _pressJoypadButton(buttonId) {
    // Un stop the CPU
    Cpu.isStopped = false; // Check if the button state changed from not pressed

    var isButtonStateChanging = false;

    if (!_getJoypadButtonStateFromButtonId(buttonId)) {
      isButtonStateChanging = true;
    } // Set our joypad state


    _setJoypadButtonStateFromButtonId(buttonId, true); // If the button state is changing, check for an interrupt


    if (isButtonStateChanging) {
      // Determine if it is a button or a dpad button
      var isDpadTypeButton = false;

      if (buttonId <= 3) {
        isDpadTypeButton = true;
      }

      var shouldRequestInterrupt = false; // Check if the game is looking for a dpad type button press

      if (Joypad.isDpadType && isDpadTypeButton) {
        shouldRequestInterrupt = true;
      } // Check if the game is looking for a button type button press


      if (Joypad.isButtonType && !isDpadTypeButton) {
        shouldRequestInterrupt = true;
      } // Finally, request the interrupt, if the button state actually changed


      if (shouldRequestInterrupt) {
        requestJoypadInterrupt();
      }
    }
  }

  function _releaseJoypadButton(buttonId) {
    // Set our joypad state
    _setJoypadButtonStateFromButtonId(buttonId, false);
  }

  function _getJoypadButtonStateFromButtonId(buttonId) {
    switch (buttonId) {
      case 0:
        return Joypad.up;

      case 1:
        return Joypad.right;

      case 2:
        return Joypad.down;

      case 3:
        return Joypad.left;

      case 4:
        return Joypad.a;

      case 5:
        return Joypad.b;

      case 6:
        return Joypad.select;

      case 7:
        return Joypad.start;

      default:
        return false;
    }
  }

  function _setJoypadButtonStateFromButtonId(buttonId, isPressed) {
    switch (buttonId) {
      case 0:
        Joypad.up = isPressed;
        break;

      case 1:
        Joypad.right = isPressed;
        break;

      case 2:
        Joypad.down = isPressed;
        break;

      case 3:
        Joypad.left = isPressed;
        break;

      case 4:
        Joypad.a = isPressed;
        break;

      case 5:
        Joypad.b = isPressed;
        break;

      case 6:
        Joypad.select = isPressed;
        break;

      case 7:
        Joypad.start = isPressed;
        break;
    }
  } // Function to handle rom/rambanking


  function handleBanking(offset, value) {
    // Is rom Only does not bank
    if (Memory.isRomOnly) {
      return;
    } // Enable Ram Banking


    if (offset <= 0x1fff) {
      if (Memory.isMBC2 && !checkBitOnByte(4, value)) {
        // Do Nothing
        return;
      } else {
        var romEnableByte = value & 0x0f;

        if (romEnableByte === 0x00) {
          Memory.isRamBankingEnabled = false;
        } else if (romEnableByte === 0x0a) {
          Memory.isRamBankingEnabled = true;
        }
      }
    } else if (offset <= 0x3fff) {
      if (!Memory.isMBC5 || offset <= 0x2fff) {
        // Change Low Bits on the Current Rom Bank
        if (Memory.isMBC2) {
          Memory.currentRomBank = value & 0x0f;
        } // Set the number of bottom bytes from the MBC type


        var romBankLowerBits = value;

        if (Memory.isMBC1) {
          // Only want the bottom 5
          romBankLowerBits = romBankLowerBits & 0x1f;
          Memory.currentRomBank = Memory.currentRomBank & 0xe0;
        } else if (Memory.isMBC3) {
          // Only Want the bottom 7
          romBankLowerBits = romBankLowerBits & 0x7f;
          Memory.currentRomBank = Memory.currentRomBank & 0x80;
        } else if (Memory.isMBC5) {
          // Going to switch the whole thing
          Memory.currentRomBank = Memory.currentRomBank & 0x00;
        } // Set the lower bytes


        Memory.currentRomBank = Memory.currentRomBank | romBankLowerBits;
        return;
      } else {
        // TODO: MBC5 High bits Rom bank, check if this works, not sure about the value
        var highByte = 0;
        var lowByte = splitLowByte(Memory.currentRomBank);

        if (value > 0) {
          highByte = 1;
        }

        Memory.currentRomBank = concatenateBytes(highByte, lowByte);
      }
    } else if (!Memory.isMBC2 && offset <= 0x5fff) {
      // ROM / RAM Banking, MBC2 doesn't do this
      if (Memory.isMBC1 && Memory.isMBC1RomModeEnabled) {
        // Do an upper bit rom bank for MBC 1
        // Remove upper bits of currentRomBank
        Memory.currentRomBank = Memory.currentRomBank & 0x1f;
        var romBankHigherBits = value & 0xe0;
        Memory.currentRomBank = Memory.currentRomBank | romBankHigherBits;
        return;
      }

      var ramBankBits = value;

      if (!Memory.isMBC5) {
        // Get the bottom 2 bits
        ramBankBits = ramBankBits & 0x03;
      } else {
        // Get the bottom nibble
        ramBankBits = ramBankBits & 0x0f;
      } // Set our ram bank


      Memory.currentRamBank = ramBankBits;
      return;
    } else if (!Memory.isMBC2 && offset <= 0x7fff) {
      if (Memory.isMBC1) {
        if (checkBitOnByte(0, value)) {
          Memory.isMBC1RomModeEnabled = true;
        } else {
          Memory.isMBC1RomModeEnabled = false;
        }
      } // TODO: MBC3 Latch Clock Data

    }
  }

  function getRomBankAddress(gameboyOffset) {
    var currentRomBank = Memory.currentRomBank;

    if (!Memory.isMBC5 && currentRomBank === 0) {
      currentRomBank = 1;
    } // Adjust our gameboy offset relative to zero for the gameboy memory map


    return 0x4000 * currentRomBank + (gameboyOffset - Memory.switchableCartridgeRomLocation);
  }

  function getRamBankAddress(gameboyOffset) {
    // Adjust our gameboy offset relative to zero for the gameboy memory map
    return 0x2000 * Memory.currentRamBank + (gameboyOffset - Memory.cartridgeRamLocation);
  }

  function initializeDma() {
    if (Cpu.GBCEnabled) {
      // GBC DMA
      eightBitStoreIntoGBMemory(0xff51, 0xff);
      eightBitStoreIntoGBMemory(0xff52, 0xff);
      eightBitStoreIntoGBMemory(0xff53, 0xff);
      eightBitStoreIntoGBMemory(0xff54, 0xff);
      eightBitStoreIntoGBMemory(0xff55, 0xff);
    } else {
      // GBC DMA
      eightBitStoreIntoGBMemory(0xff51, 0xff);
      eightBitStoreIntoGBMemory(0xff52, 0xff);
      eightBitStoreIntoGBMemory(0xff53, 0xff);
      eightBitStoreIntoGBMemory(0xff54, 0xff);
      eightBitStoreIntoGBMemory(0xff55, 0xff);
    }
  }

  function startDmaTransfer(sourceAddressOffset) {
    var sourceAddress = sourceAddressOffset;
    sourceAddress = sourceAddress << 8;

    for (var i = 0; i <= 0x9f; i++) {
      var spriteInformationByte = eightBitLoadFromGBMemory(sourceAddress + i);
      var spriteInformationAddress = Memory.spriteInformationTableLocation + i;
      eightBitStoreIntoGBMemory(spriteInformationAddress, spriteInformationByte);
    } // TCAGBD:  This copy (DMA) needs 160 × 4 + 4 clocks to complete in both double speed and single speeds modes
    // Increment all of our Cycle coiunters in ../cpu/opcodes


    Memory.DMACycles = 644;
  } // https://gist.github.com/drhelius/3394856
  // http://bgb.bircd.org/pandocs.htm


  function startHdmaTransfer(hdmaTriggerByteToBeWritten) {
    // Check if we are Gbc
    if (!Cpu.GBCEnabled) {
      return;
    } // Check if we are trying to terminate an already active HBLANK HDMA


    if (Memory.isHblankHdmaActive && !checkBitOnByte(7, hdmaTriggerByteToBeWritten)) {
      // Don't reset anything, just set bit 7 to 1 on the trigger byte
      Memory.isHblankHdmaActive = false;
      var hdmaTriggerByte = eightBitLoadFromGBMemory(Memory.memoryLocationHdmaTrigger);
      eightBitStoreIntoGBMemory(Memory.memoryLocationHdmaTrigger, setBitOnByte(7, hdmaTriggerByte));
      return;
    } // Get our source and destination for the HDMA


    var hdmaSource = getHdmaSourceFromMemory();
    var hdmaDestination = getHdmaDestinationFromMemory(); // Get the length from the trigger
    // Lower 7 bits, Add 1, times 16
    // https://gist.github.com/drhelius/3394856

    var transferLength = resetBitOnByte(7, hdmaTriggerByteToBeWritten);
    transferLength = (transferLength + 1) * 16; // Get bit 7 of the trigger for the HDMA type

    if (checkBitOnByte(7, hdmaTriggerByteToBeWritten)) {
      // H-Blank DMA
      Memory.isHblankHdmaActive = true;
      Memory.hblankHdmaTransferLengthRemaining = transferLength;
      Memory.hblankHdmaSource = hdmaSource;
      Memory.hblankHdmaDestination = hdmaDestination; // This will be handled in updateHblankHdma()
      // Since we return false in write traps, we need to now write the byte
      // Be sure to reset bit 7, to show that the hdma is active

      eightBitStoreIntoGBMemory(Memory.memoryLocationHdmaTrigger, resetBitOnByte(7, hdmaTriggerByteToBeWritten));
    } else {
      // General DMA
      hdmaTransfer(hdmaSource, hdmaDestination, transferLength); // Stop the DMA

      eightBitStoreIntoGBMemory(Memory.memoryLocationHdmaTrigger, 0xff);
    }
  }

  function updateHblankHdma() {
    if (!Memory.isHblankHdmaActive) {
      return;
    } // Get our amount of bytes to transfer (Only 0x10 bytes at a time)


    var bytesToTransfer = 0x10;

    if (Memory.hblankHdmaTransferLengthRemaining < bytesToTransfer) {
      // Set to the difference
      bytesToTransfer = Memory.hblankHdmaTransferLengthRemaining;
    } // Do the transfer (Only 0x10 bytes at a time)


    hdmaTransfer(Memory.hblankHdmaSource, Memory.hblankHdmaDestination, bytesToTransfer); // Update our source and destination

    Memory.hblankHdmaSource += bytesToTransfer;
    Memory.hblankHdmaDestination += bytesToTransfer;
    Memory.hblankHdmaTransferLengthRemaining -= bytesToTransfer;

    if (Memory.hblankHdmaTransferLengthRemaining <= 0) {
      // End the transfer
      Memory.isHblankHdmaActive = false; // Need to clear the HDMA with 0xFF, which sets bit 7 to 1 to show the HDMA has ended

      eightBitStoreIntoGBMemory(Memory.memoryLocationHdmaTrigger, 0xff);
    } else {
      // Set our new transfer length, make sure it is in the weird format,
      // and make sure bit 7 is 0, to show that the HDMA is Active
      var remainingTransferLength = Memory.hblankHdmaTransferLengthRemaining;
      var transferLengthAsByte = remainingTransferLength / 16 - 1;
      eightBitStoreIntoGBMemory(Memory.memoryLocationHdmaTrigger, resetBitOnByte(7, transferLengthAsByte));
    }
  } // Simple Function to transfer the bytes from a destination to a source for a general pourpose or Hblank HDMA


  function hdmaTransfer(hdmaSource, hdmaDestination, transferLength) {
    for (var i = 0; i < transferLength; i++) {
      var sourceByte = eightBitLoadFromGBMemoryWithTraps(hdmaSource + i); // get the hdmaDestination with wrapping
      // See issue #61: https://github.com/torch2424/wasmBoy/issues/61

      var hdmaDestinationWithWrapping = hdmaDestination + i;

      while (hdmaDestinationWithWrapping > 0x9fff) {
        // Simply clear the top 3 bits
        hdmaDestinationWithWrapping = hdmaDestinationWithWrapping - 0x2000;
      }

      eightBitStoreIntoGBMemoryWithTraps(hdmaDestinationWithWrapping, sourceByte);
    } // Set our Cycles used for the HDMA
    // Since DMA in GBC Double Speed Mode takes 80 micro seconds,
    // And HDMA takes 8 micro seconds per 0x10 bytes in GBC Double Speed mode (and GBC Normal Mode)
    // Will assume (644 / 10) cycles for GBC Double Speed Mode,
    // and (644 / 10 / 2) for GBC Normal Mode


    var hdmaCycles = 32;

    if (Cpu.GBCDoubleSpeed) {
      hdmaCycles = 64;
    }

    hdmaCycles = hdmaCycles * (transferLength / 0x10);
    Memory.DMACycles += hdmaCycles;
  } // Function to get our HDMA Source
  // Follows the poan docs


  function getHdmaSourceFromMemory() {
    // Get our source for the HDMA
    var hdmaSourceHigh = eightBitLoadFromGBMemory(Memory.memoryLocationHdmaSourceHigh);
    var hdmaSourceLow = eightBitLoadFromGBMemory(Memory.memoryLocationHdmaSourceLow);
    var hdmaSource = concatenateBytes(hdmaSourceHigh, hdmaSourceLow); // And off the appopriate bits for the source and destination
    // And off the bottom 4 bits

    hdmaSource = hdmaSource & 0xfff0;
    return hdmaSource;
  } // Function to get our HDMA Destination
  // Follows the poan docs


  function getHdmaDestinationFromMemory() {
    var hdmaDestinationHigh = eightBitLoadFromGBMemory(Memory.memoryLocationHdmaDestinationHigh);
    var hdmaDestinationLow = eightBitLoadFromGBMemory(Memory.memoryLocationHdmaDestinationLow);
    var hdmaDestination = concatenateBytes(hdmaDestinationHigh, hdmaDestinationLow); // Can only be in VRAM, 0x8000 -> 0x9FF0
    // Pan docs says to knock off upper 3 bits, and lower 4 bits
    // Which gives us: 0001111111110000 or 0x1FF0
    // Meaning we must add 0x8000

    hdmaDestination = hdmaDestination & 0x1ff0;
    hdmaDestination += Memory.videoRamLocation;
    return hdmaDestination;
  } // Internal function to trap any modify data trying to be written to Gameboy memory
  // Follows the Gameboy memory map
  // Return true if you want to continue the write, return false to end it here


  function checkWriteTraps(offset, value) {
    // Cpu
    if (offset === Cpu.memoryLocationSpeedSwitch) {
      // TCAGBD, only Bit 0 is writable
      eightBitStoreIntoGBMemory(Cpu.memoryLocationSpeedSwitch, value & 0x01); // We did the write, dont need to

      return false;
    } // Graphics
    // Cache globals used multiple times for performance


    var videoRamLocation = Memory.videoRamLocation;
    var spriteInformationTableLocation = Memory.spriteInformationTableLocation; // Handle banking

    if (offset < videoRamLocation) {
      handleBanking(offset, value);
      return false;
    } // Check the graphics mode to see if we can write to VRAM
    // http://gbdev.gg8.se/wiki/articles/Video_Display#Accessing_VRAM_and_OAM


    if (offset >= videoRamLocation && offset < Memory.cartridgeRamLocation) {
      // Can only read/write from VRAM During Modes 0 - 2
      // See graphics/lcd.ts
      // TODO: This can do more harm than good in a beta emulator,
      // requires precise timing disabling for now
      // if (Graphics.currentLcdMode > 2) {
      //   return false;
      // }
      // Not batch processing here for performance
      // batchProcessGraphics();
      // Allow the original write, and return since we dont need to look anymore
      return true;
    } // Be sure to copy everything in EchoRam to Work Ram
    // Codeslinger: The ECHO memory region (0xE000-0xFDFF) is quite different because any data written here is also written in the equivelent ram memory region 0xC000-0xDDFF.
    // Hence why it is called echo


    if (offset >= Memory.echoRamLocation && offset < spriteInformationTableLocation) {
      var wramOffset = offset - 0x2000;
      eightBitStoreIntoGBMemory(wramOffset, value); // Allow the original write, and return since we dont need to look anymore

      return true;
    } // Also check for individal writes
    // Can only read/write from OAM During Modes 0 - 1
    // See graphics/lcd.ts


    if (offset >= spriteInformationTableLocation && offset <= Memory.spriteInformationTableLocationEnd) {
      // Can only read/write from OAM During Mode 2
      // See graphics/lcd.ts
      if (Lcd.currentLcdMode < 2) {
        return false;
      } // Not batch processing here for performance
      // batchProcessGraphics();
      // Allow the original write, and return since we dont need to look anymore


      return true;
    }

    if (offset >= Memory.unusableMemoryLocation && offset <= Memory.unusableMemoryEndLocation) {
      return false;
    } // Sound
    // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Registers


    if (offset >= 0xff10 && offset <= 0xff26) {
      batchProcessAudio();
      return SoundRegisterWriteTraps(offset, value);
    } // FF27 - FF2F not used
    // Final Wave Table for Channel 3


    if (offset >= 0xff30 && offset <= 0xff3f) {
      batchProcessAudio();
    } // Other Memory effects fomr read/write to Lcd/Graphics


    if (offset >= Lcd.memoryLocationLcdControl && offset <= Graphics.memoryLocationWindowX) {
      // Not batch processing here for performance
      // batchProcessGraphics();
      if (offset === Lcd.memoryLocationLcdControl) {
        // Shorcut for isLCD Enabled since it gets "hot"
        Lcd.updateLcdControl(value);
        return true;
      }

      if (offset === Lcd.memoryLocationLcdStatus) {
        // We are handling the write here
        Lcd.updateLcdStatus(value);
        return false;
      } // reset the current scanline if the game tries to write to it


      if (offset === Graphics.memoryLocationScanlineRegister) {
        Graphics.scanlineRegister = 0;
        eightBitStoreIntoGBMemory(offset, 0);
        return false;
      } // Cache our coincidence compare


      if (offset === Lcd.memoryLocationCoincidenceCompare) {
        Lcd.coincidenceCompare = value;
        return true;
      } // Do the direct memory access transfer for spriteInformationTable
      // Check the graphics mode to see if we can write to VRAM
      // http://gbdev.gg8.se/wiki/articles/Video_Display#Accessing_VRAM_and_OAM


      if (offset === Graphics.memoryLocationDmaTransfer) {
        // otherwise, perform a DMA transfer
        // And allow the original write
        startDmaTransfer(value);
        return true;
      } // Scroll and Window XY


      switch (offset) {
        case Graphics.memoryLocationScrollX:
          Graphics.scrollX = value;
          return true;

        case Graphics.memoryLocationScrollY:
          Graphics.scrollY = value;
          return true;

        case Graphics.memoryLocationWindowX:
          Graphics.windowX = value;
          return true;

        case Graphics.memoryLocationWindowY:
          Graphics.windowY = value;
          return true;
      } // Allow the original write, and return since we dont need to look anymore


      return true;
    } // Do an HDMA


    if (offset === Memory.memoryLocationHdmaTrigger) {
      startHdmaTransfer(value);
      return false;
    } // Don't allow banking if we are doing an Hblank HDM transfer
    // https://gist.github.com/drhelius/3394856


    if (offset === Memory.memoryLocationGBCWRAMBank || offset === Memory.memoryLocationGBCVRAMBank) {
      if (Memory.isHblankHdmaActive) {
        if (Memory.hblankHdmaSource >= 0x4000 && Memory.hblankHdmaSource <= 0x7fff || Memory.hblankHdmaSource >= 0xd000 && Memory.hblankHdmaSource <= 0xdfff) {
          return false;
        }
      }
    } // Handle GBC Pallete Write


    if (offset >= Palette.memoryLocationBackgroundPaletteIndex && offset <= Palette.memoryLocationSpritePaletteData) {
      // Incremeenting the palette handled by the write
      writeColorPaletteToMemory(offset, value);
      return true;
    } // Handle timer writes


    if (offset >= Timers.memoryLocationDividerRegister && offset <= Timers.memoryLocationTimerControl) {
      // Batch Process
      batchProcessTimers();

      switch (offset) {
        case Timers.memoryLocationDividerRegister:
          Timers.updateDividerRegister(value);
          return false;

        case Timers.memoryLocationTimerCounter:
          Timers.updateTimerCounter(value);
          return true;

        case Timers.memoryLocationTimerModulo:
          Timers.updateTimerModulo(value);
          return true;

        case Timers.memoryLocationTimerControl:
          Timers.updateTimerControl(value);
          return true;
      }

      return true;
    } // Handle Joypad writes for HW reg caching


    if (offset === Joypad.memoryLocationJoypadRegister) {
      Joypad.updateJoypad(value);
    } // Handle Interrupt writes


    if (offset === Interrupts.memoryLocationInterruptRequest) {
      Interrupts.updateInterruptRequested(value);
      return true;
    }

    if (offset === Interrupts.memoryLocationInterruptEnabled) {
      Interrupts.updateInterruptEnabled(value);
      return true;
    } // Allow the original write


    return true;
  } // WasmBoy memory map:
  // Private function to translate a offset meant for the gameboy memory map
  // To the wasmboy memory map
  // Following: http://gameboy.mongenel.com/dmg/asmmemmap.html
  // And https://github.com/Dooskington/GameLad/wiki/Part-11---Memory-Bank-Controllers
  // Performance help from @dcodeIO, and awesome-gbdev


  function getWasmBoyOffsetFromGameBoyOffset(gameboyOffset) {
    // Get the top byte and switch
    var gameboyOffsetHighByte = gameboyOffset >> 12;

    switch (gameboyOffsetHighByte) {
      case 0x00:
      case 0x01:
      case 0x02:
      case 0x03:
        // Cartridge ROM - Bank 0 (fixed)
        // 0x0000 -> 0x0D2400
        return gameboyOffset + CARTRIDGE_ROM_LOCATION;

      case 0x04:
      case 0x05:
      case 0x06:
      case 0x07:
        // Cartridge ROM - Switchable Banks 1-xx
        // 0x4000 -> (0x0D2400 + 0x4000)
        return getRomBankAddress(gameboyOffset) + CARTRIDGE_ROM_LOCATION;

      case 0x08:
      case 0x09:
        // Video RAM
        // 0x8000 -> 0x000400
        var vramBankId = 0;

        if (Cpu.GBCEnabled) {
          // Find our current VRAM Bank
          vramBankId = eightBitLoadFromGBMemory(Memory.memoryLocationGBCVRAMBank) & 0x01; // Even though We added another 0x2000, the Cartridge ram is pulled out of our Internal Memory Space
          // Therefore, we do not need to adjust for this extra 0x2000
        }

        return gameboyOffset - Memory.videoRamLocation + VIDEO_RAM_LOCATION + 0x2000 * vramBankId;

      case 0x0a:
      case 0x0b:
        // Cartridge RAM - A.K.A External RAM
        // 0xA000 -> 0x008400
        return getRamBankAddress(gameboyOffset) + CARTRIDGE_RAM_LOCATION;

      case 0x0c:
        // Gameboy Ram Bank 0
        // 0xC000 -> 0x000400
        // Don't need to add head, since we move out 0x200 from the cartridge ram
        return gameboyOffset - Memory.internalRamBankZeroLocation + WORK_RAM_LOCATION;

      case 0x0d:
        // Gameboy Ram Banks, Switchable in GBC Mode
        // 0xD000 -> 0x000400
        // In CGB Mode 32 KBytes internal RAM are available.
        // This memory is divided into 8 banks of 4 KBytes each.
        // Bank 0 is always available in memory at C000-CFFF,
        // Bank 1-7 can be selected into the address space at D000-DFFF.
        // http://gbdev.gg8.se/wiki/articles/CGB_Registers#FF70_-_SVBK_-_CGB_Mode_Only_-_WRAM_Bank
        // Get the last 3 bits to find our wram ID
        var wramBankId = 0;

        if (Cpu.GBCEnabled) {
          wramBankId = eightBitLoadFromGBMemory(Memory.memoryLocationGBCWRAMBank) & 0x07;
        }

        if (wramBankId < 1) {
          wramBankId = 1;
        } // (0x1000 * (wramBankId - 1)) -> To find the correct wram bank.
        // wramBankId - 1, because we alreayd have the space for wramBank 1, and are currently in it
        // So need to address space for 6 OTHER banks


        return gameboyOffset - Memory.internalRamBankZeroLocation + WORK_RAM_LOCATION + 0x1000 * (wramBankId - 1);

      default:
        // Everything Else after Gameboy Ram Banks
        // 0xE000 -> 0x000400
        // 0x6000 For the Extra WRAM Banks
        return gameboyOffset - Memory.echoRamLocation + OTHER_GAMEBOY_INTERNAL_MEMORY_LOCATION;
    }
  } // Store / Write memory access


  function eightBitStoreIntoGBMemory(gameboyOffset, value) {
    store(getWasmBoyOffsetFromGameBoyOffset(gameboyOffset), value);
  }

  function eightBitStoreIntoGBMemoryWithTraps(offset, value) {
    if (checkWriteTraps(offset, value)) {
      eightBitStoreIntoGBMemory(offset, value);
    }
  }

  function sixteenBitStoreIntoGBMemoryWithTraps(offset, value) {
    // Dividing into two seperate eight bit calls to help with debugging tilemap overwrites
    // Split the value into two seperate bytes
    var highByte = splitHighByte(value);
    var lowByte = splitLowByte(value);
    var nextOffset = offset + 1;

    if (checkWriteTraps(offset, lowByte)) {
      eightBitStoreIntoGBMemory(offset, lowByte);
    }

    if (checkWriteTraps(nextOffset, highByte)) {
      eightBitStoreIntoGBMemory(nextOffset, highByte);
    }
  }

  function sixteenBitStoreIntoGBMemory(offset, value) {
    // Dividing into two seperate eight bit calls to help with debugging tilemap overwrites
    // Split the value into two seperate bytes
    var highByte = splitHighByte(value);
    var lowByte = splitLowByte(value);
    var nextOffset = offset + 1;
    eightBitStoreIntoGBMemory(offset, lowByte);
    eightBitStoreIntoGBMemory(nextOffset, highByte);
  }

  function storeBooleanDirectlyToWasmMemory(offset, value) {
    if (value) {
      store(offset, 0x01);
    } else {
      store(offset, 0x00);
    }
  } // Funcitons for setting and checking the LCD


  var Lcd =
  /** @class */
  function () {
    function Lcd() {} // Function called in write traps to update our hardware registers


    Lcd.updateLcdStatus = function (value) {
      // Bottom three bits are read only
      var currentLcdStatus = eightBitLoadFromGBMemory(Lcd.memoryLocationLcdStatus);
      var valueNoBottomBits = value & 0xf8;
      var lcdStatusOnlyBottomBits = currentLcdStatus & 0x07;
      value = valueNoBottomBits | lcdStatusOnlyBottomBits; // Top bit is always 1

      value = setBitOnByte(7, value);
      eightBitStoreIntoGBMemory(Lcd.memoryLocationLcdStatus, value);
    }; // Function called in write traps to update our hardware registers


    Lcd.updateLcdControl = function (value) {
      Lcd.enabled = checkBitOnByte(7, value);
      Lcd.windowTileMapDisplaySelect = checkBitOnByte(6, value);
      Lcd.windowDisplayEnabled = checkBitOnByte(5, value);
      Lcd.bgWindowTileDataSelect = checkBitOnByte(4, value);
      Lcd.bgTileMapDisplaySelect = checkBitOnByte(3, value);
      Lcd.tallSpriteSize = checkBitOnByte(2, value);
      Lcd.spriteDisplayEnable = checkBitOnByte(1, value);
      Lcd.bgDisplayEnabled = checkBitOnByte(0, value);
    }; // Memory Locations
    // Also known at STAT
    // LCD Status (0xFF41) bits Explanation
    // 0                0                    000                    0             00
    //       |Coicedence Interrupt|     |Mode Interrupts|  |coincidence flag|  | Mode |
    // Modes:
    // 0 or 00: H-Blank
    // 1 or 01: V-Blank
    // 2 or 10: Searching Sprites Atts
    // 3 or 11: Transfering Data to LCD Driver


    Lcd.memoryLocationLcdStatus = 0xff41;
    Lcd.currentLcdMode = 0;
    Lcd.memoryLocationCoincidenceCompare = 0xff45;
    Lcd.coincidenceCompare = 0; // Also known as LCDC
    // http://www.codeslinger.co.uk/pages/projects/gameboy/graphics.html
    // Bit 7 - LCD Display Enable (0=Off, 1=On)
    // Bit 6 - Window Tile Map Display Select (0=9800-9BFF, 1=9C00-9FFF)
    // Bit 5 - Window Display Enable (0=Off, 1=On)
    // Bit 4 - BG & Window Tile Data Select (0=8800-97FF, 1=8000-8FFF)
    // Bit 3 - BG Tile Map Display Select (0=9800-9BFF, 1=9C00-9FFF)
    // Bit 2 - OBJ (Sprite) Size (0=8x8, 1=8x16)
    // Bit 1 - OBJ (Sprite) Display Enable (0=Off, 1=On)
    // Bit 0 - BG Display (for CGB see below) (0=Off, 1=On

    Lcd.memoryLocationLcdControl = 0xff40; // Decoupled LCDC for caching

    Lcd.enabled = true;
    Lcd.windowTileMapDisplaySelect = false;
    Lcd.windowDisplayEnabled = false;
    Lcd.bgWindowTileDataSelect = false;
    Lcd.bgTileMapDisplaySelect = false;
    Lcd.tallSpriteSize = false;
    Lcd.spriteDisplayEnable = false;
    Lcd.bgDisplayEnabled = false;
    return Lcd;
  }(); // Pass in the lcd status for performance


  function setLcdStatus() {
    // Check if the Lcd was disabled
    if (!Lcd.enabled) {
      // Reset scanline cycle counter
      Graphics.scanlineCycleCounter = 0;
      Graphics.scanlineRegister = 0;
      eightBitStoreIntoGBMemory(Graphics.memoryLocationScanlineRegister, 0); // Set to mode 0
      // https://www.reddit.com/r/EmuDev/comments/4w6479/gb_dr_mario_level_generation_issues/

      var lcdStatus = eightBitLoadFromGBMemory(Lcd.memoryLocationLcdStatus);
      lcdStatus = resetBitOnByte(1, lcdStatus);
      lcdStatus = resetBitOnByte(0, lcdStatus);
      Lcd.currentLcdMode = 0; // Store the status in memory

      eightBitStoreIntoGBMemory(Lcd.memoryLocationLcdStatus, lcdStatus);
      return;
    } // Get our current scanline, and lcd mode


    var scanlineRegister = Graphics.scanlineRegister;
    var lcdMode = Lcd.currentLcdMode; // Default to  H-Blank

    var newLcdMode = 0; // Find our newLcd mode

    if (scanlineRegister >= 144) {
      // VBlank mode
      newLcdMode = 1;
    } else {
      if (Graphics.scanlineCycleCounter >= Graphics.MIN_CYCLES_SPRITES_LCD_MODE()) {
        // Searching Sprites Atts
        newLcdMode = 2;
      } else if (Graphics.scanlineCycleCounter >= Graphics.MIN_CYCLES_TRANSFER_DATA_LCD_MODE()) {
        // Transferring data to lcd
        newLcdMode = 3;
      }
    }

    if (lcdMode !== newLcdMode) {
      // Get our lcd status
      var lcdStatus = eightBitLoadFromGBMemory(Lcd.memoryLocationLcdStatus); // Save our lcd mode

      Lcd.currentLcdMode = newLcdMode;
      var shouldRequestInterrupt = false; // Set our LCD Statuc accordingly

      switch (newLcdMode) {
        case 0x00:
          lcdStatus = resetBitOnByte(0, lcdStatus);
          lcdStatus = resetBitOnByte(1, lcdStatus);
          shouldRequestInterrupt = checkBitOnByte(3, lcdStatus);
          break;

        case 0x01:
          lcdStatus = resetBitOnByte(1, lcdStatus);
          lcdStatus = setBitOnByte(0, lcdStatus);
          shouldRequestInterrupt = checkBitOnByte(4, lcdStatus);
          break;

        case 0x02:
          lcdStatus = resetBitOnByte(0, lcdStatus);
          lcdStatus = setBitOnByte(1, lcdStatus);
          shouldRequestInterrupt = checkBitOnByte(5, lcdStatus);
          break;

        case 0x03:
          lcdStatus = setBitOnByte(0, lcdStatus);
          lcdStatus = setBitOnByte(1, lcdStatus);
          break;
      } // Check if we want to request an interrupt, and we JUST changed modes


      if (shouldRequestInterrupt) {
        requestLcdInterrupt();
      } // Check for updating the Hblank HDMA


      if (newLcdMode === 0) {
        // Update the Hblank DMA, will simply return if not active
        updateHblankHdma();
      } // Check for requesting a VBLANK interrupt


      if (newLcdMode === 1) {
        requestVBlankInterrupt();
      } // Check for the coincidence flag
      // Need to check on every mode, and not just HBLANK, as checking on hblank breaks shantae, which checks on vblank


      var coincidenceCompare = Lcd.coincidenceCompare;

      if ((newLcdMode === 0 || newLcdMode === 1) && scanlineRegister === coincidenceCompare) {
        lcdStatus = setBitOnByte(2, lcdStatus);

        if (checkBitOnByte(6, lcdStatus)) {
          requestLcdInterrupt();
        }
      } else {
        lcdStatus = resetBitOnByte(2, lcdStatus);
      } // Finally, save our status


      eightBitStoreIntoGBMemory(Lcd.memoryLocationLcdStatus, lcdStatus);
    }
  } // Functions for rendering the background


  function renderBackground(scanlineRegister, tileDataMemoryLocation, tileMapMemoryLocation) {
    // NOTE: Camera is reffering to what you can see inside the 160x144 viewport of the entire rendered 256x256 map.
    // Get our scrollX and scrollY (u16 to play nice with assemblyscript)
    // let scrollX: i32 = eightBitLoadFromGBMemory(Graphics.memoryLocationScrollX);
    // let scrollY: i32 = eightBitLoadFromGBMemory(Graphics.memoryLocationScrollY);
    var scrollX = Graphics.scrollX;
    var scrollY = Graphics.scrollY; // Get our current pixel y positon on the 160x144 camera (Row that the scanline draws across)
    // this is done by getting the current scroll Y position,
    // and adding it do what Y Value the scanline is drawing on the camera.

    var pixelYPositionInMap = scanlineRegister + scrollY; // Gameboy camera will "wrap" around the background map,
    // meaning that if the pixelValue is 350, then we need to subtract 256 (decimal) to get it's actual value
    // pixel values (scrollX and scrollY) range from 0x00 - 0xFF

    if (pixelYPositionInMap >= 0x100) {
      pixelYPositionInMap -= 0x100;
    } // Draw the Background scanline


    drawBackgroundWindowScanline(scanlineRegister, tileDataMemoryLocation, tileMapMemoryLocation, pixelYPositionInMap, 0, scrollX);
  }

  function renderWindow(scanlineRegister, tileDataMemoryLocation, tileMapMemoryLocation) {
    // Get our windowX and windowY
    // let windowX: i32 = eightBitLoadFromGBMemory(Graphics.memoryLocationWindowX);
    // let windowY: i32 = eightBitLoadFromGBMemory(Graphics.memoryLocationWindowY);
    var windowX = Graphics.windowX;
    var windowY = Graphics.windowY; // NOTE: Camera is reffering to what you can see inside the 160x144 viewport of the entire rendered 256x256 map.
    // First ensure that the scanline is greater than our window

    if (scanlineRegister < windowY) {
      // Window is not within the current camera view
      return;
    } // WindowX is offset by 7


    windowX = windowX - 7; // Get our current pixel y positon on the 160x144 camera (Row that the scanline draws across)

    var pixelYPositionInMap = scanlineRegister - windowY; // xOffset is simply a neagative window x

    var xOffset = -1 * windowX; // Draw the Background scanline

    drawBackgroundWindowScanline(scanlineRegister, tileDataMemoryLocation, tileMapMemoryLocation, pixelYPositionInMap, windowX, xOffset);
  } // Function frankenstein'd together to allow background and window to share the same draw scanline function


  function drawBackgroundWindowScanline(scanlineRegister, tileDataMemoryLocation, tileMapMemoryLocation, pixelYPositionInMap, iStart, xOffset) {
    // Get our tile Y position in the map
    var tileYPositionInMap = pixelYPositionInMap >> 3; // Loop through x to draw the line like a CRT

    for (var i = iStart; i < 160; i++) {
      // Get our Current X position of our pixel on the on the 160x144 camera
      // this is done by getting the current scroll X position,
      // and adding it do what X Value the scanline is drawing on the camera.
      var pixelXPositionInMap = i + xOffset; // This is to compensate wrapping, same as pixelY

      if (pixelXPositionInMap >= 0x100) {
        pixelXPositionInMap -= 0x100;
      } // Divide our pixel position by 8 to get our tile.
      // Since, there are 256x256 pixels, and 32x32 tiles.
      // 256 / 8 = 32.
      // Also, bitshifting by 3, do do a division by 8
      // Need to use u16s, as they will be used to compute an address, which will cause weird errors and overflows


      var tileXPositionInMap = pixelXPositionInMap >> 3; // Get our tile address on the tileMap
      // NOTE: (tileMap represents where each tile is displayed on the screen)
      // NOTE: (tile map represents the entire map, now just what is within the "camera")
      // For instance, if we have y pixel 144. 144 / 8 = 18. 18 * 32 = line address in map memory.
      // And we have x pixel 160. 160 / 8 = 20.
      // * 32, because remember, this is NOT only for the camera, the actual map is 32x32. Therefore, the next tile line of the map, is 32 byte offset.
      // Think like indexing a 2d array, as a 1d array and it make sense :)

      var tileMapAddress = tileMapMemoryLocation + tileYPositionInMap * 32 + tileXPositionInMap; // Get the tile Id on the Tile Map

      var tileIdFromTileMap = loadFromVramBank(tileMapAddress, 0); // Now that we have our Tile Id, let's check our Tile Cache

      var usedTileCache = false;

      if (Config.tileCaching) {
        var pixelsDrawn = drawLineOfTileFromTileCache(i, scanlineRegister, pixelXPositionInMap, pixelYPositionInMap, tileMapAddress, tileDataMemoryLocation, tileIdFromTileMap); // Increment i by 7, not 8 because i will be incremented at end of for loop

        if (pixelsDrawn > 0) {
          i += pixelsDrawn - 1;
          usedTileCache = true;
        }
      }

      if (Config.tileRendering && !usedTileCache) {
        var pixelsDrawn = drawLineOfTileFromTileId(i, scanlineRegister, pixelXPositionInMap, pixelYPositionInMap, tileMapAddress, tileDataMemoryLocation, tileIdFromTileMap); // A line of a tile is 8 pixels wide, therefore increase i by (pixelsDrawn - 1), and then the for loop will increment by 1
        // For a net increment for 8

        if (pixelsDrawn > 0) {
          i += pixelsDrawn - 1;
        }
      } else if (!usedTileCache) {
        if (Cpu.GBCEnabled) {
          // Draw the individual pixel
          drawColorPixelFromTileId(i, scanlineRegister, pixelXPositionInMap, pixelYPositionInMap, tileMapAddress, tileDataMemoryLocation, tileIdFromTileMap);
        } else {
          // Draw the individual pixel
          drawMonochromePixelFromTileId(i, scanlineRegister, pixelXPositionInMap, pixelYPositionInMap, tileDataMemoryLocation, tileIdFromTileMap);
        }
      }
    }
  } // Function to draw a pixel for the standard GB


  function drawMonochromePixelFromTileId(xPixel, yPixel, pixelXPositionInMap, pixelYPositionInMap, tileDataMemoryLocation, tileIdFromTileMap) {
    // Now we can process the the individual bytes that represent the pixel on a tile
    // Now get our tileDataAddress for the corresponding tileID we found in the map
    // Read the comments in _getTileDataAddress() to see what's going on.
    // tl;dr if we had the tile map of "a b c d", and wanted tileId 2.
    // This funcitons returns the start of memory locaiton for the tile 'c'.
    var tileDataAddress = getTileDataAddress(tileDataMemoryLocation, tileIdFromTileMap); // Get the y pixel of the 8 by 8 tile.
    // Simply modulo the scanline.
    // For instance, let's say we are printing the first line of pixels on our camera,
    // And the first line of pixels on our tile.
    // yPixel = 1. 1 % 8 = 1.
    // And for the last line
    // yPixel = 144. 144 % 8 = 0.
    // 0 Represents last line of pixels in a tile, 1 represents first. 1 2 3 4 5 6 7 0.
    // Because remember, we are counting lines on the display NOT including zero

    var pixelYInTile = pixelYPositionInMap % 8; // Remember to represent a single line of 8 pixels on a tile, we need two bytes.
    // Therefore, we need to times our modulo by 2, to get the correct line of pixels on the tile.
    // Again, think like you had to map a 2d array as a 1d.

    var byteOneForLineOfTilePixels = loadFromVramBank(tileDataAddress + pixelYInTile * 2, 0);
    var byteTwoForLineOfTilePixels = loadFromVramBank(tileDataAddress + pixelYInTile * 2 + 1, 0); // Same logic as pixelYInTile.
    // However, We need to reverse our byte,
    // As pixel 0 is on byte 7, and pixel 1 is on byte 6, etc...
    // Therefore, is pixelX was 2, then really is need to be 5
    // So 2 - 7 = -5, * 1 = 5
    // Or to simplify, 7 - 2 = 5 haha!

    var pixelXInTile = pixelXPositionInMap % 8;
    pixelXInTile = 7 - pixelXInTile; // Now we can get the color for that pixel
    // Colors are represented by getting X position of ByteTwo, and X positon of Byte One
    // To Get the color Id.
    // For example, the result of the color id is 0000 00[xPixelByteTwo][xPixelByteOne]
    // See: How to draw a tile/sprite from memory: http://www.codeslinger.co.uk/pages/projects/gameboy/graphics.html

    var paletteColorId = 0;

    if (checkBitOnByte(pixelXInTile, byteTwoForLineOfTilePixels)) {
      // Byte one represents the second bit in our color id, so bit shift
      paletteColorId += 1;
      paletteColorId = paletteColorId << 1;
    }

    if (checkBitOnByte(pixelXInTile, byteOneForLineOfTilePixels)) {
      paletteColorId += 1;
    } // Not checking u8 Portability overflow here, since it can't be greater than i32 over :p
    // Now get the colorId from the pallete, to get our final color
    // Developers could change colorIds to represents different colors
    // in their palette, thus we need to grab the color from there
    //let pixelColorInTileFromPalette: u8 = getColorFromPalette(paletteColorId, Graphics.memoryLocationBackgroundPalette);
    // Moved below for perofrmance
    // FINALLY, RENDER THAT PIXEL!
    // Only rendering camera for now, so coordinates are for the camera.
    // Get the rgb value for the color Id, will be repeated into R, G, B


    var monochromeColor = getMonochromeColorFromPalette(paletteColorId, Graphics.memoryLocationBackgroundPalette);
    setPixelOnFrame(xPixel, yPixel, 0, monochromeColor);
    setPixelOnFrame(xPixel, yPixel, 1, monochromeColor);
    setPixelOnFrame(xPixel, yPixel, 2, monochromeColor); // Lastly, add the pixel to our background priority map
    // https://github.com/torch2424/wasmBoy/issues/51
    // Bits 0 & 1 will represent the color Id drawn by the BG/Window
    // Bit 2 will represent if the Bg/Window has GBC priority.

    addPriorityforPixel(xPixel, yPixel, paletteColorId);
  } // Function to draw a pixel from a tile in C O L O R
  // See above for more context on some variables


  function drawColorPixelFromTileId(xPixel, yPixel, pixelXPositionInMap, pixelYPositionInMap, tileMapAddress, tileDataMemoryLocation, tileIdFromTileMap) {
    // Now get our tileDataAddress for the corresponding tileID we found in the map
    // Read the comments in _getTileDataAddress() to see what's going on.
    // tl;dr if we had the tile map of "a b c d", and wanted tileId 2.
    // This funcitons returns the start of memory locaiton for the tile 'c'.
    var tileDataAddress = getTileDataAddress(tileDataMemoryLocation, tileIdFromTileMap); // Get the GB Map Attributes
    // Bit 0-2  Background Palette number  (BGP0-7)
    // Bit 3    Tile VRAM Bank number      (0=Bank 0, 1=Bank 1)
    // Bit 4    Not used
    // Bit 5    Horizontal Flip            (0=Normal, 1=Mirror horizontally)
    // Bit 6    Vertical Flip              (0=Normal, 1=Mirror vertically)
    // Bit 7    BG-to-OAM Priority         (0=Use OAM priority bit, 1=BG Priority)

    var bgMapAttributes = loadFromVramBank(tileMapAddress, 1); // See above for explanation

    var pixelYInTile = pixelYPositionInMap % 8;

    if (checkBitOnByte(6, bgMapAttributes)) {
      // We are mirroring the tile, therefore, we need to opposite byte
      // So if our pixel was 0 our of 8, it wild become 7 :)
      pixelYInTile = 7 - pixelYInTile;
    } // Remember to represent a single line of 8 pixels on a tile, we need two bytes.
    // Therefore, we need to times our modulo by 2, to get the correct line of pixels on the tile.
    // But we need to load the time from a specific Vram bank


    var vramBankId = 0;

    if (checkBitOnByte(3, bgMapAttributes)) {
      vramBankId = 1;
    }

    var byteOneForLineOfTilePixels = loadFromVramBank(tileDataAddress + pixelYInTile * 2, vramBankId);
    var byteTwoForLineOfTilePixels = loadFromVramBank(tileDataAddress + pixelYInTile * 2 + 1, vramBankId); // Get our X pixel. Need to NOT reverse it if it was flipped.
    // See above, you have to reverse this normally

    var pixelXInTile = pixelXPositionInMap % 8;

    if (!checkBitOnByte(5, bgMapAttributes)) {
      pixelXInTile = 7 - pixelXInTile;
    } // Now we can get the color for that pixel
    // Colors are represented by getting X position of ByteTwo, and X positon of Byte One
    // To Get the color Id.
    // For example, the result of the color id is 0000 00[xPixelByteTwo][xPixelByteOne]
    // See: How to draw a tile/sprite from memory: http://www.codeslinger.co.uk/pages/projects/gameboy/graphics.html


    var paletteColorId = 0;

    if (checkBitOnByte(pixelXInTile, byteTwoForLineOfTilePixels)) {
      // Byte one represents the second bit in our color id, so bit shift
      paletteColorId += 1;
      paletteColorId = paletteColorId << 1;
    }

    if (checkBitOnByte(pixelXInTile, byteOneForLineOfTilePixels)) {
      paletteColorId += 1;
    } // Finally lets add some, C O L O R
    // Want the botom 3 bits


    var bgPalette = bgMapAttributes & 0x07; // Call the helper function to grab the correct color from the palette

    var rgbColorPalette = getRgbColorFromPalette(bgPalette, paletteColorId, false); // Split off into red green and blue

    var red = getColorComponentFromRgb(0, rgbColorPalette);
    var green = getColorComponentFromRgb(1, rgbColorPalette);
    var blue = getColorComponentFromRgb(2, rgbColorPalette); // Finally Place our colors on the things

    setPixelOnFrame(xPixel, yPixel, 0, red);
    setPixelOnFrame(xPixel, yPixel, 1, green);
    setPixelOnFrame(xPixel, yPixel, 2, blue); // Lastly, add the pixel to our background priority map
    // https://github.com/torch2424/wasmBoy/issues/51
    // Bits 0 & 1 will represent the color Id drawn by the BG/Window
    // Bit 2 will represent if the Bg/Window has GBC priority.

    addPriorityforPixel(xPixel, yPixel, paletteColorId, checkBitOnByte(7, bgMapAttributes));
  } // Function to attempt to draw the tile from the tile cache


  function drawLineOfTileFromTileCache(xPixel, yPixel, pixelXPositionInMap, pixelYPositionInMap, tileMapAddress, tileDataMemoryLocation, tileIdFromTileMap) {
    // First, initialize how many pixels we have drawn
    var pixelsDrawn = 0; // Check if the current tile matches our tileId
    // TODO: Allow the first line to use the tile cache, for some odd reason it doesn't work when scanline is 0

    if (yPixel > 0 && xPixel > 8 && tileIdFromTileMap === TileCache.tileId && xPixel === TileCache.nextXIndexToPerformCacheCheck) {
      // Was last tile flipped
      var wasLastTileHorizontallyFlipped = false;
      var isCurrentTileHorizontallyFlipped = false;

      if (checkBitOnByte(5, eightBitLoadFromGBMemory(tileMapAddress - 1))) {
        wasLastTileHorizontallyFlipped = true;
      }

      if (checkBitOnByte(5, eightBitLoadFromGBMemory(tileMapAddress))) {
        isCurrentTileHorizontallyFlipped = true;
      } // Simply copy the last 8 pixels from memory to copy the line from the tile


      for (var tileCacheIndex = 0; tileCacheIndex < 8; tileCacheIndex++) {
        // Check if we need to render backwards for flipping
        if (wasLastTileHorizontallyFlipped !== isCurrentTileHorizontallyFlipped) {
          tileCacheIndex = 7 - tileCacheIndex;
        } // First check for overflow


        if (xPixel + tileCacheIndex <= 160) {
          // Get the pixel location in memory of the tile
          var previousXPixel = xPixel - (8 - tileCacheIndex);
          var previousTilePixelLocation = FRAME_LOCATION + getRgbPixelStart(xPixel + tileCacheIndex, yPixel); // Cycle through the RGB

          for (var tileCacheRgb = 0; tileCacheRgb < 3; tileCacheRgb++) {
            setPixelOnFrame(xPixel + tileCacheIndex, yPixel, tileCacheRgb, load(previousTilePixelLocation + tileCacheRgb));
          } // Copy the priority for the pixel


          var pixelPriority = getPriorityforPixel(previousXPixel, yPixel);
          addPriorityforPixel(xPixel + tileCacheIndex, yPixel, resetBitOnByte(2, pixelPriority), checkBitOnByte(2, pixelPriority));
          pixelsDrawn++;
        }
      }
    } else {
      // Save our current tile Id, and the next x value we should check the x index
      TileCache.tileId = tileIdFromTileMap;
    } // Calculate when we should do the tileCache calculation again


    if (xPixel >= TileCache.nextXIndexToPerformCacheCheck) {
      TileCache.nextXIndexToPerformCacheCheck = xPixel + 8;
      var xOffsetTileWidthRemainder = pixelXPositionInMap % 8;

      if (xPixel < xOffsetTileWidthRemainder) {
        TileCache.nextXIndexToPerformCacheCheck += xOffsetTileWidthRemainder;
      }
    }

    return pixelsDrawn;
  } // Function to draw a line of a tile in Color
  // This is for tile rendering shortcuts


  function drawLineOfTileFromTileId(xPixel, yPixel, pixelXPositionInMap, pixelYPositionInMap, tileMapAddress, tileDataMemoryLocation, tileIdFromTileMap) {
    // Get the which line of the tile we are rendering
    var tileLineY = pixelYPositionInMap % 8; // Now lets find our tileX start and end
    // This is for the case where i = 0, but scroll X was 3.
    // Or i is 157, and our camera is only 160 pixels wide

    var tileXStart = 0;

    if (xPixel == 0) {
      tileXStart = pixelXPositionInMap - pixelXPositionInMap / 8 * 8;
    }

    var tileXEnd = 7;

    if (xPixel + 8 > 160) {
      tileXEnd = 160 - xPixel;
    } // initialize some variables for GBC


    var bgMapAttributes = -1;
    var vramBankId = 0;

    if (Cpu.GBCEnabled) {
      // Get Our GBC properties
      bgMapAttributes = loadFromVramBank(tileMapAddress, 1);

      if (checkBitOnByte(3, bgMapAttributes)) {
        vramBankId = 1;
      }

      if (checkBitOnByte(6, bgMapAttributes)) {
        // We are mirroring the tile, therefore, we need to opposite byte
        // So if our pixel was 0 our of 8, it wild become 7 :)
        tileLineY = 7 - tileLineY;
      }
    } // Return the number of pixels drawn


    return drawPixelsFromLineOfTile(tileIdFromTileMap, tileDataMemoryLocation, vramBankId, tileXStart, tileXEnd, tileLineY, xPixel, yPixel, 160, FRAME_LOCATION, false, 0, bgMapAttributes);
  } // Functions for rendering the sprites


  function renderSprites(scanlineRegister, useLargerSprites) {
    // Need to loop through all 40 sprites to check their status
    // Going backwards since lower sprites draw over higher ones
    // Will fix dragon warrior 3 intro
    for (var i = 39; i >= 0; i--) {
      // Sprites occupy 4 bytes in the sprite attribute table
      var spriteTableIndex = i * 4; // Y positon is offset by 16, X position is offset by 8

      var spriteYPosition = eightBitLoadFromGBMemory(Graphics.memoryLocationSpriteAttributesTable + spriteTableIndex);
      var spriteXPosition = eightBitLoadFromGBMemory(Graphics.memoryLocationSpriteAttributesTable + spriteTableIndex + 1);
      var spriteTileId = eightBitLoadFromGBMemory(Graphics.memoryLocationSpriteAttributesTable + spriteTableIndex + 2); // Pan docs of sprite attirbute table
      // Bit7   OBJ-to-BG Priority (0=OBJ Above BG, 1=OBJ Behind BG color 1-3)
      //      (Used for both BG and Window. BG color 0 is always behind OBJ)
      // Bit6   Y flip          (0=Normal, 1=Vertically mirrored)
      // Bit5   X flip          (0=Normal, 1=Horizontally mirrored)
      // Bit4   Palette number  **Non CGB Mode Only** (0=OBP0, 1=OBP1)
      // Bit3   Tile VRAM-Bank  **CGB Mode Only**     (0=Bank 0, 1=Bank 1)
      // Bit2-0 Palette number  **CGB Mode Only**     (OBP0-7)
      // Apply sprite X and Y offset
      // TODO: Sprites are overflowing on x if less than 8

      spriteYPosition -= 16;
      spriteXPosition -= 8; // Find our sprite height

      var spriteHeight = 8;

      if (useLargerSprites) {
        spriteHeight = 16; // @binji says in 8x16 mode, even tileId always drawn first
        // This will fix shantae sprites which always uses odd numbered indexes
        // TODO: Do the actual Pandocs thing:
        // "In 8x16 mode, the lower bit of the tile number is ignored. Ie. the upper 8x8 tile is "NN AND FEh", and the lower 8x8 tile is "NN OR 01h"."
        // So just knock off the last bit? :)

        if (spriteTileId % 2 === 1) {
          spriteTileId -= 1;
        }
      } // Find if our sprite is on the current scanline


      if (scanlineRegister >= spriteYPosition && scanlineRegister < spriteYPosition + spriteHeight) {
        // Then we need to draw the current sprite
        // Get our sprite attributes since we know we shall be drawing the tile
        var spriteAttributes = eightBitLoadFromGBMemory(Graphics.memoryLocationSpriteAttributesTable + spriteTableIndex + 3); // Check sprite Priority

        var isSpritePriorityBehindWindowAndBackground = checkBitOnByte(7, spriteAttributes); // Check if we should flip the sprite on the x or y axis

        var flipSpriteY = checkBitOnByte(6, spriteAttributes);
        var flipSpriteX = checkBitOnByte(5, spriteAttributes); // Find which line on the sprite we are on

        var currentSpriteLine = scanlineRegister - spriteYPosition; // If we fliiped the Y axis on our sprite, need to read from memory backwards to acheive the same effect

        if (flipSpriteY) {
          currentSpriteLine -= spriteHeight;
          currentSpriteLine = currentSpriteLine * -1; // Bug fix for the flipped flies in link's awakening

          currentSpriteLine -= 1;
        } // Each line of a tile takes two bytes of memory


        currentSpriteLine = currentSpriteLine * 2; // Get our sprite tile address, need to also add the current sprite line to get the correct bytes

        var spriteTileAddressStart = getTileDataAddress(Graphics.memoryLocationTileDataSelectOneStart, spriteTileId);
        spriteTileAddressStart = spriteTileAddressStart + currentSpriteLine;
        var spriteTileAddress = spriteTileAddressStart; // Find which VRAM Bank to load from

        var vramBankId = 0;

        if (Cpu.GBCEnabled && checkBitOnByte(3, spriteAttributes)) {
          vramBankId = 1;
        }

        var spriteDataByteOneForLineOfTilePixels = loadFromVramBank(spriteTileAddress, vramBankId);
        var spriteDataByteTwoForLineOfTilePixels = loadFromVramBank(spriteTileAddress + 1, vramBankId); // Iterate over the width of our sprite to find our individual pixels

        for (var tilePixel = 7; tilePixel >= 0; tilePixel--) {
          // Get our spritePixel, and check for flipping
          var spritePixelXInTile = tilePixel;

          if (flipSpriteX) {
            spritePixelXInTile -= 7;
            spritePixelXInTile = spritePixelXInTile * -1;
          } // Get the color Id of our sprite, similar to renderBackground()
          // With the first byte, and second byte lined up method thing
          // Yes, the second byte comes before the first, see ./background.ts


          var spriteColorId = 0;

          if (checkBitOnByte(spritePixelXInTile, spriteDataByteTwoForLineOfTilePixels)) {
            // Byte one represents the second bit in our color id, so bit shift
            spriteColorId += 1;
            spriteColorId = spriteColorId << 1;
          }

          if (checkBitOnByte(spritePixelXInTile, spriteDataByteOneForLineOfTilePixels)) {
            spriteColorId += 1;
          } // ColorId zero (last two bits of pallette) are transparent
          // http://gbdev.gg8.se/wiki/articles/Video_Display


          if (spriteColorId !== 0) {
            // Find our actual X pixel location on the gameboy "camera" view
            // This cannot be less than zero, i32 will overflow
            var spriteXPixelLocationInCameraView = spriteXPosition + (7 - tilePixel);

            if (spriteXPixelLocationInCameraView >= 0 && spriteXPixelLocationInCameraView <= 160) {
              // There are two cases where wouldnt draw the pixel on top of the Bg/window
              // 1. if isSpritePriorityBehindWindowAndBackground, sprite can only draw over color 0
              // 2. if bit 2 of our priority is set, then BG-to-OAM Priority from pandoc
              //  is active, meaning BG tile will have priority above all OBJs
              //  (regardless of the priority bits in OAM memory)
              // But if GBC and Bit 0 of LCDC is set, we always draw the object
              var shouldShowFromLcdcPriority = false;
              var shouldHideFromOamPriority = false;
              var shouldHideFromBgPriority = false; // LCDC Priority

              if (Cpu.GBCEnabled && !Lcd.bgDisplayEnabled) {
                shouldShowFromLcdcPriority = true;
              }

              if (!shouldShowFromLcdcPriority) {
                // Now that we have our coordinates, check for sprite priority
                // Lets get the priority byte we put in memory
                var bgPriorityByte = getPriorityforPixel(spriteXPixelLocationInCameraView, scanlineRegister);
                var bgColorFromPriorityByte = bgPriorityByte & 0x03; // Doing an else if, since either will automatically stop drawing the pixel

                if (isSpritePriorityBehindWindowAndBackground && bgColorFromPriorityByte > 0) {
                  // OAM Priority
                  shouldHideFromOamPriority = true;
                } else if (Cpu.GBCEnabled && checkBitOnByte(2, bgPriorityByte) && bgColorFromPriorityByte > 0) {
                  // Bg priority
                  shouldHideFromBgPriority = true;
                }
              }

              if (shouldShowFromLcdcPriority || !shouldHideFromOamPriority && !shouldHideFromBgPriority) {
                if (!Cpu.GBCEnabled) {
                  // Get our monochrome color RGB from the current sprite pallete
                  // Get our sprite pallete
                  var spritePaletteLocation = Graphics.memoryLocationSpritePaletteOne;

                  if (checkBitOnByte(4, spriteAttributes)) {
                    spritePaletteLocation = Graphics.memoryLocationSpritePaletteTwo;
                  }

                  var spritePixelColorFromPalette = getMonochromeColorFromPalette(spriteColorId, spritePaletteLocation); // Finally set the pixel!

                  setPixelOnFrame(spriteXPixelLocationInCameraView, scanlineRegister, 0, spritePixelColorFromPalette);
                  setPixelOnFrame(spriteXPixelLocationInCameraView, scanlineRegister, 1, spritePixelColorFromPalette);
                  setPixelOnFrame(spriteXPixelLocationInCameraView, scanlineRegister, 2, spritePixelColorFromPalette);
                } else {
                  // Get our RGB Color
                  // Finally lets add some, C O L O R
                  // Want the botom 3 bits
                  var bgPalette = spriteAttributes & 0x07; // Call the helper function to grab the correct color from the palette

                  var rgbColorPalette = getRgbColorFromPalette(bgPalette, spriteColorId, true); // Split off into red green and blue

                  var red = getColorComponentFromRgb(0, rgbColorPalette);
                  var green = getColorComponentFromRgb(1, rgbColorPalette);
                  var blue = getColorComponentFromRgb(2, rgbColorPalette); // Finally Place our colors on the things

                  setPixelOnFrame(spriteXPixelLocationInCameraView, scanlineRegister, 0, red);
                  setPixelOnFrame(spriteXPixelLocationInCameraView, scanlineRegister, 1, green);
                  setPixelOnFrame(spriteXPixelLocationInCameraView, scanlineRegister, 2, blue);
                }
              }
            }
          }
        }
      }
    }
  } // Main Class and funcitons for rendering the gameboy display


  var Graphics =
  /** @class */
  function () {
    function Graphics() {} // Number of cycles to run in each batch process
    // This number should be in sync so that graphics doesn't run too many cyles at once
    // and does not exceed the minimum number of cyles for either scanlines, or
    // How often we change the frame, or a channel's update process


    Graphics.batchProcessCycles = function () {
      return Graphics.MAX_CYCLES_PER_SCANLINE();
    }; // TCAGBD says 456 per scanline, but 153 only a handful


    Graphics.MAX_CYCLES_PER_SCANLINE = function () {
      if (Cpu.GBCDoubleSpeed) {
        if (Graphics.scanlineRegister === 153) {
          return 8;
        }

        return 912;
      }

      if (Graphics.scanlineRegister === 153) {
        return 4;
      }

      return 456;
    };

    Graphics.MIN_CYCLES_SPRITES_LCD_MODE = function () {
      if (Cpu.GBCDoubleSpeed) {
        // TODO: Confirm these clock cyles, double similar to scanline, which TCAGBD did
        return 752;
      }

      return 376;
    };

    Graphics.MIN_CYCLES_TRANSFER_DATA_LCD_MODE = function () {
      if (Cpu.GBCDoubleSpeed) {
        // TODO: Confirm these clock cyles, double similar to scanline, which TCAGBD did
        return 498;
      }

      return 249;
    }; // Function to save the state of the class


    Graphics.saveState = function () {
      store(getSaveStateMemoryOffset(0x00, Graphics.saveStateSlot), Graphics.scanlineCycleCounter);
      store(getSaveStateMemoryOffset(0x04, Graphics.saveStateSlot), Lcd.currentLcdMode);
      eightBitStoreIntoGBMemory(Graphics.memoryLocationScanlineRegister, Graphics.scanlineRegister);
    }; // Function to load the save state from memory


    Graphics.loadState = function () {
      Graphics.scanlineCycleCounter = load(getSaveStateMemoryOffset(0x00, Graphics.saveStateSlot));
      Lcd.currentLcdMode = load(getSaveStateMemoryOffset(0x04, Graphics.saveStateSlot));
      Graphics.scanlineRegister = eightBitLoadFromGBMemory(Graphics.memoryLocationScanlineRegister);
      Lcd.updateLcdControl(eightBitLoadFromGBMemory(Lcd.memoryLocationLcdControl));
    }; // Current cycles
    // This will be used for batch processing


    Graphics.currentCycles = 0; // Count the number of cycles to keep synced with cpu cycles
    // Found GBC cycles by finding clock speed from Gb Cycles
    // See TCAGBD For cycles

    Graphics.scanlineCycleCounter = 0x00; // LCD
    // scanlineRegister also known as LY
    // See: http://bgb.bircd.org/pandocs.txt , and search " LY "

    Graphics.memoryLocationScanlineRegister = 0xff44;
    Graphics.scanlineRegister = 0;
    Graphics.memoryLocationDmaTransfer = 0xff46; // Scroll and Window

    Graphics.memoryLocationScrollX = 0xff43;
    Graphics.scrollX = 0;
    Graphics.memoryLocationScrollY = 0xff42;
    Graphics.scrollY = 0;
    Graphics.memoryLocationWindowX = 0xff4b;
    Graphics.windowX = 0;
    Graphics.memoryLocationWindowY = 0xff4a;
    Graphics.windowY = 0; // Tile Maps And Data

    Graphics.memoryLocationTileMapSelectZeroStart = 0x9800;
    Graphics.memoryLocationTileMapSelectOneStart = 0x9c00;
    Graphics.memoryLocationTileDataSelectZeroStart = 0x8800;
    Graphics.memoryLocationTileDataSelectOneStart = 0x8000; // Sprites

    Graphics.memoryLocationSpriteAttributesTable = 0xfe00; // Palettes

    Graphics.memoryLocationBackgroundPalette = 0xff47;
    Graphics.memoryLocationSpritePaletteOne = 0xff48;
    Graphics.memoryLocationSpritePaletteTwo = 0xff49; // Screen data needs to be stored in wasm memory
    // Save States

    Graphics.saveStateSlot = 1;
    return Graphics;
  }(); // Batch Process Graphics
  // http://gameboy.mongenel.com/dmg/asmmemmap.html and http://gbdev.gg8.se/wiki/articles/Video_Display
  // Function to batch process our graphics after we skipped so many cycles
  // This is not currently checked in memory read/write


  function batchProcessGraphics() {
    if (Graphics.currentCycles < Graphics.batchProcessCycles()) {
      return;
    }

    while (Graphics.currentCycles >= Graphics.batchProcessCycles()) {
      updateGraphics(Graphics.batchProcessCycles());
      Graphics.currentCycles = Graphics.currentCycles - Graphics.batchProcessCycles();
    }
  }

  function initializeGraphics() {
    // Reset Stateful Variables
    Graphics.currentCycles = 0;
    Graphics.scanlineCycleCounter = 0x00;
    Graphics.scanlineRegister = 0;
    Graphics.scrollX = 0;
    Graphics.scrollY = 0;
    Graphics.windowX = 0;
    Graphics.windowY = 0;

    if (Cpu.GBCEnabled) {
      // Bgb says LY is 90 on boot
      Graphics.scanlineRegister = 0x90;
      eightBitStoreIntoGBMemory(0xff40, 0x91);
      eightBitStoreIntoGBMemory(0xff41, 0x81); // 0xFF42 -> 0xFF43 = 0x00

      eightBitStoreIntoGBMemory(0xff44, 0x90); // 0xFF45 -> 0xFF46 = 0x00

      eightBitStoreIntoGBMemory(0xff47, 0xfc); // 0xFF48 -> 0xFF4B = 0x00
      // GBC VRAM Banks

      eightBitStoreIntoGBMemory(0xff4f, 0x00);
      eightBitStoreIntoGBMemory(0xff70, 0x01);
    } else {
      Graphics.scanlineRegister = 0x90;
      eightBitStoreIntoGBMemory(0xff40, 0x91);
      eightBitStoreIntoGBMemory(0xff41, 0x85); // 0xFF42 -> 0xFF45 = 0x00

      eightBitStoreIntoGBMemory(0xff46, 0xff);
      eightBitStoreIntoGBMemory(0xff47, 0xfc);
      eightBitStoreIntoGBMemory(0xff48, 0xff);
      eightBitStoreIntoGBMemory(0xff49, 0xff); // 0xFF4A -> 0xFF4B = 0x00
      // GBC VRAM Banks

      eightBitStoreIntoGBMemory(0xff4f, 0x00);
      eightBitStoreIntoGBMemory(0xff70, 0x01);
    }
  }

  function updateGraphics(numberOfCycles) {
    if (Lcd.enabled) {
      Graphics.scanlineCycleCounter += numberOfCycles;

      while (Graphics.scanlineCycleCounter >= Graphics.MAX_CYCLES_PER_SCANLINE()) {
        // Reset the scanlineCycleCounter
        // Don't set to zero to catch extra cycles
        Graphics.scanlineCycleCounter -= Graphics.MAX_CYCLES_PER_SCANLINE(); // Move to next scanline
        // let scanlineRegister: i32 = eightBitLoadFromGBMemory(Graphics.memoryLocationScanlineRegister);

        var scanlineRegister = Graphics.scanlineRegister; // Check if we've reached the last scanline

        if (scanlineRegister === 144) {
          // Draw the scanline
          if (!Config.graphicsDisableScanlineRendering) {
            _drawScanline(scanlineRegister);
          } else {
            _renderEntireFrame();
          } // Clear the priority map


          clearPriorityMap(); // Reset the tile cache

          resetTileCache();
        } else if (scanlineRegister < 144) {
          // Draw the scanline
          if (!Config.graphicsDisableScanlineRendering) {
            _drawScanline(scanlineRegister);
          }
        } // Post increment the scanline register after drawing
        // TODO: Need to fix graphics timing


        if (scanlineRegister > 153) {
          // Check if we overflowed scanlines
          // if so, reset our scanline number
          scanlineRegister = 0;
        } else {
          scanlineRegister += 1;
        } // Store our new scanline value


        Graphics.scanlineRegister = scanlineRegister; // eightBitStoreIntoGBMemory(Graphics.memoryLocationScanlineRegister, scanlineRegister);
      }
    } // Games like Pokemon crystal want the vblank right as it turns to the value, and not have it increment after
    // It will break and lead to an infinite loop in crystal
    // Therefore, we want to be checking/Setting our LCD status after the scanline updates


    setLcdStatus();
  } // TODO: Make this a _drawPixelOnScanline, as values can be updated while drawing a scanline


  function _drawScanline(scanlineRegister) {
    // Get our seleted tile data memory location
    var tileDataMemoryLocation = Graphics.memoryLocationTileDataSelectZeroStart;

    if (Lcd.bgWindowTileDataSelect) {
      tileDataMemoryLocation = Graphics.memoryLocationTileDataSelectOneStart;
    } // Check if the background is enabled
    // NOTE: On Gameboy color, Pandocs says this does something completely different
    // LCDC.0 - 2) CGB in CGB Mode: BG and Window Master Priority
    // When Bit 0 is cleared, the background and window lose their priority -
    // the sprites will be always displayed on top of background and window,
    // independently of the priority flags in OAM and BG Map attributes.
    // TODO: Enable this different feature for GBC


    if (Cpu.GBCEnabled || Lcd.bgDisplayEnabled) {
      // Get our map memory location
      var tileMapMemoryLocation = Graphics.memoryLocationTileMapSelectZeroStart;

      if (Lcd.bgTileMapDisplaySelect) {
        tileMapMemoryLocation = Graphics.memoryLocationTileMapSelectOneStart;
      } // Finally, pass everything to draw the background


      renderBackground(scanlineRegister, tileDataMemoryLocation, tileMapMemoryLocation);
    } // Check if the window is enabled, and we are currently
    // Drawing lines on the window


    if (Lcd.windowDisplayEnabled) {
      // Get our map memory location
      var tileMapMemoryLocation = Graphics.memoryLocationTileMapSelectZeroStart;

      if (Lcd.windowTileMapDisplaySelect) {
        tileMapMemoryLocation = Graphics.memoryLocationTileMapSelectOneStart;
      } // Finally, pass everything to draw the background


      renderWindow(scanlineRegister, tileDataMemoryLocation, tileMapMemoryLocation);
    }

    if (Lcd.spriteDisplayEnable) {
      // Sprites are enabled, render them!
      renderSprites(scanlineRegister, Lcd.tallSpriteSize);
    }
  } // Function to render everything for a frame at once
  // This is to improve performance
  // See above for comments on how things are donw


  function _renderEntireFrame() {
    // Scanline needs to be in sync while we draw, thus, we can't shortcut anymore than here
    for (var i = 0; i <= 144; i++) {
      _drawScanline(i);
    }
  } // Function to get the start of a RGB pixel (R, G, B)


  function getRgbPixelStart(x, y) {
    // Get the pixel number
    // let pixelNumber: i32 = (y * 160) + x;
    // Each pixel takes 3 slots, therefore, multiply by 3!
    return (y * 160 + x) * 3;
  } // Also need to store current frame in memory to be read by JS


  function setPixelOnFrame(x, y, colorId, color) {
    // Currently only supports 160x144
    // Storing in X, then y
    // So need an offset
    store(FRAME_LOCATION + getRgbPixelStart(x, y) + colorId, color);
  } // Function to shortcut the memory map, and load directly from the VRAM Bank


  function loadFromVramBank(gameboyOffset, vramBankId) {
    var wasmBoyAddress = gameboyOffset - Memory.videoRamLocation + GAMEBOY_INTERNAL_MEMORY_LOCATION + 0x2000 * (vramBankId & 0x01);
    return load(wasmBoyAddress);
  } // Returns -1 if no trap found, otherwise returns a value that should be fed for the address


  function checkReadTraps(offset) {
    // Cache globals used multiple times for performance
    var videoRamLocation = Memory.videoRamLocation; // Try to break early for most common scenario

    if (offset < videoRamLocation) {
      return -1;
    } // Check the graphics mode to see if we can read VRAM
    // http://gbdev.gg8.se/wiki/articles/Video_Display#Accessing_VRAM_and_OAM


    if (offset >= videoRamLocation && offset < Memory.cartridgeRamLocation) {
      // Can only read/write from VRAM During Modes 0 - 2
      // See graphics/lcd.ts
      // TODO: This can do more harm than good in a beta emulator,
      // requres precise timing, disabling for now
      // if (Graphics.currentLcdMode > 2) {
      //   return 0xFF;
      // }
      return -1;
    } // ECHO Ram, E000	FDFF	Mirror of C000~DDFF (ECHO RAM)
    // http://gbdev.gg8.se/wiki/articles/Memory_Map


    if (offset >= Memory.echoRamLocation && offset < Memory.spriteInformationTableLocation) {
      // Simply return the mirror'd value
      return eightBitLoadFromGBMemory(offset - 0x2000);
    } // Check for individal writes
    // Can only read/write from OAM During Modes 0 - 1
    // See graphics/lcd.ts


    if (offset >= Memory.spriteInformationTableLocation && offset <= Memory.spriteInformationTableLocationEnd) {
      // Can only read/write from OAM During Mode 2
      // See graphics/lcd.ts
      if (Lcd.currentLcdMode < 2) {
        return 0xff;
      } // Not batch processing here for performance
      // batchProcessGraphics();


      return -1;
    } // CPU


    if (offset === Cpu.memoryLocationSpeedSwitch) {
      // TCAGBD, only Bit 7 and 0 are readable, all others are 1
      var response = 0xff;
      var currentSpeedSwitchRegister = eightBitLoadFromGBMemory(Cpu.memoryLocationSpeedSwitch);

      if (!checkBitOnByte(0, currentSpeedSwitchRegister)) {
        response = resetBitOnByte(0, response);
      }

      if (!Cpu.GBCDoubleSpeed) {
        response = resetBitOnByte(7, response);
      }

      return response;
    } // Graphics
    // Not batch processing here for performance
    // batchProcessGraphics();


    if (offset === Graphics.memoryLocationScanlineRegister) {
      eightBitStoreIntoGBMemory(offset, Graphics.scanlineRegister);
      return Graphics.scanlineRegister;
    } // Sound
    // http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware#Registers
    // TODO: Put these bounds on the Sound Class


    if (offset >= 0xff10 && offset <= 0xff26) {
      batchProcessAudio();
      return SoundRegisterReadTraps(offset);
    } // FF27 - FF2F not used
    // Final Wave Table for Channel 3


    if (offset >= 0xff30 && offset <= 0xff3f) {
      batchProcessAudio();
      return -1;
    } // Timers


    if (offset === Timers.memoryLocationDividerRegister) {
      // Divider register in memory is just the upper 8 bits
      // http://gbdev.gg8.se/wiki/articles/Timer_Obscure_Behaviour
      var upperDividerRegisterBits = splitHighByte(Timers.dividerRegister);
      eightBitStoreIntoGBMemory(offset, upperDividerRegisterBits);
      return upperDividerRegisterBits;
    }

    if (offset === Timers.memoryLocationTimerCounter) {
      eightBitStoreIntoGBMemory(offset, Timers.timerCounter);
      return Timers.timerCounter;
    } // Interrupts


    if (offset === Interrupts.memoryLocationInterruptRequest) {
      // TCAGB and BGB say the top 5 bits are always 1.
      return 0xe0 | Interrupts.interruptsRequestedValue;
    } // Joypad


    if (offset === Joypad.memoryLocationJoypadRegister) {
      return getJoypadState();
    }

    return -1;
  } // Load/Read functionality for memory


  function eightBitLoadFromGBMemory(gameboyOffset) {
    return load(getWasmBoyOffsetFromGameBoyOffset(gameboyOffset));
  }

  function eightBitLoadFromGBMemoryWithTraps(offset) {
    var readTrapResult = checkReadTraps(offset);

    switch (readTrapResult) {
      case -1:
        return eightBitLoadFromGBMemory(offset);

      default:
        return readTrapResult;
    }
  } // TODO: Rename this to sixteenBitLoadFromGBMemoryWithTraps


  function sixteenBitLoadFromGBMemory(offset) {
    // Get our low byte
    var lowByte = 0;
    var lowByteReadTrapResult = checkReadTraps(offset);

    switch (lowByteReadTrapResult) {
      case -1:
        lowByte = eightBitLoadFromGBMemory(offset);
        break;

      default:
        lowByte = lowByteReadTrapResult;
        break;
    } // Get the next offset for the second byte


    var nextOffset = offset + 1; // Get our high byte

    var highByte = 0;
    var highByteReadTrapResult = checkReadTraps(nextOffset);

    switch (highByteReadTrapResult) {
      case -1:
        highByte = eightBitLoadFromGBMemory(nextOffset);
        break;

      default:
        highByte = highByteReadTrapResult;
        break;
    } // Concatenate the bytes and return


    return concatenateBytes(highByte, lowByte);
  }

  function loadBooleanDirectlyFromWasmMemory(offset) {
    var booleanAsInt = load(offset);

    if (booleanAsInt > 0) {
      return true;
    }

    return false;
  }

  var Memory =
  /** @class */
  function () {
    function Memory() {} // Function to save the state of the class


    Memory.saveState = function () {
      store(getSaveStateMemoryOffset(0x00, Memory.saveStateSlot), Memory.currentRomBank);
      store(getSaveStateMemoryOffset(0x02, Memory.saveStateSlot), Memory.currentRamBank);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x04, Memory.saveStateSlot), Memory.isRamBankingEnabled);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x05, Memory.saveStateSlot), Memory.isMBC1RomModeEnabled);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x06, Memory.saveStateSlot), Memory.isRomOnly);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x07, Memory.saveStateSlot), Memory.isMBC1);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x08, Memory.saveStateSlot), Memory.isMBC2);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x09, Memory.saveStateSlot), Memory.isMBC3);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x0a, Memory.saveStateSlot), Memory.isMBC5);
    }; // Function to load the save state from memory


    Memory.loadState = function () {
      Memory.currentRomBank = load(getSaveStateMemoryOffset(0x00, Memory.saveStateSlot));
      Memory.currentRamBank = load(getSaveStateMemoryOffset(0x02, Memory.saveStateSlot));
      Memory.isRamBankingEnabled = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x04, Memory.saveStateSlot));
      Memory.isMBC1RomModeEnabled = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x05, Memory.saveStateSlot));
      Memory.isRomOnly = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x06, Memory.saveStateSlot));
      Memory.isMBC1 = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x07, Memory.saveStateSlot));
      Memory.isMBC2 = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x08, Memory.saveStateSlot));
      Memory.isMBC3 = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x09, Memory.saveStateSlot));
      Memory.isMBC5 = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x0a, Memory.saveStateSlot));
    }; // ----------------------------------
    // Gameboy Memory Map
    // ----------------------------------
    // https://github.com/AntonioND/giibiiadvance/blob/master/docs/TCAGBD.pdf
    // http://gameboy.mongenel.com/dmg/asmmemmap.html
    // using Arrays, first index is start, second is end


    Memory.cartridgeRomLocation = 0x0000;
    Memory.switchableCartridgeRomLocation = 0x4000;
    Memory.videoRamLocation = 0x8000;
    Memory.cartridgeRamLocation = 0xa000;
    Memory.internalRamBankZeroLocation = 0xc000; // This ram bank is switchable

    Memory.internalRamBankOneLocation = 0xd000;
    Memory.echoRamLocation = 0xe000;
    Memory.spriteInformationTableLocation = 0xfe00;
    Memory.spriteInformationTableLocationEnd = 0xfe9f;
    Memory.unusableMemoryLocation = 0xfea0;
    Memory.unusableMemoryEndLocation = 0xfeff; // Hardware I/O, 0xFF00 -> 0xFF7F
    // Zero Page, 0xFF80 -> 0xFFFE
    // Intterupt Enable Flag, 0xFFFF
    // ----------------------------------
    // Rom/Ram Banking
    // ----------------------------------
    // http://gbdev.gg8.se/wiki/articles/Memory_Bank_Controllers#MBC3_.28max_2MByte_ROM_and.2For_32KByte_RAM_and_Timer.29
    // http://www.codeslinger.co.uk/pages/projects/gameboy/banking.html

    Memory.currentRomBank = 0x00;
    Memory.currentRamBank = 0x00;
    Memory.isRamBankingEnabled = false;
    Memory.isMBC1RomModeEnabled = true; // Cartridge Types
    // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header

    Memory.isRomOnly = true;
    Memory.isMBC1 = false;
    Memory.isMBC2 = false;
    Memory.isMBC3 = false;
    Memory.isMBC5 = false; // DMA

    Memory.memoryLocationHdmaSourceHigh = 0xff51;
    Memory.memoryLocationHdmaSourceLow = 0xff52;
    Memory.memoryLocationHdmaDestinationHigh = 0xff53;
    Memory.memoryLocationHdmaDestinationLow = 0xff54;
    Memory.memoryLocationHdmaTrigger = 0xff55; // Cycles accumulated for DMA

    Memory.DMACycles = 0; // Boolean we will mirror to indicate if Hdma is active

    Memory.isHblankHdmaActive = false;
    Memory.hblankHdmaTransferLengthRemaining = 0x00; // Store the source and destination for performance, and update as needed

    Memory.hblankHdmaSource = 0x00;
    Memory.hblankHdmaDestination = 0x00; // GBC Registers

    Memory.memoryLocationGBCVRAMBank = 0xff4f;
    Memory.memoryLocationGBCWRAMBank = 0xff70; // Save States

    Memory.saveStateSlot = 4;
    return Memory;
  }();

  function initializeCartridge() {
    // Reset stateful variables
    Memory.isRamBankingEnabled = false;
    Memory.isMBC1RomModeEnabled = true; // Get our game MBC type from the cartridge header
    // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header

    var cartridgeType = eightBitLoadFromGBMemory(0x0147); // Reset our Cartridge types

    Memory.isRomOnly = false;
    Memory.isMBC1 = false;
    Memory.isMBC2 = false;
    Memory.isMBC3 = false;
    Memory.isMBC5 = false;

    if (cartridgeType === 0x00) {
      Memory.isRomOnly = true;
    } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {
      Memory.isMBC1 = true;
    } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {
      Memory.isMBC2 = true;
    } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {
      Memory.isMBC3 = true;
    } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {
      Memory.isMBC5 = true;
    }

    Memory.currentRomBank = 0x01;
    Memory.currentRamBank = 0x00;
  } // WasmBoy memory map:
  // Everything Static as class instances just aren't quite there yet
  // https://github.com/AssemblyScript/assemblyscript/blob/master/tests/compiler/showcase.ts


  var Cpu =
  /** @class */
  function () {
    function Cpu() {}

    Cpu.CLOCK_SPEED = function () {
      if (Cpu.GBCDoubleSpeed) {
        // 2^23, thanks binji!
        return 8388608;
      }

      return 4194304;
    }; // Cycles Per Frame = Clock Speed / fps
    // So: 4194304 / 59.73


    Cpu.MAX_CYCLES_PER_FRAME = function () {
      if (Cpu.GBCDoubleSpeed) {
        return 140448;
      }

      return 70224;
    }; // See section 4.10 of TCAGBD
    // Cpu Halting explained: https://www.reddit.com/r/EmuDev/comments/5ie3k7/infinite_loop_trying_to_pass_blarggs_interrupt/db7xnbe/


    Cpu.enableHalt = function () {
      if (Interrupts.masterInterruptSwitch) {
        Cpu.isHaltNormal = true;
        return;
      }

      var haltTypeValue = Interrupts.interruptsEnabledValue & Interrupts.interruptsRequestedValue & 0x1f;

      if (haltTypeValue === 0) {
        Cpu.isHaltNoJump = true;
        return;
      }

      Cpu.isHaltBug = true;
    };

    Cpu.exitHaltAndStop = function () {
      Cpu.isHaltNoJump = false;
      Cpu.isHaltNormal = false;
      Cpu.isHaltBug = false;
      Cpu.isStopped = false;
    };

    Cpu.isHalted = function () {
      if (Cpu.isHaltNormal || Cpu.isHaltNoJump) {
        return true;
      }

      return false;
    }; // Function to save the state of the class


    Cpu.saveState = function () {
      // Registers
      store(getSaveStateMemoryOffset(0x00, Cpu.saveStateSlot), Cpu.registerA);
      store(getSaveStateMemoryOffset(0x01, Cpu.saveStateSlot), Cpu.registerB);
      store(getSaveStateMemoryOffset(0x02, Cpu.saveStateSlot), Cpu.registerC);
      store(getSaveStateMemoryOffset(0x03, Cpu.saveStateSlot), Cpu.registerD);
      store(getSaveStateMemoryOffset(0x04, Cpu.saveStateSlot), Cpu.registerE);
      store(getSaveStateMemoryOffset(0x05, Cpu.saveStateSlot), Cpu.registerH);
      store(getSaveStateMemoryOffset(0x06, Cpu.saveStateSlot), Cpu.registerL);
      store(getSaveStateMemoryOffset(0x07, Cpu.saveStateSlot), Cpu.registerF);
      store(getSaveStateMemoryOffset(0x08, Cpu.saveStateSlot), Cpu.stackPointer);
      store(getSaveStateMemoryOffset(0x0a, Cpu.saveStateSlot), Cpu.programCounter);
      store(getSaveStateMemoryOffset(0x0c, Cpu.saveStateSlot), Cpu.currentCycles);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x11, Cpu.saveStateSlot), Cpu.isHaltNormal);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x12, Cpu.saveStateSlot), Cpu.isHaltNoJump);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x13, Cpu.saveStateSlot), Cpu.isHaltBug);
      storeBooleanDirectlyToWasmMemory(getSaveStateMemoryOffset(0x14, Cpu.saveStateSlot), Cpu.isStopped);
    }; // Function to load the save state from memory


    Cpu.loadState = function () {
      // Registers
      Cpu.registerA = load(getSaveStateMemoryOffset(0x00, Cpu.saveStateSlot));
      Cpu.registerB = load(getSaveStateMemoryOffset(0x01, Cpu.saveStateSlot));
      Cpu.registerC = load(getSaveStateMemoryOffset(0x02, Cpu.saveStateSlot));
      Cpu.registerD = load(getSaveStateMemoryOffset(0x03, Cpu.saveStateSlot));
      Cpu.registerE = load(getSaveStateMemoryOffset(0x04, Cpu.saveStateSlot));
      Cpu.registerH = load(getSaveStateMemoryOffset(0x05, Cpu.saveStateSlot));
      Cpu.registerL = load(getSaveStateMemoryOffset(0x06, Cpu.saveStateSlot));
      Cpu.registerF = load(getSaveStateMemoryOffset(0x07, Cpu.saveStateSlot));
      Cpu.stackPointer = load(getSaveStateMemoryOffset(0x08, Cpu.saveStateSlot));
      Cpu.programCounter = load(getSaveStateMemoryOffset(0x0a, Cpu.saveStateSlot));
      Cpu.currentCycles = load(getSaveStateMemoryOffset(0x0c, Cpu.saveStateSlot));
      Cpu.isHaltNormal = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x11, Cpu.saveStateSlot));
      Cpu.isHaltNoJump = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x12, Cpu.saveStateSlot));
      Cpu.isHaltBug = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x13, Cpu.saveStateSlot));
      Cpu.isStopped = loadBooleanDirectlyFromWasmMemory(getSaveStateMemoryOffset(0x14, Cpu.saveStateSlot));
    }; // Status to track if we are in Gameboy Color Mode, and GBC State


    Cpu.GBCEnabled = false; // Memory Location for the GBC Speed switch
    // And the current status

    Cpu.memoryLocationSpeedSwitch = 0xff4d;
    Cpu.GBCDoubleSpeed = false; // 8-bit Cpu.registers

    Cpu.registerA = 0;
    Cpu.registerB = 0;
    Cpu.registerC = 0;
    Cpu.registerD = 0;
    Cpu.registerE = 0;
    Cpu.registerH = 0;
    Cpu.registerL = 0;
    Cpu.registerF = 0; // 16-bit Cpu.registers

    Cpu.stackPointer = 0; // Boot rom from 0x00 to 0x99, all games start at 0x100

    Cpu.programCounter = 0x00; // Current number of cycles, shouldn't execeed max number of cycles

    Cpu.currentCycles = 0; // HALT and STOP instructions need to stop running opcodes, but simply check timers
    // https://github.com/nakardo/node-gameboy/blob/master/lib/cpu/opcodes.js
    // Matt said is should work to, so it must work!
    // TCAGBD shows three different HALT states. Therefore, we need to handle each

    Cpu.isHaltNormal = false;
    Cpu.isHaltNoJump = false;
    Cpu.isHaltBug = false;
    Cpu.isStopped = false; // Save States

    Cpu.saveStateSlot = 0;
    return Cpu;
  }();

  function initializeCpu() {
    // Reset all stateful Cpu variables
    // Cpu.GBCEnabled is done by core/initialize
    Cpu.GBCDoubleSpeed = false;
    Cpu.registerA = 0;
    Cpu.registerB = 0;
    Cpu.registerC = 0;
    Cpu.registerD = 0;
    Cpu.registerE = 0;
    Cpu.registerH = 0;
    Cpu.registerL = 0;
    Cpu.registerF = 0;
    Cpu.stackPointer = 0;
    Cpu.programCounter = 0x00;
    Cpu.currentCycles = 0;
    Cpu.isHaltNormal = false;
    Cpu.isHaltNoJump = false;
    Cpu.isHaltBug = false;
    Cpu.isStopped = false;

    if (Cpu.GBCEnabled) {
      // CPU Registers
      Cpu.registerA = 0x11;
      Cpu.registerF = 0x80;
      Cpu.registerB = 0x00;
      Cpu.registerC = 0x00;
      Cpu.registerD = 0xff;
      Cpu.registerE = 0x56;
      Cpu.registerH = 0x00;
      Cpu.registerL = 0x0d; // Cpu Control Flow

      Cpu.programCounter = 0x100;
      Cpu.stackPointer = 0xfffe;
    } else {
      // Cpu Registers
      Cpu.registerA = 0x01;
      Cpu.registerF = 0xb0;
      Cpu.registerB = 0x00;
      Cpu.registerC = 0x13;
      Cpu.registerD = 0x00;
      Cpu.registerE = 0xd8;
      Cpu.registerH = 0x01;
      Cpu.registerL = 0x4d; // Cpu Control Flow

      Cpu.programCounter = 0x100;
      Cpu.stackPointer = 0xfffe;
    }
  } // Imports
  // General Logic Instructions
  // Such as the ones found on the CB table and 0x40 - 0xBF
  // NOTE: Only CB table uses these for now, was mostly me realizing that I messed up, trying to be all cute and verbose :p
  // NOTE: TODO: Refactor honestly shouldn't take that long, and may happen once assembly script is improved


  function addARegister(register) {
    checkAndSetEightBitHalfCarryFlag(Cpu.registerA, register);
    checkAndSetEightBitCarryFlag(Cpu.registerA, register);
    Cpu.registerA = u8Portable(Cpu.registerA + register);

    if (Cpu.registerA === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
  }

  function addAThroughCarryRegister(register) {
    // Handling flags manually as they require some special overflow
    // From: https://github.com/nakardo/node-gameboy/blob/master/lib/cpu/opcodes.js
    // CTRL+F adc
    var result = u8Portable(Cpu.registerA + register + getCarryFlag$$1());

    if ((u8Portable(Cpu.registerA ^ register ^ result) & 0x10) != 0) {
      setHalfCarryFlag(1);
    } else {
      setHalfCarryFlag(0);
    }

    var overflowedResult = u16Portable(Cpu.registerA + register + getCarryFlag$$1());

    if ((overflowedResult & 0x100) > 0) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    Cpu.registerA = result;

    if (Cpu.registerA === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
  }

  function subARegister(register) {
    // Need to convert the register on one line, and flip the sign on another
    var negativeRegister = register;
    negativeRegister = negativeRegister * -1;
    checkAndSetEightBitHalfCarryFlag(Cpu.registerA, negativeRegister);
    checkAndSetEightBitCarryFlag(Cpu.registerA, negativeRegister);
    Cpu.registerA = u8Portable(Cpu.registerA - register);

    if (Cpu.registerA === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(1);
  }

  function subAThroughCarryRegister(register) {
    // Handling flags manually as they require some special overflow
    // From: https://github.com/nakardo/node-gameboy/blob/master/lib/cpu/opcodes.js
    // CTRL+F adc
    var result = u8Portable(Cpu.registerA - register - getCarryFlag$$1());
    var carryRegisterCheck = u8Portable((Cpu.registerA ^ register ^ result) & 0x10);

    if (carryRegisterCheck != 0) {
      setHalfCarryFlag(1);
    } else {
      setHalfCarryFlag(0);
    }

    var overflowedResult = u16Portable(Cpu.registerA - register - getCarryFlag$$1());

    if ((overflowedResult & 0x100) > 0) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    Cpu.registerA = result;

    if (Cpu.registerA === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(1);
  }

  function andARegister(register) {
    Cpu.registerA = Cpu.registerA & register;

    if (Cpu.registerA === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(1);
    setCarryFlag(0);
  }

  function xorARegister(register) {
    Cpu.registerA = u8Portable(Cpu.registerA ^ register);

    if (Cpu.registerA === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0);
    setCarryFlag(0);
  }

  function orARegister(register) {
    Cpu.registerA = Cpu.registerA | register;

    if (Cpu.registerA === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0);
    setCarryFlag(0);
  }

  function cpARegister(register) {
    // 0xB8 - 0xBF
    // CP B
    // 1  4
    // Z 1 H C
    var negativeRegister = register;
    negativeRegister = negativeRegister * -1;
    checkAndSetEightBitHalfCarryFlag(Cpu.registerA, negativeRegister);
    checkAndSetEightBitCarryFlag(Cpu.registerA, negativeRegister);
    var tempResult = Cpu.registerA + negativeRegister;

    if (tempResult === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(1);
  }

  function rotateRegisterLeft(register) {
    // RLC register 8-bit
    // Z 0 0 C
    if ((register & 0x80) === 0x80) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    register = rotateByteLeft(register);

    if (register === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    } // Set all other flags to zero


    setSubtractFlag(0);
    setHalfCarryFlag(0); // Return the register

    return register;
  }

  function rotateRegisterRight(register) {
    // RLC register 8-bit
    // Z 0 0 C
    // Check for the last bit, to see if it will be carried
    if ((register & 0x01) > 0) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    register = rotateByteRight(register);

    if (register === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0); // Return the register

    return register;
  }

  function rotateRegisterLeftThroughCarry(register) {
    // RL register 8-bit
    // Z 0 0 C
    // setting has first bit since we need to use carry
    var hasHighbit = false;

    if ((register & 0x80) === 0x80) {
      hasHighbit = true;
    }

    register = rotateByteLeftThroughCarry(register);

    if (hasHighbit) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    if (register === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0);
    return register;
  }

  function rotateRegisterRightThroughCarry(register) {
    // RR register 8-bit
    // Z 0 0 C
    var hasLowBit = false;

    if ((register & 0x01) === 0x01) {
      hasLowBit = true;
    }

    register = rotateByteRightThroughCarry(register);

    if (hasLowBit) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    if (register === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0);
    return register;
  }

  function shiftLeftRegister(register) {
    // SLA register 8-bit
    // Z 0 0 C
    var hasHighbit = false;

    if ((register & 0x80) === 0x80) {
      hasHighbit = true;
    }

    register = u8Portable(register << 1);

    if (hasHighbit) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    if (register === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0);
    return register;
  }

  function shiftRightArithmeticRegister(register) {
    // SRA register 8-bit
    // Z 0 0 C
    // NOTE: This C flag may need to be set to 0;
    // This preserves the MSB (Most significant bit)
    var hasHighbit = false;

    if ((register & 0x80) === 0x80) {
      hasHighbit = true;
    }

    var hasLowbit = false;

    if ((register & 0x01) === 0x01) {
      hasLowbit = true;
    }

    register = u8Portable(register >> 1);

    if (hasHighbit) {
      register = register | 0x80;
    }

    if (register === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0);

    if (hasLowbit) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    return register;
  }

  function swapNibblesOnRegister(register) {
    // SWAP register 8-bit
    // Z 0 0 0
    var highNibble = register & 0xf0;
    var lowNibble = register & 0x0f;
    register = u8Portable(lowNibble << 4 | highNibble >> 4);

    if (register === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0);
    setCarryFlag(0);
    return register;
  }

  function shiftRightLogicalRegister(register) {
    // SRA register 8-bit
    // Z 0 0 C
    // NOTE: This C flag may need to be set to 0;
    // This does NOT preserve MSB (most significant bit)
    var hasLowbit = false;

    if ((register & 0x01) === 0x01) {
      hasLowbit = true;
    }

    register = u8Portable(register >> 1);

    if (register === 0) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(0);

    if (hasLowbit) {
      setCarryFlag(1);
    } else {
      setCarryFlag(0);
    }

    return register;
  }

  function testBitOnRegister(bitPosition, register) {
    // BIT bitPosition ,register 8-bit
    // Z 0 1 -
    var testByte = 0x01 << bitPosition;
    var result = register & testByte;

    if (result === 0x00) {
      setZeroFlag$$1(1);
    } else {
      setZeroFlag$$1(0);
    }

    setSubtractFlag(0);
    setHalfCarryFlag(1);
    return register;
  }

  function setBitOnRegister(bitPosition, bitValue, register) {
    // RES 0,B or SET 0,B depending on bit value
    if (bitValue > 0) {
      var setByte = 0x01 << bitPosition;
      register = register | setByte;
    } else {
      // NOT (byte we want)
      // 0000 0100 becomes 1111 1011
      var setByte = ~(0x01 << bitPosition);
      register = register & setByte;
    }

    return register;
  } // Private function for our relative jumps


  function relativeJump(value) {
    // Need to convert the value to i8, since in this case, u8 can be negative
    var relativeJumpOffset = i8Portable(value);
    Cpu.programCounter = u16Portable(Cpu.programCounter + relativeJumpOffset); // Realtive jump, using bgb debugger
    // and my debugger shows,
    // on JR you need to jump to the relative jump offset,
    // However, if the jump fails (such as conditional), only jump +2 in total

    Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
  } // Imports
  // Handle CB Opcodes
  // NOTE: Program stpes and cycles are standardized depending on the register type
  // NOTE: Doing some funny stuff to get around not having arrays or objects


  function handleCbOpcode(cbOpcode) {
    var numberOfCycles = -1;
    var handledOpcode = false; // The result of our cb logic instruction

    var instructionRegisterValue = 0;
    var instructionRegisterResult = 0; // Get our register number by modulo 0x08 (number of registers)
    // cbOpcode % 0x08

    var registerNumber = cbOpcode % 0x08; // NOTE: registerNumber = register on CB table. Cpu.registerB = 0, Cpu.registerC = 1....Cpu.registerA = 7

    switch (registerNumber) {
      case 0:
        instructionRegisterValue = Cpu.registerB;
        break;

      case 1:
        instructionRegisterValue = Cpu.registerC;
        break;

      case 2:
        instructionRegisterValue = Cpu.registerD;
        break;

      case 3:
        instructionRegisterValue = Cpu.registerE;
        break;

      case 4:
        instructionRegisterValue = Cpu.registerH;
        break;

      case 5:
        instructionRegisterValue = Cpu.registerL;
        break;

      case 6:
        // Value at register HL
        // 4 cycles
        instructionRegisterValue = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        break;

      case 7:
        instructionRegisterValue = Cpu.registerA;
        break;
    } // Grab the high nibble to perform skips to speed up performance


    var opcodeHighNibble = cbOpcode & 0xf0;
    opcodeHighNibble = opcodeHighNibble >> 4; // Send to the correct function

    switch (opcodeHighNibble) {
      case 0x00:
        if (cbOpcode <= 0x07) {
          // RLC register 8-bit
          // Z 0 0 C
          instructionRegisterResult = rotateRegisterLeft(instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x0f) {
          // RRC register 8-bit
          // Z 0 0 C
          instructionRegisterResult = rotateRegisterRight(instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x01:
        if (cbOpcode <= 0x17) {
          // RL register 8-bit
          // Z 0 0 C
          instructionRegisterResult = rotateRegisterLeftThroughCarry(instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x1f) {
          // RR register 8-bit
          // Z 0 0 C
          instructionRegisterResult = rotateRegisterRightThroughCarry(instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x02:
        if (cbOpcode <= 0x27) {
          // SLA register 8-bit
          // Z 0 0 C
          instructionRegisterResult = shiftLeftRegister(instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x2f) {
          // SRA register 8-bit
          // Z 0 0 0
          instructionRegisterResult = shiftRightArithmeticRegister(instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x03:
        if (cbOpcode <= 0x37) {
          // SWAP register 8-bit
          // Z 0 0 0
          instructionRegisterResult = swapNibblesOnRegister(instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x3f) {
          // SRL B
          // Z 0 0 C
          instructionRegisterResult = shiftRightLogicalRegister(instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x04:
        if (cbOpcode <= 0x47) {
          // BIT 0,register 8-bit
          // Z 0 1 -
          //TODO: Optimize this not to do logic of setting register back
          instructionRegisterResult = testBitOnRegister(0, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x4f) {
          // BIT 1,register 8-bit
          // Z 0 1 -
          instructionRegisterResult = testBitOnRegister(1, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x05:
        if (cbOpcode <= 0x57) {
          // BIT 2,register 8-bit
          // Z 0 1 -
          instructionRegisterResult = testBitOnRegister(2, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x5f) {
          // BIT 3,register 8-bit
          // Z 0 1 -
          instructionRegisterResult = testBitOnRegister(3, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x06:
        if (cbOpcode <= 0x67) {
          // BIT 4,register 8-bit
          // Z 0 1 -
          instructionRegisterResult = testBitOnRegister(4, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x6f) {
          // BIT 5,register 8-bit
          // Z 0 1 -
          instructionRegisterResult = testBitOnRegister(5, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x07:
        if (cbOpcode <= 0x77) {
          // BIT 6,register 8-bit
          // Z 0 1 -
          instructionRegisterResult = testBitOnRegister(6, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x7f) {
          // BIT 7,register 8-bit
          // Z 0 1 -
          instructionRegisterResult = testBitOnRegister(7, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x08:
        if (cbOpcode <= 0x87) {
          // Res 0,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(0, 0, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x8f) {
          // Res 1,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(1, 0, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x09:
        if (cbOpcode <= 0x97) {
          // Res 2,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(2, 0, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0x9f) {
          // Res 3,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(3, 0, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x0a:
        if (cbOpcode <= 0xa7) {
          // Res 4,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(4, 0, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0xaf) {
          // Res 5,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(5, 0, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x0b:
        if (cbOpcode <= 0xb7) {
          // Res 6,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(6, 0, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0xbf) {
          // Res 7,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(7, 0, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x0c:
        if (cbOpcode <= 0xc7) {
          // SET 0,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(0, 1, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0xcf) {
          // SET 1,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(1, 1, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x0d:
        if (cbOpcode <= 0xd7) {
          // SET 2,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(2, 1, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0xdf) {
          // SET 3,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(3, 1, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x0e:
        if (cbOpcode <= 0xe7) {
          // SET 4,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(4, 1, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0xef) {
          // SET 5,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(5, 1, instructionRegisterValue);
          handledOpcode = true;
        }

        break;

      case 0x0f:
        if (cbOpcode <= 0xf7) {
          // SET 6,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(6, 1, instructionRegisterValue);
          handledOpcode = true;
        } else if (cbOpcode <= 0xff) {
          // SET 7,register 8-bit
          // - - - -
          instructionRegisterResult = setBitOnRegister(7, 1, instructionRegisterValue);
          handledOpcode = true;
        }

        break;
    } // Finally Pass back into the correct register


    switch (registerNumber) {
      case 0:
        Cpu.registerB = instructionRegisterResult;
        break;

      case 1:
        Cpu.registerC = instructionRegisterResult;
        break;

      case 2:
        Cpu.registerD = instructionRegisterResult;
        break;

      case 3:
        Cpu.registerE = instructionRegisterResult;
        break;

      case 4:
        Cpu.registerH = instructionRegisterResult;
        break;

      case 5:
        Cpu.registerL = instructionRegisterResult;
        break;

      case 6:
        // Value at register HL
        // Opcodes 0x40 -> 0x7F only do simple
        // Bit test, and don't need to be stored back in memory
        // Thus they take 4 less cycles to run
        if (opcodeHighNibble < 0x04 || opcodeHighNibble > 0x07) {
          // Store the result back
          // 4 cycles
          eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), instructionRegisterResult);
        }

        break;

      case 7:
        Cpu.registerA = instructionRegisterResult;
        break;
    } // Finally our number of cycles
    // Set if we handled the opcode


    if (handledOpcode) {
      numberOfCycles = 4;
    } // Return our number of cycles


    return numberOfCycles;
  } // Imports
  // Take in any opcode, and decode it, and return the number of cycles
  // Program counter can be gotten from getProgramCounter();
  // Setting return value to i32 instead of u16, as we want to return a negative number on error
  // https://rednex.github.io/rgbds/gbz80.7.html
  // http://pastraiser.com/cpu/gameboy/gameboyopcodes.html


  function executeOpcode$$1(opcode) {
    // Always implement the program counter by one
    // Any other value can just subtract or add however much offset before reaching this line
    Cpu.programCounter = u16Portable(Cpu.programCounter + 1); // Check if we are in the halt bug

    if (Cpu.isHaltBug) {
      // Need to not increment program counter,
      // thus, running the next opcode twice
      // E.g
      // 0x76 - halt
      // FA 34 12 - ld a,(1234)
      // Becomes
      // FA FA 34 ld a,(34FA)
      // 12 ld (de),a
      Cpu.programCounter = u16Portable(Cpu.programCounter - 1);
    } // Split our opcode into a high nibble to speed up performance
    // Running 255 if statements is slow, even in wasm haha!


    var opcodeHighNibble = opcode & 0xf0;
    opcodeHighNibble = opcodeHighNibble >> 4; // NOTE: @binji rule of thumb: it takes 4 cpu cycles to read one byte
    // Therefore isntructions that use more than just the opcode (databyte one and two) will take at least
    // 8 cyckles to use getDataByteOne(), and two cycles to use the concatented
    // Not using a switch statement to avoid cannot redeclare this variable errors
    // And it would be a ton of work :p

    switch (opcodeHighNibble) {
      case 0x00:
        return handleOpcode0x(opcode);

      case 0x01:
        return handleOpcode1x(opcode);

      case 0x02:
        return handleOpcode2x(opcode);

      case 0x03:
        return handleOpcode3x(opcode);

      case 0x04:
        return handleOpcode4x(opcode);

      case 0x05:
        return handleOpcode5x(opcode);

      case 0x06:
        return handleOpcode6x(opcode);

      case 0x07:
        return handleOpcode7x(opcode);

      case 0x08:
        return handleOpcode8x(opcode);

      case 0x09:
        return handleOpcode9x(opcode);

      case 0x0a:
        return handleOpcodeAx(opcode);

      case 0x0b:
        return handleOpcodeBx(opcode);

      case 0x0c:
        return handleOpcodeCx(opcode);

      case 0x0d:
        return handleOpcodeDx(opcode);

      case 0x0e:
        return handleOpcodeEx(opcode);

      default:
        return handleOpcodeFx(opcode);
    }
  } // Wrapper functions around loading and storing memory, and syncing those cycles


  function eightBitLoadSyncCycles(gameboyOffset) {
    syncCycles(4);
    return eightBitLoadFromGBMemoryWithTraps(gameboyOffset);
  }

  function eightBitStoreSyncCycles(gameboyOffset, value) {
    syncCycles(4);
    eightBitStoreIntoGBMemoryWithTraps(gameboyOffset, value);
  }

  function sixteenBitLoadSyncCycles(gameboyOffset) {
    syncCycles(8); // sixteen bit load has traps even though it has no label

    return sixteenBitLoadFromGBMemory(gameboyOffset);
  }

  function sixteenBitStoreSyncCycles(gameboyOffset, value) {
    syncCycles(8);
    sixteenBitStoreIntoGBMemoryWithTraps(gameboyOffset, value);
  } // Functions to access the next operands of a opcode, reffering to them as "dataBytes"


  function getDataByteOne() {
    syncCycles(4);
    return eightBitLoadFromGBMemory(Cpu.programCounter);
  }

  function getDataByteTwo() {
    syncCycles(4);
    return eightBitLoadFromGBMemory(u16Portable(Cpu.programCounter + 1));
  } // Get our concatenated databyte one and getDataByteTwo()
  // Find and replace with : getConcatenatedDataByte()


  function getConcatenatedDataByte() {
    return concatenateBytes(getDataByteTwo(), getDataByteOne());
  }

  function handleOpcode0x(opcode) {
    switch (opcode) {
      case 0x00:
        // NOP
        // 1  4
        // No Operation
        return 4;

      case 0x01:
        // LD BC,d16
        // 3  12
        // 8 cycles
        var concatenatedDataByte = getConcatenatedDataByte();
        Cpu.registerB = splitHighByte(concatenatedDataByte);
        Cpu.registerC = splitLowByte(concatenatedDataByte);
        Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
        return 4;

      case 0x02:
        // LD (BC),A
        // 1  8
        // () means load into address pointed by BC
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerB, Cpu.registerC), Cpu.registerA);
        return 4;

      case 0x03:
        // INC BC
        // 1  8
        var registerBC3 = concatenateBytes(Cpu.registerB, Cpu.registerC);
        registerBC3++;
        Cpu.registerB = splitHighByte(registerBC3);
        Cpu.registerC = splitLowByte(registerBC3);
        return 8;

      case 0x04:
        // INC B
        // 1  4
        // Z 0 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerB, 1);
        Cpu.registerB = u8Portable(Cpu.registerB + 1);

        if (Cpu.registerB === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(0);
        return 4;

      case 0x05:
        // DEC B
        // 1  4
        // Z 1 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerB, -1);
        Cpu.registerB = u8Portable(Cpu.registerB - 1);

        if (Cpu.registerB === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(1);
        return 4;

      case 0x06:
        // LD B,d8
        // 2  8
        // 4 cycles
        Cpu.registerB = getDataByteOne();
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x07:
        // RLCA
        // 1  4
        // 0 0 0 C
        // Check for the carry
        if ((Cpu.registerA & 0x80) === 0x80) {
          setCarryFlag(1);
        } else {
          setCarryFlag(0);
        }

        Cpu.registerA = rotateByteLeft(Cpu.registerA); // Set all other flags to zero

        setZeroFlag$$1(0);
        setSubtractFlag(0);
        setHalfCarryFlag(0);
        return 4;

      case 0x08:
        // LD (a16),SP
        // 3  20
        // Load the stack pointer into the 16 bit address represented by the two data bytes
        // 16 cycles, 8 from data byte, 8 from sixteenbit store
        sixteenBitStoreSyncCycles(getConcatenatedDataByte(), Cpu.stackPointer);
        Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
        return 4;

      case 0x09:
        // ADD HL,BC
        // 1 8
        // - 0 H C
        var registerHL = concatenateBytes(Cpu.registerH, Cpu.registerL);
        var registerBC9 = concatenateBytes(Cpu.registerB, Cpu.registerC);
        checkAndSetSixteenBitFlagsAddOverflow(registerHL, registerBC9, false);
        var result = u16Portable(registerHL + registerBC9);
        Cpu.registerH = splitHighByte(result);
        Cpu.registerL = splitLowByte(result);
        setSubtractFlag(0);
        return 8;

      case 0x0a:
        // LD A,(BC)
        // 1 8
        // 4 cycles from load
        Cpu.registerA = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerB, Cpu.registerC));
        return 4;

      case 0x0b:
        // DEC BC
        // 1  8
        var registerBCB = concatenateBytes(Cpu.registerB, Cpu.registerC);
        registerBCB = u16Portable(registerBCB - 1);
        Cpu.registerB = splitHighByte(registerBCB);
        Cpu.registerC = splitLowByte(registerBCB);
        return 8;

      case 0x0c:
        // INC C
        // 1  4
        // Z 0 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerC, 1);
        Cpu.registerC = u8Portable(Cpu.registerC + 1);

        if (Cpu.registerC === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(0);
        return 4;

      case 0x0d:
        // DEC C
        // 1  4
        // Z 1 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerC, -1);
        Cpu.registerC = u8Portable(Cpu.registerC - 1);

        if (Cpu.registerC === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(1);
        return 4;

      case 0x0e:
        // LD C,d8
        // 2 8
        // 4 cycles
        Cpu.registerC = getDataByteOne();
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x0f:
        // RRCA
        // 1 4
        // 0 0 0 C
        // Check for the last bit, to see if it will be carried
        if ((Cpu.registerA & 0x01) > 0) {
          setCarryFlag(1);
        } else {
          setCarryFlag(0);
        }

        Cpu.registerA = rotateByteRight(Cpu.registerA); // Set all other flags to zero

        setZeroFlag$$1(0);
        setSubtractFlag(0);
        setHalfCarryFlag(0);
        return 4;
    }

    return -1;
  }

  function handleOpcode1x(opcode) {
    switch (opcode) {
      case 0x10:
        // STOP 0
        // 2 4
        // Enter CPU very low power mode. Also used to switch between double and normal speed CPU modes in GBC.
        // Meaning Don't Decode anymore opcodes , or updated the LCD until joypad interrupt (or when button is pressed if I am wrong)
        // See HALT
        // If we are in gameboy color mode, set the new speed
        if (Cpu.GBCEnabled) {
          // 4 cycles
          var speedSwitch = eightBitLoadSyncCycles(Cpu.memoryLocationSpeedSwitch);

          if (checkBitOnByte(0, speedSwitch)) {
            // Reset the prepare bit
            speedSwitch = resetBitOnByte(0, speedSwitch); // Switch to the new mode, and set the speed switch to the OTHER speed, to represent our new speed

            if (!checkBitOnByte(7, speedSwitch)) {
              Cpu.GBCDoubleSpeed = true;
              speedSwitch = setBitOnByte(7, speedSwitch);
            } else {
              Cpu.GBCDoubleSpeed = false;
              speedSwitch = resetBitOnByte(7, speedSwitch);
            } // Store the final speed switch
            // 4 cycles


            eightBitStoreSyncCycles(Cpu.memoryLocationSpeedSwitch, speedSwitch); // Cycle accurate gameboy docs says this takes 76 clocks
            // 76 - 8 cycles (from load/store) = 68

            return 68;
          }
        } // NOTE: This breaks Blarggs CPU tests if CGB Stop is not implemented


        Cpu.isStopped = true;
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x11:
        // LD DE,d16
        // 3  12
        // 8 cycles
        var concatenatedDataByte = getConcatenatedDataByte();
        Cpu.registerD = splitHighByte(concatenatedDataByte);
        Cpu.registerE = splitLowByte(concatenatedDataByte);
        Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
        return 4;

      case 0x12:
        // LD (DE),A
        // 1 8
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerD, Cpu.registerE), Cpu.registerA);
        return 4;

      case 0x13:
        // INC DE
        // 1 8
        var registerDE3 = concatenateBytes(Cpu.registerD, Cpu.registerE);
        registerDE3 = u16Portable(registerDE3 + 1);
        Cpu.registerD = splitHighByte(registerDE3);
        Cpu.registerE = splitLowByte(registerDE3);
        return 8;

      case 0x14:
        // INC D
        // 1  4
        // Z 0 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerD, 1);
        Cpu.registerD = u8Portable(Cpu.registerD + 1);

        if (Cpu.registerD === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(0);
        return 4;

      case 0x15:
        // DEC D
        // 1  4
        // Z 1 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerD, -1);
        Cpu.registerD = u8Portable(Cpu.registerD - 1);

        if (Cpu.registerD === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(1);
        return 4;

      case 0x16:
        // LD D,d8
        // 2 8
        // 4 cycles
        Cpu.registerD = getDataByteOne();
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x17:
        // RLA
        // 1 4
        // 0 0 0 C
        // Check for the carry
        // setting has first bit since we need to use carry
        var hasHighbit = false;

        if ((Cpu.registerA & 0x80) === 0x80) {
          hasHighbit = true;
        }

        Cpu.registerA = rotateByteLeftThroughCarry(Cpu.registerA); // OR the carry flag to the end

        if (hasHighbit) {
          setCarryFlag(1);
        } else {
          setCarryFlag(0);
        } // Set all other flags to zero


        setZeroFlag$$1(0);
        setSubtractFlag(0);
        setHalfCarryFlag(0);
        return 4;

      case 0x18:
        // JR r8
        // 2  12
        // NOTE: Discoved dataByte is signed
        // However the relative Jump Function handles this
        // 4 cycles
        relativeJump(getDataByteOne());
        return 8;
      // Relative Jump Function Handles program counter

      case 0x19:
        // ADD HL,DE
        // 1  8
        // - 0 H C
        var registerHL = concatenateBytes(Cpu.registerH, Cpu.registerL);
        var registerDE9 = concatenateBytes(Cpu.registerD, Cpu.registerE);
        checkAndSetSixteenBitFlagsAddOverflow(registerHL, registerDE9, false);
        var result = u16Portable(registerHL + registerDE9);
        Cpu.registerH = splitHighByte(result);
        Cpu.registerL = splitLowByte(result);
        setSubtractFlag(0);
        return 8;

      case 0x1a:
        // LD A,(DE)
        // 1 8
        var registerDEA = concatenateBytes(Cpu.registerD, Cpu.registerE); // 4 cycles

        Cpu.registerA = eightBitLoadSyncCycles(registerDEA);
        return 4;

      case 0x1b:
        // DEC DE
        // 1 8
        var registerDEB = concatenateBytes(Cpu.registerD, Cpu.registerE);
        registerDEB = u16Portable(registerDEB - 1);
        Cpu.registerD = splitHighByte(registerDEB);
        Cpu.registerE = splitLowByte(registerDEB);
        return 8;

      case 0x1c:
        // INC E
        // 1  4
        // Z 0 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerE, 1);
        Cpu.registerE = u8Portable(Cpu.registerE + 1);

        if (Cpu.registerE === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(0);
        return 4;

      case 0x1d:
        // DEC E
        // 1  4
        // Z 1 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerE, -1);
        Cpu.registerE = u8Portable(Cpu.registerE - 1);

        if (Cpu.registerE === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(1);
        return 4;

      case 0x1e:
        // LD E,d8
        // 2 8
        // 4 cycles
        Cpu.registerE = getDataByteOne();
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x1f:
        // RRA
        // 1 4
        // 0 0 0 C
        // Check for the carry
        // setting has low bit since we need to use carry
        var hasLowBit = false;

        if ((Cpu.registerA & 0x01) === 0x01) {
          hasLowBit = true;
        }

        Cpu.registerA = rotateByteRightThroughCarry(Cpu.registerA);

        if (hasLowBit) {
          setCarryFlag(1);
        } else {
          setCarryFlag(0);
        } // Set all other flags to zero


        setZeroFlag$$1(0);
        setSubtractFlag(0);
        setHalfCarryFlag(0);
        return 4;
    }

    return -1;
  }

  function handleOpcode2x(opcode) {
    switch (opcode) {
      case 0x20:
        // JR NZ,r8
        // 2  12/8
        // NOTE: NZ stands for not [flag], so in this case, not zero flag
        // Also, / means, if condition. so if met, 12 cycles, otherwise 8 cycles
        if (getZeroFlag$$1() === 0) {
          // 4 cycles
          relativeJump(getDataByteOne()); // Relative Jump Funciton handles program counter
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        }

        return 8;

      case 0x21:
        // LD HL,d16
        // 3  12
        // 8 cycles
        var sixteenBitDataByte = getConcatenatedDataByte();
        Cpu.registerH = splitHighByte(sixteenBitDataByte);
        Cpu.registerL = splitLowByte(sixteenBitDataByte);
        Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
        return 4;

      case 0x22:
        // LD (HL+),A
        // 1 8
        var registerHL2 = concatenateBytes(Cpu.registerH, Cpu.registerL); // 4 cycles

        eightBitStoreSyncCycles(registerHL2, Cpu.registerA);
        registerHL2 = u16Portable(registerHL2 + 1);
        Cpu.registerH = splitHighByte(registerHL2);
        Cpu.registerL = splitLowByte(registerHL2);
        return 4;

      case 0x23:
        // INC HL
        // 1  8
        var registerHL3 = concatenateBytes(Cpu.registerH, Cpu.registerL);
        registerHL3 = u16Portable(registerHL3 + 1);
        Cpu.registerH = splitHighByte(registerHL3);
        Cpu.registerL = splitLowByte(registerHL3);
        return 8;

      case 0x24:
        // INC H
        // 1  4
        // Z 0 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerH, 1);
        Cpu.registerH = u8Portable(Cpu.registerH + 1);

        if (Cpu.registerH === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(0);
        return 4;

      case 0x25:
        // DEC H
        // 1  4
        // Z 1 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerH, -1);
        Cpu.registerH = u8Portable(Cpu.registerH - 1);

        if (Cpu.registerH === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(1);
        return 4;

      case 0x26:
        // LD H,d8
        // 2 8
        // 4 cycles
        Cpu.registerH = getDataByteOne();
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x27:
        // DAA
        // 1 4
        // Z - 0 C
        var adjustedRegister = 0;
        var adjustment = 0;

        if (getHalfCarryFlag() > 0) {
          adjustment = adjustment | 0x06;
        }

        if (getCarryFlag$$1() > 0) {
          adjustment = adjustment | 0x60;
        }

        if (getSubtractFlag() > 0) {
          adjustedRegister = u8Portable(Cpu.registerA - adjustment);
        } else {
          if ((Cpu.registerA & 0x0f) > 0x09) {
            adjustment = adjustment | 0x06;
          }

          if (Cpu.registerA > 0x99) {
            adjustment = adjustment | 0x60;
          }

          adjustedRegister = u8Portable(Cpu.registerA + adjustment);
        } // Now set our flags to the correct values


        if (adjustedRegister === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        if ((adjustment & 0x60) !== 0) {
          setCarryFlag(1);
        } else {
          setCarryFlag(0);
        }

        setHalfCarryFlag(0);
        Cpu.registerA = adjustedRegister;
        return 4;

      case 0x28:
        // JR Z,r8
        // 2  12/8
        if (getZeroFlag$$1() > 0) {
          // 4 cycles
          relativeJump(getDataByteOne()); // Relative Jump funciton handles pogram counter
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        }

        return 8;

      case 0x29:
        // ADD HL,HL
        // 1  8
        // - 0 H C
        var registerHL9 = concatenateBytes(Cpu.registerH, Cpu.registerL);
        checkAndSetSixteenBitFlagsAddOverflow(registerHL9, registerHL9, false);
        registerHL9 = u16Portable(registerHL9 * 2);
        Cpu.registerH = splitHighByte(registerHL9);
        Cpu.registerL = splitLowByte(registerHL9);
        setSubtractFlag(0);
        return 8;

      case 0x2a:
        // LD A,(HL+)
        // 1  8
        var registerHLA = concatenateBytes(Cpu.registerH, Cpu.registerL); // 4 cycles

        Cpu.registerA = eightBitLoadSyncCycles(registerHLA);
        registerHLA = u16Portable(registerHLA + 1);
        Cpu.registerH = splitHighByte(registerHLA);
        Cpu.registerL = splitLowByte(registerHLA);
        return 4;

      case 0x2b:
        // DEC HL
        // 1 8
        var registerHLB = concatenateBytes(Cpu.registerH, Cpu.registerL);
        registerHLB = u16Portable(registerHLB - 1);
        Cpu.registerH = splitHighByte(registerHLB);
        Cpu.registerL = splitLowByte(registerHLB);
        return 8;

      case 0x2c:
        // INC L
        // 1  4
        // Z 0 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerL, 1);
        Cpu.registerL = u8Portable(Cpu.registerL + 1);

        if (Cpu.registerL === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(0);
        return 4;

      case 0x2d:
        // DEC L
        // 1  4
        // Z 1 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerL, -1);
        Cpu.registerL = u8Portable(Cpu.registerL - 1);

        if (Cpu.registerL === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(1);
        return 4;

      case 0x2e:
        // LD L,d8
        // 2  8
        // 4 cycles
        Cpu.registerL = getDataByteOne();
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x2f:
        // CPL
        // 1 4
        // - 1 1 -
        Cpu.registerA = ~Cpu.registerA;
        setSubtractFlag(1);
        setHalfCarryFlag(1);
        return 4;
    }

    return -1;
  }

  function handleOpcode3x(opcode) {
    switch (opcode) {
      case 0x30:
        // JR NC,r8
        // 2 12 / 8
        if (getCarryFlag$$1() === 0) {
          // 4 cycles
          relativeJump(getDataByteOne()); // Relative Jump function handles program counter
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        }

        return 8;

      case 0x31:
        // LD SP,d16
        // 3 12
        // 8 cycles
        Cpu.stackPointer = getConcatenatedDataByte();
        Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
        return 4;

      case 0x32:
        // LD (HL-),A
        // 1 8
        var registerHL2 = concatenateBytes(Cpu.registerH, Cpu.registerL); // 4 cycles

        eightBitStoreSyncCycles(registerHL2, Cpu.registerA);
        registerHL2 = u16Portable(registerHL2 - 1);
        Cpu.registerH = splitHighByte(registerHL2);
        Cpu.registerL = splitLowByte(registerHL2);
        return 4;

      case 0x33:
        // INC SP
        // 1 8
        Cpu.stackPointer = u16Portable(Cpu.stackPointer + 1);
        return 8;

      case 0x34:
        // INC (HL)
        // 1  12
        // Z 0 H -
        var registerHL4 = concatenateBytes(Cpu.registerH, Cpu.registerL); // 4 cycles

        var valueAtHL4 = eightBitLoadSyncCycles(registerHL4); // Creating a varible for this to fix assemblyscript overflow bug
        // Requires explicit casting
        // https://github.com/AssemblyScript/assemblyscript/issues/26

        var incrementer = 1;
        checkAndSetEightBitHalfCarryFlag(valueAtHL4, incrementer);
        valueAtHL4 = u8Portable(valueAtHL4 + incrementer);

        if (valueAtHL4 === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(0); // 4 cycles

        eightBitStoreSyncCycles(registerHL4, valueAtHL4);
        return 4;

      case 0x35:
        // DEC (HL)
        // 1  12
        // Z 1 H -
        var registerHL5 = concatenateBytes(Cpu.registerH, Cpu.registerL); // 4 cycles

        var valueAtHL5 = eightBitLoadSyncCycles(registerHL5); // NOTE: This opcode may not overflow correctly,
        // Please see previous opcode

        checkAndSetEightBitHalfCarryFlag(valueAtHL5, -1);
        valueAtHL5 = u8Portable(valueAtHL5 - 1);

        if (valueAtHL5 === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(1); // 4 cycles

        eightBitStoreSyncCycles(registerHL5, valueAtHL5);
        return 4;

      case 0x36:
        // LD (HL),d8
        // 2  12
        // 8 cycles, 4 from store, 4 from data byte
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x37:
        // SCF
        // 1  4
        // - 0 0 1
        // Simply set the carry flag
        setSubtractFlag(0);
        setHalfCarryFlag(0);
        setCarryFlag(1);
        return 4;

      case 0x38:
        // JR C,r8
        // 2 12/8
        if (getCarryFlag$$1() === 1) {
          // 4 cycles
          relativeJump(getDataByteOne()); // Relative Jump Funciton handles program counter
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        }

        return 8;

      case 0x39:
        // ADD HL,SP
        // 1 8
        // - 0 H C
        var registerHL9 = concatenateBytes(Cpu.registerH, Cpu.registerL);
        checkAndSetSixteenBitFlagsAddOverflow(registerHL9, Cpu.stackPointer, false);
        var result = u16Portable(registerHL9 + Cpu.stackPointer);
        Cpu.registerH = splitHighByte(result);
        Cpu.registerL = splitLowByte(result);
        setSubtractFlag(0);
        return 8;

      case 0x3a:
        // LD A,(HL-)
        // 1 8
        var registerHLA = concatenateBytes(Cpu.registerH, Cpu.registerL); // 4 cycles

        Cpu.registerA = eightBitLoadSyncCycles(registerHLA);
        registerHLA = u16Portable(registerHLA - 1);
        Cpu.registerH = splitHighByte(registerHLA);
        Cpu.registerL = splitLowByte(registerHLA);
        return 4;

      case 0x3b:
        // DEC SP
        // 1 8
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 1);
        return 8;

      case 0x3c:
        // INC A
        // 1  4
        // Z 0 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerA, 1);
        Cpu.registerA = u8Portable(Cpu.registerA + 1);

        if (Cpu.registerA === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(0);
        return 4;

      case 0x3d:
        // DEC A
        // 1  4
        // Z 1 H -
        checkAndSetEightBitHalfCarryFlag(Cpu.registerA, -1);
        Cpu.registerA = u8Portable(Cpu.registerA - 1);

        if (Cpu.registerA === 0) {
          setZeroFlag$$1(1);
        } else {
          setZeroFlag$$1(0);
        }

        setSubtractFlag(1);
        return 4;

      case 0x3e:
        // LD A,d8
        // 2 8
        // 4 cycles
        Cpu.registerA = getDataByteOne();
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0x3f:
        // CCF
        // 1 4
        // - 0 0 C
        setSubtractFlag(0);
        setHalfCarryFlag(0);

        if (getCarryFlag$$1() > 0) {
          setCarryFlag(0);
        } else {
          setCarryFlag(1);
        }

        return 4;
    }

    return -1;
  }

  function handleOpcode4x(opcode) {
    switch (opcode) {
      case 0x40:
        // LD B,B
        // 1 4
        // Load B into B, Do nothing
        return 4;

      case 0x41:
        // LD B,C
        // 1 4
        Cpu.registerB = Cpu.registerC;
        return 4;

      case 0x42:
        // LD B,D
        // 1 4
        Cpu.registerB = Cpu.registerD;
        return 4;

      case 0x43:
        // LD B,E
        // 1 4
        Cpu.registerB = Cpu.registerE;
        return 4;

      case 0x44:
        // LD B,H
        // 1 4
        Cpu.registerB = Cpu.registerH;
        return 4;

      case 0x45:
        // LD B,L
        // 1 4
        Cpu.registerB = Cpu.registerL;
        return 4;

      case 0x46:
        // LD B,(HL)
        // 1 8
        // 4 cycles
        Cpu.registerB = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        return 4;

      case 0x47:
        // LD B,A
        // 1 4
        Cpu.registerB = Cpu.registerA;
        return 4;

      case 0x48:
        // LD C,B
        // 1 4
        Cpu.registerC = Cpu.registerB;
        return 4;

      case 0x49:
        // LD C,C
        // 1 4
        // Do nothing
        return 4;

      case 0x4a:
        // LD C,D
        // 1 4
        Cpu.registerC = Cpu.registerD;
        return 4;

      case 0x4b:
        // LD C,E
        // 1 4
        Cpu.registerC = Cpu.registerE;
        return 4;

      case 0x4c:
        // LD C,H
        // 1 4
        Cpu.registerC = Cpu.registerH;
        return 4;

      case 0x4d:
        // LD C,L
        // 1 4
        Cpu.registerC = Cpu.registerL;
        return 4;

      case 0x4e:
        // LD C,(HL)
        // 1 8
        // 4 cycles
        Cpu.registerC = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        return 4;

      case 0x4f:
        // LD C,A
        // 1 4
        Cpu.registerC = Cpu.registerA;
        return 4;
    }

    return -1;
  }

  function handleOpcode5x(opcode) {
    switch (opcode) {
      case 0x50:
        // LD D,B
        // 1 4
        Cpu.registerD = Cpu.registerB;
        return 4;

      case 0x51:
        // LD D,C
        // 1 4
        Cpu.registerD = Cpu.registerC;
        return 4;

      case 0x52:
        // LD D,D
        // 1 4
        // Do Nothing
        return 4;

      case 0x53:
        // LD D,E
        // 1 4
        Cpu.registerD = Cpu.registerE;
        return 4;

      case 0x54:
        // LD D,H
        // 1 4
        Cpu.registerD = Cpu.registerH;
        return 4;

      case 0x55:
        // LD D,L
        // 1 4
        Cpu.registerD = Cpu.registerL;
        return 4;

      case 0x56:
        // LD D,(HL)
        // 1 8
        // 4 cycles
        Cpu.registerD = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        return 4;

      case 0x57:
        // LD D,A
        // 1 4
        Cpu.registerD = Cpu.registerA;
        return 4;

      case 0x58:
        // LD E,B
        // 1 4
        Cpu.registerE = Cpu.registerB;
        return 4;

      case 0x59:
        // LD E,C
        // 1 4
        Cpu.registerE = Cpu.registerC;
        return 4;

      case 0x5a:
        // LD E,D
        // 1 4
        Cpu.registerE = Cpu.registerD;
        return 4;

      case 0x5b:
        // LD E,E
        // 1 4
        // Do Nothing
        return 4;

      case 0x5c:
        // LD E,H
        // 1 4
        Cpu.registerE = Cpu.registerH;
        return 4;

      case 0x5d:
        // LD E,L
        // 1 4
        Cpu.registerE = Cpu.registerL;
        return 4;

      case 0x5e:
        // LD E,(HL)
        // 1 8
        // 4 cycles
        Cpu.registerE = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        return 4;

      case 0x5f:
        // LD E,A
        // 1 4
        Cpu.registerE = Cpu.registerA;
        return 4;
    }

    return -1;
  }

  function handleOpcode6x(opcode) {
    switch (opcode) {
      case 0x60:
        // LD H,B
        // 1 4
        Cpu.registerH = Cpu.registerB;
        return 4;

      case 0x61:
        // LD H,C
        // 1 4
        Cpu.registerH = Cpu.registerC;
        return 4;

      case 0x62:
        // LD H,D
        // 1 4
        Cpu.registerH = Cpu.registerD;
        return 4;

      case 0x63:
        // LD H,E
        // 1 4
        Cpu.registerH = Cpu.registerE;
        return 4;

      case 0x64:
        // LD H,H
        // 1 4
        Cpu.registerH = Cpu.registerH;
        return 4;

      case 0x65:
        // LD H,L
        // 1 4
        Cpu.registerH = Cpu.registerL;
        return 4;

      case 0x66:
        // LD H,(HL)
        // 1 8
        // 4 cycles
        Cpu.registerH = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        return 4;

      case 0x67:
        // LD H,A
        // 1 4
        Cpu.registerH = Cpu.registerA;
        return 4;

      case 0x68:
        // LD L,B
        // 1 4
        Cpu.registerL = Cpu.registerB;
        return 4;

      case 0x69:
        // LD L,C
        // 1 4
        Cpu.registerL = Cpu.registerC;
        return 4;

      case 0x6a:
        // LD L,D
        // 1 4
        Cpu.registerL = Cpu.registerD;
        return 4;

      case 0x6b:
        // LD L,E
        // 1 4
        Cpu.registerL = Cpu.registerE;
        return 4;

      case 0x6c:
        // LD L,H
        // 1 4
        Cpu.registerL = Cpu.registerH;
        return 4;

      case 0x6d:
        // LD L,L
        // 1 4
        Cpu.registerL = Cpu.registerL;
        return 4;

      case 0x6e:
        // LD L,(HL)
        // 1 8
        // 4 cycles
        Cpu.registerL = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        return 4;

      case 0x6f:
        // LD L,A
        // 1 4
        Cpu.registerL = Cpu.registerA;
        return 4;
    }

    return -1;
  }

  function handleOpcode7x(opcode) {
    switch (opcode) {
      case 0x70:
        // LD (HL),B
        // 1 8
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), Cpu.registerB);
        return 4;

      case 0x71:
        // LD (HL),C
        // 1 8
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), Cpu.registerC);
        return 4;

      case 0x72:
        // LD (HL),D
        // 1 8
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), Cpu.registerD);
        return 4;

      case 0x73:
        // LD (HL),E
        // 1 8
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), Cpu.registerE);
        return 4;

      case 0x74:
        // LD (HL),H
        // 1 8
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), Cpu.registerH);
        return 4;

      case 0x75:
        // LD (HL),L
        // 1 8
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), Cpu.registerL);
        return 4;

      case 0x76:
        // HALT
        // 1 4
        // Enter CPU very low power mode
        // Meaning Don't Decode anymore opcodes until an interrupt occurs
        // Still need to do timers and things
        // Can't Halt during an HDMA
        // https://gist.github.com/drhelius/3394856
        if (!Memory.isHblankHdmaActive) {
          Cpu.enableHalt();
        }

        return 4;

      case 0x77:
        // LD (HL),A
        // 1 8
        // 4 cycles
        eightBitStoreSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL), Cpu.registerA);
        return 4;

      case 0x78:
        // LD A,B
        // 1 4
        Cpu.registerA = Cpu.registerB;
        return 4;

      case 0x79:
        // LD A,C
        // 1 4
        Cpu.registerA = Cpu.registerC;
        return 4;

      case 0x7a:
        // LD A,D
        // 1 4
        Cpu.registerA = Cpu.registerD;
        return 4;

      case 0x7b:
        // LD A,E
        // 1 4
        Cpu.registerA = Cpu.registerE;
        return 4;

      case 0x7c:
        // LD A,H
        // 1 4
        Cpu.registerA = Cpu.registerH;
        return 4;

      case 0x7d:
        // LD A,L
        // 1 4
        Cpu.registerA = Cpu.registerL;
        return 4;

      case 0x7e:
        // LD A,(HL)
        // 1 8
        // NOTE: Thanks to @binji for catching that this should be 8 cycles, not 4
        // 4 cycles
        Cpu.registerA = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        return 4;

      case 0x7f:
        // LD A,A
        // 1 4
        // Do Nothing
        return 4;
    }

    return -1;
  }

  function handleOpcode8x(opcode) {
    switch (opcode) {
      case 0x80:
        // ADD A,B
        // 1 4
        // Z 0 H C
        addARegister(Cpu.registerB);
        return 4;

      case 0x81:
        // ADD A,C
        // 1 4
        // Z 0 H C
        addARegister(Cpu.registerC);
        return 4;

      case 0x82:
        // ADD A,D
        // 1 4
        // Z 0 H C
        addARegister(Cpu.registerD);
        return 4;

      case 0x83:
        // ADD A,E
        // 1 4
        // Z 0 H C
        addARegister(Cpu.registerE);
        return 4;

      case 0x84:
        // ADD A,H
        // 1 4
        // Z 0 H C
        addARegister(Cpu.registerH);
        return 4;

      case 0x85:
        // ADD A,L
        // 1 4
        // Z 0 H C
        addARegister(Cpu.registerL);
        return 4;

      case 0x86:
        // ADD A,(HL)
        // 1 8
        // Z 0 H C
        // 4 cycles
        var valueAtHL6 = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        addARegister(valueAtHL6);
        return 4;

      case 0x87:
        // ADD A,A
        // 1 4
        // Z 0 H C
        addARegister(Cpu.registerA);
        return 4;

      case 0x88:
        // ADC A,B
        // 1 4
        // Z 0 H C
        addAThroughCarryRegister(Cpu.registerB);
        return 4;

      case 0x89:
        // ADC A,C
        // 1 4
        // Z 0 H C
        addAThroughCarryRegister(Cpu.registerC);
        return 4;

      case 0x8a:
        // ADC A,D
        // 1 4
        // Z 0 H C
        addAThroughCarryRegister(Cpu.registerD);
        return 4;

      case 0x8b:
        // ADC A,E
        // 1 4
        // Z 0 H C
        addAThroughCarryRegister(Cpu.registerE);
        return 4;

      case 0x8c:
        // ADC A,H
        // 1 4
        // Z 0 H C
        addAThroughCarryRegister(Cpu.registerH);
        return 4;

      case 0x8d:
        // ADC A,L
        // 1 4
        // Z 0 H C
        addAThroughCarryRegister(Cpu.registerL);
        return 4;

      case 0x8e:
        // ADC A,(HL)
        // 1 8
        // Z 0 H C
        // 4 cycles
        var valueAtHLE = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        addAThroughCarryRegister(valueAtHLE);
        return 4;

      case 0x8f:
        // ADC A,A
        // 1 4
        // Z 0 H C
        addAThroughCarryRegister(Cpu.registerA);
        return 4;
    }

    return -1;
  }

  function handleOpcode9x(opcode) {
    switch (opcode) {
      case 0x90:
        // SUB B
        // 1  4
        // Z 1 H C
        subARegister(Cpu.registerB);
        return 4;

      case 0x91:
        // SUB C
        // 1  4
        // Z 1 H C
        subARegister(Cpu.registerC);
        return 4;

      case 0x92:
        // SUB D
        // 1  4
        // Z 1 H C
        subARegister(Cpu.registerD);
        return 4;

      case 0x93:
        // SUB E
        // 1  4
        // Z 1 H C
        subARegister(Cpu.registerE);
        return 4;

      case 0x94:
        // SUB H
        // 1  4
        // Z 1 H C
        subARegister(Cpu.registerH);
        return 4;

      case 0x95:
        // SUB L
        // 1  4
        // Z 1 H C
        subARegister(Cpu.registerL);
        return 4;

      case 0x96:
        // SUB (HL)
        // 1  8
        // Z 1 H C
        // 4 cycles
        var valueAtHL6 = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        subARegister(valueAtHL6);
        return 4;

      case 0x97:
        // SUB A
        // 1  4
        // Z 1 H C
        subARegister(Cpu.registerA);
        return 4;

      case 0x98:
        // SBC A,B
        // 1  4
        // Z 1 H C
        subAThroughCarryRegister(Cpu.registerB);
        return 4;

      case 0x99:
        // SBC A,C
        // 1  4
        // Z 1 H C
        subAThroughCarryRegister(Cpu.registerC);
        return 4;

      case 0x9a:
        // SBC A,D
        // 1  4
        // Z 1 H C
        subAThroughCarryRegister(Cpu.registerD);
        return 4;

      case 0x9b:
        // SBC A,E
        // 1  4
        // Z 1 H C
        subAThroughCarryRegister(Cpu.registerE);
        return 4;

      case 0x9c:
        // SBC A,H
        // 1  4
        // Z 1 H C
        subAThroughCarryRegister(Cpu.registerH);
        return 4;

      case 0x9d:
        // SBC A,L
        // 1  4
        // Z 1 H C
        subAThroughCarryRegister(Cpu.registerL);
        return 4;

      case 0x9e:
        // SBC A,(HL)
        // 1  8
        // Z 1 H C
        // 4 cycles
        var valueAtHLE = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        subAThroughCarryRegister(valueAtHLE);
        return 4;

      case 0x9f:
        // SBC A,A
        // 1  4
        // Z 1 H C
        subAThroughCarryRegister(Cpu.registerA);
        return 4;
    }

    return -1;
  }

  function handleOpcodeAx(opcode) {
    switch (opcode) {
      case 0xa0:
        // AND B
        // 1  4
        // Z 0 1 0
        andARegister(Cpu.registerB);
        return 4;

      case 0xa1:
        // AND C
        // 1  4
        // Z 0 1 0
        andARegister(Cpu.registerC);
        return 4;

      case 0xa2:
        // AND D
        // 1  4
        // Z 0 1 0
        andARegister(Cpu.registerD);
        return 4;

      case 0xa3:
        // AND E
        // 1  4
        // Z 0 1 0
        andARegister(Cpu.registerE);
        return 4;

      case 0xa4:
        // AND H
        // 1  4
        // Z 0 1 0
        andARegister(Cpu.registerH);
        return 4;

      case 0xa5:
        // AND L
        // 1  4
        // Z 0 1 0
        andARegister(Cpu.registerL);
        return 4;

      case 0xa6:
        // AND (HL)
        // 1  8
        // Z 0 1 0
        // 4 cycles
        var valueAtHL6 = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        andARegister(valueAtHL6);
        return 4;

      case 0xa7:
        // AND A
        // 1  4
        // Z 0 1 0
        // NOTE: & Yourself, does nothing
        andARegister(Cpu.registerA);
        return 4;

      case 0xa8:
        // XOR B
        // 1  4
        // Z 0 0 0
        xorARegister(Cpu.registerB);
        return 4;

      case 0xa9:
        // XOR C
        // 1  4
        // Z 0 0 0
        xorARegister(Cpu.registerC);
        return 4;

      case 0xaa:
        // XOR D
        // 1  4
        // Z 0 0 0
        xorARegister(Cpu.registerD);
        return 4;

      case 0xab:
        // XOR E
        // 1  4
        // Z 0 0 0
        xorARegister(Cpu.registerE);
        return 4;

      case 0xac:
        // XOR H
        // 1  4
        // Z 0 0 0
        xorARegister(Cpu.registerH);
        return 4;

      case 0xad:
        // XOR L
        // 1  4
        // Z 0 0 0
        xorARegister(Cpu.registerL);
        return 4;

      case 0xae:
        // XOR (HL)
        // 1  8
        // Z 0 0 0
        // 4 cycles
        var valueAtHLE = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        xorARegister(valueAtHLE);
        return 4;

      case 0xaf:
        // XOR A
        // 1  4
        // Z 0 0 0
        xorARegister(Cpu.registerA);
        return 4;
    }

    return -1;
  }

  function handleOpcodeBx(opcode) {
    switch (opcode) {
      case 0xb0:
        // OR B
        // 1  4
        // Z 0 0 0
        orARegister(Cpu.registerB);
        return 4;

      case 0xb1:
        // OR C
        // 1  4
        // Z 0 0 0
        orARegister(Cpu.registerC);
        return 4;

      case 0xb2:
        // OR D
        // 1  4
        // Z 0 0 0
        orARegister(Cpu.registerD);
        return 4;

      case 0xb3:
        // OR E
        // 1  4
        // Z 0 0 0
        orARegister(Cpu.registerE);
        return 4;

      case 0xb4:
        // OR H
        // 1  4
        // Z 0 0 0
        orARegister(Cpu.registerH);
        return 4;

      case 0xb5:
        // OR L
        // 1  4
        // Z 0 0 0
        orARegister(Cpu.registerL);
        return 4;

      case 0xb6:
        // OR (HL)
        // 1  8
        // Z 0 0 0
        // 4 cycles
        var valueAtHL6 = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        orARegister(valueAtHL6);
        return 4;

      case 0xb7:
        // OR A
        // 1  4
        // Z 0 0 0
        orARegister(Cpu.registerA);
        return 4;

      case 0xb8:
        // CP B
        // 1  4
        // Z 1 H C
        cpARegister(Cpu.registerB);
        return 4;

      case 0xb9:
        // CP C
        // 1  4
        // Z 1 H C
        cpARegister(Cpu.registerC);
        return 4;

      case 0xba:
        // CP D
        // 1  4
        // Z 1 H C
        cpARegister(Cpu.registerD);
        return 4;

      case 0xbb:
        // CP E
        // 1  4
        // Z 1 H C
        cpARegister(Cpu.registerE);
        return 4;

      case 0xbc:
        // CP H
        // 1  4
        // Z 1 H C
        cpARegister(Cpu.registerH);
        return 4;

      case 0xbd:
        // CP L
        // 1  4
        // Z 1 H C
        cpARegister(Cpu.registerL);
        return 4;

      case 0xbe:
        // CP (HL)
        // 1  8
        // Z 1 H C
        // 4 cycles
        var valueAtHLE = eightBitLoadSyncCycles(concatenateBytes(Cpu.registerH, Cpu.registerL));
        cpARegister(valueAtHLE);
        return 4;

      case 0xbf:
        // CP A
        // 1  4
        // Z 1 H C
        cpARegister(Cpu.registerA);
        return 4;
    }

    return -1;
  }

  function handleOpcodeCx(opcode) {
    switch (opcode) {
      case 0xc0:
        // RET NZ
        // 1  20/8
        if (getZeroFlag$$1() === 0) {
          // 8 cycles
          Cpu.programCounter = sixteenBitLoadSyncCycles(Cpu.stackPointer);
          Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
          return 12;
        } else {
          return 8;
        }

      case 0xc1:
        // POP BC
        // 1  12
        // 8 cycles
        var registerBC1 = sixteenBitLoadSyncCycles(Cpu.stackPointer);
        Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
        Cpu.registerB = splitHighByte(registerBC1);
        Cpu.registerC = splitLowByte(registerBC1);
        return 4;

      case 0xc2:
        // JP NZ,a16
        // 3  16/12
        if (getZeroFlag$$1() === 0) {
          // 8 cycles
          Cpu.programCounter = getConcatenatedDataByte();
          return 8;
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
          return 12;
        }

      case 0xc3:
        // JP a16
        // 3  16
        // 8 cycles
        Cpu.programCounter = getConcatenatedDataByte();
        return 8;

      case 0xc4:
        // CALL NZ,a16
        // 3  24/12
        if (getZeroFlag$$1() === 0) {
          Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

          sixteenBitStoreSyncCycles(Cpu.stackPointer, u16Portable(Cpu.programCounter + 2)); // 8 cycles

          Cpu.programCounter = getConcatenatedDataByte();
          return 8;
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
          return 12;
        }

      case 0xc5:
        // PUSH BC
        // 1  16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, concatenateBytes(Cpu.registerB, Cpu.registerC));
        return 8;

      case 0xc6:
        // ADD A,d8
        // 2 8
        // Z 0 H C
        // 4 cycles
        addARegister(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xc7:
        // RST 00H
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter);
        Cpu.programCounter = 0x00;
        return 8;

      case 0xc8:
        // RET Z
        // 1  20/8
        if (getZeroFlag$$1() === 1) {
          // 8 cycles
          Cpu.programCounter = sixteenBitLoadSyncCycles(Cpu.stackPointer);
          Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
          return 12;
        } else {
          return 8;
        }

      case 0xc9:
        // RET
        // 1 16
        // 8 cycles
        Cpu.programCounter = sixteenBitLoadSyncCycles(Cpu.stackPointer);
        Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
        return 8;

      case 0xca:
        // JP Z,a16
        // 3 16/12
        if (getZeroFlag$$1() === 1) {
          // 8 cycles
          Cpu.programCounter = getConcatenatedDataByte();
          return 8;
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
          return 12;
        }

      case 0xcb:
        // PREFIX CB
        // 1  4
        // 4 cycles
        var cbCycles = handleCbOpcode(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return cbCycles;

      case 0xcc:
        // CALL Z,a16
        // 3  24/12
        if (getZeroFlag$$1() === 1) {
          Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

          sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter + 2); // 8 cycles

          Cpu.programCounter = getConcatenatedDataByte();
          return 8;
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
          return 12;
        }

      case 0xcd:
        // CALL a16
        // 3  24
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, u16Portable(Cpu.programCounter + 2)); // 8 cycles

        Cpu.programCounter = getConcatenatedDataByte();
        return 8;

      case 0xce:
        // ADC A,d8
        // 2  8
        // Z 0 H C
        // 4 cycles
        addAThroughCarryRegister(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xcf:
        // RST 08H
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter);
        Cpu.programCounter = 0x08;
        return 8;
    }

    return -1;
  }

  function handleOpcodeDx(opcode) {
    switch (opcode) {
      case 0xd0:
        // RET NC
        // 1  20/8
        if (getCarryFlag$$1() === 0) {
          // 8 cycles
          Cpu.programCounter = sixteenBitLoadSyncCycles(Cpu.stackPointer);
          Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
          return 12;
        } else {
          return 8;
        }

      case 0xd1:
        // POP DE
        // 1  12
        // 8 cycles
        var registerDE1 = sixteenBitLoadSyncCycles(Cpu.stackPointer);
        Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
        Cpu.registerD = splitHighByte(registerDE1);
        Cpu.registerE = splitLowByte(registerDE1);
        return 4;

      case 0xd2:
        // JP NC,a16
        // 3  16/12
        if (getCarryFlag$$1() === 0) {
          // 8 cycles
          Cpu.programCounter = getConcatenatedDataByte();
          return 8;
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
          return 12;
        }

      /* No Opcode for: 0xD3 */

      case 0xd4:
        // CALL NC,a16
        // 3  24/12
        if (getCarryFlag$$1() === 0) {
          Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

          sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter + 2); // 8 cycles

          Cpu.programCounter = getConcatenatedDataByte();
          return 8;
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
          return 12;
        }

      case 0xd5:
        // PUSH DE
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, concatenateBytes(Cpu.registerD, Cpu.registerE));
        return 8;

      case 0xd6:
        // SUB d8
        // 2  8
        // Z 1 H C
        // 4 cycles
        subARegister(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xd7:
        // RST 10H
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter);
        Cpu.programCounter = 0x10;
        return 8;

      case 0xd8:
        // RET C
        // 1  20/8
        if (getCarryFlag$$1() === 1) {
          // 8 cycles
          Cpu.programCounter = sixteenBitLoadSyncCycles(Cpu.stackPointer);
          Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
          return 12;
        } else {
          return 8;
        }

      case 0xd9:
        // RETI
        // 1  16
        // 8 cycles
        Cpu.programCounter = sixteenBitLoadSyncCycles(Cpu.stackPointer); // Enable interrupts

        setInterrupts(true);
        Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
        return 8;

      case 0xda:
        // JP C,a16
        // 3 16/12
        if (getCarryFlag$$1() === 1) {
          // 8 cycles
          Cpu.programCounter = getConcatenatedDataByte();
          return 8;
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
          return 12;
        }

      /* No Opcode for: 0xDB */

      case 0xdc:
        // CALL C,a16
        // 3  24/12
        if (getCarryFlag$$1() === 1) {
          Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

          sixteenBitStoreSyncCycles(Cpu.stackPointer, u16Portable(Cpu.programCounter + 2)); // 8 cycles

          Cpu.programCounter = getConcatenatedDataByte();
          return 8;
        } else {
          Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
          return 12;
        }

      /* No Opcode for: 0xDD */

      case 0xde:
        // SBC A,d8
        // 2 8
        // Z 1 H C
        // 4 cycles
        subAThroughCarryRegister(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xdf:
        // RST 18H
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter);
        Cpu.programCounter = 0x18;
        return 8;
    }

    return -1;
  }

  function handleOpcodeEx(opcode) {
    switch (opcode) {
      case 0xe0:
        // LDH (a8),A
        // 2  12
        // Store value in high RAM ($FF00 + a8)
        // 4 cycles
        var largeDataByteOne = getDataByteOne(); // 4 cycles

        eightBitStoreSyncCycles(0xff00 + largeDataByteOne, Cpu.registerA);
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xe1:
        // POP HL
        // 1  12
        // 8 cycles
        var registerHL1 = sixteenBitLoadSyncCycles(Cpu.stackPointer);
        Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
        Cpu.registerH = splitHighByte(registerHL1);
        Cpu.registerL = splitLowByte(registerHL1);
        return 4;

      case 0xe2:
        // LD (C),A
        // 1  8
        // NOTE: Table says 2 Program counter,
        // But stepping through the boot rom, should be one
        // Also should change 0xF2
        // Store value in high RAM ($FF00 + register c)
        // 4 cycles
        eightBitStoreSyncCycles(0xff00 + Cpu.registerC, Cpu.registerA);
        return 4;

      /* No Opcode for: 0xE3, 0xE4 */

      case 0xe5:
        // PUSH HL
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, concatenateBytes(Cpu.registerH, Cpu.registerL));
        return 8;

      case 0xe6:
        // AND d8
        // 2  8
        // Z 0 1 0
        // 4 cycles
        andARegister(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xe7:
        // RST 20H
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter);
        Cpu.programCounter = 0x20;
        return 8;

      case 0xe8:
        // ADD SP, r8
        // 2 16
        // 0 0 H C
        // NOTE: Discoved dataByte is signed
        // 4 cycles
        var signedDataByteOne = i8Portable(getDataByteOne());
        checkAndSetSixteenBitFlagsAddOverflow(Cpu.stackPointer, signedDataByteOne, true);
        Cpu.stackPointer = u16Portable(Cpu.stackPointer + signedDataByteOne);
        setZeroFlag$$1(0);
        setSubtractFlag(0);
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 12;

      case 0xe9:
        // JP HL
        // 1 4
        Cpu.programCounter = concatenateBytes(Cpu.registerH, Cpu.registerL);
        return 4;

      case 0xea:
        // LD (a16),A
        // 3 16
        // 12 cycles, 4 from store, 8 from concatenated data byte
        eightBitStoreSyncCycles(getConcatenatedDataByte(), Cpu.registerA);
        Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
        return 4;

      /* No Opcode for: 0xEB, 0xEC, 0xED */

      case 0xee:
        // XOR d8
        // 2 8
        // Z 0 0 0
        // 4 cycles
        xorARegister(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xef:
        // RST 28H
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter);
        Cpu.programCounter = 0x28;
        return 8;
    }

    return -1;
  }

  function handleOpcodeFx(opcode) {
    switch (opcode) {
      case 0xf0:
        // LDH A,(a8)
        // 2 12
        // 4 cycles
        var largeDataByteOne = getDataByteOne(); // 4 cycles

        Cpu.registerA = u8Portable(eightBitLoadSyncCycles(0xff00 + largeDataByteOne));
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xf1:
        // POP AF
        // 1 12
        // Z N H C (But No work require, flags are already set)
        // 8 cycles
        var registerAF1 = sixteenBitLoadSyncCycles(Cpu.stackPointer);
        Cpu.stackPointer = u16Portable(Cpu.stackPointer + 2);
        Cpu.registerA = splitHighByte(registerAF1);
        Cpu.registerF = splitLowByte(registerAF1);
        return 4;

      case 0xf2:
        // LD A,(C)
        // 1 8
        // 4 cycles
        Cpu.registerA = u8Portable(eightBitLoadSyncCycles(0xff00 + Cpu.registerC));
        return 4;

      case 0xf3:
        // DI
        // 1 4
        setInterrupts(false);
        return 4;

      /* No Opcode for: 0xF4 */

      case 0xf5:
        // PUSH AF
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, concatenateBytes(Cpu.registerA, Cpu.registerF));
        return 8;

      case 0xf6:
        // OR d8
        // 2 8
        // Z 0 0 0
        // 4 cycles
        orARegister(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xf7:
        // RST 30H
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter);
        Cpu.programCounter = 0x30;
        return 8;

      case 0xf8:
        // LD HL,SP+r8
        // 2 12
        // 0 0 H C
        // NOTE: Discoved dataByte is signed
        // 4 cycles
        var signedDataByteOne = i8Portable(getDataByteOne()); // First, let's handle flags

        setZeroFlag$$1(0);
        setSubtractFlag(0);
        checkAndSetSixteenBitFlagsAddOverflow(Cpu.stackPointer, signedDataByteOne, true);
        var registerHL = u16Portable(Cpu.stackPointer + signedDataByteOne);
        Cpu.registerH = splitHighByte(registerHL);
        Cpu.registerL = splitLowByte(registerHL);
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 8;

      case 0xf9:
        // LD SP,HL
        // 1 8
        Cpu.stackPointer = concatenateBytes(Cpu.registerH, Cpu.registerL);
        return 8;

      case 0xfa:
        // LD A,(a16)
        // 3 16
        // 12 cycles, 4 from load, 8 from concatenated data byte
        Cpu.registerA = eightBitLoadSyncCycles(getConcatenatedDataByte());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 2);
        return 4;

      case 0xfb:
        // EI
        // 1 4
        setInterrupts(true);
        return 4;

      /* No Opcode for: 0xFC, 0xFD */

      case 0xfe:
        // CP d8
        // 2 8
        // Z 1 H C
        // 4 cycles
        cpARegister(getDataByteOne());
        Cpu.programCounter = u16Portable(Cpu.programCounter + 1);
        return 4;

      case 0xff:
        // RST 38H
        // 1 16
        Cpu.stackPointer = u16Portable(Cpu.stackPointer - 2); // 8 cycles

        sixteenBitStoreSyncCycles(Cpu.stackPointer, Cpu.programCounter);
        Cpu.programCounter = 0x38;
        return 8;
    }

    return -1;
  } // NOTE: Code is very verbose, and will have some copy pasta'd lines.
  // Syncing and Tracking executed cycles


  var Cycles =
  /** @class */
  function () {
    function Cycles() {} // An even number below the max 32 bit integer


    Cycles.cyclesPerCycleSet = 2000000000;
    Cycles.cycleSets = 0;
    Cycles.cycles = 0;
    return Cycles;
  }();

  function getCyclesPerCycleSet() {
    return Cycles.cyclesPerCycleSet;
  }

  function getCycleSets() {
    return Cycles.cycleSets;
  }

  function getCycles() {
    return Cycles.cycles;
  }

  function trackCyclesRan(numberOfCycles) {
    Cycles.cycles += numberOfCycles;

    if (Cycles.cycles >= Cycles.cyclesPerCycleSet) {
      Cycles.cycleSets += 1;
      Cycles.cycles -= Cycles.cyclesPerCycleSet;
    }
  }

  function resetCycles() {
    Cycles.cyclesPerCycleSet = 2000000000;
    Cycles.cycleSets = 0;
    Cycles.cycles = 0;
  } // Sync other GB Components with the number of cycles


  function syncCycles(numberOfCycles) {
    // Check if we did a DMA TRansfer, if we did add the cycles
    if (Memory.DMACycles > 0) {
      numberOfCycles += Memory.DMACycles;
      Memory.DMACycles = 0;
    } // Finally, Add our number of cycles to the CPU Cycles


    Cpu.currentCycles += numberOfCycles; // Check other Gameboy components

    if (!Cpu.isStopped) {
      if (Config.graphicsBatchProcessing) {
        // Need to do this, since a lot of things depend on the scanline
        // Batch processing will simply return if the number of cycles is too low
        Graphics.currentCycles += numberOfCycles;
        batchProcessGraphics();
      } else {
        updateGraphics(numberOfCycles);
      }

      if (Config.audioBatchProcessing) {
        Sound.currentCycles += numberOfCycles;
      } else {
        updateSound(numberOfCycles);
      }
    }

    if (Config.timersBatchProcessing) {
      // Batch processing will simply return if the number of cycles is too low
      Timers.currentCycles += numberOfCycles;
      batchProcessTimers();
    } else {
      updateTimers(numberOfCycles);
    }

    trackCyclesRan(numberOfCycles);
  } // Functions involving executing/running the emulator after initializtion


  var Execute =
  /** @class */
  function () {
    function Execute() {} // An even number bewlow the max 32 bit integer


    Execute.stepsPerStepSet = 2000000000;
    Execute.stepSets = 0;
    Execute.steps = 0;
    return Execute;
  }();

  function getStepsPerStepSet() {
    return Execute.stepsPerStepSet;
  }

  function getStepSets() {
    return Execute.stepSets;
  }

  function getSteps() {
    return Execute.steps;
  }

  function trackStepsRan(steps) {
    Execute.steps += steps;

    if (Execute.steps >= Execute.stepsPerStepSet) {
      Execute.stepSets += 1;
      Execute.steps -= Execute.stepsPerStepSet;
    }
  }

  function resetSteps() {
    Execute.stepsPerStepSet = 2000000000;
    Execute.stepSets = 0;
    Execute.steps = 0;
  } // // Public funciton to run frames until,
  // the specified number of frames have run or error.
  // Return values:
  // -1 = error
  // 0 = render a frame


  function executeMultipleFrames(numberOfFrames) {
    var frameResponse = 0;
    var framesRun = 0;

    while (framesRun < numberOfFrames && frameResponse >= 0) {
      frameResponse = executeFrame();
      framesRun += 1;
    }

    if (frameResponse < 0) {
      return frameResponse;
    }

    return 0;
  } // Public funciton to run opcodes until,
  // a frame is ready, or error.
  // Return values:
  // -1 = error
  // 0 = render a frame


  function executeFrame() {
    return executeUntilCondition(true, -1, -1);
  } // Public Function to run opcodes until,
  // a frame is ready, audio bufer is filled, or error
  // -1 = error
  // 0 = render a frame
  // 1 = output audio


  function executeFrameAndCheckAudio(maxAudioBuffer) {
    if (maxAudioBuffer === void 0) {
      maxAudioBuffer = 0;
    }

    return executeUntilCondition(true, maxAudioBuffer, -1);
  } // Public function to run opcodes until,
  // a breakpoint is reached
  // -1 = error
  // 0 = frame executed
  // 1 = reached breakpoint


  function executeFrameUntilBreakpoint(breakpoint) {
    var response = executeUntilCondition(true, -1, breakpoint); // Break point response will be 1 in our case

    if (response === 2) {
      return 1;
    }

    return response;
  } // Base function that executes steps, and checks conditions
  // Return values:
  // -1 = error
  // 0 = render a frame
  // 1 = audio buffer reached
  // 2 = reached breakpoint


  function executeUntilCondition(checkMaxCyclesPerFrame, maxAudioBuffer, breakpoint) {
    if (checkMaxCyclesPerFrame === void 0) {
      checkMaxCyclesPerFrame = true;
    }

    if (maxAudioBuffer === void 0) {
      maxAudioBuffer = -1;
    }

    if (breakpoint === void 0) {
      breakpoint = -1;
    } // Common tracking variables


    var numberOfCycles = -1;
    var audioBufferSize = 1024;

    if (maxAudioBuffer > 0) {
      audioBufferSize = maxAudioBuffer;
    } else if (maxAudioBuffer < 0) {
      audioBufferSize = -1;
    }

    var errorCondition = false;
    var frameCondition = false;
    var audioBufferCondition = false;
    var breakpointCondition = false;

    while (!errorCondition && !frameCondition && !audioBufferCondition && !breakpointCondition) {
      numberOfCycles = executeStep(); // Error Condition

      if (numberOfCycles < 0) {
        errorCondition = true;
      } else if (Cpu.currentCycles >= Cpu.MAX_CYCLES_PER_FRAME()) {
        frameCondition = true;
      } else if (audioBufferSize > -1 && getNumberOfSamplesInAudioBuffer() >= audioBufferSize) {
        audioBufferCondition = true;
      } else if (breakpoint > -1 && Cpu.programCounter === breakpoint) {
        breakpointCondition = true;
      }
    } // Find our exit reason


    if (frameCondition) {
      // Render a frame
      // Reset our currentCycles
      Cpu.currentCycles -= Cpu.MAX_CYCLES_PER_FRAME();
      return 0;
    }

    if (audioBufferCondition) {
      return 1;
    }

    if (breakpointCondition) {
      // breakpoint
      return 2;
    } // TODO: Boot ROM handling
    // There was an error, return -1, and push the program counter back to grab the error opcode


    Cpu.programCounter = u16Portable(Cpu.programCounter - 1);
    return -1;
  } // Function to execute an opcode, and update other gameboy hardware.
  // http://www.codeslinger.co.uk/pages/projects/gameboy/beginning.html


  function executeStep() {
    // Set has started to 1 since we ran a emulation step
    setHasCoreStarted(true); // Check if we are in the halt bug

    if (Cpu.isHaltBug) {
      // Need to not increment program counter,
      // thus, running the next opcode twice
      // E.g
      // 0x76 - halt
      // FA 34 12 - ld a,(1234)
      // Becomes
      // FA FA 34 ld a,(34FA)
      // 12 ld (de),a
      var haltBugOpcode = eightBitLoadFromGBMemory(Cpu.programCounter); // Execute opcode will handle the actual PC behavior

      var haltBugCycles = executeOpcode$$1(haltBugOpcode);
      syncCycles(haltBugCycles);
      Cpu.exitHaltAndStop();
    } // Interrupts should be handled before reading an opcode
    // https://github.com/Gekkio/mooneye-gb/blob/master/docs/accuracy.markdown#what-is-the-exact-timing-of-cpu-servicing-an-interrupt


    var interruptCycles = checkInterrupts();

    if (interruptCycles > 0) {
      syncCycles(interruptCycles);
    } // Get the opcode, and additional bytes to be handled
    // Number of cycles defaults to 4, because while we're halted, we run 4 cycles (according to matt :))


    var numberOfCycles = 4;
    var opcode = 0; // If we are not halted or stopped, run instructions
    // If we are halted, this will be skipped and just sync the 4 cycles

    if (!Cpu.isHalted() && !Cpu.isStopped) {
      opcode = eightBitLoadFromGBMemory(Cpu.programCounter);
      numberOfCycles = executeOpcode$$1(opcode);
    } // blarggFixes, don't allow register F to have the bottom nibble


    Cpu.registerF = Cpu.registerF & 0xf0; // Check if there was an error decoding the opcode

    if (numberOfCycles <= 0) {
      return numberOfCycles;
    } // Sync other GB Components with the number of cycles


    syncCycles(numberOfCycles); // Update our steps

    trackStepsRan(1);
    return numberOfCycles;
  } // Imports
  // Grow our memory to the specified size


  if (memory.size() < WASMBOY_WASM_PAGES) {
    memory.grow(WASMBOY_WASM_PAGES - memory.size());
  } // Function to track if the core has started


  var hasStarted = false;

  function setHasCoreStarted(value) {
    hasStarted = value;
  }

  function hasCoreStarted() {
    if (hasStarted) {
      return 1;
    }

    return 0;
  } // Function to configure & initialize wasmboy


  function config(enableBootRom, useGbcWhenAvailable, audioBatchProcessing, graphicsBatchProcessing, timersBatchProcessing, graphicsDisableScanlineRendering, audioAccumulateSamples, tileRendering, tileCaching) {
    // TODO: depending on the boot rom, initialization may be different
    // From: http://www.codeslinger.co.uk/pages/projects/gameboy/hardware.html
    // All values default to zero in memory, so not setting them yet
    // log('initializing (includeBootRom=$0)', 1, enableBootRom);
    if (enableBootRom > 0) {
      Config.enableBootRom = true;
    } else {
      Config.enableBootRom = false;
    }

    if (useGbcWhenAvailable > 0) {
      Config.useGbcWhenAvailable = true;
    } else {
      Config.useGbcWhenAvailable = false;
    }

    if (audioBatchProcessing > 0) {
      Config.audioBatchProcessing = true;
    } else {
      Config.audioBatchProcessing = false;
    }

    if (graphicsBatchProcessing > 0) {
      Config.graphicsBatchProcessing = true;
    } else {
      Config.graphicsBatchProcessing = false;
    }

    if (timersBatchProcessing > 0) {
      Config.timersBatchProcessing = true;
    } else {
      Config.timersBatchProcessing = false;
    }

    if (graphicsDisableScanlineRendering > 0) {
      Config.graphicsDisableScanlineRendering = true;
    } else {
      Config.graphicsDisableScanlineRendering = false;
    }

    if (audioAccumulateSamples > 0) {
      Config.audioAccumulateSamples = true;
    } else {
      Config.audioAccumulateSamples = false;
    }

    if (tileRendering > 0) {
      Config.tileRendering = true;
    } else {
      Config.tileRendering = false;
    }

    if (tileCaching > 0) {
      Config.tileCaching = true;
    } else {
      Config.tileCaching = false;
    }

    initialize();
  } // Function to initiialize the core


  function initialize() {
    // Initialization variables from BGB
    // First, try to switch to Gameboy Color Mode
    // Get our GBC support from the cartridge header
    // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header
    var gbcType = eightBitLoadFromGBMemory(0x0143); // Detecting GBC http://bgb.bircd.org/pandocs.htm#cgbregisters

    if (gbcType === 0xc0 || Config.useGbcWhenAvailable && gbcType === 0x80) {
      Cpu.GBCEnabled = true;
    } else {
      Cpu.GBCEnabled = false;
    } // Call our respective classes intialization


    initializeCpu();
    initializeCartridge();
    initializeDma();
    initializeGraphics();
    initializePalette();
    initializeSound();
    initializeInterrupts();
    initializeTimers(); // Various Other Registers

    if (Cpu.GBCEnabled) {
      // Various other registers
      eightBitStoreIntoGBMemory(0xff70, 0xf8);
      eightBitStoreIntoGBMemory(0xff4f, 0xfe);
      eightBitStoreIntoGBMemory(0xff4d, 0x7e);
      eightBitStoreIntoGBMemory(0xff00, 0xcf); // FF01 = 0x00

      eightBitStoreIntoGBMemory(0xff02, 0x7c);
      eightBitStoreIntoGBMemory(0xff0f, 0xe1); // 0xFFFF = 0x00
      // Undocumented from Pandocs

      eightBitStoreIntoGBMemory(0xff6c, 0xfe);
      eightBitStoreIntoGBMemory(0xff75, 0x8f);
    } else {
      eightBitStoreIntoGBMemory(0xff70, 0xff);
      eightBitStoreIntoGBMemory(0xff4f, 0xff);
      eightBitStoreIntoGBMemory(0xff4d, 0xff);
      eightBitStoreIntoGBMemory(0xff00, 0xcf); // FF01 = 0x00

      eightBitStoreIntoGBMemory(0xff02, 0x7e);
      eightBitStoreIntoGBMemory(0xff0f, 0xe1); // 0xFFFF = 0x00
    } // Reset hasStarted, since we are now reset


    setHasCoreStarted(false); // Reset our cycles ran

    resetCycles();
    resetSteps();
  } // Function to return an address to store into save state memory
  // this is to regulate our 20 slots
  // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing


  function getSaveStateMemoryOffset(offset, saveStateSlot) {
    // 50 bytes per save state memory partiton sli32
    return WASMBOY_STATE_LOCATION + offset + 50 * saveStateSlot;
  } // Function to save state to memory for all of our classes


  function saveState() {
    Cpu.saveState();
    Graphics.saveState();
    Interrupts.saveState();
    Joypad.saveState();
    Memory.saveState();
    Timers.saveState();
    Sound.saveState();
    Channel1.saveState();
    Channel2.saveState();
    Channel3.saveState();
    Channel4.saveState(); // Reset hasStarted, since we are now reset

    setHasCoreStarted(false); // Don't want to reset cycles here, as this does not reset the emulator
  } // Function to load state from memory for all of our classes


  function loadState() {
    Cpu.loadState();
    Graphics.loadState();
    Interrupts.loadState();
    Joypad.loadState();
    Memory.loadState();
    Timers.loadState();
    Sound.loadState();
    Channel1.loadState();
    Channel2.loadState();
    Channel3.loadState();
    Channel4.loadState(); // Reset hasStarted, since we are now reset

    setHasCoreStarted(false); // Reset our cycles ran

    resetCycles();
    resetSteps();
  } // Functions to get information about the emulator for debugging purposes


  function getRegisterA() {
    return Cpu.registerA;
  }

  function getRegisterB() {
    return Cpu.registerB;
  }

  function getRegisterC() {
    return Cpu.registerC;
  }

  function getRegisterD() {
    return Cpu.registerD;
  }

  function getRegisterE() {
    return Cpu.registerE;
  }

  function getRegisterH() {
    return Cpu.registerH;
  }

  function getRegisterL() {
    return Cpu.registerL;
  }

  function getRegisterF() {
    return Cpu.registerF;
  }

  function getProgramCounter() {
    return Cpu.programCounter;
  }

  function getStackPointer() {
    return Cpu.stackPointer;
  }

  function getOpcodeAtProgramCounter() {
    return eightBitLoadFromGBMemory(Cpu.programCounter);
  } // Functions to debug graphical output
  // Some Simple internal getters


  function getLY() {
    return Graphics.scanlineRegister;
  }

  function drawBackgroundMapToWasmMemory(showColor) {
    // http://www.codeslinger.co.uk/pages/projects/gameboy/graphics.html
    // Bit 7 - LCD Display Enable (0=Off, 1=On)
    // Bit 6 - Window Tile Map Display Select (0=9800-9BFF, 1=9C00-9FFF)
    // Bit 5 - Window Display Enable (0=Off, 1=On)
    // Bit 4 - BG & Window Tile Data Select (0=8800-97FF, 1=8000-8FFF)
    // Bit 3 - BG Tile Map Display Select (0=9800-9BFF, 1=9C00-9FFF)
    // Bit 2 - OBJ (Sprite) Size (0=8x8, 1=8x16)
    // Bit 1 - OBJ (Sprite) Display Enable (0=Off, 1=On)
    // Bit 0 - BG Display (for CGB see below) (0=Off, 1=On)
    if (showColor === void 0) {
      showColor = 0;
    } // Get our seleted tile data memory location


    var tileDataMemoryLocation = Graphics.memoryLocationTileDataSelectZeroStart;

    if (Lcd.bgWindowTileDataSelect) {
      tileDataMemoryLocation = Graphics.memoryLocationTileDataSelectOneStart;
    }

    var tileMapMemoryLocation = Graphics.memoryLocationTileMapSelectZeroStart;

    if (Lcd.bgTileMapDisplaySelect) {
      tileMapMemoryLocation = Graphics.memoryLocationTileMapSelectOneStart;
    }

    for (var y = 0; y < 256; y++) {
      for (var x = 0; x < 256; x++) {
        // Get our current Y
        var pixelYPositionInMap = y; // Get our Current X position of our pixel on the on the 160x144 camera
        // this is done by getting the current scroll X position,
        // and adding it do what X Value the scanline is drawing on the camera.

        var pixelXPositionInMap = x; // Divide our pixel position by 8 to get our tile.
        // Since, there are 256x256 pixels, and 32x32 tiles.
        // 256 / 8 = 32.
        // Also, bitshifting by 3, do do a division by 8
        // Need to use u16s, as they will be used to compute an address, which will cause weird errors and overflows

        var tileXPositionInMap = pixelXPositionInMap >> 3;
        var tileYPositionInMap = pixelYPositionInMap >> 3; // Get our tile address on the tileMap
        // NOTE: (tileMap represents where each tile is displayed on the screen)
        // NOTE: (tile map represents the entire map, now just what is within the "camera")
        // For instance, if we have y pixel 144. 144 / 8 = 18. 18 * 32 = line address in map memory.
        // And we have x pixel 160. 160 / 8 = 20.
        // * 32, because remember, this is NOT only for the camera, the actual map is 32x32. Therefore, the next tile line of the map, is 32 byte offset.
        // Think like indexing a 2d array, as a 1d array and it make sense :)

        var tileMapAddress = tileMapMemoryLocation + tileYPositionInMap * 32 + tileXPositionInMap; // Get the tile Id on the Tile Map

        var tileIdFromTileMap = loadFromVramBank(tileMapAddress, 0); // Now get our tileDataAddress for the corresponding tileID we found in the map
        // Read the comments in _getTileDataAddress() to see what's going on.
        // tl;dr if we had the tile map of "a b c d", and wanted tileId 2.
        // This funcitons returns the start of memory locaiton for the tile 'c'.

        var tileDataAddress = getTileDataAddress(tileDataMemoryLocation, tileIdFromTileMap); // Now we can process the the individual bytes that represent the pixel on a tile
        // Get the y pixel of the 8 by 8 tile.
        // Simply modulo the scanline.
        // For instance, let's say we are printing the first line of pixels on our camera,
        // And the first line of pixels on our tile.
        // yPixel = 1. 1 % 8 = 1.
        // And for the last line
        // yPixel = 144. 144 % 8 = 0.
        // 0 Represents last line of pixels in a tile, 1 represents first. 1 2 3 4 5 6 7 0.
        // Because remember, we are counting lines on the display NOT including zero

        var pixelYInTile = pixelYPositionInMap % 8; // Same logic as pixelYInTile.
        // However, We need to reverse our byte,
        // As pixel 0 is on byte 7, and pixel 1 is on byte 6, etc...
        // Therefore, is pixelX was 2, then really is need to be 5
        // So 2 - 7 = -5, * 1 = 5
        // Or to simplify, 7 - 2 = 5 haha!

        var pixelXInTile = pixelXPositionInMap % 8;
        pixelXInTile = 7 - pixelXInTile; // Get the GB Map Attributes
        // Bit 0-2  Background Palette number  (BGP0-7)
        // Bit 3    Tile VRAM Bank number      (0=Bank 0, 1=Bank 1)
        // Bit 4    Not used
        // Bit 5    Horizontal Flip            (0=Normal, 1=Mirror horizontally)
        // Bit 6    Vertical Flip              (0=Normal, 1=Mirror vertically)
        // Bit 7    BG-to-OAM Priority         (0=Use OAM priority bit, 1=BG Priority)

        var bgMapAttributes = 0;

        if (Cpu.GBCEnabled && showColor > 0) {
          bgMapAttributes = loadFromVramBank(tileMapAddress, 1);
        }

        if (checkBitOnByte(6, bgMapAttributes)) {
          // We are mirroring the tile, therefore, we need to opposite byte
          // So if our pizel was 0 our of 8, it wild become 7 :)
          // TODO: This may be wrong :p
          pixelYInTile = 7 - pixelYInTile;
        } // Remember to represent a single line of 8 pixels on a tile, we need two bytes.
        // Therefore, we need to times our modulo by 2, to get the correct line of pixels on the tile.
        // But we need to load the time from a specific Vram bank


        var vramBankId = 0;

        if (checkBitOnByte(3, bgMapAttributes)) {
          vramBankId = 1;
        } // Remember to represent a single line of 8 pixels on a tile, we need two bytes.
        // Therefore, we need to times our modulo by 2, to get the correct line of pixels on the tile.
        // Again, think like you had to map a 2d array as a 1d.


        var byteOneForLineOfTilePixels = loadFromVramBank(tileDataAddress + pixelYInTile * 2, vramBankId);
        var byteTwoForLineOfTilePixels = loadFromVramBank(tileDataAddress + pixelYInTile * 2 + 1, vramBankId); // Now we can get the color for that pixel
        // Colors are represented by getting X position of ByteTwo, and X positon of Byte One
        // To Get the color Id.
        // For example, the result of the color id is 0000 00[xPixelByteTwo][xPixelByteOne]
        // See: How to draw a tile/sprite from memory: http://www.codeslinger.co.uk/pages/projects/gameboy/graphics.html

        var paletteColorId = 0;

        if (checkBitOnByte(pixelXInTile, byteTwoForLineOfTilePixels)) {
          // Byte one represents the second bit in our color id, so bit shift
          paletteColorId += 1;
          paletteColorId = paletteColorId << 1;
        }

        if (checkBitOnByte(pixelXInTile, byteOneForLineOfTilePixels)) {
          paletteColorId += 1;
        } // FINALLY, RENDER THAT PIXEL!


        var pixelStart = (y * 256 + x) * 3;

        if (Cpu.GBCEnabled && showColor > 0) {
          // Finally lets add some, C O L O R
          // Want the botom 3 bits
          var bgPalette = bgMapAttributes & 0x07; // Call the helper function to grab the correct color from the palette

          var rgbColorPalette = getRgbColorFromPalette(bgPalette, paletteColorId, false); // Split off into red green and blue

          var red = getColorComponentFromRgb(0, rgbColorPalette);
          var green = getColorComponentFromRgb(1, rgbColorPalette);
          var blue = getColorComponentFromRgb(2, rgbColorPalette);
          var offset = BACKGROUND_MAP_LOCATION + pixelStart;
          store(offset, red);
          store(offset + 1, green);
          store(offset + 2, blue);
        } else {
          // Only rendering camera for now, so coordinates are for the camera.
          // Get the rgb value for the color Id, will be repeated into R, G, B
          var monochromeColor = getMonochromeColorFromPalette(paletteColorId, Graphics.memoryLocationBackgroundPalette);

          for (var i = 0; i < 3; i++) {
            var offset = BACKGROUND_MAP_LOCATION + pixelStart + i;
            store(offset, monochromeColor);
          }
        }
      }
    }
  }

  function drawTileDataToWasmMemory() {
    for (var tileDataMapGridY = 0; tileDataMapGridY < 0x17; tileDataMapGridY++) {
      for (var tileDataMapGridX = 0; tileDataMapGridX < 0x1f; tileDataMapGridX++) {
        // Get Our VramBankID
        var vramBankId = 0;

        if (tileDataMapGridX > 0x0f) {
          vramBankId = 1;
        } // Get our tile ID


        var tileId = tileDataMapGridY;

        if (tileDataMapGridY > 0x0f) {
          tileId -= 0x0f;
        }

        tileId = tileId << 4;

        if (tileDataMapGridX > 0x0f) {
          tileId = tileId + (tileDataMapGridX - 0x0f);
        } else {
          tileId = tileId + tileDataMapGridX;
        } // Finally get our tile Data location


        var tileDataMemoryLocation = Graphics.memoryLocationTileDataSelectOneStart;

        if (tileDataMapGridY > 0x0f) {
          tileDataMemoryLocation = Graphics.memoryLocationTileDataSelectZeroStart;
        } // Draw each Y line of the tile


        for (var tileLineY = 0; tileLineY < 8; tileLineY++) {
          drawPixelsFromLineOfTile(tileId, tileDataMemoryLocation, vramBankId, 0, 7, tileLineY, tileDataMapGridX * 8, tileDataMapGridY * 8 + tileLineY, 0x1f * 8, TILE_DATA_LOCATION, true);
        }
      }
    }
  }

  function getDIV() {
    return Timers.dividerRegister;
  }

  function getTIMA() {
    return Timers.timerCounter;
  }

  function getTMA() {
    return Timers.timerModulo;
  }

  function getTAC() {
    var response = Timers.timerInputClock;

    if (Timers.timerEnabled) {
      response = setBitOnByte(2, response);
    }

    return response;
  } // These are legacy aliases for the original WasmBoy api
  // WasmBoy


  var wasmMemorySize = WASMBOY_MEMORY_SIZE;
  var wasmBoyInternalStateLocation = WASMBOY_STATE_LOCATION;
  var wasmBoyInternalStateSize = WASMBOY_STATE_SIZE; // Gameboy

  var gameBoyInternalMemoryLocation = GAMEBOY_INTERNAL_MEMORY_LOCATION;
  var gameBoyInternalMemorySize = GAMEBOY_INTERNAL_MEMORY_SIZE; // Video output

  var videoOutputLocation = GRAPHICS_OUTPUT_LOCATION;
  var gameboyColorPaletteLocation = GBC_PALETTE_LOCATION;
  var gameboyColorPaletteSize = GBC_PALETTE_SIZE;
  var frameInProgressVideoOutputLocation = FRAME_LOCATION;
  var backgroundMapLocation = BACKGROUND_MAP_LOCATION;
  var tileDataMap = TILE_DATA_LOCATION; // Sound output

  var soundOutputLocation = AUDIO_BUFFER_LOCATION; // Game Cartridge

  var gameRamBanksLocation = CARTRIDGE_RAM_LOCATION; // Passed in Game backup or ROM from the user

  var gameBytesLocation = CARTRIDGE_ROM_LOCATION; // Public Exports

  var WasmBoyCore =
  /*#__PURE__*/
  Object.freeze({
    memory: memory,
    config: config,
    hasCoreStarted: hasCoreStarted,
    saveState: saveState,
    loadState: loadState,
    getStepsPerStepSet: getStepsPerStepSet,
    getStepSets: getStepSets,
    getSteps: getSteps,
    executeMultipleFrames: executeMultipleFrames,
    executeFrame: executeFrame,
    executeFrameAndCheckAudio: executeFrameAndCheckAudio,
    executeFrameUntilBreakpoint: executeFrameUntilBreakpoint,
    executeUntilCondition: executeUntilCondition,
    executeStep: executeStep,
    getCyclesPerCycleSet: getCyclesPerCycleSet,
    getCycleSets: getCycleSets,
    getCycles: getCycles,
    setJoypadState: setJoypadState,
    getNumberOfSamplesInAudioBuffer: getNumberOfSamplesInAudioBuffer,
    clearAudioBuffer: clearAudioBuffer,
    WASMBOY_MEMORY_LOCATION: WASMBOY_MEMORY_LOCATION,
    WASMBOY_MEMORY_SIZE: WASMBOY_MEMORY_SIZE,
    WASMBOY_WASM_PAGES: WASMBOY_WASM_PAGES,
    ASSEMBLYSCRIPT_MEMORY_LOCATION: ASSEMBLYSCRIPT_MEMORY_LOCATION,
    ASSEMBLYSCRIPT_MEMORY_SIZE: ASSEMBLYSCRIPT_MEMORY_SIZE,
    WASMBOY_STATE_LOCATION: WASMBOY_STATE_LOCATION,
    WASMBOY_STATE_SIZE: WASMBOY_STATE_SIZE,
    GAMEBOY_INTERNAL_MEMORY_LOCATION: GAMEBOY_INTERNAL_MEMORY_LOCATION,
    GAMEBOY_INTERNAL_MEMORY_SIZE: GAMEBOY_INTERNAL_MEMORY_SIZE,
    VIDEO_RAM_LOCATION: VIDEO_RAM_LOCATION,
    VIDEO_RAM_SIZE: VIDEO_RAM_SIZE,
    WORK_RAM_LOCATION: WORK_RAM_LOCATION,
    WORK_RAM_SIZE: WORK_RAM_SIZE,
    OTHER_GAMEBOY_INTERNAL_MEMORY_LOCATION: OTHER_GAMEBOY_INTERNAL_MEMORY_LOCATION,
    OTHER_GAMEBOY_INTERNAL_MEMORY_SIZE: OTHER_GAMEBOY_INTERNAL_MEMORY_SIZE,
    GRAPHICS_OUTPUT_LOCATION: GRAPHICS_OUTPUT_LOCATION,
    GRAPHICS_OUTPUT_SIZE: GRAPHICS_OUTPUT_SIZE,
    GBC_PALETTE_LOCATION: GBC_PALETTE_LOCATION,
    GBC_PALETTE_SIZE: GBC_PALETTE_SIZE,
    BG_PRIORITY_MAP_LOCATION: BG_PRIORITY_MAP_LOCATION,
    BG_PRIORITY_MAP_SIZE: BG_PRIORITY_MAP_SIZE,
    FRAME_LOCATION: FRAME_LOCATION,
    FRAME_SIZE: FRAME_SIZE,
    BACKGROUND_MAP_LOCATION: BACKGROUND_MAP_LOCATION,
    BACKGROUND_MAP_SIZE: BACKGROUND_MAP_SIZE,
    TILE_DATA_LOCATION: TILE_DATA_LOCATION,
    TILE_DATA_SIZE: TILE_DATA_SIZE,
    OAM_TILES_LOCATION: OAM_TILES_LOCATION,
    OAM_TILES_SIZE: OAM_TILES_SIZE,
    AUDIO_BUFFER_LOCATION: AUDIO_BUFFER_LOCATION,
    AUDIO_BUFFER_SIZE: AUDIO_BUFFER_SIZE,
    CARTRIDGE_RAM_LOCATION: CARTRIDGE_RAM_LOCATION,
    CARTRIDGE_RAM_SIZE: CARTRIDGE_RAM_SIZE,
    CARTRIDGE_ROM_LOCATION: CARTRIDGE_ROM_LOCATION,
    CARTRIDGE_ROM_SIZE: CARTRIDGE_ROM_SIZE,
    getWasmBoyOffsetFromGameBoyOffset: getWasmBoyOffsetFromGameBoyOffset,
    getRegisterA: getRegisterA,
    getRegisterB: getRegisterB,
    getRegisterC: getRegisterC,
    getRegisterD: getRegisterD,
    getRegisterE: getRegisterE,
    getRegisterH: getRegisterH,
    getRegisterL: getRegisterL,
    getRegisterF: getRegisterF,
    getProgramCounter: getProgramCounter,
    getStackPointer: getStackPointer,
    getOpcodeAtProgramCounter: getOpcodeAtProgramCounter,
    getLY: getLY,
    drawBackgroundMapToWasmMemory: drawBackgroundMapToWasmMemory,
    drawTileDataToWasmMemory: drawTileDataToWasmMemory,
    getDIV: getDIV,
    getTIMA: getTIMA,
    getTMA: getTMA,
    getTAC: getTAC,
    update: executeFrame,
    emulationStep: executeStep,
    getAudioQueueIndex: getNumberOfSamplesInAudioBuffer,
    resetAudioQueue: clearAudioBuffer,
    wasmMemorySize: wasmMemorySize,
    wasmBoyInternalStateLocation: wasmBoyInternalStateLocation,
    wasmBoyInternalStateSize: wasmBoyInternalStateSize,
    gameBoyInternalMemoryLocation: gameBoyInternalMemoryLocation,
    gameBoyInternalMemorySize: gameBoyInternalMemorySize,
    videoOutputLocation: videoOutputLocation,
    frameInProgressVideoOutputLocation: frameInProgressVideoOutputLocation,
    gameboyColorPaletteLocation: gameboyColorPaletteLocation,
    gameboyColorPaletteSize: gameboyColorPaletteSize,
    backgroundMapLocation: backgroundMapLocation,
    tileDataMap: tileDataMap,
    soundOutputLocation: soundOutputLocation,
    gameBytesLocation: gameBytesLocation,
    gameRamBanksLocation: gameRamBanksLocation
  });

  const getWasmBoyTsCore = async () => {
    const response = {
      instance: {
        exports: WasmBoyCore
      },
      byteMemory: memory.wasmByteMemory,
      type: 'TypeScript'
    };
    return response;
  };

  const b$1 = new Uint8ClampedArray(9109504),
        aa = {
    size: () => 9109504,
    grow: () => {},
    wasmByteMemory: b$1
  };

  var f$1 = function () {
    function a() {}

    a.enableBootRom = !1;
    a.useGbcWhenAvailable = !0;
    a.audioBatchProcessing = !1;
    a.graphicsBatchProcessing = !1;
    a.timersBatchProcessing = !1;
    a.graphicsDisableScanlineRendering = !1;
    a.audioAccumulateSamples = !1;
    a.tileRendering = !1;
    a.tileCaching = !1;
    return a;
  }();

  function h$1(a, c) {
    return (a & 255) << 8 | c & 255;
  }

  function k(a) {
    return (a & 65280) >> 8;
  }

  function l(a, c) {
    return c & ~(1 << a);
  }

  function m(a, c) {
    return 0 != (c & 1 << a);
  }

  function ba(a) {
    var c = a;
    m(7, c) && (c = -1 * (256 - a));
    return c;
  }

  function ca(a, c) {
    a = 1 << a & 255;
    n.registerF = 0 < c ? n.registerF | a : n.registerF & (255 ^ a);
    return n.registerF;
  }

  function q(a) {
    ca(7, a);
  }

  function r$1(a) {
    ca(6, a);
  }

  function t(a) {
    ca(5, a);
  }

  function u(a) {
    ca(4, a);
  }

  function da() {
    return n.registerF >> 7 & 1;
  }

  function ea() {
    return n.registerF >> 4 & 1;
  }

  function z(a, c) {
    0 <= c ? 0 !== ((a & 15) + (c & 15) & 16) ? t(1) : t(0) : (Math.abs(c) & 15) > (a & 15) ? t(1) : t(0);
  }

  function fa(a, c) {
    0 <= c ? a > (a + c & 255) ? u(1) : u(0) : Math.abs(c) > a ? u(1) : u(0);
  }

  function ha(a, c, d) {
    d ? (a = a ^ c ^ a + c, 0 !== (a & 16) ? t(1) : t(0), 0 !== (a & 256) ? u(1) : u(0)) : (d = a + c & 65535, d < a ? u(1) : u(0), 0 !== ((a ^ c ^ d) & 4096) ? t(1) : t(0));
  }

  var ia = function () {
    function a() {}

    a.memoryLocationBackgroundPaletteIndex = 65384;
    a.memoryLocationBackgroundPaletteData = 65385;
    a.memoryLocationSpritePaletteIndex = 65386;
    a.memoryLocationSpritePaletteData = 65387;
    return a;
  }();

  function ja(a, c, d) {
    void 0 === d && (d = !1);
    var e = a;
    d || (e = A(c) >> 2 * a & 3);
    a = 242;

    switch (e) {
      case 1:
        a = 160;
        break;

      case 2:
        a = 88;
        break;

      case 3:
        a = 8;
    }

    return a;
  }

  function ka(a, c, d) {
    c = 8 * a + 2 * c;
    a = la(c + 1, d);
    d = la(c, d);
    return h$1(a, d);
  }

  function ma(a, c) {
    return 8 * ((c & 31 << 5 * a) >> 5 * a);
  }

  function la(a, c) {
    a &= 63;
    c && (a += 64);
    return b$1[67584 + a];
  }

  function na(a, c, d, e) {
    void 0 === d && (d = 0);
    void 0 === e && (e = !1);
    d &= 3;
    e && (d |= 4);
    b$1[69632 + (160 * c + a)] = d;
  }

  var oa = function () {
    function a() {}

    a.tileId = -1;
    a.horizontalFlip = !1;
    a.nextXIndexToPerformCacheCheck = -1;
    return a;
  }();

  function pa(a, c, d, e, g, p, D, v, I, w, J, x, y) {
    void 0 === J && (J = !1);
    void 0 === x && (x = 0);
    void 0 === y && (y = -1);
    var T = 0;
    c = qa(c, a);
    a = ra(c + 2 * p, d);
    d = ra(c + 2 * p + 1, d);

    for (p = e; p <= g; p++) if (c = D + (p - e), c < I) {
      var N = p;
      if (0 > y || !m(5, y)) N = 7 - N;
      var U = 0;
      m(N, d) && (U += 1, U <<= 1);
      m(N, a) && (U += 1);

      if (0 <= y) {
        var K = ka(y & 7, U, !1);
        N = ma(0, K);
        var xa = ma(1, K);
        K = ma(2, K);
      } else 0 >= x && (x = B.memoryLocationBackgroundPalette), xa = N = K = ja(U, x, J);

      var ya = 3 * (v * I + c);
      b$1[w + ya] = N;
      b$1[w + ya + 1] = xa;
      b$1[w + ya + 2] = K;
      N = !1;
      0 <= y && (N = m(7, y));
      na(c, v, U, N);
      T++;
    }

    return T;
  }

  function qa(a, c) {
    if (a === B.memoryLocationTileDataSelectZeroStart) {
      var d = c + 128;
      m(7, c) && (d = c - 128);
      return a + 16 * d;
    }

    return a + 16 * c;
  }

  function sa(a, c) {
    switch (a) {
      case 1:
        return m(c, 129);

      case 2:
        return m(c, 135);

      case 3:
        return m(c, 126);

      default:
        return m(c, 1);
    }
  }

  var G = function () {
    function a() {}

    a.updateNRx0 = function (c) {
      a.NRx0SweepPeriod = (c & 112) >> 4;
      a.NRx0Negate = m(3, c);
      a.NRx0SweepShift = c & 7;
    };

    a.updateNRx1 = function (c) {
      a.NRx1Duty = c >> 6 & 3;
      a.NRx1LengthLoad = c & 63;
      a.lengthCounter = 64 - a.NRx1LengthLoad;
    };

    a.updateNRx2 = function (c) {
      a.NRx2StartingVolume = c >> 4 & 15;
      a.NRx2EnvelopeAddMode = m(3, c);
      a.NRx2EnvelopePeriod = c & 7;
      a.isDacEnabled = 0 < (c & 248);
    };

    a.updateNRx3 = function (c) {
      a.NRx3FrequencyLSB = c;
      a.frequency = a.NRx4FrequencyMSB << 8 | a.NRx3FrequencyLSB;
    };

    a.updateNRx4 = function (c) {
      a.NRx4LengthEnabled = m(6, c);
      a.NRx4FrequencyMSB = c & 7;
      a.frequency = a.NRx4FrequencyMSB << 8 | a.NRx3FrequencyLSB;
    };

    a.saveState = function () {
      C(1024 + 50 * a.saveStateSlot, a.isEnabled);
      b$1[1025 + 50 * a.saveStateSlot] = a.frequencyTimer;
      b$1[1029 + 50 * a.saveStateSlot] = a.envelopeCounter;
      b$1[1033 + 50 * a.saveStateSlot] = a.lengthCounter;
      b$1[1038 + 50 * a.saveStateSlot] = a.volume;
      b$1[1043 + 50 * a.saveStateSlot] = a.dutyCycle;
      b$1[1044 + 50 * a.saveStateSlot] = a.waveFormPositionOnDuty;
      C(1049 + 50 * a.saveStateSlot, a.isSweepEnabled);
      b$1[1050 + 50 * a.saveStateSlot] = a.sweepCounter;
      b$1[1055 + 50 * a.saveStateSlot] = a.sweepShadowFrequency;
    };

    a.loadState = function () {
      a.isEnabled = E(1024 + 50 * a.saveStateSlot);
      a.frequencyTimer = b$1[1025 + 50 * a.saveStateSlot];
      a.envelopeCounter = b$1[1029 + 50 * a.saveStateSlot];
      a.lengthCounter = b$1[1033 + 50 * a.saveStateSlot];
      a.volume = b$1[1038 + 50 * a.saveStateSlot];
      a.dutyCycle = b$1[1043 + 50 * a.saveStateSlot];
      a.waveFormPositionOnDuty = b$1[1044 + 50 * a.saveStateSlot];
      a.isSweepEnabled = E(1049 + 50 * a.saveStateSlot);
      a.sweepCounter = b$1[1050 + 50 * a.saveStateSlot];
      a.sweepShadowFrequency = b$1[1055 + 50 * a.saveStateSlot];
    };

    a.initialize = function () {
      F(a.memoryLocationNRx0, 128);
      F(a.memoryLocationNRx1, 191);
      F(a.memoryLocationNRx2, 243);
      F(a.memoryLocationNRx3, 193);
      F(a.memoryLocationNRx4, 191);
    };

    a.getSampleFromCycleCounter = function () {
      var c = a.cycleCounter;
      a.cycleCounter = 0;
      return a.getSample(c);
    };

    a.resetTimer = function () {
      a.frequencyTimer = 4 * (2048 - a.frequency);
      n.GBCDoubleSpeed && (a.frequencyTimer *= 2);
    };

    a.getSample = function (c) {
      a.frequencyTimer -= c;
      0 >= a.frequencyTimer && (c = Math.abs(a.frequencyTimer), a.resetTimer(), a.frequencyTimer -= c, a.waveFormPositionOnDuty += 1, 8 <= a.waveFormPositionOnDuty && (a.waveFormPositionOnDuty = 0));
      if (a.isEnabled && a.isDacEnabled) c = a.volume;else return 15;
      var d = 1;
      sa(a.NRx1Duty, a.waveFormPositionOnDuty) || (d *= -1);
      return d * c + 15;
    };

    a.trigger = function () {
      a.isEnabled = !0;
      0 === a.lengthCounter && (a.lengthCounter = 64);
      a.resetTimer();
      a.envelopeCounter = a.NRx2EnvelopePeriod;
      a.volume = a.NRx2StartingVolume;
      a.sweepShadowFrequency = a.frequency;
      a.sweepCounter = a.NRx0SweepPeriod;
      a.isSweepEnabled = 0 < a.NRx0SweepPeriod && 0 < a.NRx0SweepShift ? !0 : !1;
      0 < a.NRx0SweepShift && ta();
      a.isDacEnabled || (a.isEnabled = !1);
    };

    a.willChannelUpdate = function (c) {
      a.cycleCounter += c;
      return 0 < a.frequencyTimer - a.cycleCounter ? !1 : !0;
    };

    a.updateSweep = function () {
      --a.sweepCounter;
      0 >= a.sweepCounter && (a.sweepCounter = a.NRx0SweepPeriod, a.isSweepEnabled && 0 < a.NRx0SweepPeriod && ta());
    };

    a.updateLength = function () {
      0 < a.lengthCounter && a.NRx4LengthEnabled && --a.lengthCounter;
      0 === a.lengthCounter && (a.isEnabled = !1);
    };

    a.updateEnvelope = function () {
      --a.envelopeCounter;
      0 >= a.envelopeCounter && (a.envelopeCounter = a.NRx2EnvelopePeriod, 0 !== a.envelopeCounter && (a.NRx2EnvelopeAddMode && 15 > a.volume ? a.volume += 1 : !a.NRx2EnvelopeAddMode && 0 < a.volume && --a.volume));
    };

    a.setFrequency = function (c) {
      var d = c >> 8;
      c &= 255;
      var e = A(a.memoryLocationNRx4) & 248 | d;
      F(a.memoryLocationNRx3, c);
      F(a.memoryLocationNRx4, e);
      a.NRx3FrequencyLSB = c;
      a.NRx4FrequencyMSB = d;
      a.frequency = a.NRx4FrequencyMSB << 8 | a.NRx3FrequencyLSB;
    };

    a.cycleCounter = 0;
    a.memoryLocationNRx0 = 65296;
    a.NRx0SweepPeriod = 0;
    a.NRx0Negate = !1;
    a.NRx0SweepShift = 0;
    a.memoryLocationNRx1 = 65297;
    a.NRx1Duty = 0;
    a.NRx1LengthLoad = 0;
    a.memoryLocationNRx2 = 65298;
    a.NRx2StartingVolume = 0;
    a.NRx2EnvelopeAddMode = !1;
    a.NRx2EnvelopePeriod = 0;
    a.memoryLocationNRx3 = 65299;
    a.NRx3FrequencyLSB = 0;
    a.memoryLocationNRx4 = 65300;
    a.NRx4LengthEnabled = !1;
    a.NRx4FrequencyMSB = 0;
    a.channelNumber = 1;
    a.isEnabled = !1;
    a.isDacEnabled = !1;
    a.frequency = 0;
    a.frequencyTimer = 0;
    a.envelopeCounter = 0;
    a.lengthCounter = 0;
    a.volume = 0;
    a.dutyCycle = 0;
    a.waveFormPositionOnDuty = 0;
    a.isSweepEnabled = !1;
    a.sweepCounter = 0;
    a.sweepShadowFrequency = 0;
    a.saveStateSlot = 7;
    return a;
  }();

  function ta() {
    var a = ua();
    2047 >= a && 0 < G.NRx0SweepShift && (G.sweepShadowFrequency = a, G.setFrequency(a), a = ua());
    2047 < a && (G.isEnabled = !1);
  }

  function ua() {
    var a = G.sweepShadowFrequency;
    a >>= G.NRx0SweepShift;
    return a = G.NRx0Negate ? G.sweepShadowFrequency - a : G.sweepShadowFrequency + a;
  }

  var H = function () {
    function a() {}

    a.updateNRx1 = function (c) {
      a.NRx1Duty = c >> 6 & 3;
      a.NRx1LengthLoad = c & 63;
      a.lengthCounter = 64 - a.NRx1LengthLoad;
    };

    a.updateNRx2 = function (c) {
      a.NRx2StartingVolume = c >> 4 & 15;
      a.NRx2EnvelopeAddMode = m(3, c);
      a.NRx2EnvelopePeriod = c & 7;
      a.isDacEnabled = 0 < (c & 248);
    };

    a.updateNRx3 = function (c) {
      a.NRx3FrequencyLSB = c;
      a.frequency = a.NRx4FrequencyMSB << 8 | a.NRx3FrequencyLSB;
    };

    a.updateNRx4 = function (c) {
      a.NRx4LengthEnabled = m(6, c);
      a.NRx4FrequencyMSB = c & 7;
      a.frequency = a.NRx4FrequencyMSB << 8 | a.NRx3FrequencyLSB;
    };

    a.saveState = function () {
      C(1024 + 50 * a.saveStateSlot, a.isEnabled);
      b$1[1025 + 50 * a.saveStateSlot] = a.frequencyTimer;
      b$1[1029 + 50 * a.saveStateSlot] = a.envelopeCounter;
      b$1[1033 + 50 * a.saveStateSlot] = a.lengthCounter;
      b$1[1038 + 50 * a.saveStateSlot] = a.volume;
      b$1[1043 + 50 * a.saveStateSlot] = a.dutyCycle;
      b$1[1044 + 50 * a.saveStateSlot] = a.waveFormPositionOnDuty;
    };

    a.loadState = function () {
      a.isEnabled = E(1024 + 50 * a.saveStateSlot);
      a.frequencyTimer = b$1[1025 + 50 * a.saveStateSlot];
      a.envelopeCounter = b$1[1029 + 50 * a.saveStateSlot];
      a.lengthCounter = b$1[1033 + 50 * a.saveStateSlot];
      a.volume = b$1[1038 + 50 * a.saveStateSlot];
      a.dutyCycle = b$1[1043 + 50 * a.saveStateSlot];
      a.waveFormPositionOnDuty = b$1[1044 + 50 * a.saveStateSlot];
    };

    a.initialize = function () {
      F(a.memoryLocationNRx1 - 1, 255);
      F(a.memoryLocationNRx1, 63);
      F(a.memoryLocationNRx2, 0);
      F(a.memoryLocationNRx3, 0);
      F(a.memoryLocationNRx4, 184);
    };

    a.getSampleFromCycleCounter = function () {
      var c = a.cycleCounter;
      a.cycleCounter = 0;
      return a.getSample(c);
    };

    a.resetTimer = function () {
      a.frequencyTimer = 4 * (2048 - a.frequency);
      n.GBCDoubleSpeed && (a.frequencyTimer *= 2);
    };

    a.getSample = function (c) {
      a.frequencyTimer -= c;
      0 >= a.frequencyTimer && (c = Math.abs(a.frequencyTimer), a.resetTimer(), a.frequencyTimer -= c, a.waveFormPositionOnDuty += 1, 8 <= a.waveFormPositionOnDuty && (a.waveFormPositionOnDuty = 0));
      if (a.isEnabled && a.isDacEnabled) c = a.volume;else return 15;
      var d = 1;
      sa(a.NRx1Duty, a.waveFormPositionOnDuty) || (d *= -1);
      return d * c + 15;
    };

    a.trigger = function () {
      a.isEnabled = !0;
      0 === a.lengthCounter && (a.lengthCounter = 64);
      a.resetTimer();
      a.envelopeCounter = a.NRx2EnvelopePeriod;
      a.volume = a.NRx2StartingVolume;
      a.isDacEnabled || (a.isEnabled = !1);
    };

    a.willChannelUpdate = function (c) {
      a.cycleCounter += c;
      return 0 < a.frequencyTimer - a.cycleCounter ? !1 : !0;
    };

    a.updateLength = function () {
      0 < a.lengthCounter && a.NRx4LengthEnabled && --a.lengthCounter;
      0 === a.lengthCounter && (a.isEnabled = !1);
    };

    a.updateEnvelope = function () {
      --a.envelopeCounter;
      0 >= a.envelopeCounter && (a.envelopeCounter = a.NRx2EnvelopePeriod, 0 !== a.envelopeCounter && (a.NRx2EnvelopeAddMode && 15 > a.volume ? a.volume += 1 : !a.NRx2EnvelopeAddMode && 0 < a.volume && --a.volume));
    };

    a.setFrequency = function (c) {
      var d = c >> 8;
      c &= 255;
      var e = A(a.memoryLocationNRx4) & 248 | d;
      F(a.memoryLocationNRx3, c);
      F(a.memoryLocationNRx4, e);
      a.NRx3FrequencyLSB = c;
      a.NRx4FrequencyMSB = d;
      a.frequency = a.NRx4FrequencyMSB << 8 | a.NRx3FrequencyLSB;
    };

    a.cycleCounter = 0;
    a.memoryLocationNRx1 = 65302;
    a.NRx1Duty = 0;
    a.NRx1LengthLoad = 0;
    a.memoryLocationNRx2 = 65303;
    a.NRx2StartingVolume = 0;
    a.NRx2EnvelopeAddMode = !1;
    a.NRx2EnvelopePeriod = 0;
    a.memoryLocationNRx3 = 65304;
    a.NRx3FrequencyLSB = 0;
    a.memoryLocationNRx4 = 65305;
    a.NRx4LengthEnabled = !1;
    a.NRx4FrequencyMSB = 0;
    a.channelNumber = 2;
    a.isEnabled = !1;
    a.isDacEnabled = !1;
    a.frequency = 0;
    a.frequencyTimer = 0;
    a.envelopeCounter = 0;
    a.lengthCounter = 0;
    a.volume = 0;
    a.dutyCycle = 0;
    a.waveFormPositionOnDuty = 0;
    a.saveStateSlot = 8;
    return a;
  }(),
      L = function () {
    function a() {}

    a.updateNRx0 = function (c) {
      a.isDacEnabled = m(7, c);
    };

    a.updateNRx1 = function (c) {
      a.NRx1LengthLoad = c;
      a.lengthCounter = 256 - a.NRx1LengthLoad;
    };

    a.updateNRx2 = function (c) {
      a.NRx2VolumeCode = c >> 5 & 15;
    };

    a.updateNRx3 = function (c) {
      a.NRx3FrequencyLSB = c;
      a.frequency = a.NRx4FrequencyMSB << 8 | a.NRx3FrequencyLSB;
    };

    a.updateNRx4 = function (c) {
      a.NRx4LengthEnabled = m(6, c);
      a.NRx4FrequencyMSB = c & 7;
      a.frequency = a.NRx4FrequencyMSB << 8 | a.NRx3FrequencyLSB;
    };

    a.saveState = function () {
      C(1024 + 50 * a.saveStateSlot, a.isEnabled);
      b$1[1025 + 50 * a.saveStateSlot] = a.frequencyTimer;
      b$1[1029 + 50 * a.saveStateSlot] = a.lengthCounter;
      b$1[1033 + 50 * a.saveStateSlot] = a.waveTablePosition;
    };

    a.loadState = function () {
      a.isEnabled = E(1024 + 50 * a.saveStateSlot);
      a.frequencyTimer = b$1[1025 + 50 * a.saveStateSlot];
      a.lengthCounter = b$1[1029 + 50 * a.saveStateSlot];
      a.waveTablePosition = b$1[1033 + 50 * a.saveStateSlot];
    };

    a.initialize = function () {
      F(a.memoryLocationNRx0, 127);
      F(a.memoryLocationNRx1, 255);
      F(a.memoryLocationNRx2, 159);
      F(a.memoryLocationNRx3, 0);
      F(a.memoryLocationNRx4, 184);
      a.volumeCodeChanged = !0;
    };

    a.getSampleFromCycleCounter = function () {
      var c = a.cycleCounter;
      a.cycleCounter = 0;
      return a.getSample(c);
    };

    a.resetTimer = function () {
      a.frequencyTimer = 2 * (2048 - a.frequency);
      n.GBCDoubleSpeed && (a.frequencyTimer *= 2);
    };

    a.getSample = function (c) {
      a.frequencyTimer -= c;
      0 >= a.frequencyTimer && (c = Math.abs(a.frequencyTimer), a.resetTimer(), a.frequencyTimer -= c, a.waveTablePosition += 1, 32 <= a.waveTablePosition && (a.waveTablePosition = 0));
      c = 0;
      var d = a.volumeCode;
      if (a.isEnabled && a.isDacEnabled) a.volumeCodeChanged && (d = A(a.memoryLocationNRx2), d = d >> 5 & 15, a.volumeCode = d, a.volumeCodeChanged = !1);else return 15;
      var e = A(a.memoryLocationWaveTable + a.waveTablePosition / 2);
      e = 0 === a.waveTablePosition % 2 ? e >> 4 & 15 : e & 15;

      switch (d) {
        case 0:
          e >>= 4;
          break;

        case 1:
          c = 1;
          break;

        case 2:
          e >>= 1;
          c = 2;
          break;

        default:
          e >>= 2, c = 4;
      }

      return (0 < c ? e / c : 0) + 15;
    };

    a.trigger = function () {
      a.isEnabled = !0;
      0 === a.lengthCounter && (a.lengthCounter = 256);
      a.resetTimer();
      a.waveTablePosition = 0;
      a.isDacEnabled || (a.isEnabled = !1);
    };

    a.willChannelUpdate = function (c) {
      a.cycleCounter += c;
      return 0 < a.frequencyTimer - a.cycleCounter && !a.volumeCodeChanged ? !1 : !0;
    };

    a.updateLength = function () {
      0 < a.lengthCounter && a.NRx4LengthEnabled && --a.lengthCounter;
      0 === a.lengthCounter && (a.isEnabled = !1);
    };

    a.cycleCounter = 0;
    a.memoryLocationNRx0 = 65306;
    a.memoryLocationNRx1 = 65307;
    a.NRx1LengthLoad = 0;
    a.memoryLocationNRx2 = 65308;
    a.NRx2VolumeCode = 0;
    a.memoryLocationNRx3 = 65309;
    a.NRx3FrequencyLSB = 0;
    a.memoryLocationNRx4 = 65310;
    a.NRx4LengthEnabled = !1;
    a.NRx4FrequencyMSB = 0;
    a.memoryLocationWaveTable = 65328;
    a.channelNumber = 3;
    a.isEnabled = !1;
    a.isDacEnabled = !1;
    a.frequency = 0;
    a.frequencyTimer = 0;
    a.lengthCounter = 0;
    a.waveTablePosition = 0;
    a.volumeCode = 0;
    a.volumeCodeChanged = !1;
    a.saveStateSlot = 9;
    return a;
  }(),
      M = function () {
    function a() {}

    a.updateNRx1 = function (c) {
      a.NRx1LengthLoad = c & 63;
      a.lengthCounter = 64 - a.NRx1LengthLoad;
    };

    a.updateNRx2 = function (c) {
      a.NRx2StartingVolume = c >> 4 & 15;
      a.NRx2EnvelopeAddMode = m(3, c);
      a.NRx2EnvelopePeriod = c & 7;
      a.isDacEnabled = 0 < (c & 248);
    };

    a.updateNRx3 = function (c) {
      a.NRx3ClockShift = c >> 4;
      a.NRx3WidthMode = m(3, c);
      a.NRx3DivisorCode = c & 7;

      switch (a.NRx3DivisorCode) {
        case 0:
          a.divisor = 8;
          break;

        case 1:
          a.divisor = 16;
          break;

        case 2:
          a.divisor = 32;
          break;

        case 3:
          a.divisor = 48;
          break;

        case 4:
          a.divisor = 64;
          break;

        case 5:
          a.divisor = 80;
          break;

        case 6:
          a.divisor = 96;
          break;

        case 7:
          a.divisor = 112;
      }
    };

    a.updateNRx4 = function (c) {
      a.NRx4LengthEnabled = m(6, c);
    };

    a.saveState = function () {
      C(1024 + 50 * a.saveStateSlot, a.isEnabled);
      b$1[1025 + 50 * a.saveStateSlot] = a.frequencyTimer;
      b$1[1029 + 50 * a.saveStateSlot] = a.envelopeCounter;
      b$1[1033 + 50 * a.saveStateSlot] = a.lengthCounter;
      b$1[1038 + 50 * a.saveStateSlot] = a.volume;
      b$1[1043 + 50 * a.saveStateSlot] = a.linearFeedbackShiftRegister;
    };

    a.loadState = function () {
      a.isEnabled = E(1024 + 50 * a.saveStateSlot);
      a.frequencyTimer = b$1[1025 + 50 * a.saveStateSlot];
      a.envelopeCounter = b$1[1029 + 50 * a.saveStateSlot];
      a.lengthCounter = b$1[1033 + 50 * a.saveStateSlot];
      a.volume = b$1[1038 + 50 * a.saveStateSlot];
      a.linearFeedbackShiftRegister = b$1[1043 + 50 * a.saveStateSlot];
    };

    a.initialize = function () {
      F(a.memoryLocationNRx1 - 1, 255);
      F(a.memoryLocationNRx1, 255);
      F(a.memoryLocationNRx2, 0);
      F(a.memoryLocationNRx3, 0);
      F(a.memoryLocationNRx4, 191);
    };

    a.getSampleFromCycleCounter = function () {
      var c = a.cycleCounter;
      a.cycleCounter = 0;
      return a.getSample(c);
    };

    a.getSample = function (c) {
      a.frequencyTimer -= c;
      0 >= a.frequencyTimer && (c = Math.abs(a.frequencyTimer), a.frequencyTimer = a.getNoiseChannelFrequencyPeriod(), a.frequencyTimer -= c, c = a.linearFeedbackShiftRegister & 1 ^ a.linearFeedbackShiftRegister >> 1 & 1, a.linearFeedbackShiftRegister >>= 1, a.linearFeedbackShiftRegister |= c << 14, a.NRx3WidthMode && (a.linearFeedbackShiftRegister &= -65, a.linearFeedbackShiftRegister |= c << 6));
      if (a.isEnabled && a.isDacEnabled) c = a.volume;else return 15;
      var d = m(0, a.linearFeedbackShiftRegister) ? -1 : 1;
      return d * c + 15;
    };

    a.trigger = function () {
      a.isEnabled = !0;
      0 === a.lengthCounter && (a.lengthCounter = 64);
      a.frequencyTimer = a.getNoiseChannelFrequencyPeriod();
      a.envelopeCounter = a.NRx2EnvelopePeriod;
      a.volume = a.NRx2StartingVolume;
      a.linearFeedbackShiftRegister = 32767;
      a.isDacEnabled || (a.isEnabled = !1);
    };

    a.willChannelUpdate = function (c) {
      a.cycleCounter += c;
      return 0 < a.frequencyTimer - a.cycleCounter ? !1 : !0;
    };

    a.getNoiseChannelFrequencyPeriod = function () {
      var c = a.divisor << a.NRx3ClockShift;
      n.GBCDoubleSpeed && (c *= 2);
      return c;
    };

    a.updateLength = function () {
      0 < a.lengthCounter && a.NRx4LengthEnabled && --a.lengthCounter;
      0 === a.lengthCounter && (a.isEnabled = !1);
    };

    a.updateEnvelope = function () {
      --a.envelopeCounter;
      0 >= a.envelopeCounter && (a.envelopeCounter = a.NRx2EnvelopePeriod, 0 !== a.envelopeCounter && (a.NRx2EnvelopeAddMode && 15 > a.volume ? a.volume += 1 : !a.NRx2EnvelopeAddMode && 0 < a.volume && --a.volume));
    };

    a.cycleCounter = 0;
    a.memoryLocationNRx1 = 65312;
    a.NRx1LengthLoad = 0;
    a.memoryLocationNRx2 = 65313;
    a.NRx2StartingVolume = 0;
    a.NRx2EnvelopeAddMode = !1;
    a.NRx2EnvelopePeriod = 0;
    a.memoryLocationNRx3 = 65314;
    a.NRx3ClockShift = 0;
    a.NRx3WidthMode = !1;
    a.NRx3DivisorCode = 0;
    a.memoryLocationNRx4 = 65315;
    a.NRx4LengthEnabled = !1;
    a.channelNumber = 4;
    a.isEnabled = !1;
    a.isDacEnabled = !1;
    a.frequencyTimer = 0;
    a.envelopeCounter = 0;
    a.lengthCounter = 0;
    a.volume = 0;
    a.divisor = 0;
    a.linearFeedbackShiftRegister = 0;
    a.saveStateSlot = 10;
    return a;
  }(),
      O = function () {
    function a() {}

    a.channel1Sample = 15;
    a.channel2Sample = 15;
    a.channel3Sample = 15;
    a.channel4Sample = 15;
    a.channel1DacEnabled = !1;
    a.channel2DacEnabled = !1;
    a.channel3DacEnabled = !1;
    a.channel4DacEnabled = !1;
    a.leftChannelSampleUnsignedByte = 127;
    a.rightChannelSampleUnsignedByte = 127;
    a.mixerVolumeChanged = !1;
    a.mixerEnabledChanged = !1;
    a.needToRemixSamples = !1;
    return a;
  }();

  function va(a) {
    switch (a) {
      case G.channelNumber:
        if (O.channel1DacEnabled !== G.isDacEnabled) return O.channel1DacEnabled = G.isDacEnabled, !0;
        break;

      case H.channelNumber:
        if (O.channel2DacEnabled !== H.isDacEnabled) return O.channel2DacEnabled = H.isDacEnabled, !0;
        break;

      case L.channelNumber:
        if (O.channel3DacEnabled !== L.isDacEnabled) return O.channel3DacEnabled = L.isDacEnabled, !0;
        break;

      case M.channelNumber:
        if (O.channel4DacEnabled !== M.isDacEnabled) return O.channel4DacEnabled = M.isDacEnabled, !0;
    }

    return !1;
  }

  var P = function () {
    function a() {}

    a.batchProcessCycles = function () {
      return n.GBCDoubleSpeed ? 174 : 87;
    };

    a.updateNR50 = function (c) {
      a.NR50LeftMixerVolume = c >> 4 & 7;
      a.NR50RightMixerVolume = c & 7;
    };

    a.updateNR51 = function (c) {
      a.NR51IsChannel4EnabledOnLeftOutput = m(7, c);
      a.NR51IsChannel3EnabledOnLeftOutput = m(6, c);
      a.NR51IsChannel2EnabledOnLeftOutput = m(5, c);
      a.NR51IsChannel1EnabledOnLeftOutput = m(4, c);
      a.NR51IsChannel4EnabledOnRightOutput = m(3, c);
      a.NR51IsChannel3EnabledOnRightOutput = m(2, c);
      a.NR51IsChannel2EnabledOnRightOutput = m(1, c);
      a.NR51IsChannel1EnabledOnRightOutput = m(0, c);
    };

    a.updateNR52 = function (c) {
      a.NR52IsSoundEnabled = m(7, c);
    };

    a.maxFrameSequenceCycles = function () {
      return n.GBCDoubleSpeed ? 16384 : 8192;
    };

    a.maxDownSampleCycles = function () {
      return n.CLOCK_SPEED();
    };

    a.saveState = function () {
      b$1[1024 + 50 * a.saveStateSlot] = a.frameSequenceCycleCounter;
      b$1[1028 + 50 * a.saveStateSlot] = a.downSampleCycleCounter;
      b$1[1029 + 50 * a.saveStateSlot] = a.frameSequencer;
    };

    a.loadState = function () {
      a.frameSequenceCycleCounter = b$1[1024 + 50 * a.saveStateSlot];
      a.downSampleCycleCounter = b$1[1028 + 50 * a.saveStateSlot];
      a.frameSequencer = b$1[1029 + 50 * a.saveStateSlot];
      wa();
    };

    a.currentCycles = 0;
    a.memoryLocationNR50 = 65316;
    a.NR50LeftMixerVolume = 0;
    a.NR50RightMixerVolume = 0;
    a.memoryLocationNR51 = 65317;
    a.NR51IsChannel1EnabledOnLeftOutput = !0;
    a.NR51IsChannel2EnabledOnLeftOutput = !0;
    a.NR51IsChannel3EnabledOnLeftOutput = !0;
    a.NR51IsChannel4EnabledOnLeftOutput = !0;
    a.NR51IsChannel1EnabledOnRightOutput = !0;
    a.NR51IsChannel2EnabledOnRightOutput = !0;
    a.NR51IsChannel3EnabledOnRightOutput = !0;
    a.NR51IsChannel4EnabledOnRightOutput = !0;
    a.memoryLocationNR52 = 65318;
    a.NR52IsSoundEnabled = !0;
    a.memoryLocationChannel3LoadRegisterStart = 65328;
    a.frameSequenceCycleCounter = 0;
    a.downSampleCycleCounter = 0;
    a.downSampleCycleMultiplier = 48E3;
    a.frameSequencer = 0;
    a.audioQueueIndex = 0;
    a.wasmBoyMemoryMaxBufferSize = 131072;
    a.saveStateSlot = 6;
    return a;
  }();

  function za() {
    if (!(P.currentCycles < P.batchProcessCycles())) for (; P.currentCycles >= P.batchProcessCycles();) Aa(P.batchProcessCycles()), P.currentCycles -= P.batchProcessCycles();
  }

  function Aa(a) {
    P.frameSequenceCycleCounter += a;

    if (P.frameSequenceCycleCounter >= P.maxFrameSequenceCycles()) {
      P.frameSequenceCycleCounter -= P.maxFrameSequenceCycles();

      switch (P.frameSequencer) {
        case 0:
          G.updateLength();
          H.updateLength();
          L.updateLength();
          M.updateLength();
          break;

        case 2:
          G.updateLength();
          H.updateLength();
          L.updateLength();
          M.updateLength();
          G.updateSweep();
          break;

        case 4:
          G.updateLength();
          H.updateLength();
          L.updateLength();
          M.updateLength();
          break;

        case 6:
          G.updateLength();
          H.updateLength();
          L.updateLength();
          M.updateLength();
          G.updateSweep();
          break;

        case 7:
          G.updateEnvelope(), H.updateEnvelope(), M.updateEnvelope();
      }

      P.frameSequencer += 1;
      8 <= P.frameSequencer && (P.frameSequencer = 0);
      var c = !0;
    } else c = !1;

    if (f$1.audioAccumulateSamples && !c) {
      c = G.willChannelUpdate(a) || va(G.channelNumber);
      var d = H.willChannelUpdate(a) || va(H.channelNumber),
          e = L.willChannelUpdate(a) || va(L.channelNumber),
          g = M.willChannelUpdate(a) || va(M.channelNumber);
      c && (O.channel1Sample = G.getSampleFromCycleCounter());
      d && (O.channel2Sample = H.getSampleFromCycleCounter());
      e && (O.channel3Sample = L.getSampleFromCycleCounter());
      g && (O.channel4Sample = M.getSampleFromCycleCounter());
      if (c || d || e || g) O.needToRemixSamples = !0;
      P.downSampleCycleCounter += a * P.downSampleCycleMultiplier;
      P.downSampleCycleCounter >= P.maxDownSampleCycles() && (P.downSampleCycleCounter -= P.maxDownSampleCycles(), (O.needToRemixSamples || O.mixerVolumeChanged || O.mixerEnabledChanged) && Ba(O.channel1Sample, O.channel2Sample, O.channel3Sample, O.channel4Sample), a = O.rightChannelSampleUnsignedByte + 1, c = 588800 + 2 * P.audioQueueIndex, b$1[c] = O.leftChannelSampleUnsignedByte + 1 + 1, b$1[c + 1] = a + 1, P.audioQueueIndex += 1, P.audioQueueIndex >= P.wasmBoyMemoryMaxBufferSize / 2 - 1 && --P.audioQueueIndex);
    } else c = G.getSample(a), d = H.getSample(a), e = L.getSample(a), g = M.getSample(a), O.channel1Sample = c, O.channel2Sample = d, O.channel3Sample = e, O.channel4Sample = g, P.downSampleCycleCounter += a * P.downSampleCycleMultiplier, P.downSampleCycleCounter >= P.maxDownSampleCycles() && (P.downSampleCycleCounter -= P.maxDownSampleCycles(), a = Ba(c, d, e, g), c = k(a), d = 588800 + 2 * P.audioQueueIndex, b$1[d] = c + 1 + 1, b$1[d + 1] = (a & 255) + 2, P.audioQueueIndex += 1, P.audioQueueIndex >= P.wasmBoyMemoryMaxBufferSize / 2 - 1 && --P.audioQueueIndex);
  }

  function Ca() {
    return P.audioQueueIndex;
  }

  function wa() {
    P.audioQueueIndex = 0;
  }

  function Ba(a, c, d, e) {
    void 0 === a && (a = 15);
    void 0 === c && (c = 15);
    void 0 === d && (d = 15);
    void 0 === e && (e = 15);
    O.mixerVolumeChanged = !1;
    var g = 0,
        p = 0;
    g = P.NR51IsChannel1EnabledOnLeftOutput ? g + a : g + 15;
    g = P.NR51IsChannel2EnabledOnLeftOutput ? g + c : g + 15;
    g = P.NR51IsChannel3EnabledOnLeftOutput ? g + d : g + 15;
    g = P.NR51IsChannel4EnabledOnLeftOutput ? g + e : g + 15;
    p = P.NR51IsChannel1EnabledOnRightOutput ? p + a : p + 15;
    p = P.NR51IsChannel2EnabledOnRightOutput ? p + c : p + 15;
    p = P.NR51IsChannel3EnabledOnRightOutput ? p + d : p + 15;
    p = P.NR51IsChannel4EnabledOnRightOutput ? p + e : p + 15;
    O.mixerEnabledChanged = !1;
    O.needToRemixSamples = !1;
    a = Da(g, P.NR50LeftMixerVolume + 1);
    p = Da(p, P.NR50RightMixerVolume + 1);
    O.leftChannelSampleUnsignedByte = a;
    O.rightChannelSampleUnsignedByte = p;
    return h$1(a, p);
  }

  function Da(a, c) {
    if (60 === a) return 127;
    a = 1E5 * (a - 60) * c / 8;
    a /= 1E5;
    a += 60;
    a = 1E5 * a / (12E6 / 254);
    return a |= 0;
  }

  var Q = function () {
    function a() {}

    a.updateInterruptEnabled = function (c) {
      a.isVBlankInterruptEnabled = m(a.bitPositionVBlankInterrupt, c);
      a.isLcdInterruptEnabled = m(a.bitPositionLcdInterrupt, c);
      a.isTimerInterruptEnabled = m(a.bitPositionTimerInterrupt, c);
      a.isJoypadInterruptEnabled = m(a.bitPositionJoypadInterrupt, c);
      a.interruptsEnabledValue = c;
    };

    a.updateInterruptRequested = function (c) {
      a.isVBlankInterruptRequested = m(a.bitPositionVBlankInterrupt, c);
      a.isLcdInterruptRequested = m(a.bitPositionLcdInterrupt, c);
      a.isTimerInterruptRequested = m(a.bitPositionTimerInterrupt, c);
      a.isJoypadInterruptRequested = m(a.bitPositionJoypadInterrupt, c);
      a.interruptsRequestedValue = c;
    };

    a.areInterruptsPending = function () {
      return 0 < (a.interruptsRequestedValue & a.interruptsEnabledValue & 31);
    };

    a.saveState = function () {
      C(1024 + 50 * a.saveStateSlot, a.masterInterruptSwitch);
      C(1025 + 50 * a.saveStateSlot, a.masterInterruptSwitchDelay);
    };

    a.loadState = function () {
      a.masterInterruptSwitch = E(1024 + 50 * a.saveStateSlot);
      a.masterInterruptSwitchDelay = E(1025 + 50 * a.saveStateSlot);
      a.updateInterruptEnabled(A(a.memoryLocationInterruptEnabled));
      a.updateInterruptRequested(A(a.memoryLocationInterruptRequest));
    };

    a.masterInterruptSwitch = !1;
    a.masterInterruptSwitchDelay = !1;
    a.bitPositionVBlankInterrupt = 0;
    a.bitPositionLcdInterrupt = 1;
    a.bitPositionTimerInterrupt = 2;
    a.bitPositionJoypadInterrupt = 4;
    a.memoryLocationInterruptEnabled = 65535;
    a.interruptsEnabledValue = 0;
    a.isVBlankInterruptEnabled = !1;
    a.isLcdInterruptEnabled = !1;
    a.isTimerInterruptEnabled = !1;
    a.isJoypadInterruptEnabled = !1;
    a.memoryLocationInterruptRequest = 65295;
    a.interruptsRequestedValue = 0;
    a.isVBlankInterruptRequested = !1;
    a.isLcdInterruptRequested = !1;
    a.isTimerInterruptRequested = !1;
    a.isJoypadInterruptRequested = !1;
    a.saveStateSlot = 2;
    return a;
  }();

  function Ea(a) {
    Fa(!1);
    var c = A(Q.memoryLocationInterruptRequest);
    c = l(a, c);
    Q.interruptsRequestedValue = c;
    F(Q.memoryLocationInterruptRequest, c);
    n.stackPointer -= 2;
    n.isHalted();
    c = n.stackPointer;
    var d = n.programCounter,
        e = k(d),
        g = c + 1;
    F(c, d & 255);
    F(g, e);

    switch (a) {
      case Q.bitPositionVBlankInterrupt:
        Q.isVBlankInterruptRequested = !1;
        n.programCounter = 64;
        break;

      case Q.bitPositionLcdInterrupt:
        Q.isLcdInterruptRequested = !1;
        n.programCounter = 72;
        break;

      case Q.bitPositionTimerInterrupt:
        Q.isTimerInterruptRequested = !1;
        n.programCounter = 80;
        break;

      case Q.bitPositionJoypadInterrupt:
        Q.isJoypadInterruptRequested = !1, n.programCounter = 96;
    }
  }

  function Ga(a) {
    var c = A(Q.memoryLocationInterruptRequest);
    c |= 1 << a;
    Q.interruptsRequestedValue = c;
    F(Q.memoryLocationInterruptRequest, c);
  }

  function Fa(a) {
    a ? Q.masterInterruptSwitchDelay = !0 : Q.masterInterruptSwitch = !1;
  }

  var R = function () {
    function a() {}

    a.batchProcessCycles = function () {
      return 256;
    };

    a.updateDividerRegister = function () {
      var c = a.dividerRegister;
      a.dividerRegister = 0;
      F(a.memoryLocationDividerRegister, 0);
      a.timerEnabled && Ha(c, a.dividerRegister) && Ia();
    };

    a.updateTimerCounter = function (c) {
      if (a.timerEnabled) {
        if (a.timerCounterWasReset) return;
        a.timerCounterOverflowDelay && (a.timerCounterOverflowDelay = !1);
      }

      a.timerCounter = c;
    };

    a.updateTimerModulo = function (c) {
      a.timerModulo = c;
      a.timerEnabled && a.timerCounterWasReset && (a.timerCounter = a.timerModulo, a.timerCounterWasReset = !1);
    };

    a.updateTimerControl = function (c) {
      var d = a.timerEnabled;
      a.timerEnabled = m(2, c);
      c &= 3;

      if (!d) {
        d = Ja(a.timerInputClock);
        var e = Ja(c);
        (a.timerEnabled ? m(d, a.dividerRegister) : m(d, a.dividerRegister) && m(e, a.dividerRegister)) && Ia();
      }

      a.timerInputClock = c;
    };

    a.saveState = function () {
      b$1[1024 + 50 * a.saveStateSlot] = a.currentCycles;
      b$1[1028 + 50 * a.saveStateSlot] = a.dividerRegister;
      C(1032 + 50 * a.saveStateSlot, a.timerCounterOverflowDelay);
      C(1035 + 50 * a.saveStateSlot, a.timerCounterWasReset);
      F(a.memoryLocationTimerCounter, a.timerCounter);
    };

    a.loadState = function () {
      a.currentCycles = b$1[1024 + 50 * a.saveStateSlot];
      a.dividerRegister = b$1[1028 + 50 * a.saveStateSlot];
      a.timerCounterOverflowDelay = E(1032 + 50 * a.saveStateSlot);
      a.timerCounterWasReset = E(1035 + 50 * a.saveStateSlot);
      a.timerCounter = A(a.memoryLocationTimerCounter);
      a.timerModulo = A(a.memoryLocationTimerModulo);
      a.timerInputClock = A(a.memoryLocationTimerControl);
    };

    a.currentCycles = 0;
    a.memoryLocationDividerRegister = 65284;
    a.dividerRegister = 0;
    a.memoryLocationTimerCounter = 65285;
    a.timerCounter = 0;
    a.timerCounterOverflowDelay = !1;
    a.timerCounterWasReset = !1;
    a.timerCounterMask = 0;
    a.memoryLocationTimerModulo = 65286;
    a.timerModulo = 0;
    a.memoryLocationTimerControl = 65287;
    a.timerEnabled = !1;
    a.timerInputClock = 0;
    a.saveStateSlot = 5;
    return a;
  }();

  function Ka(a) {
    for (var c = 0; c < a;) {
      var d = R.dividerRegister;
      c += 4;
      R.dividerRegister += 4;
      65535 < R.dividerRegister && (R.dividerRegister -= 65536);
      R.timerEnabled && (R.timerCounterOverflowDelay ? (R.timerCounter = R.timerModulo, Q.isTimerInterruptRequested = !0, Ga(Q.bitPositionTimerInterrupt), R.timerCounterOverflowDelay = !1, R.timerCounterWasReset = !0) : R.timerCounterWasReset && (R.timerCounterWasReset = !1), Ha(d, R.dividerRegister) && Ia());
    }
  }

  function Ia() {
    R.timerCounter += 1;
    255 < R.timerCounter && (R.timerCounterOverflowDelay = !0, R.timerCounter = 0);
  }

  function Ha(a, c) {
    var d = Ja(R.timerInputClock);
    return m(d, a) && !m(d, c) ? !0 : !1;
  }

  function Ja(a) {
    switch (a) {
      case 0:
        return 9;

      case 1:
        return 3;

      case 2:
        return 5;

      case 3:
        return 7;
    }

    return 0;
  }

  var S = function () {
    function a() {}

    a.updateJoypad = function (c) {
      a.joypadRegisterFlipped = c ^ 255;
      a.isDpadType = m(4, a.joypadRegisterFlipped);
      a.isButtonType = m(5, a.joypadRegisterFlipped);
    };

    a.saveState = function () {};

    a.loadState = function () {
      a.updateJoypad(A(a.memoryLocationJoypadRegister));
    };

    a.up = !1;
    a.down = !1;
    a.left = !1;
    a.right = !1;
    a.a = !1;
    a.b = !1;
    a.select = !1;
    a.start = !1;
    a.memoryLocationJoypadRegister = 65280;
    a.joypadRegisterFlipped = 0;
    a.isDpadType = !1;
    a.isButtonType = !1;
    a.saveStateSlot = 3;
    return a;
  }();

  function La(a) {
    var c = n.isStopped = !1;
    Ma(a) || (c = !0);
    Na(a, !0);
    c && (c = !1, 3 >= a && (c = !0), a = !1, S.isDpadType && c && (a = !0), S.isButtonType && !c && (a = !0), a && (Q.isJoypadInterruptRequested = !0, Ga(Q.bitPositionJoypadInterrupt)));
  }

  function Ma(a) {
    switch (a) {
      case 0:
        return S.up;

      case 1:
        return S.right;

      case 2:
        return S.down;

      case 3:
        return S.left;

      case 4:
        return S.a;

      case 5:
        return S.b;

      case 6:
        return S.select;

      case 7:
        return S.start;

      default:
        return !1;
    }
  }

  function Na(a, c) {
    switch (a) {
      case 0:
        S.up = c;
        break;

      case 1:
        S.right = c;
        break;

      case 2:
        S.down = c;
        break;

      case 3:
        S.left = c;
        break;

      case 4:
        S.a = c;
        break;

      case 5:
        S.b = c;
        break;

      case 6:
        S.select = c;
        break;

      case 7:
        S.start = c;
    }
  }

  function Oa(a, c, d) {
    for (var e = 0; e < d; e++) {
      for (var g = Pa(a + e), p = c + e; 40959 < p;) p -= 8192;

      Qa(p, g) && F(p, g);
    }

    a = 32;
    n.GBCDoubleSpeed && (a = 64);
    V.DMACycles += d / 16 * a;
  }

  function Qa(a, c) {
    if (a === n.memoryLocationSpeedSwitch) return F(n.memoryLocationSpeedSwitch, c & 1), !1;
    var d = V.videoRamLocation,
        e = V.spriteInformationTableLocation;

    if (a < d) {
      if (!V.isRomOnly) if (8191 >= a) {
        if (!V.isMBC2 || m(4, c)) c &= 15, 0 === c ? V.isRamBankingEnabled = !1 : 10 === c && (V.isRamBankingEnabled = !0);
      } else 16383 >= a ? !V.isMBC5 || 12287 >= a ? (V.isMBC2 && (V.currentRomBank = c & 15), V.isMBC1 ? (c &= 31, V.currentRomBank &= 224) : V.isMBC3 ? (c &= 127, V.currentRomBank &= 128) : V.isMBC5 && (V.currentRomBank &= 0), V.currentRomBank |= c) : (a = 0, d = V.currentRomBank & 255, 0 < c && (a = 1), V.currentRomBank = h$1(a, d)) : !V.isMBC2 && 24575 >= a ? V.isMBC1 && V.isMBC1RomModeEnabled ? (V.currentRomBank &= 31, V.currentRomBank |= c & 224) : (c = V.isMBC5 ? c & 15 : c & 3, V.currentRamBank = c) : !V.isMBC2 && 32767 >= a && V.isMBC1 && (m(0, c) ? V.isMBC1RomModeEnabled = !0 : V.isMBC1RomModeEnabled = !1);
      return !1;
    }

    if (a >= d && a < V.cartridgeRamLocation) return !0;
    if (a >= V.echoRamLocation && a < e) return F(a - 8192, c), !0;
    if (a >= e && a <= V.spriteInformationTableLocationEnd) return 2 > W.currentLcdMode ? !1 : !0;
    if (a >= V.unusableMemoryLocation && a <= V.unusableMemoryEndLocation) return !1;

    if (65296 <= a && 65318 >= a) {
      za();

      if (a === P.memoryLocationNR52 || P.NR52IsSoundEnabled) {
        switch (a) {
          case G.memoryLocationNRx0:
            G.updateNRx0(c);
            break;

          case L.memoryLocationNRx0:
            L.updateNRx0(c);
            break;

          case G.memoryLocationNRx1:
            G.updateNRx1(c);
            break;

          case H.memoryLocationNRx1:
            H.updateNRx1(c);
            break;

          case L.memoryLocationNRx1:
            L.updateNRx1(c);
            break;

          case M.memoryLocationNRx1:
            M.updateNRx1(c);
            break;

          case G.memoryLocationNRx2:
            G.updateNRx2(c);
            break;

          case H.memoryLocationNRx2:
            H.updateNRx2(c);
            break;

          case L.memoryLocationNRx2:
            L.volumeCodeChanged = !0;
            L.updateNRx2(c);
            break;

          case M.memoryLocationNRx2:
            M.updateNRx2(c);
            break;

          case G.memoryLocationNRx3:
            G.updateNRx3(c);
            break;

          case H.memoryLocationNRx3:
            H.updateNRx3(c);
            break;

          case L.memoryLocationNRx3:
            L.updateNRx3(c);
            break;

          case M.memoryLocationNRx3:
            M.updateNRx3(c);
            break;

          case G.memoryLocationNRx4:
            m(7, c) && (G.updateNRx4(c), G.trigger());
            break;

          case H.memoryLocationNRx4:
            m(7, c) && (H.updateNRx4(c), H.trigger());
            break;

          case L.memoryLocationNRx4:
            m(7, c) && (L.updateNRx4(c), L.trigger());
            break;

          case M.memoryLocationNRx4:
            m(7, c) && (M.updateNRx4(c), M.trigger());
            break;

          case P.memoryLocationNR50:
            P.updateNR50(c);
            O.mixerVolumeChanged = !0;
            break;

          case P.memoryLocationNR51:
            P.updateNR51(c);
            O.mixerEnabledChanged = !0;
            break;

          case P.memoryLocationNR52:
            if (P.updateNR52(c), !m(7, c)) for (c = 65296; 65318 > c; c++) F(c, 0);
        }

        c = !0;
      } else c = !1;

      return c;
    }

    65328 <= a && 65343 >= a && za();

    if (a >= W.memoryLocationLcdControl && a <= B.memoryLocationWindowX) {
      if (a === W.memoryLocationLcdControl) return W.updateLcdControl(c), !0;
      if (a === W.memoryLocationLcdStatus) return W.updateLcdStatus(c), !1;
      if (a === B.memoryLocationScanlineRegister) return B.scanlineRegister = 0, F(a, 0), !1;
      if (a === W.memoryLocationCoincidenceCompare) return W.coincidenceCompare = c, !0;

      if (a === B.memoryLocationDmaTransfer) {
        c <<= 8;

        for (a = 0; 159 >= a; a++) d = A(c + a), F(V.spriteInformationTableLocation + a, d);

        V.DMACycles = 644;
        return !0;
      }

      switch (a) {
        case B.memoryLocationScrollX:
          B.scrollX = c;
          break;

        case B.memoryLocationScrollY:
          B.scrollY = c;
          break;

        case B.memoryLocationWindowX:
          B.windowX = c;
          break;

        case B.memoryLocationWindowY:
          B.windowY = c;
      }

      return !0;
    }

    if (a === V.memoryLocationHdmaTrigger) return n.GBCEnabled && (V.isHblankHdmaActive && !m(7, c) ? (V.isHblankHdmaActive = !1, c = A(V.memoryLocationHdmaTrigger), F(V.memoryLocationHdmaTrigger, c | 128)) : (a = A(V.memoryLocationHdmaSourceHigh), d = A(V.memoryLocationHdmaSourceLow), a = h$1(a, d) & 65520, d = A(V.memoryLocationHdmaDestinationHigh), e = A(V.memoryLocationHdmaDestinationLow), d = h$1(d, e), d = (d & 8176) + V.videoRamLocation, e = l(7, c), e = 16 * (e + 1), m(7, c) ? (V.isHblankHdmaActive = !0, V.hblankHdmaTransferLengthRemaining = e, V.hblankHdmaSource = a, V.hblankHdmaDestination = d, F(V.memoryLocationHdmaTrigger, l(7, c))) : (Oa(a, d, e), F(V.memoryLocationHdmaTrigger, 255)))), !1;
    if ((a === V.memoryLocationGBCWRAMBank || a === V.memoryLocationGBCVRAMBank) && V.isHblankHdmaActive && (16384 <= V.hblankHdmaSource && 32767 >= V.hblankHdmaSource || 53248 <= V.hblankHdmaSource && 57343 >= V.hblankHdmaSource)) return !1;

    if (a >= ia.memoryLocationBackgroundPaletteIndex && a <= ia.memoryLocationSpritePaletteData) {
      if (a === ia.memoryLocationBackgroundPaletteData || a === ia.memoryLocationSpritePaletteData) {
        d = A(a - 1);
        d = l(6, d);
        e = !1;
        a === ia.memoryLocationSpritePaletteData && (e = !0);
        var g = d & 63;
        e && (g += 64);
        b$1[67584 + g] = c;
        c = d;
        --a;
        m(7, c) && F(a, c + 1 | 128);
      }

      return !0;
    }

    if (a >= R.memoryLocationDividerRegister && a <= R.memoryLocationTimerControl) {
      Ka(R.currentCycles);
      R.currentCycles = 0;

      switch (a) {
        case R.memoryLocationDividerRegister:
          return R.updateDividerRegister(c), !1;

        case R.memoryLocationTimerCounter:
          R.updateTimerCounter(c);
          break;

        case R.memoryLocationTimerModulo:
          R.updateTimerModulo(c);
          break;

        case R.memoryLocationTimerControl:
          R.updateTimerControl(c);
      }

      return !0;
    }

    a === S.memoryLocationJoypadRegister && S.updateJoypad(c);
    if (a === Q.memoryLocationInterruptRequest) return Q.updateInterruptRequested(c), !0;
    a === Q.memoryLocationInterruptEnabled && Q.updateInterruptEnabled(c);
    return !0;
  }

  function Sa(a) {
    switch (a >> 12) {
      case 0:
      case 1:
      case 2:
      case 3:
        return a + 850944;

      case 4:
      case 5:
      case 6:
      case 7:
        var c = V.currentRomBank;
        V.isMBC5 || 0 !== c || (c = 1);
        return 16384 * c + (a - V.switchableCartridgeRomLocation) + 850944;

      case 8:
      case 9:
        return c = 0, n.GBCEnabled && (c = A(V.memoryLocationGBCVRAMBank) & 1), a - V.videoRamLocation + 2048 + 8192 * c;

      case 10:
      case 11:
        return 8192 * V.currentRamBank + (a - V.cartridgeRamLocation) + 719872;

      case 12:
        return a - V.internalRamBankZeroLocation + 18432;

      case 13:
        return c = 0, n.GBCEnabled && (c = A(V.memoryLocationGBCWRAMBank) & 7), 1 > c && (c = 1), a - V.internalRamBankZeroLocation + 18432 + 4096 * (c - 1);

      default:
        return a - V.echoRamLocation + 51200;
    }
  }

  function F(a, c) {
    a = Sa(a);
    b$1[a] = c;
  }

  function C(a, c) {
    b$1[a] = c ? 1 : 0;
  }

  var W = function () {
    function a() {}

    a.updateLcdStatus = function (c) {
      var d = A(a.memoryLocationLcdStatus);
      c = c & 248 | d & 7 | 128;
      F(a.memoryLocationLcdStatus, c);
    };

    a.updateLcdControl = function (c) {
      a.enabled = m(7, c);
      a.windowTileMapDisplaySelect = m(6, c);
      a.windowDisplayEnabled = m(5, c);
      a.bgWindowTileDataSelect = m(4, c);
      a.bgTileMapDisplaySelect = m(3, c);
      a.tallSpriteSize = m(2, c);
      a.spriteDisplayEnable = m(1, c);
      a.bgDisplayEnabled = m(0, c);
    };

    a.memoryLocationLcdStatus = 65345;
    a.currentLcdMode = 0;
    a.memoryLocationCoincidenceCompare = 65349;
    a.coincidenceCompare = 0;
    a.memoryLocationLcdControl = 65344;
    a.enabled = !0;
    a.windowTileMapDisplaySelect = !1;
    a.windowDisplayEnabled = !1;
    a.bgWindowTileDataSelect = !1;
    a.bgTileMapDisplaySelect = !1;
    a.tallSpriteSize = !1;
    a.spriteDisplayEnable = !1;
    a.bgDisplayEnabled = !1;
    return a;
  }();

  function Ta(a, c, d, e, g, p) {
    for (var D = e >> 3; 160 > g; g++) {
      var v = g + p;
      256 <= v && (v -= 256);
      var I = d + 32 * D + (v >> 3),
          w = ra(I, 0),
          J = !1;

      if (f$1.tileCaching) {
        var x = g;
        var y = a,
            T = v,
            N = I,
            U = w,
            K = 0;

        if (0 < y && 8 < x && U === oa.tileId && x === oa.nextXIndexToPerformCacheCheck) {
          var xa = U = !1;
          m(5, A(N - 1)) && (U = !0);
          m(5, A(N)) && (xa = !0);

          for (N = 0; 8 > N; N++) if (U !== xa && (N = 7 - N), 160 >= x + N) {
            for (var ya = x - (8 - N), tb = 93184 + 3 * (160 * y + (x + N)), Ra = 0; 3 > Ra; Ra++) Ua(x + N, y, Ra, b$1[tb + Ra]);

            ya = b$1[69632 + (160 * y + ya)];
            na(x + N, y, l(2, ya), m(2, ya));
            K++;
          }
        } else oa.tileId = U;

        x >= oa.nextXIndexToPerformCacheCheck && (oa.nextXIndexToPerformCacheCheck = x + 8, y = T % 8, x < y && (oa.nextXIndexToPerformCacheCheck += y));
        x = K;
        0 < x && (g += x - 1, J = !0);
      }

      f$1.tileRendering && !J ? (J = g, x = a, K = c, y = e % 8, T = 0, 0 == J && (T = v - v / 8 * 8), v = 7, 160 < J + 8 && (v = 160 - J), U = -1, xa = 0, n.GBCEnabled && (U = ra(I, 1), m(3, U) && (xa = 1), m(6, U) && (y = 7 - y)), x = pa(w, K, xa, T, v, y, J, x, 160, 93184, !1, 0, U), 0 < x && (g += x - 1)) : J || (n.GBCEnabled ? (J = g, x = a, y = e, K = qa(c, w), I = ra(I, 1), y %= 8, m(6, I) && (y = 7 - y), T = 0, m(3, I) && (T = 1), w = ra(K + 2 * y, T), K = ra(K + 2 * y + 1, T), y = v % 8, m(5, I) || (y = 7 - y), v = 0, m(y, K) && (v = v + 1 << 1), m(y, w) && (v += 1), y = ka(I & 7, v, !1), w = ma(0, y), K = ma(1, y), y = ma(2, y), Ua(J, x, 0, w), Ua(J, x, 1, K), Ua(J, x, 2, y), na(J, x, v, m(7, I))) : (I = g, J = a, K = e, x = qa(c, w), K %= 8, w = ra(x + 2 * K, 0), x = ra(x + 2 * K + 1, 0), K = 7 - v % 8, v = 0, m(K, x) && (v = v + 1 << 1), m(K, w) && (v += 1), w = ja(v, B.memoryLocationBackgroundPalette), Ua(I, J, 0, w), Ua(I, J, 1, w), Ua(I, J, 2, w), na(I, J, v)));
    }
  }

  var B = function () {
    function a() {}

    a.batchProcessCycles = function () {
      return a.MAX_CYCLES_PER_SCANLINE();
    };

    a.MAX_CYCLES_PER_SCANLINE = function () {
      return n.GBCDoubleSpeed ? 153 === a.scanlineRegister ? 8 : 912 : 153 === a.scanlineRegister ? 4 : 456;
    };

    a.MIN_CYCLES_SPRITES_LCD_MODE = function () {
      return n.GBCDoubleSpeed ? 752 : 376;
    };

    a.MIN_CYCLES_TRANSFER_DATA_LCD_MODE = function () {
      return n.GBCDoubleSpeed ? 498 : 249;
    };

    a.saveState = function () {
      b$1[1024 + 50 * a.saveStateSlot] = a.scanlineCycleCounter;
      b$1[1028 + 50 * a.saveStateSlot] = W.currentLcdMode;
      F(a.memoryLocationScanlineRegister, a.scanlineRegister);
    };

    a.loadState = function () {
      a.scanlineCycleCounter = b$1[1024 + 50 * a.saveStateSlot];
      W.currentLcdMode = b$1[1028 + 50 * a.saveStateSlot];
      a.scanlineRegister = A(a.memoryLocationScanlineRegister);
      W.updateLcdControl(A(W.memoryLocationLcdControl));
    };

    a.currentCycles = 0;
    a.scanlineCycleCounter = 0;
    a.memoryLocationScanlineRegister = 65348;
    a.scanlineRegister = 0;
    a.memoryLocationDmaTransfer = 65350;
    a.memoryLocationScrollX = 65347;
    a.scrollX = 0;
    a.memoryLocationScrollY = 65346;
    a.scrollY = 0;
    a.memoryLocationWindowX = 65355;
    a.windowX = 0;
    a.memoryLocationWindowY = 65354;
    a.windowY = 0;
    a.memoryLocationTileMapSelectZeroStart = 38912;
    a.memoryLocationTileMapSelectOneStart = 39936;
    a.memoryLocationTileDataSelectZeroStart = 34816;
    a.memoryLocationTileDataSelectOneStart = 32768;
    a.memoryLocationSpriteAttributesTable = 65024;
    a.memoryLocationBackgroundPalette = 65351;
    a.memoryLocationSpritePaletteOne = 65352;
    a.memoryLocationSpritePaletteTwo = 65353;
    a.saveStateSlot = 1;
    return a;
  }();

  function Va(a) {
    if (W.enabled) for (B.scanlineCycleCounter += a; B.scanlineCycleCounter >= B.MAX_CYCLES_PER_SCANLINE();) {
      B.scanlineCycleCounter -= B.MAX_CYCLES_PER_SCANLINE();
      a = B.scanlineRegister;

      if (144 === a) {
        if (f$1.graphicsDisableScanlineRendering) for (var c = 0; 144 >= c; c++) Wa(c);else Wa(a);

        for (c = 0; 144 > c; c++) for (var d = 0; 160 > d; d++) b$1[69632 + (160 * c + d)] = 0;

        oa.tileId = -1;
        oa.nextXIndexToPerformCacheCheck = -1;
      } else 144 > a && (f$1.graphicsDisableScanlineRendering || Wa(a));

      a = 153 < a ? 0 : a + 1;
      B.scanlineRegister = a;
    }

    if (W.enabled) {
      if (a = B.scanlineRegister, d = W.currentLcdMode, c = 0, 144 <= a ? c = 1 : B.scanlineCycleCounter >= B.MIN_CYCLES_SPRITES_LCD_MODE() ? c = 2 : B.scanlineCycleCounter >= B.MIN_CYCLES_TRANSFER_DATA_LCD_MODE() && (c = 3), d !== c) {
        d = A(W.memoryLocationLcdStatus);
        W.currentLcdMode = c;
        var e = !1;

        switch (c) {
          case 0:
            d = l(0, d);
            d = l(1, d);
            e = m(3, d);
            break;

          case 1:
            d = l(1, d);
            d |= 1;
            e = m(4, d);
            break;

          case 2:
            d = l(0, d);
            d |= 2;
            e = m(5, d);
            break;

          case 3:
            d |= 3;
        }

        e && (Q.isLcdInterruptRequested = !0, Ga(Q.bitPositionLcdInterrupt));
        0 === c && V.isHblankHdmaActive && (e = 16, V.hblankHdmaTransferLengthRemaining < e && (e = V.hblankHdmaTransferLengthRemaining), Oa(V.hblankHdmaSource, V.hblankHdmaDestination, e), V.hblankHdmaSource += e, V.hblankHdmaDestination += e, V.hblankHdmaTransferLengthRemaining -= e, 0 >= V.hblankHdmaTransferLengthRemaining ? (V.isHblankHdmaActive = !1, F(V.memoryLocationHdmaTrigger, 255)) : F(V.memoryLocationHdmaTrigger, l(7, V.hblankHdmaTransferLengthRemaining / 16 - 1)));
        1 === c && (Q.isVBlankInterruptRequested = !0, Ga(Q.bitPositionVBlankInterrupt));
        e = W.coincidenceCompare;
        0 !== c && 1 !== c || a !== e ? d = l(2, d) : (d |= 4, m(6, d) && (Q.isLcdInterruptRequested = !0, Ga(Q.bitPositionLcdInterrupt)));
        F(W.memoryLocationLcdStatus, d);
      }
    } else B.scanlineCycleCounter = 0, B.scanlineRegister = 0, F(B.memoryLocationScanlineRegister, 0), d = A(W.memoryLocationLcdStatus), d = l(1, d), d = l(0, d), W.currentLcdMode = 0, F(W.memoryLocationLcdStatus, d);
  }

  function Wa(a) {
    var c = B.memoryLocationTileDataSelectZeroStart;
    W.bgWindowTileDataSelect && (c = B.memoryLocationTileDataSelectOneStart);

    if (n.GBCEnabled || W.bgDisplayEnabled) {
      var d = B.memoryLocationTileMapSelectZeroStart;
      W.bgTileMapDisplaySelect && (d = B.memoryLocationTileMapSelectOneStart);
      var e = B.scrollX,
          g = a + B.scrollY;
      256 <= g && (g -= 256);
      Ta(a, c, d, g, 0, e);
    }

    W.windowDisplayEnabled && (d = B.memoryLocationTileMapSelectZeroStart, W.windowTileMapDisplaySelect && (d = B.memoryLocationTileMapSelectOneStart), e = B.windowX, g = B.windowY, a < g || (e -= 7, Ta(a, c, d, a - g, e, -1 * e)));
    if (W.spriteDisplayEnable) for (c = W.tallSpriteSize, d = 39; 0 <= d; d--) {
      g = 4 * d;
      var p = A(B.memoryLocationSpriteAttributesTable + g);
      e = A(B.memoryLocationSpriteAttributesTable + g + 1);
      var D = A(B.memoryLocationSpriteAttributesTable + g + 2);
      p -= 16;
      e -= 8;
      var v = 8;
      c && (v = 16, 1 === D % 2 && --D);

      if (a >= p && a < p + v) {
        g = A(B.memoryLocationSpriteAttributesTable + g + 3);
        var I = m(7, g),
            w = m(6, g),
            J = m(5, g);
        p = a - p;
        w && (p -= v, p *= -1, --p);
        p *= 2;
        D = qa(B.memoryLocationTileDataSelectOneStart, D);
        v = D += p;
        p = 0;
        n.GBCEnabled && m(3, g) && (p = 1);
        D = ra(v, p);
        v = ra(v + 1, p);

        for (p = 7; 0 <= p; p--) {
          w = p;
          J && (w -= 7, w *= -1);
          var x = 0;
          m(w, v) && (x += 1, x <<= 1);
          m(w, D) && (x += 1);

          if (0 !== x && (w = e + (7 - p), 0 <= w && 160 >= w)) {
            var y = !1,
                T = !1,
                N = !1;
            n.GBCEnabled && !W.bgDisplayEnabled && (y = !0);

            if (!y) {
              var U = b$1[69632 + (160 * a + w)],
                  K = U & 3;
              I && 0 < K ? T = !0 : n.GBCEnabled && m(2, U) && 0 < K && (N = !0);
            }

            if (y || !T && !N) n.GBCEnabled ? (T = ka(g & 7, x, !0), x = ma(0, T), y = ma(1, T), T = ma(2, T), Ua(w, a, 0, x), Ua(w, a, 1, y), Ua(w, a, 2, T)) : (y = B.memoryLocationSpritePaletteOne, m(4, g) && (y = B.memoryLocationSpritePaletteTwo), x = ja(x, y), Ua(w, a, 0, x), Ua(w, a, 1, x), Ua(w, a, 2, x));
          }
        }
      }
    }
  }

  function Ua(a, c, d, e) {
    b$1[93184 + 3 * (160 * c + a) + d] = e;
  }

  function ra(a, c) {
    return b$1[a - V.videoRamLocation + 2048 + 8192 * (c & 1)];
  }

  function Xa(a) {
    var c = V.videoRamLocation;
    return a < c || a >= c && a < V.cartridgeRamLocation ? -1 : a >= V.echoRamLocation && a < V.spriteInformationTableLocation ? A(a - 8192) : a >= V.spriteInformationTableLocation && a <= V.spriteInformationTableLocationEnd ? 2 > W.currentLcdMode ? 255 : -1 : a === n.memoryLocationSpeedSwitch ? (a = 255, c = A(n.memoryLocationSpeedSwitch), m(0, c) || (a = l(0, a)), n.GBCDoubleSpeed || (a = l(7, a)), a) : a === B.memoryLocationScanlineRegister ? (F(a, B.scanlineRegister), B.scanlineRegister) : 65296 <= a && 65318 >= a ? (za(), a = a === P.memoryLocationNR52 ? A(P.memoryLocationNR52) & 128 | 112 : -1, a) : 65328 <= a && 65343 >= a ? (za(), -1) : a === R.memoryLocationDividerRegister ? (c = k(R.dividerRegister), F(a, c), c) : a === R.memoryLocationTimerCounter ? (F(a, R.timerCounter), R.timerCounter) : a === Q.memoryLocationInterruptRequest ? 224 | Q.interruptsRequestedValue : a === S.memoryLocationJoypadRegister ? (a = S.joypadRegisterFlipped, S.isDpadType ? (a = S.up ? l(2, a) : a | 4, a = S.right ? l(0, a) : a | 1, a = S.down ? l(3, a) : a | 8, a = S.left ? l(1, a) : a | 2) : S.isButtonType && (a = S.a ? l(0, a) : a | 1, a = S.b ? l(1, a) : a | 2, a = S.select ? l(2, a) : a | 4, a = S.start ? l(3, a) : a | 8), a | 240) : -1;
  }

  function A(a) {
    return b$1[Sa(a)];
  }

  function Pa(a) {
    var c = Xa(a);

    switch (c) {
      case -1:
        return A(a);

      default:
        return c;
    }
  }

  function E(a) {
    return 0 < b$1[a] ? !0 : !1;
  }

  var V = function () {
    function a() {}

    a.saveState = function () {
      b$1[1024 + 50 * a.saveStateSlot] = a.currentRomBank;
      b$1[1026 + 50 * a.saveStateSlot] = a.currentRamBank;
      C(1028 + 50 * a.saveStateSlot, a.isRamBankingEnabled);
      C(1029 + 50 * a.saveStateSlot, a.isMBC1RomModeEnabled);
      C(1030 + 50 * a.saveStateSlot, a.isRomOnly);
      C(1031 + 50 * a.saveStateSlot, a.isMBC1);
      C(1032 + 50 * a.saveStateSlot, a.isMBC2);
      C(1033 + 50 * a.saveStateSlot, a.isMBC3);
      C(1034 + 50 * a.saveStateSlot, a.isMBC5);
    };

    a.loadState = function () {
      a.currentRomBank = b$1[1024 + 50 * a.saveStateSlot];
      a.currentRamBank = b$1[1026 + 50 * a.saveStateSlot];
      a.isRamBankingEnabled = E(1028 + 50 * a.saveStateSlot);
      a.isMBC1RomModeEnabled = E(1029 + 50 * a.saveStateSlot);
      a.isRomOnly = E(1030 + 50 * a.saveStateSlot);
      a.isMBC1 = E(1031 + 50 * a.saveStateSlot);
      a.isMBC2 = E(1032 + 50 * a.saveStateSlot);
      a.isMBC3 = E(1033 + 50 * a.saveStateSlot);
      a.isMBC5 = E(1034 + 50 * a.saveStateSlot);
    };

    a.cartridgeRomLocation = 0;
    a.switchableCartridgeRomLocation = 16384;
    a.videoRamLocation = 32768;
    a.cartridgeRamLocation = 40960;
    a.internalRamBankZeroLocation = 49152;
    a.internalRamBankOneLocation = 53248;
    a.echoRamLocation = 57344;
    a.spriteInformationTableLocation = 65024;
    a.spriteInformationTableLocationEnd = 65183;
    a.unusableMemoryLocation = 65184;
    a.unusableMemoryEndLocation = 65279;
    a.currentRomBank = 0;
    a.currentRamBank = 0;
    a.isRamBankingEnabled = !1;
    a.isMBC1RomModeEnabled = !0;
    a.isRomOnly = !0;
    a.isMBC1 = !1;
    a.isMBC2 = !1;
    a.isMBC3 = !1;
    a.isMBC5 = !1;
    a.memoryLocationHdmaSourceHigh = 65361;
    a.memoryLocationHdmaSourceLow = 65362;
    a.memoryLocationHdmaDestinationHigh = 65363;
    a.memoryLocationHdmaDestinationLow = 65364;
    a.memoryLocationHdmaTrigger = 65365;
    a.DMACycles = 0;
    a.isHblankHdmaActive = !1;
    a.hblankHdmaTransferLengthRemaining = 0;
    a.hblankHdmaSource = 0;
    a.hblankHdmaDestination = 0;
    a.memoryLocationGBCVRAMBank = 65359;
    a.memoryLocationGBCWRAMBank = 65392;
    a.saveStateSlot = 4;
    return a;
  }(),
      n = function () {
    function a() {}

    a.CLOCK_SPEED = function () {
      return a.GBCDoubleSpeed ? 8388608 : 4194304;
    };

    a.MAX_CYCLES_PER_FRAME = function () {
      return a.GBCDoubleSpeed ? 140448 : 70224;
    };

    a.enableHalt = function () {
      Q.masterInterruptSwitch ? a.isHaltNormal = !0 : 0 === (Q.interruptsEnabledValue & Q.interruptsRequestedValue & 31) ? a.isHaltNoJump = !0 : a.isHaltBug = !0;
    };

    a.exitHaltAndStop = function () {
      a.isHaltNoJump = !1;
      a.isHaltNormal = !1;
      a.isHaltBug = !1;
      a.isStopped = !1;
    };

    a.isHalted = function () {
      return a.isHaltNormal || a.isHaltNoJump ? !0 : !1;
    };

    a.saveState = function () {
      b$1[1024 + 50 * a.saveStateSlot] = a.registerA;
      b$1[1025 + 50 * a.saveStateSlot] = a.registerB;
      b$1[1026 + 50 * a.saveStateSlot] = a.registerC;
      b$1[1027 + 50 * a.saveStateSlot] = a.registerD;
      b$1[1028 + 50 * a.saveStateSlot] = a.registerE;
      b$1[1029 + 50 * a.saveStateSlot] = a.registerH;
      b$1[1030 + 50 * a.saveStateSlot] = a.registerL;
      b$1[1031 + 50 * a.saveStateSlot] = a.registerF;
      b$1[1032 + 50 * a.saveStateSlot] = a.stackPointer;
      b$1[1034 + 50 * a.saveStateSlot] = a.programCounter;
      b$1[1036 + 50 * a.saveStateSlot] = a.currentCycles;
      C(1041 + 50 * a.saveStateSlot, a.isHaltNormal);
      C(1042 + 50 * a.saveStateSlot, a.isHaltNoJump);
      C(1043 + 50 * a.saveStateSlot, a.isHaltBug);
      C(1044 + 50 * a.saveStateSlot, a.isStopped);
    };

    a.loadState = function () {
      a.registerA = b$1[1024 + 50 * a.saveStateSlot];
      a.registerB = b$1[1025 + 50 * a.saveStateSlot];
      a.registerC = b$1[1026 + 50 * a.saveStateSlot];
      a.registerD = b$1[1027 + 50 * a.saveStateSlot];
      a.registerE = b$1[1028 + 50 * a.saveStateSlot];
      a.registerH = b$1[1029 + 50 * a.saveStateSlot];
      a.registerL = b$1[1030 + 50 * a.saveStateSlot];
      a.registerF = b$1[1031 + 50 * a.saveStateSlot];
      a.stackPointer = b$1[1032 + 50 * a.saveStateSlot];
      a.programCounter = b$1[1034 + 50 * a.saveStateSlot];
      a.currentCycles = b$1[1036 + 50 * a.saveStateSlot];
      a.isHaltNormal = E(1041 + 50 * a.saveStateSlot);
      a.isHaltNoJump = E(1042 + 50 * a.saveStateSlot);
      a.isHaltBug = E(1043 + 50 * a.saveStateSlot);
      a.isStopped = E(1044 + 50 * a.saveStateSlot);
    };

    a.GBCEnabled = !1;
    a.memoryLocationSpeedSwitch = 65357;
    a.GBCDoubleSpeed = !1;
    a.registerA = 0;
    a.registerB = 0;
    a.registerC = 0;
    a.registerD = 0;
    a.registerE = 0;
    a.registerH = 0;
    a.registerL = 0;
    a.registerF = 0;
    a.stackPointer = 0;
    a.programCounter = 0;
    a.currentCycles = 0;
    a.isHaltNormal = !1;
    a.isHaltNoJump = !1;
    a.isHaltBug = !1;
    a.isStopped = !1;
    a.saveStateSlot = 0;
    return a;
  }();

  function Ya(a) {
    z(n.registerA, a);
    fa(n.registerA, a);
    n.registerA = n.registerA + a & 255;
    0 === n.registerA ? q(1) : q(0);
    r$1(0);
  }

  function Za(a) {
    var c = n.registerA + a + ea() & 255;
    0 != ((n.registerA ^ a ^ c) & 16) ? t(1) : t(0);
    0 < (n.registerA + a + ea() & 256) ? u(1) : u(0);
    n.registerA = c;
    0 === n.registerA ? q(1) : q(0);
    r$1(0);
  }

  function $a(a) {
    var c = -1 * a;
    z(n.registerA, c);
    fa(n.registerA, c);
    n.registerA = n.registerA - a & 255;
    0 === n.registerA ? q(1) : q(0);
    r$1(1);
  }

  function ab(a) {
    var c = n.registerA - a - ea() & 255;
    0 != ((n.registerA ^ a ^ c) & 16) ? t(1) : t(0);
    0 < (n.registerA - a - ea() & 256) ? u(1) : u(0);
    n.registerA = c;
    0 === n.registerA ? q(1) : q(0);
    r$1(1);
  }

  function bb(a) {
    n.registerA &= a;
    0 === n.registerA ? q(1) : q(0);
    r$1(0);
    t(1);
    u(0);
  }

  function cb(a) {
    n.registerA = (n.registerA ^ a) & 255;
    0 === n.registerA ? q(1) : q(0);
    r$1(0);
    t(0);
    u(0);
  }

  function db(a) {
    n.registerA |= a;
    0 === n.registerA ? q(1) : q(0);
    r$1(0);
    t(0);
    u(0);
  }

  function eb(a) {
    a *= -1;
    z(n.registerA, a);
    fa(n.registerA, a);
    0 === n.registerA + a ? q(1) : q(0);
    r$1(1);
  }

  function fb(a, c) {
    0 === (c & 1 << a) ? q(1) : q(0);
    r$1(0);
    t(1);
    return c;
  }

  function gb(a, c, d) {
    return 0 < c ? d | 1 << a : d & ~(1 << a);
  }

  function hb(a) {
    a = ba(a);
    n.programCounter = n.programCounter + a & 65535;
    n.programCounter = n.programCounter + 1 & 65535;
  }

  function ib(a) {
    n.programCounter = n.programCounter + 1 & 65535;
    n.isHaltBug && (n.programCounter = n.programCounter - 1 & 65535);

    switch ((a & 240) >> 4) {
      case 0:
        return jb(a);

      case 1:
        return kb(a);

      case 2:
        return lb(a);

      case 3:
        return mb(a);

      case 4:
        return nb(a);

      case 5:
        return ob(a);

      case 6:
        return pb(a);

      case 7:
        return qb(a);

      case 8:
        return rb(a);

      case 9:
        return sb(a);

      case 10:
        return ub(a);

      case 11:
        return vb(a);

      case 12:
        return wb(a);

      case 13:
        return xb(a);

      case 14:
        return yb(a);

      default:
        return zb(a);
    }
  }

  function X(a) {
    Ab(4);
    return Pa(a);
  }

  function Y(a, c) {
    Ab(4);
    Qa(a, c) && F(a, c);
  }

  function Bb(a) {
    Ab(8);
    var c = Xa(a);

    switch (c) {
      case -1:
        c = A(a);
    }

    a += 1;
    var d = Xa(a);

    switch (d) {
      case -1:
        a = A(a);
        break;

      default:
        a = d;
    }

    return h$1(a, c);
  }

  function Cb(a, c) {
    Ab(8);
    var d = k(c);
    c &= 255;
    var e = a + 1;
    Qa(a, c) && F(a, c);
    Qa(e, d) && F(e, d);
  }

  function Z() {
    Ab(4);
    return A(n.programCounter);
  }

  function Db() {
    Ab(4);
    var a = A(n.programCounter + 1 & 65535);
    return h$1(a, Z());
  }

  function jb(a) {
    switch (a) {
      case 0:
        return 4;

      case 1:
        return a = Db(), n.registerB = k(a), n.registerC = a & 255, n.programCounter = n.programCounter + 2 & 65535, 4;

      case 2:
        return Y(h$1(n.registerB, n.registerC), n.registerA), 4;

      case 3:
        return a = h$1(n.registerB, n.registerC), a++, n.registerB = k(a), n.registerC = a & 255, 8;

      case 4:
        return z(n.registerB, 1), n.registerB = n.registerB + 1 & 255, 0 === n.registerB ? q(1) : q(0), r$1(0), 4;

      case 5:
        return z(n.registerB, -1), n.registerB = n.registerB - 1 & 255, 0 === n.registerB ? q(1) : q(0), r$1(1), 4;

      case 6:
        return n.registerB = Z(), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 7:
        128 === (n.registerA & 128) ? u(1) : u(0);
        a = n;
        var c = n.registerA;
        a.registerA = (c << 1 | c >> 7) & 255;
        q(0);
        r$1(0);
        t(0);
        return 4;

      case 8:
        return Cb(Db(), n.stackPointer), n.programCounter = n.programCounter + 2 & 65535, 4;

      case 9:
        return a = h$1(n.registerH, n.registerL), c = h$1(n.registerB, n.registerC), ha(a, c, !1), a = a + c & 65535, n.registerH = k(a), n.registerL = a & 255, r$1(0), 8;

      case 10:
        return n.registerA = X(h$1(n.registerB, n.registerC)), 4;

      case 11:
        return a = h$1(n.registerB, n.registerC), a = a - 1 & 65535, n.registerB = k(a), n.registerC = a & 255, 8;

      case 12:
        return z(n.registerC, 1), n.registerC = n.registerC + 1 & 255, 0 === n.registerC ? q(1) : q(0), r$1(0), 4;

      case 13:
        return z(n.registerC, -1), n.registerC = n.registerC - 1 & 255, 0 === n.registerC ? q(1) : q(0), r$1(1), 4;

      case 14:
        return n.registerC = Z(), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 15:
        return 0 < (n.registerA & 1) ? u(1) : u(0), a = n, c = n.registerA, a.registerA = (c >> 1 | c << 7) & 255, q(0), r$1(0), t(0), 4;
    }

    return -1;
  }

  function kb(a) {
    switch (a) {
      case 16:
        if (n.GBCEnabled && (a = X(n.memoryLocationSpeedSwitch), m(0, a))) return a = l(0, a), m(7, a) ? (n.GBCDoubleSpeed = !1, a = l(7, a)) : (n.GBCDoubleSpeed = !0, a |= 128), Y(n.memoryLocationSpeedSwitch, a), 68;
        n.isStopped = !0;
        n.programCounter = n.programCounter + 1 & 65535;
        return 4;

      case 17:
        return a = Db(), n.registerD = k(a), n.registerE = a & 255, n.programCounter = n.programCounter + 2 & 65535, 4;

      case 18:
        return Y(h$1(n.registerD, n.registerE), n.registerA), 4;

      case 19:
        return a = h$1(n.registerD, n.registerE), a = a + 1 & 65535, n.registerD = k(a), n.registerE = a & 255, 8;

      case 20:
        return z(n.registerD, 1), n.registerD = n.registerD + 1 & 255, 0 === n.registerD ? q(1) : q(0), r$1(0), 4;

      case 21:
        return z(n.registerD, -1), n.registerD = n.registerD - 1 & 255, 0 === n.registerD ? q(1) : q(0), r$1(1), 4;

      case 22:
        return n.registerD = Z(), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 23:
        return a = !1, 128 === (n.registerA & 128) && (a = !0), n.registerA = (n.registerA << 1 | ea()) & 255, a ? u(1) : u(0), q(0), r$1(0), t(0), 4;

      case 24:
        return hb(Z()), 8;

      case 25:
        a = h$1(n.registerH, n.registerL);
        var c = h$1(n.registerD, n.registerE);
        ha(a, c, !1);
        a = a + c & 65535;
        n.registerH = k(a);
        n.registerL = a & 255;
        r$1(0);
        return 8;

      case 26:
        return a = h$1(n.registerD, n.registerE), n.registerA = X(a), 4;

      case 27:
        return a = h$1(n.registerD, n.registerE), a = a - 1 & 65535, n.registerD = k(a), n.registerE = a & 255, 8;

      case 28:
        return z(n.registerE, 1), n.registerE = n.registerE + 1 & 255, 0 === n.registerE ? q(1) : q(0), r$1(0), 4;

      case 29:
        return z(n.registerE, -1), n.registerE = n.registerE - 1 & 255, 0 === n.registerE ? q(1) : q(0), r$1(1), 4;

      case 30:
        return n.registerE = Z(), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 31:
        return a = !1, 1 === (n.registerA & 1) && (a = !0), n.registerA = (n.registerA >> 1 | ea() << 7) & 255, a ? u(1) : u(0), q(0), r$1(0), t(0), 4;
    }

    return -1;
  }

  function lb(a) {
    switch (a) {
      case 32:
        return 0 === da() ? hb(Z()) : n.programCounter = n.programCounter + 1 & 65535, 8;

      case 33:
        return a = Db(), n.registerH = k(a), n.registerL = a & 255, n.programCounter = n.programCounter + 2 & 65535, 4;

      case 34:
        return a = h$1(n.registerH, n.registerL), Y(a, n.registerA), a = a + 1 & 65535, n.registerH = k(a), n.registerL = a & 255, 4;

      case 35:
        return a = h$1(n.registerH, n.registerL), a = a + 1 & 65535, n.registerH = k(a), n.registerL = a & 255, 8;

      case 36:
        return z(n.registerH, 1), n.registerH = n.registerH + 1 & 255, 0 === n.registerH ? q(1) : q(0), r$1(0), 4;

      case 37:
        return z(n.registerH, -1), n.registerH = n.registerH - 1 & 255, 0 === n.registerH ? q(1) : q(0), r$1(1), 4;

      case 38:
        return n.registerH = Z(), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 39:
        var c = 0;
        0 < (n.registerF >> 5 & 1) && (c |= 6);
        0 < ea() && (c |= 96);
        0 < (n.registerF >> 6 & 1) ? a = n.registerA - c & 255 : (9 < (n.registerA & 15) && (c |= 6), 153 < n.registerA && (c |= 96), a = n.registerA + c & 255);
        0 === a ? q(1) : q(0);
        0 !== (c & 96) ? u(1) : u(0);
        t(0);
        n.registerA = a;
        return 4;

      case 40:
        return 0 < da() ? hb(Z()) : n.programCounter = n.programCounter + 1 & 65535, 8;

      case 41:
        return a = h$1(n.registerH, n.registerL), ha(a, a, !1), a = 2 * a & 65535, n.registerH = k(a), n.registerL = a & 255, r$1(0), 8;

      case 42:
        return a = h$1(n.registerH, n.registerL), n.registerA = X(a), a = a + 1 & 65535, n.registerH = k(a), n.registerL = a & 255, 4;

      case 43:
        return a = h$1(n.registerH, n.registerL), a = a - 1 & 65535, n.registerH = k(a), n.registerL = a & 255, 8;

      case 44:
        return z(n.registerL, 1), n.registerL = n.registerL + 1 & 255, 0 === n.registerL ? q(1) : q(0), r$1(0), 4;

      case 45:
        return z(n.registerL, -1), n.registerL = n.registerL - 1 & 255, 0 === n.registerL ? q(1) : q(0), r$1(1), 4;

      case 46:
        return n.registerL = Z(), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 47:
        return n.registerA = ~n.registerA, r$1(1), t(1), 4;
    }

    return -1;
  }

  function mb(a) {
    switch (a) {
      case 48:
        return 0 === ea() ? hb(Z()) : n.programCounter = n.programCounter + 1 & 65535, 8;

      case 49:
        return n.stackPointer = Db(), n.programCounter = n.programCounter + 2 & 65535, 4;

      case 50:
        return a = h$1(n.registerH, n.registerL), Y(a, n.registerA), a = a - 1 & 65535, n.registerH = k(a), n.registerL = a & 255, 4;

      case 51:
        return n.stackPointer = n.stackPointer + 1 & 65535, 8;

      case 52:
        a = h$1(n.registerH, n.registerL);
        var c = X(a);
        z(c, 1);
        c = c + 1 & 255;
        0 === c ? q(1) : q(0);
        r$1(0);
        Y(a, c);
        return 4;

      case 53:
        return a = h$1(n.registerH, n.registerL), c = X(a), z(c, -1), c = c - 1 & 255, 0 === c ? q(1) : q(0), r$1(1), Y(a, c), 4;

      case 54:
        return Y(h$1(n.registerH, n.registerL), Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 55:
        return r$1(0), t(0), u(1), 4;

      case 56:
        return 1 === ea() ? hb(Z()) : n.programCounter = n.programCounter + 1 & 65535, 8;

      case 57:
        return a = h$1(n.registerH, n.registerL), ha(a, n.stackPointer, !1), a = a + n.stackPointer & 65535, n.registerH = k(a), n.registerL = a & 255, r$1(0), 8;

      case 58:
        return a = h$1(n.registerH, n.registerL), n.registerA = X(a), a = a - 1 & 65535, n.registerH = k(a), n.registerL = a & 255, 4;

      case 59:
        return n.stackPointer = n.stackPointer - 1 & 65535, 8;

      case 60:
        return z(n.registerA, 1), n.registerA = n.registerA + 1 & 255, 0 === n.registerA ? q(1) : q(0), r$1(0), 4;

      case 61:
        return z(n.registerA, -1), n.registerA = n.registerA - 1 & 255, 0 === n.registerA ? q(1) : q(0), r$1(1), 4;

      case 62:
        return n.registerA = Z(), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 63:
        return r$1(0), t(0), 0 < ea() ? u(0) : u(1), 4;
    }

    return -1;
  }

  function nb(a) {
    switch (a) {
      case 64:
        return 4;

      case 65:
        return n.registerB = n.registerC, 4;

      case 66:
        return n.registerB = n.registerD, 4;

      case 67:
        return n.registerB = n.registerE, 4;

      case 68:
        return n.registerB = n.registerH, 4;

      case 69:
        return n.registerB = n.registerL, 4;

      case 70:
        return n.registerB = X(h$1(n.registerH, n.registerL)), 4;

      case 71:
        return n.registerB = n.registerA, 4;

      case 72:
        return n.registerC = n.registerB, 4;

      case 73:
        return 4;

      case 74:
        return n.registerC = n.registerD, 4;

      case 75:
        return n.registerC = n.registerE, 4;

      case 76:
        return n.registerC = n.registerH, 4;

      case 77:
        return n.registerC = n.registerL, 4;

      case 78:
        return n.registerC = X(h$1(n.registerH, n.registerL)), 4;

      case 79:
        return n.registerC = n.registerA, 4;
    }

    return -1;
  }

  function ob(a) {
    switch (a) {
      case 80:
        return n.registerD = n.registerB, 4;

      case 81:
        return n.registerD = n.registerC, 4;

      case 82:
        return 4;

      case 83:
        return n.registerD = n.registerE, 4;

      case 84:
        return n.registerD = n.registerH, 4;

      case 85:
        return n.registerD = n.registerL, 4;

      case 86:
        return n.registerD = X(h$1(n.registerH, n.registerL)), 4;

      case 87:
        return n.registerD = n.registerA, 4;

      case 88:
        return n.registerE = n.registerB, 4;

      case 89:
        return n.registerE = n.registerC, 4;

      case 90:
        return n.registerE = n.registerD, 4;

      case 91:
        return 4;

      case 92:
        return n.registerE = n.registerH, 4;

      case 93:
        return n.registerE = n.registerL, 4;

      case 94:
        return n.registerE = X(h$1(n.registerH, n.registerL)), 4;

      case 95:
        return n.registerE = n.registerA, 4;
    }

    return -1;
  }

  function pb(a) {
    switch (a) {
      case 96:
        return n.registerH = n.registerB, 4;

      case 97:
        return n.registerH = n.registerC, 4;

      case 98:
        return n.registerH = n.registerD, 4;

      case 99:
        return n.registerH = n.registerE, 4;

      case 100:
        return n.registerH = n.registerH, 4;

      case 101:
        return n.registerH = n.registerL, 4;

      case 102:
        return n.registerH = X(h$1(n.registerH, n.registerL)), 4;

      case 103:
        return n.registerH = n.registerA, 4;

      case 104:
        return n.registerL = n.registerB, 4;

      case 105:
        return n.registerL = n.registerC, 4;

      case 106:
        return n.registerL = n.registerD, 4;

      case 107:
        return n.registerL = n.registerE, 4;

      case 108:
        return n.registerL = n.registerH, 4;

      case 109:
        return n.registerL = n.registerL, 4;

      case 110:
        return n.registerL = X(h$1(n.registerH, n.registerL)), 4;

      case 111:
        return n.registerL = n.registerA, 4;
    }

    return -1;
  }

  function qb(a) {
    switch (a) {
      case 112:
        return Y(h$1(n.registerH, n.registerL), n.registerB), 4;

      case 113:
        return Y(h$1(n.registerH, n.registerL), n.registerC), 4;

      case 114:
        return Y(h$1(n.registerH, n.registerL), n.registerD), 4;

      case 115:
        return Y(h$1(n.registerH, n.registerL), n.registerE), 4;

      case 116:
        return Y(h$1(n.registerH, n.registerL), n.registerH), 4;

      case 117:
        return Y(h$1(n.registerH, n.registerL), n.registerL), 4;

      case 118:
        return V.isHblankHdmaActive || n.enableHalt(), 4;

      case 119:
        return Y(h$1(n.registerH, n.registerL), n.registerA), 4;

      case 120:
        return n.registerA = n.registerB, 4;

      case 121:
        return n.registerA = n.registerC, 4;

      case 122:
        return n.registerA = n.registerD, 4;

      case 123:
        return n.registerA = n.registerE, 4;

      case 124:
        return n.registerA = n.registerH, 4;

      case 125:
        return n.registerA = n.registerL, 4;

      case 126:
        return n.registerA = X(h$1(n.registerH, n.registerL)), 4;

      case 127:
        return 4;
    }

    return -1;
  }

  function rb(a) {
    switch (a) {
      case 128:
        return Ya(n.registerB), 4;

      case 129:
        return Ya(n.registerC), 4;

      case 130:
        return Ya(n.registerD), 4;

      case 131:
        return Ya(n.registerE), 4;

      case 132:
        return Ya(n.registerH), 4;

      case 133:
        return Ya(n.registerL), 4;

      case 134:
        return a = X(h$1(n.registerH, n.registerL)), Ya(a), 4;

      case 135:
        return Ya(n.registerA), 4;

      case 136:
        return Za(n.registerB), 4;

      case 137:
        return Za(n.registerC), 4;

      case 138:
        return Za(n.registerD), 4;

      case 139:
        return Za(n.registerE), 4;

      case 140:
        return Za(n.registerH), 4;

      case 141:
        return Za(n.registerL), 4;

      case 142:
        return a = X(h$1(n.registerH, n.registerL)), Za(a), 4;

      case 143:
        return Za(n.registerA), 4;
    }

    return -1;
  }

  function sb(a) {
    switch (a) {
      case 144:
        return $a(n.registerB), 4;

      case 145:
        return $a(n.registerC), 4;

      case 146:
        return $a(n.registerD), 4;

      case 147:
        return $a(n.registerE), 4;

      case 148:
        return $a(n.registerH), 4;

      case 149:
        return $a(n.registerL), 4;

      case 150:
        return a = X(h$1(n.registerH, n.registerL)), $a(a), 4;

      case 151:
        return $a(n.registerA), 4;

      case 152:
        return ab(n.registerB), 4;

      case 153:
        return ab(n.registerC), 4;

      case 154:
        return ab(n.registerD), 4;

      case 155:
        return ab(n.registerE), 4;

      case 156:
        return ab(n.registerH), 4;

      case 157:
        return ab(n.registerL), 4;

      case 158:
        return a = X(h$1(n.registerH, n.registerL)), ab(a), 4;

      case 159:
        return ab(n.registerA), 4;
    }

    return -1;
  }

  function ub(a) {
    switch (a) {
      case 160:
        return bb(n.registerB), 4;

      case 161:
        return bb(n.registerC), 4;

      case 162:
        return bb(n.registerD), 4;

      case 163:
        return bb(n.registerE), 4;

      case 164:
        return bb(n.registerH), 4;

      case 165:
        return bb(n.registerL), 4;

      case 166:
        return a = X(h$1(n.registerH, n.registerL)), bb(a), 4;

      case 167:
        return bb(n.registerA), 4;

      case 168:
        return cb(n.registerB), 4;

      case 169:
        return cb(n.registerC), 4;

      case 170:
        return cb(n.registerD), 4;

      case 171:
        return cb(n.registerE), 4;

      case 172:
        return cb(n.registerH), 4;

      case 173:
        return cb(n.registerL), 4;

      case 174:
        return a = X(h$1(n.registerH, n.registerL)), cb(a), 4;

      case 175:
        return cb(n.registerA), 4;
    }

    return -1;
  }

  function vb(a) {
    switch (a) {
      case 176:
        return db(n.registerB), 4;

      case 177:
        return db(n.registerC), 4;

      case 178:
        return db(n.registerD), 4;

      case 179:
        return db(n.registerE), 4;

      case 180:
        return db(n.registerH), 4;

      case 181:
        return db(n.registerL), 4;

      case 182:
        return a = X(h$1(n.registerH, n.registerL)), db(a), 4;

      case 183:
        return db(n.registerA), 4;

      case 184:
        return eb(n.registerB), 4;

      case 185:
        return eb(n.registerC), 4;

      case 186:
        return eb(n.registerD), 4;

      case 187:
        return eb(n.registerE), 4;

      case 188:
        return eb(n.registerH), 4;

      case 189:
        return eb(n.registerL), 4;

      case 190:
        return a = X(h$1(n.registerH, n.registerL)), eb(a), 4;

      case 191:
        return eb(n.registerA), 4;
    }

    return -1;
  }

  function wb(a) {
    switch (a) {
      case 192:
        return 0 === da() ? (n.programCounter = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, 12) : 8;

      case 193:
        return a = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, n.registerB = k(a), n.registerC = a & 255, 4;

      case 194:
        if (0 === da()) return n.programCounter = Db(), 8;
        n.programCounter = n.programCounter + 2 & 65535;
        return 12;

      case 195:
        return n.programCounter = Db(), 8;

      case 196:
        if (0 === da()) return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter + 2 & 65535), n.programCounter = Db(), 8;
        n.programCounter = n.programCounter + 2 & 65535;
        return 12;

      case 197:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, h$1(n.registerB, n.registerC)), 8;

      case 198:
        return Ya(Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 199:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter), n.programCounter = 0, 8;

      case 200:
        return 1 === da() ? (n.programCounter = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, 12) : 8;

      case 201:
        return n.programCounter = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, 8;

      case 202:
        if (1 === da()) return n.programCounter = Db(), 8;
        n.programCounter = n.programCounter + 2 & 65535;
        return 12;

      case 203:
        var c = Z();
        a = -1;
        var d = !1,
            e = 0,
            g = 0,
            p = c % 8;

        switch (p) {
          case 0:
            e = n.registerB;
            break;

          case 1:
            e = n.registerC;
            break;

          case 2:
            e = n.registerD;
            break;

          case 3:
            e = n.registerE;
            break;

          case 4:
            e = n.registerH;
            break;

          case 5:
            e = n.registerL;
            break;

          case 6:
            e = X(h$1(n.registerH, n.registerL));
            break;

          case 7:
            e = n.registerA;
        }

        var D = (c & 240) >> 4;

        switch (D) {
          case 0:
            7 >= c ? (c = e, 128 === (c & 128) ? u(1) : u(0), c = (c << 1 | c >> 7) & 255, 0 === c ? q(1) : q(0), r$1(0), t(0), g = c, d = !0) : 15 >= c && (c = e, 0 < (c & 1) ? u(1) : u(0), c = (c >> 1 | c << 7) & 255, 0 === c ? q(1) : q(0), r$1(0), t(0), g = c, d = !0);
            break;

          case 1:
            23 >= c ? (c = e, d = !1, 128 === (c & 128) && (d = !0), c = (c << 1 | ea()) & 255, d ? u(1) : u(0), 0 === c ? q(1) : q(0), r$1(0), t(0), g = c, d = !0) : 31 >= c && (c = e, d = !1, 1 === (c & 1) && (d = !0), c = (c >> 1 | ea() << 7) & 255, d ? u(1) : u(0), 0 === c ? q(1) : q(0), r$1(0), t(0), g = c, d = !0);
            break;

          case 2:
            39 >= c ? (c = e, d = !1, 128 === (c & 128) && (d = !0), c = c << 1 & 255, d ? u(1) : u(0), 0 === c ? q(1) : q(0), r$1(0), t(0), g = c, d = !0) : 47 >= c && (c = e, d = !1, 128 === (c & 128) && (d = !0), e = !1, 1 === (c & 1) && (e = !0), c = c >> 1 & 255, d && (c |= 128), 0 === c ? q(1) : q(0), r$1(0), t(0), e ? u(1) : u(0), g = c, d = !0);
            break;

          case 3:
            55 >= c ? (c = e, c = ((c & 15) << 4 | (c & 240) >> 4) & 255, 0 === c ? q(1) : q(0), r$1(0), t(0), u(0), g = c, d = !0) : 63 >= c && (c = e, d = !1, 1 === (c & 1) && (d = !0), c = c >> 1 & 255, 0 === c ? q(1) : q(0), r$1(0), t(0), d ? u(1) : u(0), g = c, d = !0);
            break;

          case 4:
            71 >= c ? (g = fb(0, e), d = !0) : 79 >= c && (g = fb(1, e), d = !0);
            break;

          case 5:
            87 >= c ? (g = fb(2, e), d = !0) : 95 >= c && (g = fb(3, e), d = !0);
            break;

          case 6:
            103 >= c ? (g = fb(4, e), d = !0) : 111 >= c && (g = fb(5, e), d = !0);
            break;

          case 7:
            119 >= c ? (g = fb(6, e), d = !0) : 127 >= c && (g = fb(7, e), d = !0);
            break;

          case 8:
            135 >= c ? (g = gb(0, 0, e), d = !0) : 143 >= c && (g = gb(1, 0, e), d = !0);
            break;

          case 9:
            151 >= c ? (g = gb(2, 0, e), d = !0) : 159 >= c && (g = gb(3, 0, e), d = !0);
            break;

          case 10:
            167 >= c ? (g = gb(4, 0, e), d = !0) : 175 >= c && (g = gb(5, 0, e), d = !0);
            break;

          case 11:
            183 >= c ? (g = gb(6, 0, e), d = !0) : 191 >= c && (g = gb(7, 0, e), d = !0);
            break;

          case 12:
            199 >= c ? (g = gb(0, 1, e), d = !0) : 207 >= c && (g = gb(1, 1, e), d = !0);
            break;

          case 13:
            215 >= c ? (g = gb(2, 1, e), d = !0) : 223 >= c && (g = gb(3, 1, e), d = !0);
            break;

          case 14:
            231 >= c ? (g = gb(4, 1, e), d = !0) : 239 >= c && (g = gb(5, 1, e), d = !0);
            break;

          case 15:
            247 >= c ? (g = gb(6, 1, e), d = !0) : 255 >= c && (g = gb(7, 1, e), d = !0);
        }

        switch (p) {
          case 0:
            n.registerB = g;
            break;

          case 1:
            n.registerC = g;
            break;

          case 2:
            n.registerD = g;
            break;

          case 3:
            n.registerE = g;
            break;

          case 4:
            n.registerH = g;
            break;

          case 5:
            n.registerL = g;
            break;

          case 6:
            (4 > D || 7 < D) && Y(h$1(n.registerH, n.registerL), g);
            break;

          case 7:
            n.registerA = g;
        }

        d && (a = 4);
        n.programCounter = n.programCounter + 1 & 65535;
        return a;

      case 204:
        if (1 === da()) return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter + 2), n.programCounter = Db(), 8;
        n.programCounter = n.programCounter + 2 & 65535;
        return 12;

      case 205:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter + 2 & 65535), n.programCounter = Db(), 8;

      case 206:
        return Za(Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 207:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter), n.programCounter = 8;
    }

    return -1;
  }

  function xb(a) {
    switch (a) {
      case 208:
        return 0 === ea() ? (n.programCounter = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, 12) : 8;

      case 209:
        return a = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, n.registerD = k(a), n.registerE = a & 255, 4;

      case 210:
        if (0 === ea()) return n.programCounter = Db(), 8;
        n.programCounter = n.programCounter + 2 & 65535;
        return 12;

      case 212:
        if (0 === ea()) return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter + 2), n.programCounter = Db(), 8;
        n.programCounter = n.programCounter + 2 & 65535;
        return 12;

      case 213:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, h$1(n.registerD, n.registerE)), 8;

      case 214:
        return $a(Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 215:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter), n.programCounter = 16, 8;

      case 216:
        return 1 === ea() ? (n.programCounter = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, 12) : 8;

      case 217:
        return n.programCounter = Bb(n.stackPointer), Fa(!0), n.stackPointer = n.stackPointer + 2 & 65535, 8;

      case 218:
        if (1 === ea()) return n.programCounter = Db(), 8;
        n.programCounter = n.programCounter + 2 & 65535;
        return 12;

      case 220:
        if (1 === ea()) return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter + 2 & 65535), n.programCounter = Db(), 8;
        n.programCounter = n.programCounter + 2 & 65535;
        return 12;

      case 222:
        return ab(Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 223:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter), n.programCounter = 24, 8;
    }

    return -1;
  }

  function yb(a) {
    switch (a) {
      case 224:
        return a = Z(), Y(65280 + a, n.registerA), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 225:
        return a = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, n.registerH = k(a), n.registerL = a & 255, 4;

      case 226:
        return Y(65280 + n.registerC, n.registerA), 4;

      case 229:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, h$1(n.registerH, n.registerL)), 8;

      case 230:
        return bb(Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 231:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter), n.programCounter = 32, 8;

      case 232:
        return a = ba(Z()), ha(n.stackPointer, a, !0), n.stackPointer = n.stackPointer + a & 65535, q(0), r$1(0), n.programCounter = n.programCounter + 1 & 65535, 12;

      case 233:
        return n.programCounter = h$1(n.registerH, n.registerL), 4;

      case 234:
        return Y(Db(), n.registerA), n.programCounter = n.programCounter + 2 & 65535, 4;

      case 238:
        return cb(Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 239:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter), n.programCounter = 40, 8;
    }

    return -1;
  }

  function zb(a) {
    switch (a) {
      case 240:
        return a = Z(), n.registerA = X(65280 + a) & 255, n.programCounter = n.programCounter + 1 & 65535, 4;

      case 241:
        return a = Bb(n.stackPointer), n.stackPointer = n.stackPointer + 2 & 65535, n.registerA = k(a), n.registerF = a & 255, 4;

      case 242:
        return n.registerA = X(65280 + n.registerC) & 255, 4;

      case 243:
        return Fa(!1), 4;

      case 245:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, h$1(n.registerA, n.registerF)), 8;

      case 246:
        return db(Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 247:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter), n.programCounter = 48, 8;

      case 248:
        return a = ba(Z()), q(0), r$1(0), ha(n.stackPointer, a, !0), a = n.stackPointer + a & 65535, n.registerH = k(a), n.registerL = a & 255, n.programCounter = n.programCounter + 1 & 65535, 8;

      case 249:
        return n.stackPointer = h$1(n.registerH, n.registerL), 8;

      case 250:
        return n.registerA = X(Db()), n.programCounter = n.programCounter + 2 & 65535, 4;

      case 251:
        return Fa(!0), 4;

      case 254:
        return eb(Z()), n.programCounter = n.programCounter + 1 & 65535, 4;

      case 255:
        return n.stackPointer = n.stackPointer - 2 & 65535, Cb(n.stackPointer, n.programCounter), n.programCounter = 56, 8;
    }

    return -1;
  }

  var Eb = function () {
    function a() {}

    a.cyclesPerCycleSet = 2E9;
    a.cycleSets = 0;
    a.cycles = 0;
    return a;
  }();

  function Ab(a) {
    0 < V.DMACycles && (a += V.DMACycles, V.DMACycles = 0);
    n.currentCycles += a;

    if (!n.isStopped) {
      if (f$1.graphicsBatchProcessing) {
        if (B.currentCycles += a, !(B.currentCycles < B.batchProcessCycles())) for (; B.currentCycles >= B.batchProcessCycles();) Va(B.batchProcessCycles()), B.currentCycles -= B.batchProcessCycles();
      } else Va(a);

      f$1.audioBatchProcessing ? P.currentCycles += a : Aa(a);
    }

    f$1.timersBatchProcessing ? (R.currentCycles += a, Ka(R.currentCycles), R.currentCycles = 0) : Ka(a);
    Eb.cycles += a;
    Eb.cycles >= Eb.cyclesPerCycleSet && (Eb.cycleSets += 1, Eb.cycles -= Eb.cyclesPerCycleSet);
  }

  var Fb = function () {
    function a() {}

    a.stepsPerStepSet = 2E9;
    a.stepSets = 0;
    a.steps = 0;
    return a;
  }();

  function Gb() {
    return Hb(!0, -1, -1);
  }

  function Hb(a, c, d) {
    void 0 === c && (c = -1);
    void 0 === d && (d = -1);
    a = 1024;
    0 < c ? a = c : 0 > c && (a = -1);

    for (var e = !1, g = !1, p = !1, D = !1; !(e || g || p || D);) c = Ib(), 0 > c ? e = !0 : n.currentCycles >= n.MAX_CYCLES_PER_FRAME() ? g = !0 : -1 < a && Ca() >= a ? p = !0 : -1 < d && n.programCounter === d && (D = !0);

    if (g) return n.currentCycles -= n.MAX_CYCLES_PER_FRAME(), 0;
    if (p) return 1;
    if (D) return 2;
    n.programCounter = n.programCounter - 1 & 65535;
    return -1;
  }

  function Ib() {
    Jb = !0;

    if (n.isHaltBug) {
      var a = A(n.programCounter);
      a = ib(a);
      Ab(a);
      n.exitHaltAndStop();
    }

    Q.masterInterruptSwitchDelay && (Q.masterInterruptSwitch = !0, Q.masterInterruptSwitchDelay = !1);

    if (0 < (Q.interruptsEnabledValue & Q.interruptsRequestedValue & 31)) {
      a = !1;
      Q.masterInterruptSwitch && !n.isHaltNoJump && (Q.isVBlankInterruptEnabled && Q.isVBlankInterruptRequested ? (Ea(Q.bitPositionVBlankInterrupt), a = !0) : Q.isLcdInterruptEnabled && Q.isLcdInterruptRequested ? (Ea(Q.bitPositionLcdInterrupt), a = !0) : Q.isTimerInterruptEnabled && Q.isTimerInterruptRequested ? (Ea(Q.bitPositionTimerInterrupt), a = !0) : Q.isJoypadInterruptEnabled && Q.isJoypadInterruptRequested && (Ea(Q.bitPositionJoypadInterrupt), a = !0));
      var c = 0;
      a && (c = 20, n.isHalted() && (n.exitHaltAndStop(), c += 4));
      n.isHalted() && n.exitHaltAndStop();
      a = c;
    } else a = 0;

    0 < a && Ab(a);
    a = 4;
    n.isHalted() || n.isStopped || (a = A(n.programCounter), a = ib(a));
    n.registerF &= 240;
    if (0 >= a) return a;
    Ab(a);
    Fb.steps += 1;
    Fb.steps >= Fb.stepsPerStepSet && (Fb.stepSets += 1, Fb.steps -= Fb.stepsPerStepSet);
    return a;
  }

  139 > aa.size() && aa.grow(139 - aa.size());
  var Jb = !1,
      Kb = Object.freeze({
    memory: aa,
    config: function (a, c, d, e, g, p, D, v, I) {
      f$1.enableBootRom = 0 < a ? !0 : !1;
      f$1.useGbcWhenAvailable = 0 < c ? !0 : !1;
      f$1.audioBatchProcessing = 0 < d ? !0 : !1;
      f$1.graphicsBatchProcessing = 0 < e ? !0 : !1;
      f$1.timersBatchProcessing = 0 < g ? !0 : !1;
      f$1.graphicsDisableScanlineRendering = 0 < p ? !0 : !1;
      f$1.audioAccumulateSamples = 0 < D ? !0 : !1;
      f$1.tileRendering = 0 < v ? !0 : !1;
      f$1.tileCaching = 0 < I ? !0 : !1;
      a = A(323);
      n.GBCEnabled = 192 === a || f$1.useGbcWhenAvailable && 128 === a ? !0 : !1;
      n.GBCDoubleSpeed = !1;
      n.registerA = 0;
      n.registerB = 0;
      n.registerC = 0;
      n.registerD = 0;
      n.registerE = 0;
      n.registerH = 0;
      n.registerL = 0;
      n.registerF = 0;
      n.stackPointer = 0;
      n.programCounter = 0;
      n.currentCycles = 0;
      n.isHaltNormal = !1;
      n.isHaltNoJump = !1;
      n.isHaltBug = !1;
      n.isStopped = !1;
      n.GBCEnabled ? (n.registerA = 17, n.registerF = 128, n.registerB = 0, n.registerC = 0, n.registerD = 255, n.registerE = 86, n.registerH = 0, n.registerL = 13) : (n.registerA = 1, n.registerF = 176, n.registerB = 0, n.registerC = 19, n.registerD = 0, n.registerE = 216, n.registerH = 1, n.registerL = 77);
      n.programCounter = 256;
      n.stackPointer = 65534;
      V.isRamBankingEnabled = !1;
      V.isMBC1RomModeEnabled = !0;
      a = A(327);
      V.isRomOnly = !1;
      V.isMBC1 = !1;
      V.isMBC2 = !1;
      V.isMBC3 = !1;
      V.isMBC5 = !1;
      0 === a ? V.isRomOnly = !0 : 1 <= a && 3 >= a ? V.isMBC1 = !0 : 5 <= a && 6 >= a ? V.isMBC2 = !0 : 15 <= a && 19 >= a ? V.isMBC3 = !0 : 25 <= a && 30 >= a && (V.isMBC5 = !0);
      V.currentRomBank = 1;
      V.currentRamBank = 0;
      F(65361, 255);
      F(65362, 255);
      F(65363, 255);
      F(65364, 255);
      F(65365, 255);
      B.currentCycles = 0;
      B.scanlineCycleCounter = 0;
      B.scanlineRegister = 0;
      B.scrollX = 0;
      B.scrollY = 0;
      B.windowX = 0;
      B.windowY = 0;
      n.GBCEnabled ? (B.scanlineRegister = 144, F(65344, 145), F(65345, 129), F(65348, 144), F(65351, 252)) : (B.scanlineRegister = 144, F(65344, 145), F(65345, 133), F(65350, 255), F(65351, 252), F(65352, 255), F(65353, 255));
      F(65359, 0);
      F(65392, 1);
      n.GBCEnabled ? (F(65384, 192), F(65385, 255), F(65386, 193), F(65387, 13)) : (F(65384, 255), F(65385, 255), F(65386, 255), F(65387, 255));
      P.currentCycles = 0;
      P.NR50LeftMixerVolume = 0;
      P.NR50RightMixerVolume = 0;
      P.NR51IsChannel1EnabledOnLeftOutput = !0;
      P.NR51IsChannel2EnabledOnLeftOutput = !0;
      P.NR51IsChannel3EnabledOnLeftOutput = !0;
      P.NR51IsChannel4EnabledOnLeftOutput = !0;
      P.NR51IsChannel1EnabledOnRightOutput = !0;
      P.NR51IsChannel2EnabledOnRightOutput = !0;
      P.NR51IsChannel3EnabledOnRightOutput = !0;
      P.NR51IsChannel4EnabledOnRightOutput = !0;
      P.NR52IsSoundEnabled = !0;
      P.frameSequenceCycleCounter = 0;
      P.downSampleCycleCounter = 0;
      P.frameSequencer = 0;
      P.audioQueueIndex = 0;
      G.initialize();
      H.initialize();
      L.initialize();
      M.initialize();
      F(P.memoryLocationNR50, 119);
      F(P.memoryLocationNR51, 243);
      F(P.memoryLocationNR52, 241);
      O.channel1Sample = 15;
      O.channel2Sample = 15;
      O.channel3Sample = 15;
      O.channel4Sample = 15;
      O.channel1DacEnabled = !1;
      O.channel2DacEnabled = !1;
      O.channel3DacEnabled = !1;
      O.channel4DacEnabled = !1;
      O.leftChannelSampleUnsignedByte = 127;
      O.rightChannelSampleUnsignedByte = 127;
      O.mixerVolumeChanged = !0;
      O.mixerEnabledChanged = !0;
      O.needToRemixSamples = !1;
      Q.updateInterruptEnabled(0);
      F(Q.memoryLocationInterruptEnabled, Q.interruptsEnabledValue);
      Q.updateInterruptRequested(225);
      F(Q.memoryLocationInterruptRequest, Q.interruptsRequestedValue);
      R.currentCycles = 0;
      R.dividerRegister = 0;
      R.timerCounter = 0;
      R.timerModulo = 0;
      R.timerEnabled = !1;
      R.timerInputClock = 0;
      R.timerCounterOverflowDelay = !1;
      R.timerCounterWasReset = !1;
      n.GBCEnabled ? (F(65284, 30), R.dividerRegister = 7840) : (F(65284, 171), R.dividerRegister = 43980);
      F(65287, 248);
      R.timerInputClock = 248;
      n.GBCEnabled ? (F(65392, 248), F(65359, 254), F(65357, 126), F(65280, 207), F(65282, 124), F(65295, 225), F(65388, 254), F(65397, 143)) : (F(65392, 255), F(65359, 255), F(65357, 255), F(65280, 207), F(65282, 126), F(65295, 225));
      Jb = !1;
      Eb.cyclesPerCycleSet = 2E9;
      Eb.cycleSets = 0;
      Eb.cycles = 0;
      Fb.stepsPerStepSet = 2E9;
      Fb.stepSets = 0;
      Fb.steps = 0;
    },
    hasCoreStarted: function () {
      return Jb ? 1 : 0;
    },
    saveState: function () {
      n.saveState();
      B.saveState();
      Q.saveState();
      S.saveState();
      V.saveState();
      R.saveState();
      P.saveState();
      G.saveState();
      H.saveState();
      L.saveState();
      M.saveState();
      Jb = !1;
    },
    loadState: function () {
      n.loadState();
      B.loadState();
      Q.loadState();
      S.loadState();
      V.loadState();
      R.loadState();
      P.loadState();
      G.loadState();
      H.loadState();
      L.loadState();
      M.loadState();
      Jb = !1;
      Eb.cyclesPerCycleSet = 2E9;
      Eb.cycleSets = 0;
      Eb.cycles = 0;
      Fb.stepsPerStepSet = 2E9;
      Fb.stepSets = 0;
      Fb.steps = 0;
    },
    getStepsPerStepSet: function () {
      return Fb.stepsPerStepSet;
    },
    getStepSets: function () {
      return Fb.stepSets;
    },
    getSteps: function () {
      return Fb.steps;
    },
    executeMultipleFrames: function (a) {
      for (var c = 0, d = 0; d < a && 0 <= c;) c = Gb(), d += 1;

      return 0 > c ? c : 0;
    },
    executeFrame: Gb,
    executeFrameAndCheckAudio: function (a) {
      void 0 === a && (a = 0);
      return Hb(!0, a, -1);
    },
    executeFrameUntilBreakpoint: function (a) {
      a = Hb(!0, -1, a);
      return 2 === a ? 1 : a;
    },
    executeUntilCondition: Hb,
    executeStep: Ib,
    getCyclesPerCycleSet: function () {
      return Eb.cyclesPerCycleSet;
    },
    getCycleSets: function () {
      return Eb.cycleSets;
    },
    getCycles: function () {
      return Eb.cycles;
    },
    setJoypadState: function (a, c, d, e, g, p, D, v) {
      0 < a ? La(0) : Na(0, !1);
      0 < c ? La(1) : Na(1, !1);
      0 < d ? La(2) : Na(2, !1);
      0 < e ? La(3) : Na(3, !1);
      0 < g ? La(4) : Na(4, !1);
      0 < p ? La(5) : Na(5, !1);
      0 < D ? La(6) : Na(6, !1);
      0 < v ? La(7) : Na(7, !1);
    },
    getNumberOfSamplesInAudioBuffer: Ca,
    clearAudioBuffer: wa,
    WASMBOY_MEMORY_LOCATION: 0,
    WASMBOY_MEMORY_SIZE: 9109504,
    WASMBOY_WASM_PAGES: 139,
    ASSEMBLYSCRIPT_MEMORY_LOCATION: 0,
    ASSEMBLYSCRIPT_MEMORY_SIZE: 1024,
    WASMBOY_STATE_LOCATION: 1024,
    WASMBOY_STATE_SIZE: 1024,
    GAMEBOY_INTERNAL_MEMORY_LOCATION: 2048,
    GAMEBOY_INTERNAL_MEMORY_SIZE: 65535,
    VIDEO_RAM_LOCATION: 2048,
    VIDEO_RAM_SIZE: 16384,
    WORK_RAM_LOCATION: 18432,
    WORK_RAM_SIZE: 32768,
    OTHER_GAMEBOY_INTERNAL_MEMORY_LOCATION: 51200,
    OTHER_GAMEBOY_INTERNAL_MEMORY_SIZE: 16384,
    GRAPHICS_OUTPUT_LOCATION: 67584,
    GRAPHICS_OUTPUT_SIZE: 521216,
    GBC_PALETTE_LOCATION: 67584,
    GBC_PALETTE_SIZE: 512,
    BG_PRIORITY_MAP_LOCATION: 69632,
    BG_PRIORITY_MAP_SIZE: 23552,
    FRAME_LOCATION: 93184,
    FRAME_SIZE: 93184,
    BACKGROUND_MAP_LOCATION: 232448,
    BACKGROUND_MAP_SIZE: 196608,
    TILE_DATA_LOCATION: 429056,
    TILE_DATA_SIZE: 147456,
    OAM_TILES_LOCATION: 576512,
    OAM_TILES_SIZE: 12288,
    AUDIO_BUFFER_LOCATION: 588800,
    AUDIO_BUFFER_SIZE: 131072,
    CARTRIDGE_RAM_LOCATION: 719872,
    CARTRIDGE_RAM_SIZE: 131072,
    CARTRIDGE_ROM_LOCATION: 850944,
    CARTRIDGE_ROM_SIZE: 8258560,
    getWasmBoyOffsetFromGameBoyOffset: Sa,
    getRegisterA: function () {
      return n.registerA;
    },
    getRegisterB: function () {
      return n.registerB;
    },
    getRegisterC: function () {
      return n.registerC;
    },
    getRegisterD: function () {
      return n.registerD;
    },
    getRegisterE: function () {
      return n.registerE;
    },
    getRegisterH: function () {
      return n.registerH;
    },
    getRegisterL: function () {
      return n.registerL;
    },
    getRegisterF: function () {
      return n.registerF;
    },
    getProgramCounter: function () {
      return n.programCounter;
    },
    getStackPointer: function () {
      return n.stackPointer;
    },
    getOpcodeAtProgramCounter: function () {
      return A(n.programCounter);
    },
    getLY: function () {
      return B.scanlineRegister;
    },
    drawBackgroundMapToWasmMemory: function (a) {
      void 0 === a && (a = 0);
      var c = B.memoryLocationTileDataSelectZeroStart;
      W.bgWindowTileDataSelect && (c = B.memoryLocationTileDataSelectOneStart);
      var d = B.memoryLocationTileMapSelectZeroStart;
      W.bgTileMapDisplaySelect && (d = B.memoryLocationTileMapSelectOneStart);

      for (var e = 0; 256 > e; e++) for (var g = 0; 256 > g; g++) {
        var p = e,
            D = g,
            v = d + 32 * (p >> 3) + (D >> 3),
            I = ra(v, 0);
        I = qa(c, I);
        var w = p % 8;
        p = D % 8;
        p = 7 - p;
        D = 0;
        n.GBCEnabled && 0 < a && (D = ra(v, 1));
        m(6, D) && (w = 7 - w);
        var J = 0;
        m(3, D) && (J = 1);
        v = ra(I + 2 * w, J);
        I = ra(I + 2 * w + 1, J);
        w = 0;
        m(p, I) && (w += 1, w <<= 1);
        m(p, v) && (w += 1);
        I = 3 * (256 * e + g);
        if (n.GBCEnabled && 0 < a) D = ka(D & 7, w, !1), p = ma(0, D), v = ma(1, D), w = ma(2, D), D = 232448 + I, b$1[D] = p, b$1[D + 1] = v, b$1[D + 2] = w;else for (p = ja(w, B.memoryLocationBackgroundPalette), v = 0; 3 > v; v++) D = 232448 + I + v, b$1[D] = p;
      }
    },
    drawTileDataToWasmMemory: function () {
      for (var a = 0; 23 > a; a++) for (var c = 0; 31 > c; c++) {
        var d = 0;
        15 < c && (d = 1);
        var e = a;
        15 < a && (e -= 15);
        e <<= 4;
        e = 15 < c ? e + (c - 15) : e + c;
        var g = B.memoryLocationTileDataSelectOneStart;
        15 < a && (g = B.memoryLocationTileDataSelectZeroStart);

        for (var p = 0; 8 > p; p++) pa(e, g, d, 0, 7, p, 8 * c, 8 * a + p, 248, 429056, !0);
      }
    },
    getDIV: function () {
      return R.dividerRegister;
    },
    getTIMA: function () {
      return R.timerCounter;
    },
    getTMA: function () {
      return R.timerModulo;
    },
    getTAC: function () {
      var a = R.timerInputClock;
      R.timerEnabled && (a |= 4);
      return a;
    },
    update: Gb,
    emulationStep: Ib,
    getAudioQueueIndex: Ca,
    resetAudioQueue: wa,
    wasmMemorySize: 9109504,
    wasmBoyInternalStateLocation: 1024,
    wasmBoyInternalStateSize: 1024,
    gameBoyInternalMemoryLocation: 2048,
    gameBoyInternalMemorySize: 65535,
    videoOutputLocation: 67584,
    frameInProgressVideoOutputLocation: 93184,
    gameboyColorPaletteLocation: 67584,
    gameboyColorPaletteSize: 512,
    backgroundMapLocation: 232448,
    tileDataMap: 429056,
    soundOutputLocation: 588800,
    gameBytesLocation: 850944,
    gameRamBanksLocation: 719872
  });
  var getWasmBoyTsClosureCore = (async () => ({
    instance: {
      exports: Kb
    },
    byteMemory: aa.wasmByteMemory,
    type: "TypeScript"
  }));

  var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function commonjsRequire () {
  	throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
  }

  function createCommonjsModule$1(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  function getCjsExportFromNamespace (n) {
  	return n && n.default || n;
  }

  var require$$0 = getCjsExportFromNamespace(preact$1);

  var preactPortal = createCommonjsModule$1(function (module, exports) {
  (function (global, factory) {
    module.exports = factory(require$$0);
  }(commonjsGlobal, (function (preact) {
  var classCallCheck = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  var inherits = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  };

  var possibleConstructorReturn = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  };

  var Portal = function (_Component) {
  	inherits(Portal, _Component);

  	function Portal() {
  		classCallCheck(this, Portal);
  		return possibleConstructorReturn(this, _Component.apply(this, arguments));
  	}

  	Portal.prototype.componentDidUpdate = function componentDidUpdate(props) {
  		for (var i in props) {
  			if (props[i] !== this.props[i]) {
  				return setTimeout(this.renderLayer);
  			}
  		}
  	};

  	Portal.prototype.componentDidMount = function componentDidMount() {
  		this.isMounted = true;
  		this.renderLayer = this.renderLayer.bind(this);
  		this.renderLayer();
  	};

  	Portal.prototype.componentWillUnmount = function componentWillUnmount() {
  		this.renderLayer(false);
  		this.isMounted = false;
  		if (this.remote) this.remote.parentNode.removeChild(this.remote);
  	};

  	Portal.prototype.findNode = function findNode(node) {
  		return typeof node === 'string' ? document.querySelector(node) : node;
  	};

  	Portal.prototype.renderLayer = function renderLayer() {
  		var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

  		if (!this.isMounted) return;

  		if (this.props.into !== this.intoPointer) {
  			this.intoPointer = this.props.into;
  			if (this.into && this.remote) {
  				this.remote = preact.render(preact.h(PortalProxy, null), this.into, this.remote);
  			}
  			this.into = this.findNode(this.props.into);
  		}

  		this.remote = preact.render(preact.h(
  			PortalProxy,
  			{ context: this.context },
  			show && this.props.children || null
  		), this.into, this.remote);
  	};

  	Portal.prototype.render = function render() {
  		return null;
  	};

  	return Portal;
  }(preact.Component);

  var PortalProxy = function (_Component2) {
  	inherits(PortalProxy, _Component2);

  	function PortalProxy() {
  		classCallCheck(this, PortalProxy);
  		return possibleConstructorReturn(this, _Component2.apply(this, arguments));
  	}

  	PortalProxy.prototype.getChildContext = function getChildContext() {
  		return this.props.context;
  	};

  	PortalProxy.prototype.render = function render(_ref) {
  		var children = _ref.children;

  		return children && children[0] || null;
  	};

  	return PortalProxy;
  }(preact.Component);

  return Portal;

  })));

  });

  var css$3 = ".wasmboy__filePicker {\n  width: 100%;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.wasmboy__filePicker h2 {\n  text-align: center;\n}\n\n.wasmboy__filePicker__services {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100%;\n}\n\n.wasmboy__filePicker__services .donut {\n  margin-top: 10px;\n}\n\n.wasmboy__filePicker__services .file {\n  margin: 10px;\n}\n\n.wasmboy__filePicker__services .file-button {\n  border: solid 1px #dbdbdb;\n  font-size: 1rem;\n}\n\n.open-source-rom {\n  position: relative;\n}\n\n.open-source-rom__button {\n  display: flex;\n  flex-direction: row;\n  justify-items: center;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 100%;\n  padding: 10px;\n  margin: 10px;\n\n  background-color: transparent;\n  transition: background-color 0.5s;\n  border: none;\n}\n\n.open-source-rom:hover {\n  background-color: rgba(0, 0, 0, 0.15);\n}\n\n.open-source-rom__left,\n.open-source-rom__right {\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: center;\n}\n\n.open-source-rom__left {\n  width: 200px;\n  min-width: 200px;\n  height: 200px;\n}\n\n.open-source-rom__left img {\n  object-fit: contain;\n  width: 100%;\n  height: 100%;\n}\n\n.open-source-rom__right {\n  flex-grow: 1;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 10px;\n\n  max-width: 300px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.open-source-rom h3 {\n  font-weight: bold;\n  font-size: 1.25rem;\n}\n\n.open-source-rom__info {\n  z-index: 100;\n}\n\n.open-source-rom__link {\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  width: 30px;\n  height: 30px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 25px;\n\n  z-index: 100;\n  transition: background-color 0.5s;\n  background-color: rgba(0, 0, 0, 0.15);\n  box-shadow: 0px 1px 5px #020202;\n}\n\n.open-source-rom__link:hover {\n  background-color: rgba(0, 0, 0, 0.35);\n}\n";
  styleInject(css$3);

  var loadScript = function load (src, opts, cb) {
    var head = document.head || document.getElementsByTagName('head')[0];
    var script = document.createElement('script');

    if (typeof opts === 'function') {
      cb = opts;
      opts = {};
    }

    opts = opts || {};
    cb = cb || function() {};

    script.type = opts.type || 'text/javascript';
    script.charset = opts.charset || 'utf8';
    script.async = 'async' in opts ? !!opts.async : true;
    script.src = src;

    if (opts.attrs) {
      setAttributes(script, opts.attrs);
    }

    if (opts.text) {
      script.text = '' + opts.text;
    }

    var onend = 'onload' in script ? stdOnEnd : ieOnEnd;
    onend(script, cb);

    // some good legacy browsers (firefox) fail the 'in' detection above
    // so as a fallback we always set onload
    // old IE will ignore this and new IE will set onload
    if (!script.onload) {
      stdOnEnd(script, cb);
    }

    head.appendChild(script);
  };

  function setAttributes(script, attrs) {
    for (var attr in attrs) {
      script.setAttribute(attr, attrs[attr]);
    }
  }

  function stdOnEnd (script, cb) {
    script.onload = function () {
      this.onerror = this.onload = null;
      cb(null, script);
    };
    script.onerror = function () {
      // this.onload = null here is necessary
      // because even IE9 works not like others
      this.onerror = this.onload = null;
      cb(new Error('Failed to load ' + this.src), script);
    };
  }

  function ieOnEnd (script, cb) {
    script.onreadystatechange = function () {
      if (this.readyState != 'complete' && this.readyState != 'loaded') return
      this.onreadystatechange = null;
      cb(null, script); // there is no way to catch loading errors in IE8
    };
  }

  if (typeof window !== 'undefined') {
    loadScript('https://www.googletagmanager.com/gtag/js?id=UA-125276735-2', function (err, script) {
      if (!err) {
        window.dataLayer = window.dataLayer || [];

        function gtag() {
          window.dataLayer.push(arguments);
        }

        gtag('js', new Date());
        gtag('config', 'UA-125276735-2'); // Attach Analytics to window

        window.gtag = gtag;
      }
    });
  }

  function sendAnalyticsEvent(eventName, eventParams) {
    // console.log('Sending Analytics Event:', eventName, eventParams);
    if (typeof window !== 'undefined' && window.gtag) {
      if (eventParams) {
        window.gtag('event', eventName, eventParams);
      } else {
        window.gtag('event', eventName);
      }
    }
  }

  // Taken/Modified From: https://github.com/photopea/UZIP.js
  let UZIP = {}; // Make it a hacky es module

  const uzip = UZIP;

  UZIP['parse'] = function (buf // ArrayBuffer
  ) {
    let rUs = UZIP.bin.readUshort,
        rUi = UZIP.bin.readUint,
        o = 0,
        out = {};
    let data = new Uint8Array(buf);
    let eocd = data.length - 4;

    while (rUi(data, eocd) != 0x06054b50) eocd--;

    o = eocd;
    o += 4; // sign  = 0x06054b50

    o += 4; // disks = 0;

    let cnu = rUs(data, o);
    o += 2;
    let cnt = rUs(data, o);
    o += 2;
    let csize = rUi(data, o);
    o += 4;
    let coffs = rUi(data, o);
    o += 4;
    o = coffs;

    for (let i = 0; i < cnu; i++) {
      let sign = rUi(data, o);
      o += 4;
      o += 4; // versions;

      o += 4; // flag + compr

      o += 4; // time

      let crc32 = rUi(data, o);
      o += 4;
      let csize = rUi(data, o);
      o += 4;
      let usize = rUi(data, o);
      o += 4;
      let nl = rUs(data, o),
          el = rUs(data, o + 2),
          cl = rUs(data, o + 4);
      o += 6; // name, extra, comment

      o += 8; // disk, attribs

      let roff = rUi(data, o);
      o += 4;
      o += nl + el + cl;

      UZIP._readLocal(data, roff, out, csize, usize);
    } //console.log(out);


    return out;
  };

  UZIP._readLocal = function (data, o, out, csize, usize) {
    let rUs = UZIP.bin.readUshort,
        rUi = UZIP.bin.readUint;
    let sign = rUi(data, o);
    o += 4;
    let ver = rUs(data, o);
    o += 2;
    let gpflg = rUs(data, o);
    o += 2; //if((gpflg&8)!=0) throw "unknown sizes";

    let cmpr = rUs(data, o);
    o += 2;
    let time = rUi(data, o);
    o += 4;
    let crc32 = rUi(data, o);
    o += 4; //let csize = rUi(data, o);  o+=4;
    //let usize = rUi(data, o);  o+=4;

    o += 8;
    let nlen = rUs(data, o);
    o += 2;
    let elen = rUs(data, o);
    o += 2;
    let name = UZIP.bin.readUTF8(data, o, nlen);
    o += nlen;
    o += elen; //console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), "csize, usize", csize, usize, nlen, elen, name, o);

    let file = new Uint8Array(data.buffer, o);

    if (cmpr == 0) out[name] = new Uint8Array(file.buffer.slice(o, o + csize));else if (cmpr == 8) {
      let buf = new Uint8Array(usize);
      UZIP.inflateRaw(file, buf); //let nbuf = pako["inflateRaw"](file);
      //for(let i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw "e";  }

      out[name] = buf;
    } else throw 'unknown compression method: ' + cmpr;
  };

  UZIP.inflateRaw = function (file, buf) {
    return UZIP.F.inflate(file, buf);
  };

  UZIP.inflate = function (file, buf) {
    let CMF = file[0],
        FLG = file[1];

    return UZIP.inflateRaw(new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);
  };

  UZIP.deflate = function (data, opts
  /*, buf, off*/
  ) {
    if (opts == null) opts = {
      level: 6
    };
    let off = 0,
        buf = new Uint8Array(50 + Math.floor(data.length * 1.1));
    buf[off] = 120;
    buf[off + 1] = 156;
    off += 2;
    off = UZIP.F.deflateRaw(data, buf, off, opts.level);
    let crc = UZIP.adler(data, 0, data.length);
    buf[off + 0] = crc >>> 24 & 255;
    buf[off + 1] = crc >>> 16 & 255;
    buf[off + 2] = crc >>> 8 & 255;
    buf[off + 3] = crc >>> 0 & 255;
    return new Uint8Array(buf.buffer, 0, off + 4);
  };

  UZIP.deflateRaw = function (data, opts) {
    if (opts == null) opts = {
      level: 6
    };
    let buf = new Uint8Array(50 + Math.floor(data.length * 1.1));
    let off;
    off = UZIP.F.deflateRaw(data, buf, off, opts.level);
    return new Uint8Array(buf.buffer, 0, off);
  };

  UZIP.encode = function (obj) {
    let tot = 0,
        wUi = UZIP.bin.writeUint,
        wUs = UZIP.bin.writeUshort;
    let zpd = {};

    for (let p in obj) {
      let cpr = !UZIP._noNeed(p),
          buf = obj[p],
          crc = UZIP.crc.crc(buf, 0, buf.length);
      zpd[p] = {
        cpr: cpr,
        usize: buf.length,
        crc: crc,
        file: cpr ? UZIP.deflateRaw(buf) : buf
      };
    }

    for (let p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * UZIP.bin.sizeUTF8(p);

    tot += 22;
    let data = new Uint8Array(tot),
        o = 0;
    let fof = [];

    for (let p in zpd) {
      let file = zpd[p];
      fof.push(o);
      o = UZIP._writeHeader(data, o, p, file, 0);
    }

    let i = 0,
        ioff = o;

    for (let p in zpd) {
      let file = zpd[p];
      fof.push(o);
      o = UZIP._writeHeader(data, o, p, file, 1, fof[i++]);
    }

    let csize = o - ioff;
    wUi(data, o, 0x06054b50);
    o += 4;
    o += 4; // disks

    wUs(data, o, i);
    o += 2;
    wUs(data, o, i);
    o += 2; // number of c d records

    wUi(data, o, csize);
    o += 4;
    wUi(data, o, ioff);
    o += 4;
    o += 2;
    return data.buffer;
  }; // no need to compress .PNG, .ZIP, .JPEG ....


  UZIP._noNeed = function (fn) {
    let ext = fn.split('.').pop().toLowerCase();
    return 'png,jpg,jpeg,zip'.indexOf(ext) != -1;
  };

  UZIP._writeHeader = function (data, o, p, obj, t, roff) {
    let wUi = UZIP.bin.writeUint,
        wUs = UZIP.bin.writeUshort;
    let file = obj.file;
    wUi(data, o, t == 0 ? 0x04034b50 : 0x02014b50);
    o += 4; // sign

    if (t == 1) o += 2; // ver made by

    wUs(data, o, 20);
    o += 2; // ver

    wUs(data, o, 0);
    o += 2; // gflip

    wUs(data, o, obj.cpr ? 8 : 0);
    o += 2; // cmpr

    wUi(data, o, 0);
    o += 4; // time

    wUi(data, o, obj.crc);
    o += 4; // crc32

    wUi(data, o, file.length);
    o += 4; // csize

    wUi(data, o, obj.usize);
    o += 4; // usize

    wUs(data, o, UZIP.bin.sizeUTF8(p));
    o += 2; // nlen

    wUs(data, o, 0);
    o += 2; // elen

    if (t == 1) {
      o += 2; // comment length

      o += 2; // disk number

      o += 6; // attributes

      wUi(data, o, roff);
      o += 4; // usize
    }

    let nlen = UZIP.bin.writeUTF8(data, o, p);
    o += nlen;

    if (t == 0) {
      data.set(file, o);
      o += file.length;
    }

    return o;
  };

  UZIP.crc = {
    table: function () {
      let tab = new Uint32Array(256);

      for (let n = 0; n < 256; n++) {
        let c = n;

        for (let k = 0; k < 8; k++) {
          if (c & 1) c = 0xedb88320 ^ c >>> 1;else c = c >>> 1;
        }

        tab[n] = c;
      }

      return tab;
    }(),
    update: function (c, buf, off, len) {
      for (let i = 0; i < len; i++) c = UZIP.crc.table[(c ^ buf[off + i]) & 0xff] ^ c >>> 8;

      return c;
    },
    crc: function (b, o, l) {
      return UZIP.crc.update(0xffffffff, b, o, l) ^ 0xffffffff;
    }
  };

  UZIP.adler = function (data, o, len) {
    let a = 1,
        b = 0;
    let off = o,
        end = o + len;

    while (off < end) {
      let eend = Math.min(off + 5552, end);

      while (off < eend) {
        a += data[off++];
        b += a;
      }

      a = a % 65521;
      b = b % 65521;
    }

    return b << 16 | a;
  };

  UZIP.bin = {
    readUshort: function (buff, p) {
      return buff[p] | buff[p + 1] << 8;
    },
    writeUshort: function (buff, p, n) {
      buff[p] = n & 255;
      buff[p + 1] = n >> 8 & 255;
    },
    readUint: function (buff, p) {
      return buff[p + 3] * (256 * 256 * 256) + (buff[p + 2] << 16 | buff[p + 1] << 8 | buff[p]);
    },
    writeUint: function (buff, p, n) {
      buff[p] = n & 255;
      buff[p + 1] = n >> 8 & 255;
      buff[p + 2] = n >> 16 & 255;
      buff[p + 3] = n >> 24 & 255;
    },
    readASCII: function (buff, p, l) {
      let s = '';

      for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);

      return s;
    },
    writeASCII: function (data, p, s) {
      for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);
    },
    pad: function (n) {
      return n.length < 2 ? '0' + n : n;
    },
    readUTF8: function (buff, p, l) {
      let s = '',
          ns;

      for (let i = 0; i < l; i++) s += '%' + UZIP.bin.pad(buff[p + i].toString(16));

      try {
        ns = decodeURIComponent(s);
      } catch (e) {
        return UZIP.bin.readASCII(buff, p, l);
      }

      return ns;
    },
    writeUTF8: function (buff, p, str) {
      let strl = str.length,
          i = 0;

      for (let ci = 0; ci < strl; ci++) {
        let code = str.charCodeAt(ci);

        if ((code & 0xffffffff - (1 << 7) + 1) == 0) {
          buff[p + i] = code;
          i++;
        } else if ((code & 0xffffffff - (1 << 11) + 1) == 0) {
          buff[p + i] = 192 | code >> 6;
          buff[p + i + 1] = 128 | code >> 0 & 63;
          i += 2;
        } else if ((code & 0xffffffff - (1 << 16) + 1) == 0) {
          buff[p + i] = 224 | code >> 12;
          buff[p + i + 1] = 128 | code >> 6 & 63;
          buff[p + i + 2] = 128 | code >> 0 & 63;
          i += 3;
        } else if ((code & 0xffffffff - (1 << 21) + 1) == 0) {
          buff[p + i] = 240 | code >> 18;
          buff[p + i + 1] = 128 | code >> 12 & 63;
          buff[p + i + 2] = 128 | code >> 6 & 63;
          buff[p + i + 3] = 128 | code >> 0 & 63;
          i += 4;
        } else throw 'e';
      }

      return i;
    },
    sizeUTF8: function (str) {
      let strl = str.length,
          i = 0;

      for (let ci = 0; ci < strl; ci++) {
        let code = str.charCodeAt(ci);

        if ((code & 0xffffffff - (1 << 7) + 1) == 0) {
          i++;
        } else if ((code & 0xffffffff - (1 << 11) + 1) == 0) {
          i += 2;
        } else if ((code & 0xffffffff - (1 << 16) + 1) == 0) {
          i += 3;
        } else if ((code & 0xffffffff - (1 << 21) + 1) == 0) {
          i += 4;
        } else throw 'e';
      }

      return i;
    }
  };
  UZIP.F = {};

  UZIP.F.deflateRaw = function (data, out, opos, lvl) {
    let opts = [
    /*
    ush good_length; /* reduce lazy search above this match length 
    ush max_lazy;    /* do not perform lazy search above this match length 
         ush nice_length; /* quit search above this match length 
    */

    /*      good lazy nice chain */

    /* 0 */
    [0, 0, 0, 0, 0]
    /* store only */
    ,
    /* 1 */
    [4, 4, 8, 4, 0]
    /* max speed, no lazy matches */
    ,
    /* 2 */
    [4, 5, 16, 8, 0],
    /* 3 */
    [4, 6, 16, 16, 0],
    /* 4 */
    [4, 10, 16, 32, 0]
    /* lazy matches */
    ,
    /* 5 */
    [8, 16, 32, 32, 0],
    /* 6 */
    [8, 16, 128, 128, 0],
    /* 7 */
    [8, 32, 128, 256, 0],
    /* 8 */
    [32, 128, 258, 1024, 1],
    /* 9 */
    [32, 258, 258, 4096, 1]];
    /* max compression */

    let opt = opts[lvl];
    let U = UZIP.F.U,
        goodIndex = UZIP.F._goodIndex,
        hash = UZIP.F._hash,
        putsE = UZIP.F._putsE;
    let i = 0,
        pos = opos << 3,
        cvrd = 0,
        dlen = data.length;

    if (lvl == 0) {
      while (i < dlen) {
        let len = Math.min(0xffff, dlen - i);
        putsE(out, pos, i + len == dlen ? 1 : 0);
        pos = UZIP.F._copyExact(data, i, len, out, pos + 8);
        i += len;
      }

      return pos >>> 3;
    }

    let lits = U.lits,
        strt = U.strt,
        prev = U.prev,
        li = 0,
        lc = 0,
        bs = 0,
        ebits = 0,
        c = 0,
        nc = 0; // last_item, literal_count, block_start

    if (dlen > 2) {
      nc = UZIP.F._hash(data, 0);
      strt[nc] = 0;
    }

    for (i = 0; i < dlen; i++) {
      c = nc; //*

      if (i + 1 < dlen - 2) {
        nc = UZIP.F._hash(data, i + 1);
        let ii = i + 1 & 0x7fff;
        prev[ii] = strt[nc];
        strt[nc] = ii;
      } //*/


      if (cvrd <= i) {
        if (li > 14000 || lc > 26697) {
          if (cvrd < i) {
            lits[li] = i - cvrd;
            li += 2;
            cvrd = i;
          }

          pos = UZIP.F._writeBlock(i == dlen - 1 || cvrd == dlen ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);
          li = lc = ebits = 0;
          bs = i;
        }

        let mch = 0; //if(nmci==i) mch= nmch;  else

        if (i < dlen - 2) mch = UZIP.F._bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);

        if (mch != 0) {
          let len = mch >>> 16,
              dst = mch & 0xffff; //if(i-dst<0) throw "e";

          let lgi = goodIndex(len, U.of0);
          U.lhst[257 + lgi]++;
          let dgi = goodIndex(dst, U.df0);
          U.dhst[dgi]++;
          ebits += U.exb[lgi] + U.dxb[dgi];
          lits[li] = len << 23 | i - cvrd;
          lits[li + 1] = dst << 16 | lgi << 8 | dgi;
          li += 2;
          cvrd = i + len;
        } else {
          U.lhst[data[i]]++;
        }

        lc++;
      }
    }

    if (bs != i || data.length == 0) {
      if (cvrd < i) {
        lits[li] = i - cvrd;
        li += 2;
        cvrd = i;
      }

      pos = UZIP.F._writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);
      li = 0;
      lc = 0;
      li = lc = ebits = 0;
      bs = i;
    }

    while ((pos & 7) != 0) pos++;

    return pos >>> 3;
  };

  UZIP.F._bestMatch = function (data, i, prev, c, nice, chain) {
    let ci = i & 0x7fff,
        pi = prev[ci]; //console.log("----", i);

    let dif = ci - pi + (1 << 15) & 0x7fff;
    if (pi == ci || c != UZIP.F._hash(data, i - dif)) return 0;
    let tl = 0,
        td = 0; // top length, top distance

    let dlim = Math.min(0x7fff, i);

    while (dif <= dlim && --chain != 0 && pi != ci
    /*&& c==UZIP.F._hash(data,i-dif)*/
    ) {
      if (tl == 0 || data[i + tl] == data[i + tl - dif]) {
        let cl = UZIP.F._howLong(data, i, dif);

        if (cl > tl) {
          tl = cl;
          td = dif;
          if (tl >= nice) break; //*

          if (dif + 2 < cl) cl = dif + 2;
          let maxd = 0; // pi does not point to the start of the word

          for (let j = 0; j < cl - 2; j++) {
            let ei = i - dif + j + (1 << 15) & 0x7fff;
            let li = prev[ei];
            let curd = ei - li + (1 << 15) & 0x7fff;

            if (curd > maxd) {
              maxd = curd;
              pi = ei;
            }
          } //*/

        }
      }

      ci = pi;
      pi = prev[ci];
      dif += ci - pi + (1 << 15) & 0x7fff;
    }

    return tl << 16 | td;
  };

  UZIP.F._howLong = function (data, i, dif) {
    if (data[i] != data[i - dif] || data[i + 1] != data[i + 1 - dif] || data[i + 2] != data[i + 2 - dif]) return 0;
    let oi = i,
        l = Math.min(data.length, i + 258);
    i += 3; //while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;

    while (i < l && data[i] == data[i - dif]) i++;

    return i - oi;
  };

  UZIP.F._hash = function (data, i) {
    return (data[i] << 8 | data[i + 1]) + (data[i + 2] << 4) & 0xffff; //let hash_shift = 0, hash_mask = 255;
    //let h = data[i+1] % 251;
    //h = (((h << 8) + data[i+2]) % 251);
    //h = (((h << 8) + data[i+2]) % 251);
    //h = ((h<<hash_shift) ^ (c) ) & hash_mask;
    //return h | (data[i]<<8);
    //return (data[i] | (data[i+1]<<8));
  }; //UZIP.___toth = 0;


  UZIP.saved = 0;

  UZIP.F._writeBlock = function (BFINAL, lits, li, ebits, data, o0, l0, out, pos) {
    let U = UZIP.F.U,
        putsF = UZIP.F._putsF,
        putsE = UZIP.F._putsE; //*

    let T, ML, MD, MH, numl, numd, numh, lset, dset;
    U.lhst[256]++;
    T = UZIP.F.getTrees();
    ML = T[0];
    MD = T[1];
    MH = T[2];
    numl = T[3];
    numd = T[4];
    numh = T[5];
    lset = T[6];
    dset = T[7];
    let cstSize = ((pos + 3 & 7) == 0 ? 0 : 8 - (pos + 3 & 7)) + 32 + (l0 << 3);
    let fxdSize = ebits + UZIP.F.contSize(U.fltree, U.lhst) + UZIP.F.contSize(U.fdtree, U.dhst);
    let dynSize = ebits + UZIP.F.contSize(U.ltree, U.lhst) + UZIP.F.contSize(U.dtree, U.dhst);
    dynSize += 14 + 3 * numh + UZIP.F.contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);

    for (let j = 0; j < 286; j++) U.lhst[j] = 0;

    for (let j = 0; j < 30; j++) U.dhst[j] = 0;

    for (let j = 0; j < 19; j++) U.ihst[j] = 0; //*/


    let BTYPE = cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;
    putsF(out, pos, BFINAL);
    putsF(out, pos + 1, BTYPE);
    pos += 3;

    if (BTYPE == 0) {
      while ((pos & 7) != 0) pos++;

      pos = UZIP.F._copyExact(data, o0, l0, out, pos);
    } else {
      let ltree, dtree;

      if (BTYPE == 1) {
        ltree = U.fltree;
        dtree = U.fdtree;
      }

      if (BTYPE == 2) {
        UZIP.F.makeCodes(U.ltree, ML);
        UZIP.F.revCodes(U.ltree, ML);
        UZIP.F.makeCodes(U.dtree, MD);
        UZIP.F.revCodes(U.dtree, MD);
        UZIP.F.makeCodes(U.itree, MH);
        UZIP.F.revCodes(U.itree, MH);
        ltree = U.ltree;
        dtree = U.dtree;
        putsE(out, pos, numl - 257);
        pos += 5; // 286

        putsE(out, pos, numd - 1);
        pos += 5; // 30

        putsE(out, pos, numh - 4);
        pos += 4; // 19

        for (let i = 0; i < numh; i++) putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);

        pos += 3 * numh;
        pos = UZIP.F._codeTiny(lset, U.itree, out, pos);
        pos = UZIP.F._codeTiny(dset, U.itree, out, pos);
      }

      let off = o0;

      for (let si = 0; si < li; si += 2) {
        let qb = lits[si],
            len = qb >>> 23,
            end = off + (qb & (1 << 23) - 1);

        while (off < end) pos = UZIP.F._writeLit(data[off++], ltree, out, pos);

        if (len != 0) {
          let qc = lits[si + 1],
              dst = qc >> 16,
              lgi = qc >> 8 & 255,
              dgi = qc & 255;
          pos = UZIP.F._writeLit(257 + lgi, ltree, out, pos);
          putsE(out, pos, len - U.of0[lgi]);
          pos += U.exb[lgi];
          pos = UZIP.F._writeLit(dgi, dtree, out, pos);
          putsF(out, pos, dst - U.df0[dgi]);
          pos += U.dxb[dgi];
          off += len;
        }
      }

      pos = UZIP.F._writeLit(256, ltree, out, pos);
    } //console.log(pos-opos, fxdSize, dynSize, cstSize);


    return pos;
  };

  UZIP.F._copyExact = function (data, off, len, out, pos) {
    let p8 = pos >>> 3;
    out[p8] = len;
    out[p8 + 1] = len >>> 8;
    out[p8 + 2] = 255 - out[p8];
    out[p8 + 3] = 255 - out[p8 + 1];
    p8 += 4;
    out.set(new Uint8Array(data.buffer, off, len), p8); //for(let i=0; i<len; i++) out[p8+i]=data[off+i];

    return pos + (len + 4 << 3);
  };
  /*
  	Interesting facts:
  	- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)
  */


  UZIP.F.getTrees = function () {
    let U = UZIP.F.U;

    let ML = UZIP.F._hufTree(U.lhst, U.ltree, 15);

    let MD = UZIP.F._hufTree(U.dhst, U.dtree, 15);

    let lset = [],
        numl = UZIP.F._lenCodes(U.ltree, lset);

    let dset = [],
        numd = UZIP.F._lenCodes(U.dtree, dset);

    for (let i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;

    for (let i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;

    let MH = UZIP.F._hufTree(U.ihst, U.itree, 7);

    let numh = 19;

    while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] == 0) numh--;

    return [ML, MD, MH, numl, numd, numh, lset, dset];
  };

  UZIP.F.getSecond = function (a) {
    let b = [];

    for (let i = 0; i < a.length; i += 2) b.push(a[i + 1]);

    return b;
  };

  UZIP.F.nonZero = function (a) {
    let b = '';

    for (let i = 0; i < a.length; i += 2) if (a[i + 1] != 0) b += (i >> 1) + ',';

    return b;
  };

  UZIP.F.contSize = function (tree, hst) {
    let s = 0;

    for (let i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];

    return s;
  };

  UZIP.F._codeTiny = function (set, tree, out, pos) {
    for (let i = 0; i < set.length; i += 2) {
      let l = set[i],
          rst = set[i + 1]; //console.log(l, pos, tree[(l<<1)+1]);

      pos = UZIP.F._writeLit(l, tree, out, pos);
      let rsl = l == 16 ? 2 : l == 17 ? 3 : 7;

      if (l > 15) {
        UZIP.F._putsE(out, pos, rst, rsl);

        pos += rsl;
      }
    }

    return pos;
  };

  UZIP.F._lenCodes = function (tree, set) {
    let len = tree.length;

    while (len != 2 && tree[len - 1] == 0) len -= 2; // when no distances, keep one code with length 0


    for (let i = 0; i < len; i += 2) {
      let l = tree[i + 1],
          nxt = i + 3 < len ? tree[i + 3] : -1,
          nnxt = i + 5 < len ? tree[i + 5] : -1,
          prv = i == 0 ? -1 : tree[i - 1];

      if (l == 0 && nxt == l && nnxt == l) {
        let lz = i + 5;

        while (lz + 2 < len && tree[lz + 2] == l) lz += 2;

        let zc = Math.min(lz + 1 - i >>> 1, 138);
        if (zc < 11) set.push(17, zc - 3);else set.push(18, zc - 11);
        i += zc * 2 - 2;
      } else if (l == prv && nxt == l && nnxt == l) {
        let lz = i + 5;

        while (lz + 2 < len && tree[lz + 2] == l) lz += 2;

        let zc = Math.min(lz + 1 - i >>> 1, 6);
        set.push(16, zc - 3);
        i += zc * 2 - 2;
      } else set.push(l, 0);
    }

    return len >>> 1;
  };

  UZIP.F._hufTree = function (hst, tree, MAXL) {
    let list = [],
        hl = hst.length,
        tl = tree.length,
        i = 0;

    for (i = 0; i < tl; i += 2) {
      tree[i] = 0;
      tree[i + 1] = 0;
    }

    for (i = 0; i < hl; i++) if (hst[i] != 0) list.push({
      lit: i,
      f: hst[i]
    });

    let end = list.length,
        l2 = list.slice(0);
    if (end == 0) return 0; // empty histogram (usually for dist)

    if (end == 1) {
      let lit = list[0].lit,
          l2 = lit == 0 ? 1 : 0;
      tree[(lit << 1) + 1] = 1;
      tree[(l2 << 1) + 1] = 1;
      return 1;
    }

    list.sort(function (a, b) {
      return a.f - b.f;
    });
    let a = list[0],
        b = list[1],
        i0 = 0,
        i1 = 1,
        i2 = 2;
    list[0] = {
      lit: -1,
      f: a.f + b.f,
      l: a,
      r: b,
      d: 0
    };

    while (i1 != end - 1) {
      if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {
        a = list[i0++];
      } else {
        a = list[i2++];
      }

      if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {
        b = list[i0++];
      } else {
        b = list[i2++];
      }

      list[i1++] = {
        lit: -1,
        f: a.f + b.f,
        l: a,
        r: b
      };
    }

    let maxl = UZIP.F.setDepth(list[i1 - 1], 0);

    if (maxl > MAXL) {
      UZIP.F.restrictDepth(l2, MAXL, maxl);
      maxl = MAXL;
    }

    for (i = 0; i < end; i++) tree[(l2[i].lit << 1) + 1] = l2[i].d;

    return maxl;
  };

  UZIP.F.setDepth = function (t, d) {
    if (t.lit != -1) {
      t.d = d;
      return d;
    }

    return Math.max(UZIP.F.setDepth(t.l, d + 1), UZIP.F.setDepth(t.r, d + 1));
  };

  UZIP.F.restrictDepth = function (dps, MD, maxl) {
    let i = 0,
        bCost = 1 << maxl - MD,
        dbt = 0;
    dps.sort(function (a, b) {
      return b.d == a.d ? a.f - b.f : b.d - a.d;
    });

    for (i = 0; i < dps.length; i++) if (dps[i].d > MD) {
      let od = dps[i].d;
      dps[i].d = MD;
      dbt += bCost - (1 << maxl - od);
    } else break;

    dbt = dbt >>> maxl - MD;

    while (dbt > 0) {
      let od = dps[i].d;

      if (od < MD) {
        dps[i].d++;
        dbt -= 1 << MD - od - 1;
      } else i++;
    }

    for (; i >= 0; i--) if (dps[i].d == MD && dbt < 0) {
      dps[i].d--;
      dbt++;
    }

    if (dbt != 0) console.log('debt left');
  };

  UZIP.F._goodIndex = function (v, arr) {
    let i = 0;
    if (arr[i | 16] <= v) i |= 16;
    if (arr[i | 8] <= v) i |= 8;
    if (arr[i | 4] <= v) i |= 4;
    if (arr[i | 2] <= v) i |= 2;
    if (arr[i | 1] <= v) i |= 1;
    return i;
  };

  UZIP.F._writeLit = function (ch, ltree, out, pos) {
    UZIP.F._putsF(out, pos, ltree[ch << 1]);

    return pos + ltree[(ch << 1) + 1];
  };

  UZIP.F.inflate = function (data, buf) {
    if (data[0] == 3 && data[1] == 0) return buf ? buf : new Uint8Array(0);
    let F = UZIP.F,
        bitsF = F._bitsF,
        bitsE = F._bitsE,
        decodeTiny = F._decodeTiny,
        makeCodes = F.makeCodes,
        codes2map = F.codes2map,
        get17 = F._get17;
    let U = F.U;
    let noBuf = buf == null;
    if (noBuf) buf = new Uint8Array(data.length >> 2 << 3);
    let BFINAL = 0,
        BTYPE = 0,
        HLIT = 0,
        HDIST = 0,
        HCLEN = 0,
        ML = 0,
        MD = 0;
    let off = 0,
        pos = 0;
    let lmap, dmap;

    while (BFINAL == 0) {
      BFINAL = bitsF(data, pos, 1);
      BTYPE = bitsF(data, pos + 1, 2);
      pos += 3; //console.log(BFINAL, BTYPE);

      if (BTYPE == 0) {
        if ((pos & 7) != 0) pos += 8 - (pos & 7);
        let p8 = (pos >>> 3) + 4,
            len = data[p8 - 4] | data[p8 - 3] << 8; //console.log(len);//bitsF(data, pos, 16),

        if (noBuf) buf = UZIP.F._check(buf, off + len);
        buf.set(new Uint8Array(data.buffer, data.byteOffset + p8, len), off); //for(let i=0; i<len; i++) buf[off+i] = data[p8+i];
        //for(let i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw "e";

        pos = p8 + len << 3;
        off += len;
        continue;
      }

      if (noBuf) buf = UZIP.F._check(buf, off + (1 << 17));

      if (BTYPE == 1) {
        lmap = U.flmap;
        dmap = U.fdmap;
        ML = (1 << 9) - 1;
        MD = (1 << 5) - 1;
      }

      if (BTYPE == 2) {
        HLIT = bitsE(data, pos, 5) + 257;
        HDIST = bitsE(data, pos + 5, 5) + 1;
        HCLEN = bitsE(data, pos + 10, 4) + 4;
        pos += 14;

        for (let i = 0; i < 38; i += 2) {
          U.itree[i] = 0;
          U.itree[i + 1] = 0;
        }

        let tl = 1;

        for (let i = 0; i < HCLEN; i++) {
          let l = bitsE(data, pos + i * 3, 3);
          U.itree[(U.ordr[i] << 1) + 1] = l;
          if (l > tl) tl = l;
        }

        pos += 3 * HCLEN; //console.log(itree);

        makeCodes(U.itree, tl);
        codes2map(U.itree, tl, U.imap);
        lmap = U.lmap;
        dmap = U.dmap;
        let ml = decodeTiny(U.imap, (1 << tl) - 1, HLIT, data, pos, U.ltree);
        ML = (1 << (ml >>> 24)) - 1;
        pos += ml & 0xffffff;
        makeCodes(U.ltree, ml >>> 24);
        codes2map(U.ltree, ml >>> 24, lmap);
        let md = decodeTiny(U.imap, (1 << tl) - 1, HDIST, data, pos, U.dtree);
        MD = (1 << (md >>> 24)) - 1;
        pos += md & 0xffffff;
        makeCodes(U.dtree, md >>> 24);
        codes2map(U.dtree, md >>> 24, dmap);
      } //let ooff=off, opos=pos;


      while (true) {
        let code = lmap[get17(data, pos) & ML];
        pos += code & 15;
        let lit = code >>> 4; //U.lhst[lit]++;

        if (lit >>> 8 == 0) {
          buf[off++] = lit;
        } else if (lit == 256) {
          break;
        } else {
          let end = off + lit - 254;

          if (lit > 264) {
            let ebs = U.ldef[lit - 257];
            end = off + (ebs >>> 3) + bitsE(data, pos, ebs & 7);
            pos += ebs & 7;
          } //UZIP.F.dst[end-off]++;


          let dcode = dmap[get17(data, pos) & MD];
          pos += dcode & 15;
          let dlit = dcode >>> 4;
          let dbs = U.ddef[dlit],
              dst = (dbs >>> 4) + bitsF(data, pos, dbs & 15);
          pos += dbs & 15; //let o0 = off-dst, stp = Math.min(end-off, dst);
          //if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else
          //if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else
          //if(dst==1) buf.fill(buf[off-1], off, end);  else

          while (off < end) {
            buf[off] = buf[off++ - dst];
            buf[off] = buf[off++ - dst];
            buf[off] = buf[off++ - dst];
            buf[off] = buf[off++ - dst];
          }

          off = end; //while(off!=end) {  buf[off]=buf[off++-dst];  }
        }
      } //console.log(off-ooff, (pos-opos)>>>3);

    } //console.log(UZIP.F.dst);
    //console.log(tlen, dlen, off-tlen+tcnt);


    return buf.length == off ? buf : buf.slice(0, off);
  };

  UZIP.F._check = function (buf, len) {
    let bl = buf.length;
    if (len <= bl) return buf;
    let nbuf = new Uint8Array(bl << 1);

    for (let i = 0; i < bl; i += 4) {
      nbuf[i] = buf[i];
      nbuf[i + 1] = buf[i + 1];
      nbuf[i + 2] = buf[i + 2];
      nbuf[i + 3] = buf[i + 3];
    }

    return nbuf;
  };

  UZIP.F._decodeTiny = function (lmap, LL, len, data, pos, tree) {
    let opos = pos;
    let bitsE = UZIP.F._bitsE,
        get17 = UZIP.F._get17;
    let dlen = len << 1,
        i = 0,
        mx = 0; //if(pos<1000) console.log("--------");
    //console.log("----", pos, ":",  data[7],data[8], data[9], data[10], data[11]);

    while (i < dlen) {
      let code = lmap[get17(data, pos) & LL];
      pos += code & 15;
      let lit = code >>> 4; //if(pos<1000) console.log(lit, i>>>1);
      //if(i<20)console.log(lit, code>>>9, pos);

      if (lit <= 15) {
        tree[i] = 0;
        tree[i + 1] = lit;
        if (lit > mx) mx = lit;
        i += 2;
      } else {
        let ll = 0,
            n = 0;

        if (lit == 16) {
          n = 3 + bitsE(data, pos, 2) << 1;
          pos += 2;
          ll = tree[i - 1];
        } else if (lit == 17) {
          n = 3 + bitsE(data, pos, 3) << 1;
          pos += 3;
        } else if (lit == 18) {
          n = 11 + bitsE(data, pos, 7) << 1;
          pos += 7;
        }

        let ni = i + n;

        while (i < ni) {
          tree[i] = 0;
          tree[i + 1] = ll;
          i += 2;
        }
      }
    }

    let tl = tree.length;

    while (i < tl) {
      tree[i + 1] = 0;
      i += 2;
    }

    return mx << 24 | pos - opos;
  };

  UZIP.F.makeCodes = function (tree, MAX_BITS) {
    // code, length
    let U = UZIP.F.U;
    let max_code = tree.length;
    let code, bits, n, i, len;
    let bl_count = U.bl_count;

    for (let i = 0; i <= MAX_BITS; i++) bl_count[i] = 0;

    for (i = 1; i < max_code; i += 2) bl_count[tree[i]]++;

    let next_code = U.next_code; // smallest code for each length

    code = 0;
    bl_count[0] = 0;

    for (bits = 1; bits <= MAX_BITS; bits++) {
      code = code + bl_count[bits - 1] << 1;
      next_code[bits] = code;
    }

    for (n = 0; n < max_code; n += 2) {
      len = tree[n + 1];

      if (len != 0) {
        tree[n] = next_code[len];
        next_code[len]++;
      }
    }
  };

  UZIP.F.codes2map = function (tree, MAX_BITS, map) {
    let max_code = tree.length;
    let U = UZIP.F.U,
        r15 = U.rev15;

    for (let i = 0; i < max_code; i += 2) if (tree[i + 1] != 0) {
      let lit = i >> 1;
      let cl = tree[i + 1],
          val = lit << 4 | cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);

      let rest = MAX_BITS - cl,
          i0 = tree[i] << rest,
          i1 = i0 + (1 << rest); //tree[i]=r15[i0]>>>(15-MAX_BITS);

      while (i0 != i1) {
        let p0 = r15[i0] >>> 15 - MAX_BITS;
        map[p0] = val;
        i0++;
      }
    }
  };

  UZIP.F.revCodes = function (tree, MAX_BITS) {
    let r15 = UZIP.F.U.rev15,
        imb = 15 - MAX_BITS;

    for (let i = 0; i < tree.length; i += 2) {
      let i0 = tree[i] << MAX_BITS - tree[i + 1];
      tree[i] = r15[i0] >>> imb;
    }
  };

  UZIP.F._putsE = function (dt, pos, val) {
    val = val << (pos & 7);
    let o = pos >>> 3;
    dt[o] |= val;
    dt[o + 1] |= val >>> 8;
  };

  UZIP.F._putsF = function (dt, pos, val) {
    val = val << (pos & 7);
    let o = pos >>> 3;
    dt[o] |= val;
    dt[o + 1] |= val >>> 8;
    dt[o + 2] |= val >>> 16;
  };

  UZIP.F._bitsE = function (dt, pos, length) {
    return (dt[pos >>> 3] | dt[(pos >>> 3) + 1] << 8) >>> (pos & 7) & (1 << length) - 1;
  };

  UZIP.F._bitsF = function (dt, pos, length) {
    return (dt[pos >>> 3] | dt[(pos >>> 3) + 1] << 8 | dt[(pos >>> 3) + 2] << 16) >>> (pos & 7) & (1 << length) - 1;
  };
  /*
  UZIP.F._get9 = function(dt, pos) {
  	return ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;
  } */


  UZIP.F._get17 = function (dt, pos) {
    // return at least 17 meaningful bytes
    return (dt[pos >>> 3] | dt[(pos >>> 3) + 1] << 8 | dt[(pos >>> 3) + 2] << 16) >>> (pos & 7);
  };

  UZIP.F._get25 = function (dt, pos) {
    // return at least 17 meaningful bytes
    return (dt[pos >>> 3] | dt[(pos >>> 3) + 1] << 8 | dt[(pos >>> 3) + 2] << 16 | dt[(pos >>> 3) + 3] << 24) >>> (pos & 7);
  };

  UZIP.F.U = {
    next_code: new Uint16Array(16),
    bl_count: new Uint16Array(16),
    ordr: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
    of0: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],
    exb: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],
    ldef: new Uint16Array(32),
    df0: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],
    dxb: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],
    ddef: new Uint32Array(32),
    flmap: new Uint16Array(512),
    fltree: [],
    fdmap: new Uint16Array(32),
    fdtree: [],
    lmap: new Uint16Array(32768),
    ltree: [],
    dmap: new Uint16Array(32768),
    dtree: [],
    imap: new Uint16Array(512),
    itree: [],
    //rev9 : new Uint16Array(  512)
    rev15: new Uint16Array(1 << 15),
    lhst: new Uint32Array(286),
    dhst: new Uint32Array(30),
    ihst: new Uint32Array(19),
    lits: new Uint32Array(15000),
    strt: new Uint16Array(1 << 16),
    prev: new Uint16Array(1 << 15)
  };

  (function () {
    let U = UZIP.F.U;
    let len = 1 << 15;

    for (let i = 0; i < len; i++) {
      let x = i;
      x = (x & 0xaaaaaaaa) >>> 1 | (x & 0x55555555) << 1;
      x = (x & 0xcccccccc) >>> 2 | (x & 0x33333333) << 2;
      x = (x & 0xf0f0f0f0) >>> 4 | (x & 0x0f0f0f0f) << 4;
      x = (x & 0xff00ff00) >>> 8 | (x & 0x00ff00ff) << 8;
      U.rev15[i] = (x >>> 16 | x << 16) >>> 17;
    }

    for (let i = 0; i < 32; i++) {
      U.ldef[i] = U.of0[i] << 3 | U.exb[i];
      U.ddef[i] = U.df0[i] << 4 | U.dxb[i];
    }

    let i = 0;

    for (; i <= 143; i++) U.fltree.push(0, 8);

    for (; i <= 255; i++) U.fltree.push(0, 9);

    for (; i <= 279; i++) U.fltree.push(0, 7);

    for (; i <= 287; i++) U.fltree.push(0, 8);

    UZIP.F.makeCodes(U.fltree, 9);
    UZIP.F.codes2map(U.fltree, 9, U.flmap);
    UZIP.F.revCodes(U.fltree, 9);

    for (i = 0; i < 32; i++) U.fdtree.push(0, 5);

    UZIP.F.makeCodes(U.fdtree, 5);
    UZIP.F.codes2map(U.fdtree, 5, U.fdmap);
    UZIP.F.revCodes(U.fdtree, 5);

    for (let i = 0; i < 19; i++) U.itree.push(0, 0);

    for (let i = 0; i < 286; i++) U.ltree.push(0, 0);

    for (let i = 0; i < 30; i++) U.dtree.push(0, 0);
  })();

  // Modules
  // Private function to fetch a game

  const fetchROMAsByteArray = (ROM, loadOptions) => {
    const fetchROMAsByteArrayTask = async () => {
      // Check if we were passed straight bytes
      if (ArrayBuffer.isView(ROM) && ROM.constructor === Uint8Array) {
        return ROM;
      } else if (typeof ROM === 'object' && ROM.size) {
        // We were passed a file from HTML file input
        // Read the file as a Uint8Array
        const byteArray = await getROMFromFileReaderAsByteArray(ROM);

        if (ROM.name.toLowerCase().endsWith('.zip')) {
          return await parseByteArrayAsZip(byteArray);
        }

        return byteArray;
      } else {
        // We were passed a URL
        // Fetch the file
        // First check if we have headers
        const fetchHeaders = {};

        if (loadOptions && loadOptions.headers) {
          fetchHeaders.headers = loadOptions.headers;
        }

        let bytes = await fetch(ROM, fetchHeaders).then(blob => {
          if (!blob.ok) {
            return Promise.reject(blob);
          }

          return blob.arrayBuffer();
        });
        let fileName = ROM;

        if (loadOptions && loadOptions.fileName) {
          fileName = loadOptions.fileName;
        } // Get our byteArray


        const byteArray = new Uint8Array(bytes);

        if (fileName.toLowerCase().endsWith('.zip')) {
          return await parseByteArrayAsZip(byteArray);
        }

        return byteArray;
      }
    };

    return fetchROMAsByteArrayTask();
  };

  const getROMFromFileReaderAsByteArray = async ROM => {
    const fileReaderByteArray = await new Promise((resolve, reject) => {
      // Read the file object
      // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob
      const fileReader = new FileReader();

      fileReader.onload = () => {
        const byteArray = new Uint8Array(fileReader.result);
        resolve(byteArray);
      };

      fileReader.readAsArrayBuffer(ROM);
    });
    return fileReaderByteArray;
  }; // Function to parse and find the gb files within an archive


  const parseByteArrayAsZip = async byteArray => {
    // Parse the zip using UZIP
    const unzipObject = await uzip.parse(byteArray); // Find the ROM in the output

    let foundROM = false;
    const unzipObjectKeys = Object.keys(unzipObject);
    unzipObjectKeys.some(key => {
      const lowercaseKey = key.toLowerCase();

      if (lowercaseKey.includes('.gb') || lowercaseKey.includes('.gbc')) {
        foundROM = unzipObject[key];
        return true;
      }

      return false;
    });

    if (!foundROM) {
      throw new Error('Could not find a ROM in zip...');
    }

    return foundROM;
  };

  var blarggsCpuROM = "data:null;base64,

  var blarggsInstrTimingROM = "data:null;base64,

  var tobuTobuGirlROM = "data:null;base64,";

  var backToColorDemoROM = "data:null;base64,

  // Need h for rendering the elements in an object
  const openSourceROMs = {
    tobutobugirl: {
      title: 'tobu tobu girl',
      url: tobuTobuGirlROM,
      image: 'assets/tobutobugirl.png',
      link: 'http://tangramgames.dk/tobutobugirl/',
      infoElement: h("div", null, h("p", null, "Tobu Tobu Girl is a fun and challenging arcade platformer developed by Tangram Games featuring an original soundtrack by potato-tan. Licensed under MIT/CC-BY."))
    },
    backToColor: {
      title: 'Back to Color',
      url: backToColorDemoROM,
      image: 'assets/back-to-color.gbc.noPerformanceOptions.png',
      link: 'https://github.com/AntonioND/back-to-color',
      infoElement: h("div", null, h("p", null, "Back to Color, a GBC demo for the GBDev 2014 compo. Made by AntonioND."))
    },
    blarggsCpu: {
      title: "Blargg's CPU Test",
      url: blarggsCpuROM,
      image: 'assets/cpu_instrs.golden.png',
      link: 'http://gbdev.gg8.se/wiki/articles/Test_ROMs',
      infoElement: h("div", null, h("p", null, "Test ROM for testing CPU instruction's operation. Made by Blargg."))
    },
    blarggsInstrTiming: {
      title: "Blargg's instr_timing Test",
      url: blarggsInstrTimingROM,
      image: 'assets/instr_timing.golden.png',
      link: 'http://gbdev.gg8.se/wiki/articles/Test_ROMs',
      infoElement: h("div", null, h("p", null, "Test ROM for testing CPU instruction's timing. Made by Blargg."))
    }
  };
  const getOpenSourceROMElements = loadROMCallback => {
    const openSourceROMElements = [];
    Object.keys(openSourceROMs).forEach(romKey => {
      const openSourceROM = openSourceROMs[romKey];
      openSourceROMElements.push(h("div", {
        class: "open-source-rom"
      }, h("button", {
        class: "open-source-rom__button",
        onClick: () => {
          loadROMCallback(openSourceROM);
        }
      }, h("div", {
        class: "open-source-rom__left"
      }, h("img", {
        src: openSourceROM.image
      })), h("div", {
        class: "open-source-rom__right"
      }, h("h3", null, openSourceROM.title), h("div", {
        class: "open-source-rom__info"
      }, openSourceROM.infoElement))), h("a", {
        href: openSourceROM.link,
        target: "blank_",
        class: "open-source-rom__link"
      }, h("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24"
      }, h("path", {
        d: "M0 0h24v24H0z",
        fill: "none"
      }), h("path", {
        d: "M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"
      })))));
    });
    return openSourceROMElements;
  };

  class LoadROMSelector extends Component {
    constructor(props) {
      super(props);
      this.state = {
        ROM: 'Please load a ROM...',
        showROMs: false,
        loading: false
      };
    }

    componentDidMount() {
      this.openSourceROMElements = getOpenSourceROMElements(this.loadOpenSourceROM.bind(this));
    } // Allow passing a file
    // https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513


    loadLocalFile(event) {
      this.loadROMIntoCores(event.target.files[0], event.target.files[0].name);
      sendAnalyticsEvent('load_local_rom');
    }

    loadOpenSourceROM(openSourceROM) {
      this.loadROMIntoCores(openSourceROM.url, openSourceROM.title);
      sendAnalyticsEvent('load_open_source_rom');
    }

    loadROMIntoCores(ROMUrl, title) {
      this.setState(_objectSpread({}, this.state, {
        ROM: title,
        showROMs: false,
        loading: true
      }));
      const coreObjects = this.props.WasmBoyCoreObjects;

      const loadROMTask = async () => {
        // Fetch the rom
        const ROM = await fetchROMAsByteArray(ROMUrl); // Our config params

        const configParams = [0, 1, 0, 0, 0, 0, 0, 0, 0]; // Clear Wasm memory
        // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing

        coreObjects.forEach(coreObject => {
          for (let i = 0; i <= coreObject.core.byteMemory.length; i++) {
            coreObject.core.byteMemory[i] = 0;
          } // Set the ROM in byte memory


          coreObject.core.byteMemory.set(ROM, coreObject.core.instance.exports.CARTRIDGE_ROM_LOCATION); // Config the core

          coreObject.core.instance.exports.config.apply(this, configParams);
        });
        this.props.ROMLoaded();
        this.setState(_objectSpread({}, this.state, {
          loading: false
        }));
      }; // Wrap in a set timeout to avoid setState weirdness


      setTimeout(() => {
        loadROMTask();
      });
    }

    render() {
      return h("section", {
        class: "load-rom"
      }, h("h2", null, "Current ROM: ", this.state.ROM), this.state.loading ? h("div", {
        class: "donut"
      }) : h("div", {
        class: "load-rom__load-buttons"
      }, h("div", {
        class: "file"
      }, h("label", {
        class: "file-label"
      }, h("input", {
        class: "file-input",
        type: "file",
        accept: ".gb, .gbc, .zip",
        name: "resume",
        onChange: event => {
          this.loadLocalFile(event);
        }
      }), h("span", {
        class: "file-cta"
      }, h("span", {
        class: "file-icon"
      }, h("svg", {
        fill: "#020202",
        height: "24",
        viewBox: "0 0 24 24",
        width: "24",
        xmlns: "http://www.w3.org/2000/svg"
      }, h("path", {
        d: "M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z"
      }), h("path", {
        d: "M0 0h24v24H0z",
        fill: "none"
      }))), h("span", {
        class: "file-label"
      }, "Upload from Device")))), h("a", {
        class: "button is-normal is-light file-button",
        onClick: () => this.setState(_objectSpread({}, this.state, {
          showROMs: true
        }))
      }, h("span", {
        class: "icon"
      }, h("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24"
      }, h("path", {
        d: "M0 0h24v24H0z",
        fill: "none"
      }), h("path", {
        d: "M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10z"
      }))), h("span", null, "Open Source ROMs (Play Now)"))), this.state.showROMs ? h(preactPortal, {
        into: "body"
      }, h("div", {
        class: "modal is-active"
      }, h("div", {
        class: "modal-background"
      }, h("div", {
        class: "modal-content"
      }, h("h1", null, "Load Open Source ROM"), h("div", {
        class: "open-source-ROM-container"
      }, this.openSourceROMElements)), h("button", {
        class: "modal-close is-large",
        "aria-label": "close",
        onClick: () => this.setState(_objectSpread({}, this.state, {
          showROMs: false
        }))
      })))) : null);
    }

  }

  var now;

  if (commonjsGlobal.process && process.hrtime) {
    var hrtime = process.hrtime;

    now = function () {
      var hr = hrtime();
      return (hr[0] * 1e9 + hr[1]) / 1e3;
    };

  } else if (commonjsGlobal.performance && performance.now) {

    var start = (performance.timing && performance.timing.navigationStart) || Date.now();

    now = function() {
      return (start + performance.now()) * 1e3;
    };

  } else {

    now = function() {
      return Date.now() * 1e3;
    };

  }

  var now_1 = now;

  var toString$1 = function() {

    var microseconds = this.microseconds,
        milliseconds = this.milliseconds,
        seconds = this.seconds,
        minutes = this.minutes,
        hours = this.hours,
        days = this.days;

    var parts = [{
      name: 'day',
      value: days
    }, {
      name: 'hour',
      value: hours
    }, {
      name: 'minute',
      value: minutes
    }, {
      name: 'second',
      value: seconds
    }, {
      name: 'millisecond',
      value: milliseconds
    }, {
      name: 'microsecond',
      value: microseconds
    }];

    var time = [];

    for (var i = 0; i < parts.length; i++) {
      var part = parts[i];
      if (part.value === 0) {
        if (!time.length) continue; // nothing was added yet

        var broken = false;

        for (var j = i; j < parts.length; j++) {
          var p = parts[j];
          if (p.value) {
            broken = true;
            break;
          }
        }

        if (!broken) break;
      }

      time.push(part.value, part.value === 1 ? part.name : part.name + 's');
    }

    return time.join(' ');
  };

  var parse = function parse(nano) {

    var ms = nano / 1000;
    var ss = ms / 1000;
    var mm = ss / 60;
    var hh = mm / 60;
    var dd = hh / 24;

    var microseconds = Math.round((ms % 1) * 1000);
    var milliseconds = Math.floor(ms % 1000);
    var seconds = Math.floor(ss % 60);
    var minutes = Math.floor(mm % 60);
    var hours = Math.floor(hh % 24);
    var days = Math.floor(dd);

    return { microseconds: microseconds, milliseconds: milliseconds, seconds: seconds, minutes: minutes, hours: hours, days: days, toString: toString$1 };
  };

  var since = function(nano) {
    return now_1() - nano;
  };

  var now_1$1 = now_1;
  var since_1 = since;
  var parse_1 = parse;

  var microseconds = {
  	now: now_1$1,
  	since: since_1,
  	parse: parse_1
  };

  var isnumber = isNumber;

  /**
   * Determine if something is a non-infinite javascript number.
   * @param  {Number}  n A (potential) number to see if it is a number.
   * @return {Boolean}   True for non-infinite numbers, false for all else.
   */
  function isNumber(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  }

  var numbers_1 = numbers;
  var sum_1 = sum;
  var mean_1 = mean;
  var median_1 = median;
  var mode_1 = mode;
  var variance = populationVariance;
  var sampleVariance_1 = sampleVariance;
  var populationVariance_1 = populationVariance;
  var stdev = populationStdev;
  var sampleStdev_1 = sampleStdev;
  var populationStdev_1 = populationStdev;
  var percentile_1 = percentile;
  var histogram_1 = histogram;



  function numbers(vals) {
    var nums = [];
    if (vals == null)
      return nums

    for (var i = 0; i < vals.length; i++) {
      if (isnumber(vals[i]))
        nums.push(+vals[i]);
    }
    return nums
  }

  function nsort(vals) {
    return vals.sort(function numericSort(a, b) { return a - b })
  }

  function sum(vals) {
    vals = numbers(vals);
    var total = 0;
    for (var i = 0; i < vals.length; i++) {
      total += vals[i];
    }
    return total
  }

  function mean(vals) {
    vals = numbers(vals);
    if (vals.length === 0) return NaN
    return (sum(vals) / vals.length)
  }

  function median(vals) {
    vals = numbers(vals);
    if (vals.length === 0) return NaN

    var half = (vals.length / 2) | 0;

    vals = nsort(vals);
    if (vals.length % 2) {
      // Odd length, true middle element
      return vals[half]
    }
    else {
      // Even length, average middle two elements
      return (vals[half-1] + vals[half]) / 2.0
    }
  }

  // Returns the mode of a unimodal dataset
  // If the dataset is multi-modal, returns a Set containing the modes
  function mode(vals) {
    vals = numbers(vals);
    if (vals.length === 0) return NaN
    var mode = NaN;
    var dist = {};

    for (var i = 0; i < vals.length; i++) {
      var value = vals[i];
      var me = dist[value] || 0;
      me++;
      dist[value] = me;
    }

    var rank = numbers(Object.keys(dist).sort(function sortMembers(a, b) { return dist[b] - dist[a] }));
    mode = rank[0];
    if (dist[rank[1]] == dist[mode]) {
      // multi-modal
      if (rank.length == vals.length) {
        // all values are modes
        return vals
      }
      var modes = new Set([mode]);
      var modeCount = dist[mode];
      for (var i = 1; i < rank.length; i++) {
        if (dist[rank[i]] == modeCount) {
          modes.add(rank[i]);
        }
        else {
          break
        }
      }
      return modes
    }
    return mode
  }

  // This helper finds the mean of all the values, then squares the difference
  // from the mean for each value and returns the resulting array.  This is the
  // core of the varience functions - the difference being dividing by N or N-1.
  function valuesMinusMeanSquared(vals) {
    vals = numbers(vals);
    var avg = mean(vals);
    var diffs = [];
    for (var i = 0; i < vals.length; i++) {
      diffs.push(Math.pow((vals[i] - avg), 2));
    }
    return diffs
  }

  // Population Variance = average squared deviation from mean
  function populationVariance(vals) {
    return mean(valuesMinusMeanSquared(vals))
  }

  // Sample Variance
  function sampleVariance(vals) {
    var diffs = valuesMinusMeanSquared(vals);
    if (diffs.length <= 1) return NaN

    return sum(diffs) / (diffs.length - 1)
  }


  // Population Standard Deviation = sqrt of population variance
  function populationStdev(vals) {
    return Math.sqrt(populationVariance(vals))
  }

  // Sample Standard Deviation = sqrt of sample variance
  function sampleStdev(vals) {
    return Math.sqrt(sampleVariance(vals))
  }

  function percentile(vals, ptile) {
    vals = numbers(vals);
    if (vals.length === 0 || ptile == null || ptile < 0) return NaN

    // Fudge anything over 100 to 1.0
    if (ptile > 1) ptile = 1;
    vals = nsort(vals);
    var i = (vals.length * ptile) - 0.5;
    if ((i | 0) === i) return vals[i]
    // interpolated percentile -- using Estimation method
    var int_part = i | 0;
    var fract = i - int_part;
    return (1 - fract) * vals[int_part] + fract * vals[Math.min(int_part + 1, vals.length - 1)]
  }

  function histogram (vals, bins) {
    if (vals == null) {
      return null
    }
    vals = nsort(numbers(vals));
    if (vals.length === 0) {
      return null
    }
    if (bins == null) {
      // pick bins by simple method: Math.sqrt(n)
      bins = Math.sqrt(vals.length);
    }
    bins = Math.round(bins);
    if (bins < 1) {
      bins = 1;
    }

    var min = vals[0];
    var max = vals[vals.length - 1];
    if (min === max) {
      // fudge for non-variant data
      min = min - 0.5;
      max = max + 0.5;
    }

    var range = (max - min);
    // make the bins slightly larger by expanding the range about 10%
    // this helps with dumb floating point stuff
    var binWidth = (range + (range * 0.05)) / bins;
    var midpoint = (min + max) / 2;
    // even bin count, midpoint makes an edge
    var leftEdge = midpoint - (binWidth * Math.floor(bins / 2));
    if (bins % 2 !== 0) {
      // odd bin count, center middle bin on midpoint
      var leftEdge = (midpoint - (binWidth / 2)) - (binWidth * Math.floor(bins / 2));
    }

    var hist = {
      values: Array(bins).fill(0),
      bins: bins,
      binWidth: binWidth,
      binLimits: [leftEdge, leftEdge + (binWidth * bins)]
    };

    var binIndex = 0;
    for (var i = 0; i < vals.length; i++) {
      while (vals[i] > (((binIndex + 1) * binWidth) + leftEdge)) {
        binIndex++;
      }
      hist.values[binIndex]++;
    }

    return hist
  }

  var stats = {
  	numbers: numbers_1,
  	sum: sum_1,
  	mean: mean_1,
  	median: median_1,
  	mode: mode_1,
  	variance: variance,
  	sampleVariance: sampleVariance_1,
  	populationVariance: populationVariance_1,
  	stdev: stdev,
  	sampleStdev: sampleStdev_1,
  	populationStdev: populationStdev_1,
  	percentile: percentile_1,
  	histogram: histogram_1
  };

  // Some shared constants by the graphics lib and worker
  const GAMEBOY_CAMERA_WIDTH = 160;
  const GAMEBOY_CAMERA_HEIGHT = 144;

  const WORKER_MESSAGE_TYPE = {
    CONNECT: 'CONNECT',
    INSTANTIATE_WASM: 'INSTANTIATE_WASM',
    CLEAR_MEMORY: 'CLEAR_MEMORY',
    CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',
    GET_MEMORY: 'GET_MEMORY',
    SET_MEMORY: 'SET_MEMORY',
    SET_MEMORY_DONE: 'SET_MEMORY_DONE',
    GET_CONSTANTS: 'GET_CONSTANTS',
    GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',
    CONFIG: 'CONFIG',
    RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',
    PLAY: 'PLAY',
    PAUSE: 'PAUSE',
    UPDATED: 'UPDATED',
    CRASHED: 'CRASHED',
    SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',
    AUDIO_LATENCY: 'AUDIO_LATENCY',
    RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',
    GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',
    GET_WASM_CONSTANT: 'GET_WASM_CONSTANT'
  };

  function getEventData(event) {
    if (event.data) {
      return event.data;
    }

    return event;
  }

  // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas

  class WasmBoyGraphicsService {
    constructor() {
      this.worker = undefined;
      this.updateGraphicsCallback = undefined;
      this.frameQueue = undefined;
      this.frameQueueRenderPromise = undefined;
      this.canvasElement = undefined;
      this.canvasContext = undefined;
      this.canvasImageData = undefined;
      this.imageDataArray = undefined;
      this.imageDataArrayChanged = false;
    }

    initialize(canvasElement, updateGraphicsCallback) {
      this.updateGraphicsCallback = updateGraphicsCallback; // Initialiuze our cached wasm constants
      // WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = this.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf();
      // Reset our frame queue and render promises

      this.frameQueue = [];

      const initializeTask = async () => {
        // Prepare our canvas
        this.canvasElement = canvasElement;
        this.canvasContext = this.canvasElement.getContext('2d');
        this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;
        this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;
        this.canvasImageData = this.canvasContext.createImageData(GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT); // Add some css for smooth 8-bit canvas scaling
        // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas
        // https://caniuse.com/#feat=css-crisp-edges

        this.canvasElement.style = `
        image-rendering: optimizeSpeed;
        image-rendering: -moz-crisp-edges;
        image-rendering: -webkit-optimize-contrast;
        image-rendering: -o-crisp-edges;
        image-rendering: pixelated;
        -ms-interpolation-mode: nearest-neighbor;
      `; // Fill the canvas with a blank screen
        // using client width since we are not requiring a width and height oin the canvas
        // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth
        // TODO: Mention respopnsive canvas scaling in the docs

        this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height); // Finally make sure we set our constants for our worker

        if (this.worker) {
          await this.worker.postMessage({
            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS
          });
        }
      };

      return initializeTask();
    } // Function to set our worker


    setWorker(worker) {
      this.worker = worker;
      this.worker.addMessageListener(event => {
        const eventData = getEventData(event);

        switch (eventData.message.type) {
          case WORKER_MESSAGE_TYPE.UPDATED:
            {
              this.imageDataArray = new Uint8ClampedArray(eventData.message.imageDataArrayBuffer);
              this.imageDataArrayChanged = true;
              return;
            }
        }
      });
    } // Function to render a frame
    // Will add the frame to the frame queue to be rendered
    // Returns the promise from this.drawFrameQueue
    // Which resolves once all frames are rendered


    renderFrame() {
      // Check if we have new graphics to show
      if (!this.imageDataArrayChanged) {
        return;
      }

      this.imageDataArrayChanged = false; // Check for a callback for accessing image data

      if (this.updateGraphicsCallback) {
        this.updateGraphicsCallback(this.imageDataArray);
      } // Add our new imageData


      for (let i = 0; i < this.imageDataArray.length; i++) {
        this.canvasImageData.data[i] = this.imageDataArray[i];
      }

      this.canvasContext.clearRect(0, 0, GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);
      this.canvasContext.putImageData(this.canvasImageData, 0, 0);
    }

  }

  const WasmBoyGraphics = new WasmBoyGraphicsService();

  const getImageDataFromGraphicsFrameBuffer = wasmByteMemory => {
    // Draw the pixels
    // 160x144
    // Split off our image Data
    const imageDataArray = new Uint8ClampedArray(GAMEBOY_CAMERA_HEIGHT * GAMEBOY_CAMERA_WIDTH * 4);
    const rgbColor = new Uint8ClampedArray(3);

    for (let y = 0; y < GAMEBOY_CAMERA_HEIGHT; y++) {
      for (let x = 0; x < GAMEBOY_CAMERA_WIDTH; x++) {
        // Each color has an R G B component
        let pixelStart = (y * 160 + x) * 3;

        for (let color = 0; color < 3; color++) {
          rgbColor[color] = wasmByteMemory[pixelStart + color];
        } // Doing graphics using second answer on:
        // https://stackoverflow.com/questions/4899799/whats-the-best-way-to-set-a-single-pixel-in-an-html5-canvas
        // Image Data mapping


        const imageDataIndex = (x + y * GAMEBOY_CAMERA_WIDTH) * 4;
        imageDataArray[imageDataIndex] = rgbColor[0];
        imageDataArray[imageDataIndex + 1] = rgbColor[1];
        imageDataArray[imageDataIndex + 2] = rgbColor[2]; // Alpha, no transparency

        imageDataArray[imageDataIndex + 3] = 255;
      }
    }

    return imageDataArray;
  };

  const averageFpsFromTimes = frameTimes => {
    if (frameTimes.length <= 0) {
      return 0;
    }

    return Math.floor(1000000 / stats.mean(frameTimes));
  };

  const coreBenchmark = async (Core, times, cyclesToRun, asyncLoopCallback) => {
    let currentCycles = 0;

    const coreCycle = async () => {
      const start = microseconds.now();
      Core.instance.exports.executeFrame();
      const time = microseconds.since(start);
      times([...times(), time]);

      if (asyncLoopCallback) {
        await asyncLoopCallback(Core, times);
      }
    };

    await new Promise(resolve => {
      const cycleLoop = async resolve => {
        await coreCycle();
        currentCycles++;

        if (currentCycles >= cyclesToRun) {
          resolve();
        } else {
          setTimeout(() => {
            cycleLoop(resolve);
          });
        }
      };

      cycleLoop(resolve);
    });
  };

  const outputFrame = Core => {
    // Get the graphics frame output
    const graphicsFrameEndIndex = Core.instance.exports.FRAME_LOCATION + Core.instance.exports.FRAME_SIZE;
    const graphicsFrameBuffer = Core.byteMemory.slice(Core.instance.exports.FRAME_LOCATION, graphicsFrameEndIndex);
    WasmBoyGraphics.imageDataArray = getImageDataFromGraphicsFrameBuffer(graphicsFrameBuffer);
    WasmBoyGraphics.imageDataArrayChanged = true;
    WasmBoyGraphics.renderFrame();
  };

  class BenchmarkRunner extends Component {
    constructor(props) {
      super(props);
      this.state = {
        cyclesToRun: 2500
      };
    }

    componentDidMount() {}

    runBenchmark() {
      this.props.running(true);
      sendAnalyticsEvent('ran_benchmark', {
        cycles: `${this.state.cyclesToRun}`
      });

      const asyncLoopCallback = async Core => {
        outputFrame(Core);
        await new Promise(resolve => {
          this.setState(_objectSpread({}, this.state), () => resolve());
        });
      };

      const benchmarkTask = async () => {
        for (let i = 0; i < this.props.WasmBoyCoreObjects.length; i++) {
          let coreObject = this.props.WasmBoyCoreObjects[i];
          WasmBoyGraphics.initialize(document.getElementById(coreObject.canvasId));
          await coreBenchmark(coreObject.core, coreObject.times, this.state.cyclesToRun, asyncLoopCallback); // Generate our result times
          // Which drops the first 15% of frames per run
          // Since that should stable out then
          // Add the times index to our times start index

          if (coreObject.timesStartIndexes.length < 1) {
            coreObject.timesStartIndexes.push(0);
          }

          coreObject.timesStartIndexes.push(coreObject.times().length - 1); // Get our result times by slicing our total times

          coreObject.resultTimes = [];
          coreObject.timesStartIndexes.forEach((timeStartIndex, index) => {
            if (index === coreObject.timesStartIndexes.length - 1) {
              return;
            }

            const nextIndex = coreObject.timesStartIndexes[index + 1];
            let times = coreObject.times().slice(timeStartIndex, nextIndex + 1);
            times = times.slice(times.length * 0.15);
            coreObject.resultTimes = coreObject.resultTimes.concat(times);
          });
        }

        this.benchmarkComplete();
      };

      benchmarkTask();
    }

    benchmarkComplete() {
      this.props.running(false);
    }

    render() {
      if (!this.props) {
        return h("div", null);
      } // Get our runner output element for each core


      const wasmboyCoreOutputElements = [];
      this.props.WasmBoyCoreObjects.forEach(coreObject => {
        wasmboyCoreOutputElements.push(h("div", null, h("h1", null, coreObject.label, " (", coreObject.subLabel, ")"), h("h1", null, "Frames Run: ", coreObject.times().length), h("h1", null, "Current FPS Average: ", coreObject.times().length > 0 ? averageFpsFromTimes(coreObject.times()) : 0), h("canvas", {
          id: coreObject.canvasId
        })));
      });
      return h("section", {
        class: "runner"
      }, h("div", {
        class: "runner__frames-to-run"
      }, h("label", null, h("div", null, "Frames to run:"), h("input", {
        class: "input",
        type: "number",
        min: "0",
        value: this.state.cyclesToRun,
        disabled: !this.props.ready || this.props.running(),
        onChange: event => {
          this.setState(_objectSpread({}, this.state, {
            cyclesToRun: event.target.value
          }));
        }
      }), h("button", {
        class: "button is-success",
        disabled: !this.props.ready || this.props.running(),
        onClick: () => this.runBenchmark()
      }, "Run"))), h("div", {
        class: "runner__output"
      }, wasmboyCoreOutputElements));
    }

  }

  /**
   * @namespace Chart.helpers
   */
  var helpers = {
  	/**
  	 * An empty function that can be used, for example, for optional callback.
  	 */
  	noop: function() {},

  	/**
  	 * Returns a unique id, sequentially generated from a global variable.
  	 * @returns {Number}
  	 * @function
  	 */
  	uid: (function() {
  		var id = 0;
  		return function() {
  			return id++;
  		};
  	}()),

  	/**
  	 * Returns true if `value` is neither null nor undefined, else returns false.
  	 * @param {*} value - The value to test.
  	 * @returns {Boolean}
  	 * @since 2.7.0
  	 */
  	isNullOrUndef: function(value) {
  		return value === null || typeof value === 'undefined';
  	},

  	/**
  	 * Returns true if `value` is an array, else returns false.
  	 * @param {*} value - The value to test.
  	 * @returns {Boolean}
  	 * @function
  	 */
  	isArray: Array.isArray ? Array.isArray : function(value) {
  		return Object.prototype.toString.call(value) === '[object Array]';
  	},

  	/**
  	 * Returns true if `value` is an object (excluding null), else returns false.
  	 * @param {*} value - The value to test.
  	 * @returns {Boolean}
  	 * @since 2.7.0
  	 */
  	isObject: function(value) {
  		return value !== null && Object.prototype.toString.call(value) === '[object Object]';
  	},

  	/**
  	 * Returns `value` if defined, else returns `defaultValue`.
  	 * @param {*} value - The value to return if defined.
  	 * @param {*} defaultValue - The value to return if `value` is undefined.
  	 * @returns {*}
  	 */
  	valueOrDefault: function(value, defaultValue) {
  		return typeof value === 'undefined' ? defaultValue : value;
  	},

  	/**
  	 * Returns value at the given `index` in array if defined, else returns `defaultValue`.
  	 * @param {Array} value - The array to lookup for value at `index`.
  	 * @param {Number} index - The index in `value` to lookup for value.
  	 * @param {*} defaultValue - The value to return if `value[index]` is undefined.
  	 * @returns {*}
  	 */
  	valueAtIndexOrDefault: function(value, index, defaultValue) {
  		return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);
  	},

  	/**
  	 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the
  	 * value returned by `fn`. If `fn` is not a function, this method returns undefined.
  	 * @param {Function} fn - The function to call.
  	 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.
  	 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.
  	 * @returns {*}
  	 */
  	callback: function(fn, args, thisArg) {
  		if (fn && typeof fn.call === 'function') {
  			return fn.apply(thisArg, args);
  		}
  	},

  	/**
  	 * Note(SB) for performance sake, this method should only be used when loopable type
  	 * is unknown or in none intensive code (not called often and small loopable). Else
  	 * it's preferable to use a regular for() loop and save extra function calls.
  	 * @param {Object|Array} loopable - The object or array to be iterated.
  	 * @param {Function} fn - The function to call for each item.
  	 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.
  	 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.
  	 */
  	each: function(loopable, fn, thisArg, reverse) {
  		var i, len, keys;
  		if (helpers.isArray(loopable)) {
  			len = loopable.length;
  			if (reverse) {
  				for (i = len - 1; i >= 0; i--) {
  					fn.call(thisArg, loopable[i], i);
  				}
  			} else {
  				for (i = 0; i < len; i++) {
  					fn.call(thisArg, loopable[i], i);
  				}
  			}
  		} else if (helpers.isObject(loopable)) {
  			keys = Object.keys(loopable);
  			len = keys.length;
  			for (i = 0; i < len; i++) {
  				fn.call(thisArg, loopable[keys[i]], keys[i]);
  			}
  		}
  	},

  	/**
  	 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.
  	 * @see http://stackoverflow.com/a/14853974
  	 * @param {Array} a0 - The array to compare
  	 * @param {Array} a1 - The array to compare
  	 * @returns {Boolean}
  	 */
  	arrayEquals: function(a0, a1) {
  		var i, ilen, v0, v1;

  		if (!a0 || !a1 || a0.length !== a1.length) {
  			return false;
  		}

  		for (i = 0, ilen = a0.length; i < ilen; ++i) {
  			v0 = a0[i];
  			v1 = a1[i];

  			if (v0 instanceof Array && v1 instanceof Array) {
  				if (!helpers.arrayEquals(v0, v1)) {
  					return false;
  				}
  			} else if (v0 !== v1) {
  				// NOTE: two different object instances will never be equal: {x:20} != {x:20}
  				return false;
  			}
  		}

  		return true;
  	},

  	/**
  	 * Returns a deep copy of `source` without keeping references on objects and arrays.
  	 * @param {*} source - The value to clone.
  	 * @returns {*}
  	 */
  	clone: function(source) {
  		if (helpers.isArray(source)) {
  			return source.map(helpers.clone);
  		}

  		if (helpers.isObject(source)) {
  			var target = {};
  			var keys = Object.keys(source);
  			var klen = keys.length;
  			var k = 0;

  			for (; k < klen; ++k) {
  				target[keys[k]] = helpers.clone(source[keys[k]]);
  			}

  			return target;
  		}

  		return source;
  	},

  	/**
  	 * The default merger when Chart.helpers.merge is called without merger option.
  	 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.
  	 * @private
  	 */
  	_merger: function(key, target, source, options) {
  		var tval = target[key];
  		var sval = source[key];

  		if (helpers.isObject(tval) && helpers.isObject(sval)) {
  			helpers.merge(tval, sval, options);
  		} else {
  			target[key] = helpers.clone(sval);
  		}
  	},

  	/**
  	 * Merges source[key] in target[key] only if target[key] is undefined.
  	 * @private
  	 */
  	_mergerIf: function(key, target, source) {
  		var tval = target[key];
  		var sval = source[key];

  		if (helpers.isObject(tval) && helpers.isObject(sval)) {
  			helpers.mergeIf(tval, sval);
  		} else if (!target.hasOwnProperty(key)) {
  			target[key] = helpers.clone(sval);
  		}
  	},

  	/**
  	 * Recursively deep copies `source` properties into `target` with the given `options`.
  	 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
  	 * @param {Object} target - The target object in which all sources are merged into.
  	 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.
  	 * @param {Object} [options] - Merging options:
  	 * @param {Function} [options.merger] - The merge method (key, target, source, options)
  	 * @returns {Object} The `target` object.
  	 */
  	merge: function(target, source, options) {
  		var sources = helpers.isArray(source) ? source : [source];
  		var ilen = sources.length;
  		var merge, i, keys, klen, k;

  		if (!helpers.isObject(target)) {
  			return target;
  		}

  		options = options || {};
  		merge = options.merger || helpers._merger;

  		for (i = 0; i < ilen; ++i) {
  			source = sources[i];
  			if (!helpers.isObject(source)) {
  				continue;
  			}

  			keys = Object.keys(source);
  			for (k = 0, klen = keys.length; k < klen; ++k) {
  				merge(keys[k], target, source, options);
  			}
  		}

  		return target;
  	},

  	/**
  	 * Recursively deep copies `source` properties into `target` *only* if not defined in target.
  	 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
  	 * @param {Object} target - The target object in which all sources are merged into.
  	 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.
  	 * @returns {Object} The `target` object.
  	 */
  	mergeIf: function(target, source) {
  		return helpers.merge(target, source, {merger: helpers._mergerIf});
  	},

  	/**
  	 * Applies the contents of two or more objects together into the first object.
  	 * @param {Object} target - The target object in which all objects are merged into.
  	 * @param {Object} arg1 - Object containing additional properties to merge in target.
  	 * @param {Object} argN - Additional objects containing properties to merge in target.
  	 * @returns {Object} The `target` object.
  	 */
  	extend: function(target) {
  		var setFn = function(value, key) {
  			target[key] = value;
  		};
  		for (var i = 1, ilen = arguments.length; i < ilen; ++i) {
  			helpers.each(arguments[i], setFn);
  		}
  		return target;
  	},

  	/**
  	 * Basic javascript inheritance based on the model created in Backbone.js
  	 */
  	inherits: function(extensions) {
  		var me = this;
  		var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {
  			return me.apply(this, arguments);
  		};

  		var Surrogate = function() {
  			this.constructor = ChartElement;
  		};

  		Surrogate.prototype = me.prototype;
  		ChartElement.prototype = new Surrogate();
  		ChartElement.extend = helpers.inherits;

  		if (extensions) {
  			helpers.extend(ChartElement.prototype, extensions);
  		}

  		ChartElement.__super__ = me.prototype;
  		return ChartElement;
  	}
  };

  var helpers_core = helpers;

  // DEPRECATIONS

  /**
   * Provided for backward compatibility, use Chart.helpers.callback instead.
   * @function Chart.helpers.callCallback
   * @deprecated since version 2.6.0
   * @todo remove at version 3
   * @private
   */
  helpers.callCallback = helpers.callback;

  /**
   * Provided for backward compatibility, use Array.prototype.indexOf instead.
   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+
   * @function Chart.helpers.indexOf
   * @deprecated since version 2.7.0
   * @todo remove at version 3
   * @private
   */
  helpers.indexOf = function(array, item, fromIndex) {
  	return Array.prototype.indexOf.call(array, item, fromIndex);
  };

  /**
   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.
   * @function Chart.helpers.getValueOrDefault
   * @deprecated since version 2.7.0
   * @todo remove at version 3
   * @private
   */
  helpers.getValueOrDefault = helpers.valueOrDefault;

  /**
   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.
   * @function Chart.helpers.getValueAtIndexOrDefault
   * @deprecated since version 2.7.0
   * @todo remove at version 3
   * @private
   */
  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;

  /**
   * Easing functions adapted from Robert Penner's easing equations.
   * @namespace Chart.helpers.easingEffects
   * @see http://www.robertpenner.com/easing/
   */
  var effects = {
  	linear: function(t) {
  		return t;
  	},

  	easeInQuad: function(t) {
  		return t * t;
  	},

  	easeOutQuad: function(t) {
  		return -t * (t - 2);
  	},

  	easeInOutQuad: function(t) {
  		if ((t /= 0.5) < 1) {
  			return 0.5 * t * t;
  		}
  		return -0.5 * ((--t) * (t - 2) - 1);
  	},

  	easeInCubic: function(t) {
  		return t * t * t;
  	},

  	easeOutCubic: function(t) {
  		return (t = t - 1) * t * t + 1;
  	},

  	easeInOutCubic: function(t) {
  		if ((t /= 0.5) < 1) {
  			return 0.5 * t * t * t;
  		}
  		return 0.5 * ((t -= 2) * t * t + 2);
  	},

  	easeInQuart: function(t) {
  		return t * t * t * t;
  	},

  	easeOutQuart: function(t) {
  		return -((t = t - 1) * t * t * t - 1);
  	},

  	easeInOutQuart: function(t) {
  		if ((t /= 0.5) < 1) {
  			return 0.5 * t * t * t * t;
  		}
  		return -0.5 * ((t -= 2) * t * t * t - 2);
  	},

  	easeInQuint: function(t) {
  		return t * t * t * t * t;
  	},

  	easeOutQuint: function(t) {
  		return (t = t - 1) * t * t * t * t + 1;
  	},

  	easeInOutQuint: function(t) {
  		if ((t /= 0.5) < 1) {
  			return 0.5 * t * t * t * t * t;
  		}
  		return 0.5 * ((t -= 2) * t * t * t * t + 2);
  	},

  	easeInSine: function(t) {
  		return -Math.cos(t * (Math.PI / 2)) + 1;
  	},

  	easeOutSine: function(t) {
  		return Math.sin(t * (Math.PI / 2));
  	},

  	easeInOutSine: function(t) {
  		return -0.5 * (Math.cos(Math.PI * t) - 1);
  	},

  	easeInExpo: function(t) {
  		return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));
  	},

  	easeOutExpo: function(t) {
  		return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;
  	},

  	easeInOutExpo: function(t) {
  		if (t === 0) {
  			return 0;
  		}
  		if (t === 1) {
  			return 1;
  		}
  		if ((t /= 0.5) < 1) {
  			return 0.5 * Math.pow(2, 10 * (t - 1));
  		}
  		return 0.5 * (-Math.pow(2, -10 * --t) + 2);
  	},

  	easeInCirc: function(t) {
  		if (t >= 1) {
  			return t;
  		}
  		return -(Math.sqrt(1 - t * t) - 1);
  	},

  	easeOutCirc: function(t) {
  		return Math.sqrt(1 - (t = t - 1) * t);
  	},

  	easeInOutCirc: function(t) {
  		if ((t /= 0.5) < 1) {
  			return -0.5 * (Math.sqrt(1 - t * t) - 1);
  		}
  		return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
  	},

  	easeInElastic: function(t) {
  		var s = 1.70158;
  		var p = 0;
  		var a = 1;
  		if (t === 0) {
  			return 0;
  		}
  		if (t === 1) {
  			return 1;
  		}
  		if (!p) {
  			p = 0.3;
  		}
  		if (a < 1) {
  			a = 1;
  			s = p / 4;
  		} else {
  			s = p / (2 * Math.PI) * Math.asin(1 / a);
  		}
  		return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
  	},

  	easeOutElastic: function(t) {
  		var s = 1.70158;
  		var p = 0;
  		var a = 1;
  		if (t === 0) {
  			return 0;
  		}
  		if (t === 1) {
  			return 1;
  		}
  		if (!p) {
  			p = 0.3;
  		}
  		if (a < 1) {
  			a = 1;
  			s = p / 4;
  		} else {
  			s = p / (2 * Math.PI) * Math.asin(1 / a);
  		}
  		return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;
  	},

  	easeInOutElastic: function(t) {
  		var s = 1.70158;
  		var p = 0;
  		var a = 1;
  		if (t === 0) {
  			return 0;
  		}
  		if ((t /= 0.5) === 2) {
  			return 1;
  		}
  		if (!p) {
  			p = 0.45;
  		}
  		if (a < 1) {
  			a = 1;
  			s = p / 4;
  		} else {
  			s = p / (2 * Math.PI) * Math.asin(1 / a);
  		}
  		if (t < 1) {
  			return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
  		}
  		return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;
  	},
  	easeInBack: function(t) {
  		var s = 1.70158;
  		return t * t * ((s + 1) * t - s);
  	},

  	easeOutBack: function(t) {
  		var s = 1.70158;
  		return (t = t - 1) * t * ((s + 1) * t + s) + 1;
  	},

  	easeInOutBack: function(t) {
  		var s = 1.70158;
  		if ((t /= 0.5) < 1) {
  			return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));
  		}
  		return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);
  	},

  	easeInBounce: function(t) {
  		return 1 - effects.easeOutBounce(1 - t);
  	},

  	easeOutBounce: function(t) {
  		if (t < (1 / 2.75)) {
  			return 7.5625 * t * t;
  		}
  		if (t < (2 / 2.75)) {
  			return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;
  		}
  		if (t < (2.5 / 2.75)) {
  			return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;
  		}
  		return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;
  	},

  	easeInOutBounce: function(t) {
  		if (t < 0.5) {
  			return effects.easeInBounce(t * 2) * 0.5;
  		}
  		return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;
  	}
  };

  var helpers_easing = {
  	effects: effects
  };

  // DEPRECATIONS

  /**
   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.
   * @function Chart.helpers.easingEffects
   * @deprecated since version 2.7.0
   * @todo remove at version 3
   * @private
   */
  helpers_core.easingEffects = effects;

  var helpers_canvas = createCommonjsModule$1(function (module) {



  /**
   * @namespace Chart.helpers.canvas
   */
  var exports = module.exports = {
  	/**
  	 * Clears the entire canvas associated to the given `chart`.
  	 * @param {Chart} chart - The chart for which to clear the canvas.
  	 */
  	clear: function(chart) {
  		chart.ctx.clearRect(0, 0, chart.width, chart.height);
  	},

  	/**
  	 * Creates a "path" for a rectangle with rounded corners at position (x, y) with a
  	 * given size (width, height) and the same `radius` for all corners.
  	 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.
  	 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.
  	 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.
  	 * @param {Number} width - The rectangle's width.
  	 * @param {Number} height - The rectangle's height.
  	 * @param {Number} radius - The rounded amount (in pixels) for the four corners.
  	 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?
  	 */
  	roundedRect: function(ctx, x, y, width, height, radius) {
  		if (radius) {
  			// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing
  			// on Chrome when `r` is exactly half the height or the width.
  			var epsilon = 0.0000001;
  			var r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);

  			ctx.moveTo(x + r, y);
  			ctx.lineTo(x + width - r, y);
  			ctx.arcTo(x + width, y, x + width, y + r, r);
  			ctx.lineTo(x + width, y + height - r);
  			ctx.arcTo(x + width, y + height, x + width - r, y + height, r);
  			ctx.lineTo(x + r, y + height);
  			ctx.arcTo(x, y + height, x, y + height - r, r);
  			ctx.lineTo(x, y + r);
  			ctx.arcTo(x, y, x + r, y, r);
  			ctx.closePath();
  			ctx.moveTo(x, y);
  		} else {
  			ctx.rect(x, y, width, height);
  		}
  	},

  	drawPoint: function(ctx, style, radius, x, y, rotation) {
  		var type, edgeLength, xOffset, yOffset, height, size;
  		rotation = rotation || 0;

  		if (style && typeof style === 'object') {
  			type = style.toString();
  			if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
  				ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);
  				return;
  			}
  		}

  		if (isNaN(radius) || radius <= 0) {
  			return;
  		}

  		ctx.save();
  		ctx.translate(x, y);
  		ctx.rotate(rotation * Math.PI / 180);
  		ctx.beginPath();

  		switch (style) {
  		// Default includes circle
  		default:
  			ctx.arc(0, 0, radius, 0, Math.PI * 2);
  			ctx.closePath();
  			break;
  		case 'triangle':
  			edgeLength = 3 * radius / Math.sqrt(3);
  			height = edgeLength * Math.sqrt(3) / 2;
  			ctx.moveTo(-edgeLength / 2, height / 3);
  			ctx.lineTo(edgeLength / 2, height / 3);
  			ctx.lineTo(0, -2 * height / 3);
  			ctx.closePath();
  			break;
  		case 'rect':
  			size = 1 / Math.SQRT2 * radius;
  			ctx.rect(-size, -size, 2 * size, 2 * size);
  			break;
  		case 'rectRounded':
  			var offset = radius / Math.SQRT2;
  			var leftX = -offset;
  			var topY = -offset;
  			var sideSize = Math.SQRT2 * radius;

  			// NOTE(SB) the rounded rect implementation changed to use `arcTo`
  			// instead of `quadraticCurveTo` since it generates better results
  			// when rect is almost a circle. 0.425 (instead of 0.5) produces
  			// results visually closer to the previous impl.
  			this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);
  			break;
  		case 'rectRot':
  			size = 1 / Math.SQRT2 * radius;
  			ctx.moveTo(-size, 0);
  			ctx.lineTo(0, size);
  			ctx.lineTo(size, 0);
  			ctx.lineTo(0, -size);
  			ctx.closePath();
  			break;
  		case 'cross':
  			ctx.moveTo(0, radius);
  			ctx.lineTo(0, -radius);
  			ctx.moveTo(-radius, 0);
  			ctx.lineTo(radius, 0);
  			break;
  		case 'crossRot':
  			xOffset = Math.cos(Math.PI / 4) * radius;
  			yOffset = Math.sin(Math.PI / 4) * radius;
  			ctx.moveTo(-xOffset, -yOffset);
  			ctx.lineTo(xOffset, yOffset);
  			ctx.moveTo(-xOffset, yOffset);
  			ctx.lineTo(xOffset, -yOffset);
  			break;
  		case 'star':
  			ctx.moveTo(0, radius);
  			ctx.lineTo(0, -radius);
  			ctx.moveTo(-radius, 0);
  			ctx.lineTo(radius, 0);
  			xOffset = Math.cos(Math.PI / 4) * radius;
  			yOffset = Math.sin(Math.PI / 4) * radius;
  			ctx.moveTo(-xOffset, -yOffset);
  			ctx.lineTo(xOffset, yOffset);
  			ctx.moveTo(-xOffset, yOffset);
  			ctx.lineTo(xOffset, -yOffset);
  			break;
  		case 'line':
  			ctx.moveTo(-radius, 0);
  			ctx.lineTo(radius, 0);
  			break;
  		case 'dash':
  			ctx.moveTo(0, 0);
  			ctx.lineTo(radius, 0);
  			break;
  		}

  		ctx.fill();
  		ctx.stroke();
  		ctx.restore();
  	},

  	clipArea: function(ctx, area) {
  		ctx.save();
  		ctx.beginPath();
  		ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);
  		ctx.clip();
  	},

  	unclipArea: function(ctx) {
  		ctx.restore();
  	},

  	lineTo: function(ctx, previous, target, flip) {
  		if (target.steppedLine) {
  			if ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {
  				ctx.lineTo(previous.x, target.y);
  			} else {
  				ctx.lineTo(target.x, previous.y);
  			}
  			ctx.lineTo(target.x, target.y);
  			return;
  		}

  		if (!target.tension) {
  			ctx.lineTo(target.x, target.y);
  			return;
  		}

  		ctx.bezierCurveTo(
  			flip ? previous.controlPointPreviousX : previous.controlPointNextX,
  			flip ? previous.controlPointPreviousY : previous.controlPointNextY,
  			flip ? target.controlPointNextX : target.controlPointPreviousX,
  			flip ? target.controlPointNextY : target.controlPointPreviousY,
  			target.x,
  			target.y);
  	}
  };

  // DEPRECATIONS

  /**
   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.
   * @namespace Chart.helpers.clear
   * @deprecated since version 2.7.0
   * @todo remove at version 3
   * @private
   */
  helpers_core.clear = exports.clear;

  /**
   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.
   * @namespace Chart.helpers.drawRoundedRectangle
   * @deprecated since version 2.7.0
   * @todo remove at version 3
   * @private
   */
  helpers_core.drawRoundedRectangle = function(ctx) {
  	ctx.beginPath();
  	exports.roundedRect.apply(exports, arguments);
  };
  });
  var helpers_canvas_1 = helpers_canvas.clear;
  var helpers_canvas_2 = helpers_canvas.roundedRect;
  var helpers_canvas_3 = helpers_canvas.drawPoint;
  var helpers_canvas_4 = helpers_canvas.clipArea;
  var helpers_canvas_5 = helpers_canvas.unclipArea;
  var helpers_canvas_6 = helpers_canvas.lineTo;

  /**
   * @alias Chart.helpers.options
   * @namespace
   */
  var helpers_options = {
  	/**
  	 * Converts the given line height `value` in pixels for a specific font `size`.
  	 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').
  	 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.
  	 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).
  	 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
  	 * @since 2.7.0
  	 */
  	toLineHeight: function(value, size) {
  		var matches = ('' + value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);
  		if (!matches || matches[1] === 'normal') {
  			return size * 1.2;
  		}

  		value = +matches[2];

  		switch (matches[3]) {
  		case 'px':
  			return value;
  		case '%':
  			value /= 100;
  			break;
  		default:
  			break;
  		}

  		return size * value;
  	},

  	/**
  	 * Converts the given value into a padding object with pre-computed width/height.
  	 * @param {Number|Object} value - If a number, set the value to all TRBL component,
  	 *  else, if and object, use defined properties and sets undefined ones to 0.
  	 * @returns {Object} The padding values (top, right, bottom, left, width, height)
  	 * @since 2.7.0
  	 */
  	toPadding: function(value) {
  		var t, r, b, l;

  		if (helpers_core.isObject(value)) {
  			t = +value.top || 0;
  			r = +value.right || 0;
  			b = +value.bottom || 0;
  			l = +value.left || 0;
  		} else {
  			t = r = b = l = +value || 0;
  		}

  		return {
  			top: t,
  			right: r,
  			bottom: b,
  			left: l,
  			height: t + b,
  			width: l + r
  		};
  	},

  	/**
  	 * Evaluates the given `inputs` sequentially and returns the first defined value.
  	 * @param {Array[]} inputs - An array of values, falling back to the last value.
  	 * @param {Object} [context] - If defined and the current value is a function, the value
  	 * is called with `context` as first argument and the result becomes the new input.
  	 * @param {Number} [index] - If defined and the current value is an array, the value
  	 * at `index` become the new input.
  	 * @since 2.7.0
  	 */
  	resolve: function(inputs, context, index) {
  		var i, ilen, value;

  		for (i = 0, ilen = inputs.length; i < ilen; ++i) {
  			value = inputs[i];
  			if (value === undefined) {
  				continue;
  			}
  			if (context !== undefined && typeof value === 'function') {
  				value = value(context);
  			}
  			if (index !== undefined && helpers_core.isArray(value)) {
  				value = value[index];
  			}
  			if (value !== undefined) {
  				return value;
  			}
  		}
  	}
  };

  var helpers$1 = helpers_core;
  var easing = helpers_easing;
  var canvas = helpers_canvas;
  var options$1 = helpers_options;
  helpers$1.easing = easing;
  helpers$1.canvas = canvas;
  helpers$1.options = options$1;

  var core_defaults = {
  	/**
  	 * @private
  	 */
  	_set: function(scope, values) {
  		return helpers$1.merge(this[scope] || (this[scope] = {}), values);
  	}
  };

  core_defaults._set('global', {
  	responsive: true,
  	responsiveAnimationDuration: 0,
  	maintainAspectRatio: true,
  	events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],
  	hover: {
  		onHover: null,
  		mode: 'nearest',
  		intersect: true,
  		animationDuration: 400
  	},
  	onClick: null,
  	defaultColor: 'rgba(0,0,0,0.1)',
  	defaultFontColor: '#666',
  	defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
  	defaultFontSize: 12,
  	defaultFontStyle: 'normal',
  	showLines: true,

  	// Element defaults defined in element extensions
  	elements: {},

  	// Layout options such as padding
  	layout: {
  		padding: {
  			top: 0,
  			right: 0,
  			bottom: 0,
  			left: 0
  		}
  	}
  });

  var core = function() {

  	// Occupy the global variable of Chart, and create a simple base class
  	var Chart = function(item, config) {
  		this.construct(item, config);
  		return this;
  	};

  	Chart.Chart = Chart;

  	return Chart;
  };

  /* MIT license */

  var conversions = {
    rgb2hsl: rgb2hsl,
    rgb2hsv: rgb2hsv,
    rgb2hwb: rgb2hwb,
    rgb2cmyk: rgb2cmyk,
    rgb2keyword: rgb2keyword,
    rgb2xyz: rgb2xyz,
    rgb2lab: rgb2lab,
    rgb2lch: rgb2lch,

    hsl2rgb: hsl2rgb,
    hsl2hsv: hsl2hsv,
    hsl2hwb: hsl2hwb,
    hsl2cmyk: hsl2cmyk,
    hsl2keyword: hsl2keyword,

    hsv2rgb: hsv2rgb,
    hsv2hsl: hsv2hsl,
    hsv2hwb: hsv2hwb,
    hsv2cmyk: hsv2cmyk,
    hsv2keyword: hsv2keyword,

    hwb2rgb: hwb2rgb,
    hwb2hsl: hwb2hsl,
    hwb2hsv: hwb2hsv,
    hwb2cmyk: hwb2cmyk,
    hwb2keyword: hwb2keyword,

    cmyk2rgb: cmyk2rgb,
    cmyk2hsl: cmyk2hsl,
    cmyk2hsv: cmyk2hsv,
    cmyk2hwb: cmyk2hwb,
    cmyk2keyword: cmyk2keyword,

    keyword2rgb: keyword2rgb,
    keyword2hsl: keyword2hsl,
    keyword2hsv: keyword2hsv,
    keyword2hwb: keyword2hwb,
    keyword2cmyk: keyword2cmyk,
    keyword2lab: keyword2lab,
    keyword2xyz: keyword2xyz,

    xyz2rgb: xyz2rgb,
    xyz2lab: xyz2lab,
    xyz2lch: xyz2lch,

    lab2xyz: lab2xyz,
    lab2rgb: lab2rgb,
    lab2lch: lab2lch,

    lch2lab: lch2lab,
    lch2xyz: lch2xyz,
    lch2rgb: lch2rgb
  };


  function rgb2hsl(rgb) {
    var r = rgb[0]/255,
        g = rgb[1]/255,
        b = rgb[2]/255,
        min = Math.min(r, g, b),
        max = Math.max(r, g, b),
        delta = max - min,
        h, s, l;

    if (max == min)
      h = 0;
    else if (r == max)
      h = (g - b) / delta;
    else if (g == max)
      h = 2 + (b - r) / delta;
    else if (b == max)
      h = 4 + (r - g)/ delta;

    h = Math.min(h * 60, 360);

    if (h < 0)
      h += 360;

    l = (min + max) / 2;

    if (max == min)
      s = 0;
    else if (l <= 0.5)
      s = delta / (max + min);
    else
      s = delta / (2 - max - min);

    return [h, s * 100, l * 100];
  }

  function rgb2hsv(rgb) {
    var r = rgb[0],
        g = rgb[1],
        b = rgb[2],
        min = Math.min(r, g, b),
        max = Math.max(r, g, b),
        delta = max - min,
        h, s, v;

    if (max == 0)
      s = 0;
    else
      s = (delta/max * 1000)/10;

    if (max == min)
      h = 0;
    else if (r == max)
      h = (g - b) / delta;
    else if (g == max)
      h = 2 + (b - r) / delta;
    else if (b == max)
      h = 4 + (r - g) / delta;

    h = Math.min(h * 60, 360);

    if (h < 0)
      h += 360;

    v = ((max / 255) * 1000) / 10;

    return [h, s, v];
  }

  function rgb2hwb(rgb) {
    var r = rgb[0],
        g = rgb[1],
        b = rgb[2],
        h = rgb2hsl(rgb)[0],
        w = 1/255 * Math.min(r, Math.min(g, b)),
        b = 1 - 1/255 * Math.max(r, Math.max(g, b));

    return [h, w * 100, b * 100];
  }

  function rgb2cmyk(rgb) {
    var r = rgb[0] / 255,
        g = rgb[1] / 255,
        b = rgb[2] / 255,
        c, m, y, k;

    k = Math.min(1 - r, 1 - g, 1 - b);
    c = (1 - r - k) / (1 - k) || 0;
    m = (1 - g - k) / (1 - k) || 0;
    y = (1 - b - k) / (1 - k) || 0;
    return [c * 100, m * 100, y * 100, k * 100];
  }

  function rgb2keyword(rgb) {
    return reverseKeywords[JSON.stringify(rgb)];
  }

  function rgb2xyz(rgb) {
    var r = rgb[0] / 255,
        g = rgb[1] / 255,
        b = rgb[2] / 255;

    // assume sRGB
    r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
    g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
    b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

    var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
    var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
    var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

    return [x * 100, y *100, z * 100];
  }

  function rgb2lab(rgb) {
    var xyz = rgb2xyz(rgb),
          x = xyz[0],
          y = xyz[1],
          z = xyz[2],
          l, a, b;

    x /= 95.047;
    y /= 100;
    z /= 108.883;

    x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
    y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
    z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

    l = (116 * y) - 16;
    a = 500 * (x - y);
    b = 200 * (y - z);

    return [l, a, b];
  }

  function rgb2lch(args) {
    return lab2lch(rgb2lab(args));
  }

  function hsl2rgb(hsl) {
    var h = hsl[0] / 360,
        s = hsl[1] / 100,
        l = hsl[2] / 100,
        t1, t2, t3, rgb, val;

    if (s == 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5)
      t2 = l * (1 + s);
    else
      t2 = l + s - l * s;
    t1 = 2 * l - t2;

    rgb = [0, 0, 0];
    for (var i = 0; i < 3; i++) {
      t3 = h + 1 / 3 * - (i - 1);
      t3 < 0 && t3++;
      t3 > 1 && t3--;

      if (6 * t3 < 1)
        val = t1 + (t2 - t1) * 6 * t3;
      else if (2 * t3 < 1)
        val = t2;
      else if (3 * t3 < 2)
        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
      else
        val = t1;

      rgb[i] = val * 255;
    }

    return rgb;
  }

  function hsl2hsv(hsl) {
    var h = hsl[0],
        s = hsl[1] / 100,
        l = hsl[2] / 100,
        sv, v;

    if(l === 0) {
        // no need to do calc on black
        // also avoids divide by 0 error
        return [0, 0, 0];
    }

    l *= 2;
    s *= (l <= 1) ? l : 2 - l;
    v = (l + s) / 2;
    sv = (2 * s) / (l + s);
    return [h, sv * 100, v * 100];
  }

  function hsl2hwb(args) {
    return rgb2hwb(hsl2rgb(args));
  }

  function hsl2cmyk(args) {
    return rgb2cmyk(hsl2rgb(args));
  }

  function hsl2keyword(args) {
    return rgb2keyword(hsl2rgb(args));
  }


  function hsv2rgb(hsv) {
    var h = hsv[0] / 60,
        s = hsv[1] / 100,
        v = hsv[2] / 100,
        hi = Math.floor(h) % 6;

    var f = h - Math.floor(h),
        p = 255 * v * (1 - s),
        q = 255 * v * (1 - (s * f)),
        t = 255 * v * (1 - (s * (1 - f))),
        v = 255 * v;

    switch(hi) {
      case 0:
        return [v, t, p];
      case 1:
        return [q, v, p];
      case 2:
        return [p, v, t];
      case 3:
        return [p, q, v];
      case 4:
        return [t, p, v];
      case 5:
        return [v, p, q];
    }
  }

  function hsv2hsl(hsv) {
    var h = hsv[0],
        s = hsv[1] / 100,
        v = hsv[2] / 100,
        sl, l;

    l = (2 - s) * v;
    sl = s * v;
    sl /= (l <= 1) ? l : 2 - l;
    sl = sl || 0;
    l /= 2;
    return [h, sl * 100, l * 100];
  }

  function hsv2hwb(args) {
    return rgb2hwb(hsv2rgb(args))
  }

  function hsv2cmyk(args) {
    return rgb2cmyk(hsv2rgb(args));
  }

  function hsv2keyword(args) {
    return rgb2keyword(hsv2rgb(args));
  }

  // http://dev.w3.org/csswg/css-color/#hwb-to-rgb
  function hwb2rgb(hwb) {
    var h = hwb[0] / 360,
        wh = hwb[1] / 100,
        bl = hwb[2] / 100,
        ratio = wh + bl,
        i, v, f, n;

    // wh + bl cant be > 1
    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;
    if ((i & 0x01) != 0) {
      f = 1 - f;
    }
    n = wh + f * (v - wh);  // linear interpolation

    switch (i) {
      default:
      case 6:
      case 0: r = v; g = n; b = wh; break;
      case 1: r = n; g = v; b = wh; break;
      case 2: r = wh; g = v; b = n; break;
      case 3: r = wh; g = n; b = v; break;
      case 4: r = n; g = wh; b = v; break;
      case 5: r = v; g = wh; b = n; break;
    }

    return [r * 255, g * 255, b * 255];
  }

  function hwb2hsl(args) {
    return rgb2hsl(hwb2rgb(args));
  }

  function hwb2hsv(args) {
    return rgb2hsv(hwb2rgb(args));
  }

  function hwb2cmyk(args) {
    return rgb2cmyk(hwb2rgb(args));
  }

  function hwb2keyword(args) {
    return rgb2keyword(hwb2rgb(args));
  }

  function cmyk2rgb(cmyk) {
    var c = cmyk[0] / 100,
        m = cmyk[1] / 100,
        y = cmyk[2] / 100,
        k = cmyk[3] / 100,
        r, g, b;

    r = 1 - Math.min(1, c * (1 - k) + k);
    g = 1 - Math.min(1, m * (1 - k) + k);
    b = 1 - Math.min(1, y * (1 - k) + k);
    return [r * 255, g * 255, b * 255];
  }

  function cmyk2hsl(args) {
    return rgb2hsl(cmyk2rgb(args));
  }

  function cmyk2hsv(args) {
    return rgb2hsv(cmyk2rgb(args));
  }

  function cmyk2hwb(args) {
    return rgb2hwb(cmyk2rgb(args));
  }

  function cmyk2keyword(args) {
    return rgb2keyword(cmyk2rgb(args));
  }


  function xyz2rgb(xyz) {
    var x = xyz[0] / 100,
        y = xyz[1] / 100,
        z = xyz[2] / 100,
        r, g, b;

    r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
    g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
    b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

    // assume sRGB
    r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
      : r = (r * 12.92);

    g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
      : g = (g * 12.92);

    b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
      : b = (b * 12.92);

    r = Math.min(Math.max(0, r), 1);
    g = Math.min(Math.max(0, g), 1);
    b = Math.min(Math.max(0, b), 1);

    return [r * 255, g * 255, b * 255];
  }

  function xyz2lab(xyz) {
    var x = xyz[0],
        y = xyz[1],
        z = xyz[2],
        l, a, b;

    x /= 95.047;
    y /= 100;
    z /= 108.883;

    x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);
    y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);
    z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);

    l = (116 * y) - 16;
    a = 500 * (x - y);
    b = 200 * (y - z);

    return [l, a, b];
  }

  function xyz2lch(args) {
    return lab2lch(xyz2lab(args));
  }

  function lab2xyz(lab) {
    var l = lab[0],
        a = lab[1],
        b = lab[2],
        x, y, z, y2;

    if (l <= 8) {
      y = (l * 100) / 903.3;
      y2 = (7.787 * (y / 100)) + (16 / 116);
    } else {
      y = 100 * Math.pow((l + 16) / 116, 3);
      y2 = Math.pow(y / 100, 1/3);
    }

    x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);

    z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);

    return [x, y, z];
  }

  function lab2lch(lab) {
    var l = lab[0],
        a = lab[1],
        b = lab[2],
        hr, h, c;

    hr = Math.atan2(b, a);
    h = hr * 360 / 2 / Math.PI;
    if (h < 0) {
      h += 360;
    }
    c = Math.sqrt(a * a + b * b);
    return [l, c, h];
  }

  function lab2rgb(args) {
    return xyz2rgb(lab2xyz(args));
  }

  function lch2lab(lch) {
    var l = lch[0],
        c = lch[1],
        h = lch[2],
        a, b, hr;

    hr = h / 360 * 2 * Math.PI;
    a = c * Math.cos(hr);
    b = c * Math.sin(hr);
    return [l, a, b];
  }

  function lch2xyz(args) {
    return lab2xyz(lch2lab(args));
  }

  function lch2rgb(args) {
    return lab2rgb(lch2lab(args));
  }

  function keyword2rgb(keyword) {
    return cssKeywords[keyword];
  }

  function keyword2hsl(args) {
    return rgb2hsl(keyword2rgb(args));
  }

  function keyword2hsv(args) {
    return rgb2hsv(keyword2rgb(args));
  }

  function keyword2hwb(args) {
    return rgb2hwb(keyword2rgb(args));
  }

  function keyword2cmyk(args) {
    return rgb2cmyk(keyword2rgb(args));
  }

  function keyword2lab(args) {
    return rgb2lab(keyword2rgb(args));
  }

  function keyword2xyz(args) {
    return rgb2xyz(keyword2rgb(args));
  }

  var cssKeywords = {
    aliceblue:  [240,248,255],
    antiquewhite: [250,235,215],
    aqua: [0,255,255],
    aquamarine: [127,255,212],
    azure:  [240,255,255],
    beige:  [245,245,220],
    bisque: [255,228,196],
    black:  [0,0,0],
    blanchedalmond: [255,235,205],
    blue: [0,0,255],
    blueviolet: [138,43,226],
    brown:  [165,42,42],
    burlywood:  [222,184,135],
    cadetblue:  [95,158,160],
    chartreuse: [127,255,0],
    chocolate:  [210,105,30],
    coral:  [255,127,80],
    cornflowerblue: [100,149,237],
    cornsilk: [255,248,220],
    crimson:  [220,20,60],
    cyan: [0,255,255],
    darkblue: [0,0,139],
    darkcyan: [0,139,139],
    darkgoldenrod:  [184,134,11],
    darkgray: [169,169,169],
    darkgreen:  [0,100,0],
    darkgrey: [169,169,169],
    darkkhaki:  [189,183,107],
    darkmagenta:  [139,0,139],
    darkolivegreen: [85,107,47],
    darkorange: [255,140,0],
    darkorchid: [153,50,204],
    darkred:  [139,0,0],
    darksalmon: [233,150,122],
    darkseagreen: [143,188,143],
    darkslateblue:  [72,61,139],
    darkslategray:  [47,79,79],
    darkslategrey:  [47,79,79],
    darkturquoise:  [0,206,209],
    darkviolet: [148,0,211],
    deeppink: [255,20,147],
    deepskyblue:  [0,191,255],
    dimgray:  [105,105,105],
    dimgrey:  [105,105,105],
    dodgerblue: [30,144,255],
    firebrick:  [178,34,34],
    floralwhite:  [255,250,240],
    forestgreen:  [34,139,34],
    fuchsia:  [255,0,255],
    gainsboro:  [220,220,220],
    ghostwhite: [248,248,255],
    gold: [255,215,0],
    goldenrod:  [218,165,32],
    gray: [128,128,128],
    green:  [0,128,0],
    greenyellow:  [173,255,47],
    grey: [128,128,128],
    honeydew: [240,255,240],
    hotpink:  [255,105,180],
    indianred:  [205,92,92],
    indigo: [75,0,130],
    ivory:  [255,255,240],
    khaki:  [240,230,140],
    lavender: [230,230,250],
    lavenderblush:  [255,240,245],
    lawngreen:  [124,252,0],
    lemonchiffon: [255,250,205],
    lightblue:  [173,216,230],
    lightcoral: [240,128,128],
    lightcyan:  [224,255,255],
    lightgoldenrodyellow: [250,250,210],
    lightgray:  [211,211,211],
    lightgreen: [144,238,144],
    lightgrey:  [211,211,211],
    lightpink:  [255,182,193],
    lightsalmon:  [255,160,122],
    lightseagreen:  [32,178,170],
    lightskyblue: [135,206,250],
    lightslategray: [119,136,153],
    lightslategrey: [119,136,153],
    lightsteelblue: [176,196,222],
    lightyellow:  [255,255,224],
    lime: [0,255,0],
    limegreen:  [50,205,50],
    linen:  [250,240,230],
    magenta:  [255,0,255],
    maroon: [128,0,0],
    mediumaquamarine: [102,205,170],
    mediumblue: [0,0,205],
    mediumorchid: [186,85,211],
    mediumpurple: [147,112,219],
    mediumseagreen: [60,179,113],
    mediumslateblue:  [123,104,238],
    mediumspringgreen:  [0,250,154],
    mediumturquoise:  [72,209,204],
    mediumvioletred:  [199,21,133],
    midnightblue: [25,25,112],
    mintcream:  [245,255,250],
    mistyrose:  [255,228,225],
    moccasin: [255,228,181],
    navajowhite:  [255,222,173],
    navy: [0,0,128],
    oldlace:  [253,245,230],
    olive:  [128,128,0],
    olivedrab:  [107,142,35],
    orange: [255,165,0],
    orangered:  [255,69,0],
    orchid: [218,112,214],
    palegoldenrod:  [238,232,170],
    palegreen:  [152,251,152],
    paleturquoise:  [175,238,238],
    palevioletred:  [219,112,147],
    papayawhip: [255,239,213],
    peachpuff:  [255,218,185],
    peru: [205,133,63],
    pink: [255,192,203],
    plum: [221,160,221],
    powderblue: [176,224,230],
    purple: [128,0,128],
    rebeccapurple: [102, 51, 153],
    red:  [255,0,0],
    rosybrown:  [188,143,143],
    royalblue:  [65,105,225],
    saddlebrown:  [139,69,19],
    salmon: [250,128,114],
    sandybrown: [244,164,96],
    seagreen: [46,139,87],
    seashell: [255,245,238],
    sienna: [160,82,45],
    silver: [192,192,192],
    skyblue:  [135,206,235],
    slateblue:  [106,90,205],
    slategray:  [112,128,144],
    slategrey:  [112,128,144],
    snow: [255,250,250],
    springgreen:  [0,255,127],
    steelblue:  [70,130,180],
    tan:  [210,180,140],
    teal: [0,128,128],
    thistle:  [216,191,216],
    tomato: [255,99,71],
    turquoise:  [64,224,208],
    violet: [238,130,238],
    wheat:  [245,222,179],
    white:  [255,255,255],
    whitesmoke: [245,245,245],
    yellow: [255,255,0],
    yellowgreen:  [154,205,50]
  };

  var reverseKeywords = {};
  for (var key in cssKeywords) {
    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;
  }

  var convert = function() {
     return new Converter();
  };

  for (var func in conversions) {
    // export Raw versions
    convert[func + "Raw"] =  (function(func) {
      // accept array or plain args
      return function(arg) {
        if (typeof arg == "number")
          arg = Array.prototype.slice.call(arguments);
        return conversions[func](arg);
      }
    })(func);

    var pair = /(\w+)2(\w+)/.exec(func),
        from = pair[1],
        to = pair[2];

    // export rgb2hsl and ["rgb"]["hsl"]
    convert[from] = convert[from] || {};

    convert[from][to] = convert[func] = (function(func) { 
      return function(arg) {
        if (typeof arg == "number")
          arg = Array.prototype.slice.call(arguments);
        
        var val = conversions[func](arg);
        if (typeof val == "string" || val === undefined)
          return val; // keyword

        for (var i = 0; i < val.length; i++)
          val[i] = Math.round(val[i]);
        return val;
      }
    })(func);
  }


  /* Converter does lazy conversion and caching */
  var Converter = function() {
     this.convs = {};
  };

  /* Either get the values for a space or
    set the values for a space, depending on args */
  Converter.prototype.routeSpace = function(space, args) {
     var values = args[0];
     if (values === undefined) {
        // color.rgb()
        return this.getValues(space);
     }
     // color.rgb(10, 10, 10)
     if (typeof values == "number") {
        values = Array.prototype.slice.call(args);        
     }

     return this.setValues(space, values);
  };
    
  /* Set the values for a space, invalidating cache */
  Converter.prototype.setValues = function(space, values) {
     this.space = space;
     this.convs = {};
     this.convs[space] = values;
     return this;
  };

  /* Get the values for a space. If there's already
    a conversion for the space, fetch it, otherwise
    compute it */
  Converter.prototype.getValues = function(space) {
     var vals = this.convs[space];
     if (!vals) {
        var fspace = this.space,
            from = this.convs[fspace];
        vals = convert[fspace][space](from);

        this.convs[space] = vals;
     }
    return vals;
  };

  ["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(space) {
     Converter.prototype[space] = function(vals) {
        return this.routeSpace(space, arguments);
     };
  });

  var colorConvert = convert;

  var colorName = {
  	"aliceblue": [240, 248, 255],
  	"antiquewhite": [250, 235, 215],
  	"aqua": [0, 255, 255],
  	"aquamarine": [127, 255, 212],
  	"azure": [240, 255, 255],
  	"beige": [245, 245, 220],
  	"bisque": [255, 228, 196],
  	"black": [0, 0, 0],
  	"blanchedalmond": [255, 235, 205],
  	"blue": [0, 0, 255],
  	"blueviolet": [138, 43, 226],
  	"brown": [165, 42, 42],
  	"burlywood": [222, 184, 135],
  	"cadetblue": [95, 158, 160],
  	"chartreuse": [127, 255, 0],
  	"chocolate": [210, 105, 30],
  	"coral": [255, 127, 80],
  	"cornflowerblue": [100, 149, 237],
  	"cornsilk": [255, 248, 220],
  	"crimson": [220, 20, 60],
  	"cyan": [0, 255, 255],
  	"darkblue": [0, 0, 139],
  	"darkcyan": [0, 139, 139],
  	"darkgoldenrod": [184, 134, 11],
  	"darkgray": [169, 169, 169],
  	"darkgreen": [0, 100, 0],
  	"darkgrey": [169, 169, 169],
  	"darkkhaki": [189, 183, 107],
  	"darkmagenta": [139, 0, 139],
  	"darkolivegreen": [85, 107, 47],
  	"darkorange": [255, 140, 0],
  	"darkorchid": [153, 50, 204],
  	"darkred": [139, 0, 0],
  	"darksalmon": [233, 150, 122],
  	"darkseagreen": [143, 188, 143],
  	"darkslateblue": [72, 61, 139],
  	"darkslategray": [47, 79, 79],
  	"darkslategrey": [47, 79, 79],
  	"darkturquoise": [0, 206, 209],
  	"darkviolet": [148, 0, 211],
  	"deeppink": [255, 20, 147],
  	"deepskyblue": [0, 191, 255],
  	"dimgray": [105, 105, 105],
  	"dimgrey": [105, 105, 105],
  	"dodgerblue": [30, 144, 255],
  	"firebrick": [178, 34, 34],
  	"floralwhite": [255, 250, 240],
  	"forestgreen": [34, 139, 34],
  	"fuchsia": [255, 0, 255],
  	"gainsboro": [220, 220, 220],
  	"ghostwhite": [248, 248, 255],
  	"gold": [255, 215, 0],
  	"goldenrod": [218, 165, 32],
  	"gray": [128, 128, 128],
  	"green": [0, 128, 0],
  	"greenyellow": [173, 255, 47],
  	"grey": [128, 128, 128],
  	"honeydew": [240, 255, 240],
  	"hotpink": [255, 105, 180],
  	"indianred": [205, 92, 92],
  	"indigo": [75, 0, 130],
  	"ivory": [255, 255, 240],
  	"khaki": [240, 230, 140],
  	"lavender": [230, 230, 250],
  	"lavenderblush": [255, 240, 245],
  	"lawngreen": [124, 252, 0],
  	"lemonchiffon": [255, 250, 205],
  	"lightblue": [173, 216, 230],
  	"lightcoral": [240, 128, 128],
  	"lightcyan": [224, 255, 255],
  	"lightgoldenrodyellow": [250, 250, 210],
  	"lightgray": [211, 211, 211],
  	"lightgreen": [144, 238, 144],
  	"lightgrey": [211, 211, 211],
  	"lightpink": [255, 182, 193],
  	"lightsalmon": [255, 160, 122],
  	"lightseagreen": [32, 178, 170],
  	"lightskyblue": [135, 206, 250],
  	"lightslategray": [119, 136, 153],
  	"lightslategrey": [119, 136, 153],
  	"lightsteelblue": [176, 196, 222],
  	"lightyellow": [255, 255, 224],
  	"lime": [0, 255, 0],
  	"limegreen": [50, 205, 50],
  	"linen": [250, 240, 230],
  	"magenta": [255, 0, 255],
  	"maroon": [128, 0, 0],
  	"mediumaquamarine": [102, 205, 170],
  	"mediumblue": [0, 0, 205],
  	"mediumorchid": [186, 85, 211],
  	"mediumpurple": [147, 112, 219],
  	"mediumseagreen": [60, 179, 113],
  	"mediumslateblue": [123, 104, 238],
  	"mediumspringgreen": [0, 250, 154],
  	"mediumturquoise": [72, 209, 204],
  	"mediumvioletred": [199, 21, 133],
  	"midnightblue": [25, 25, 112],
  	"mintcream": [245, 255, 250],
  	"mistyrose": [255, 228, 225],
  	"moccasin": [255, 228, 181],
  	"navajowhite": [255, 222, 173],
  	"navy": [0, 0, 128],
  	"oldlace": [253, 245, 230],
  	"olive": [128, 128, 0],
  	"olivedrab": [107, 142, 35],
  	"orange": [255, 165, 0],
  	"orangered": [255, 69, 0],
  	"orchid": [218, 112, 214],
  	"palegoldenrod": [238, 232, 170],
  	"palegreen": [152, 251, 152],
  	"paleturquoise": [175, 238, 238],
  	"palevioletred": [219, 112, 147],
  	"papayawhip": [255, 239, 213],
  	"peachpuff": [255, 218, 185],
  	"peru": [205, 133, 63],
  	"pink": [255, 192, 203],
  	"plum": [221, 160, 221],
  	"powderblue": [176, 224, 230],
  	"purple": [128, 0, 128],
  	"rebeccapurple": [102, 51, 153],
  	"red": [255, 0, 0],
  	"rosybrown": [188, 143, 143],
  	"royalblue": [65, 105, 225],
  	"saddlebrown": [139, 69, 19],
  	"salmon": [250, 128, 114],
  	"sandybrown": [244, 164, 96],
  	"seagreen": [46, 139, 87],
  	"seashell": [255, 245, 238],
  	"sienna": [160, 82, 45],
  	"silver": [192, 192, 192],
  	"skyblue": [135, 206, 235],
  	"slateblue": [106, 90, 205],
  	"slategray": [112, 128, 144],
  	"slategrey": [112, 128, 144],
  	"snow": [255, 250, 250],
  	"springgreen": [0, 255, 127],
  	"steelblue": [70, 130, 180],
  	"tan": [210, 180, 140],
  	"teal": [0, 128, 128],
  	"thistle": [216, 191, 216],
  	"tomato": [255, 99, 71],
  	"turquoise": [64, 224, 208],
  	"violet": [238, 130, 238],
  	"wheat": [245, 222, 179],
  	"white": [255, 255, 255],
  	"whitesmoke": [245, 245, 245],
  	"yellow": [255, 255, 0],
  	"yellowgreen": [154, 205, 50]
  };

  /* MIT license */


  var colorString = {
     getRgba: getRgba,
     getHsla: getHsla,
     getRgb: getRgb,
     getHsl: getHsl,
     getHwb: getHwb,
     getAlpha: getAlpha,

     hexString: hexString,
     rgbString: rgbString,
     rgbaString: rgbaString,
     percentString: percentString,
     percentaString: percentaString,
     hslString: hslString,
     hslaString: hslaString,
     hwbString: hwbString,
     keyword: keyword
  };

  function getRgba(string) {
     if (!string) {
        return;
     }
     var abbr =  /^#([a-fA-F0-9]{3})$/i,
         hex =  /^#([a-fA-F0-9]{6})$/i,
         rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
         per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
         keyword = /(\w+)/;

     var rgb = [0, 0, 0],
         a = 1,
         match = string.match(abbr);
     if (match) {
        match = match[1];
        for (var i = 0; i < rgb.length; i++) {
           rgb[i] = parseInt(match[i] + match[i], 16);
        }
     }
     else if (match = string.match(hex)) {
        match = match[1];
        for (var i = 0; i < rgb.length; i++) {
           rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
        }
     }
     else if (match = string.match(rgba)) {
        for (var i = 0; i < rgb.length; i++) {
           rgb[i] = parseInt(match[i + 1]);
        }
        a = parseFloat(match[4]);
     }
     else if (match = string.match(per)) {
        for (var i = 0; i < rgb.length; i++) {
           rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
        }
        a = parseFloat(match[4]);
     }
     else if (match = string.match(keyword)) {
        if (match[1] == "transparent") {
           return [0, 0, 0, 0];
        }
        rgb = colorName[match[1]];
        if (!rgb) {
           return;
        }
     }

     for (var i = 0; i < rgb.length; i++) {
        rgb[i] = scale(rgb[i], 0, 255);
     }
     if (!a && a != 0) {
        a = 1;
     }
     else {
        a = scale(a, 0, 1);
     }
     rgb[3] = a;
     return rgb;
  }

  function getHsla(string) {
     if (!string) {
        return;
     }
     var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
     var match = string.match(hsl);
     if (match) {
        var alpha = parseFloat(match[4]);
        var h = scale(parseInt(match[1]), 0, 360),
            s = scale(parseFloat(match[2]), 0, 100),
            l = scale(parseFloat(match[3]), 0, 100),
            a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
        return [h, s, l, a];
     }
  }

  function getHwb(string) {
     if (!string) {
        return;
     }
     var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
     var match = string.match(hwb);
     if (match) {
      var alpha = parseFloat(match[4]);
        var h = scale(parseInt(match[1]), 0, 360),
            w = scale(parseFloat(match[2]), 0, 100),
            b = scale(parseFloat(match[3]), 0, 100),
            a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
        return [h, w, b, a];
     }
  }

  function getRgb(string) {
     var rgba = getRgba(string);
     return rgba && rgba.slice(0, 3);
  }

  function getHsl(string) {
    var hsla = getHsla(string);
    return hsla && hsla.slice(0, 3);
  }

  function getAlpha(string) {
     var vals = getRgba(string);
     if (vals) {
        return vals[3];
     }
     else if (vals = getHsla(string)) {
        return vals[3];
     }
     else if (vals = getHwb(string)) {
        return vals[3];
     }
  }

  // generators
  function hexString(rgb) {
     return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1])
                + hexDouble(rgb[2]);
  }

  function rgbString(rgba, alpha) {
     if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
        return rgbaString(rgba, alpha);
     }
     return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
  }

  function rgbaString(rgba, alpha) {
     if (alpha === undefined) {
        alpha = (rgba[3] !== undefined ? rgba[3] : 1);
     }
     return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2]
             + ", " + alpha + ")";
  }

  function percentString(rgba, alpha) {
     if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
        return percentaString(rgba, alpha);
     }
     var r = Math.round(rgba[0]/255 * 100),
         g = Math.round(rgba[1]/255 * 100),
         b = Math.round(rgba[2]/255 * 100);

     return "rgb(" + r + "%, " + g + "%, " + b + "%)";
  }

  function percentaString(rgba, alpha) {
     var r = Math.round(rgba[0]/255 * 100),
         g = Math.round(rgba[1]/255 * 100),
         b = Math.round(rgba[2]/255 * 100);
     return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
  }

  function hslString(hsla, alpha) {
     if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {
        return hslaString(hsla, alpha);
     }
     return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
  }

  function hslaString(hsla, alpha) {
     if (alpha === undefined) {
        alpha = (hsla[3] !== undefined ? hsla[3] : 1);
     }
     return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, "
             + alpha + ")";
  }

  // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
  // (hwb have alpha optional & 1 is default value)
  function hwbString(hwb, alpha) {
     if (alpha === undefined) {
        alpha = (hwb[3] !== undefined ? hwb[3] : 1);
     }
     return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%"
             + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";
  }

  function keyword(rgb) {
    return reverseNames[rgb.slice(0, 3)];
  }

  // helpers
  function scale(num, min, max) {
     return Math.min(Math.max(min, num), max);
  }

  function hexDouble(num) {
    var str = num.toString(16).toUpperCase();
    return (str.length < 2) ? "0" + str : str;
  }


  //create a list of reverse color names
  var reverseNames = {};
  for (var name$1 in colorName) {
     reverseNames[colorName[name$1]] = name$1;
  }

  /* MIT license */



  var Color = function (obj) {
  	if (obj instanceof Color) {
  		return obj;
  	}
  	if (!(this instanceof Color)) {
  		return new Color(obj);
  	}

  	this.valid = false;
  	this.values = {
  		rgb: [0, 0, 0],
  		hsl: [0, 0, 0],
  		hsv: [0, 0, 0],
  		hwb: [0, 0, 0],
  		cmyk: [0, 0, 0, 0],
  		alpha: 1
  	};

  	// parse Color() argument
  	var vals;
  	if (typeof obj === 'string') {
  		vals = colorString.getRgba(obj);
  		if (vals) {
  			this.setValues('rgb', vals);
  		} else if (vals = colorString.getHsla(obj)) {
  			this.setValues('hsl', vals);
  		} else if (vals = colorString.getHwb(obj)) {
  			this.setValues('hwb', vals);
  		}
  	} else if (typeof obj === 'object') {
  		vals = obj;
  		if (vals.r !== undefined || vals.red !== undefined) {
  			this.setValues('rgb', vals);
  		} else if (vals.l !== undefined || vals.lightness !== undefined) {
  			this.setValues('hsl', vals);
  		} else if (vals.v !== undefined || vals.value !== undefined) {
  			this.setValues('hsv', vals);
  		} else if (vals.w !== undefined || vals.whiteness !== undefined) {
  			this.setValues('hwb', vals);
  		} else if (vals.c !== undefined || vals.cyan !== undefined) {
  			this.setValues('cmyk', vals);
  		}
  	}
  };

  Color.prototype = {
  	isValid: function () {
  		return this.valid;
  	},
  	rgb: function () {
  		return this.setSpace('rgb', arguments);
  	},
  	hsl: function () {
  		return this.setSpace('hsl', arguments);
  	},
  	hsv: function () {
  		return this.setSpace('hsv', arguments);
  	},
  	hwb: function () {
  		return this.setSpace('hwb', arguments);
  	},
  	cmyk: function () {
  		return this.setSpace('cmyk', arguments);
  	},

  	rgbArray: function () {
  		return this.values.rgb;
  	},
  	hslArray: function () {
  		return this.values.hsl;
  	},
  	hsvArray: function () {
  		return this.values.hsv;
  	},
  	hwbArray: function () {
  		var values = this.values;
  		if (values.alpha !== 1) {
  			return values.hwb.concat([values.alpha]);
  		}
  		return values.hwb;
  	},
  	cmykArray: function () {
  		return this.values.cmyk;
  	},
  	rgbaArray: function () {
  		var values = this.values;
  		return values.rgb.concat([values.alpha]);
  	},
  	hslaArray: function () {
  		var values = this.values;
  		return values.hsl.concat([values.alpha]);
  	},
  	alpha: function (val) {
  		if (val === undefined) {
  			return this.values.alpha;
  		}
  		this.setValues('alpha', val);
  		return this;
  	},

  	red: function (val) {
  		return this.setChannel('rgb', 0, val);
  	},
  	green: function (val) {
  		return this.setChannel('rgb', 1, val);
  	},
  	blue: function (val) {
  		return this.setChannel('rgb', 2, val);
  	},
  	hue: function (val) {
  		if (val) {
  			val %= 360;
  			val = val < 0 ? 360 + val : val;
  		}
  		return this.setChannel('hsl', 0, val);
  	},
  	saturation: function (val) {
  		return this.setChannel('hsl', 1, val);
  	},
  	lightness: function (val) {
  		return this.setChannel('hsl', 2, val);
  	},
  	saturationv: function (val) {
  		return this.setChannel('hsv', 1, val);
  	},
  	whiteness: function (val) {
  		return this.setChannel('hwb', 1, val);
  	},
  	blackness: function (val) {
  		return this.setChannel('hwb', 2, val);
  	},
  	value: function (val) {
  		return this.setChannel('hsv', 2, val);
  	},
  	cyan: function (val) {
  		return this.setChannel('cmyk', 0, val);
  	},
  	magenta: function (val) {
  		return this.setChannel('cmyk', 1, val);
  	},
  	yellow: function (val) {
  		return this.setChannel('cmyk', 2, val);
  	},
  	black: function (val) {
  		return this.setChannel('cmyk', 3, val);
  	},

  	hexString: function () {
  		return colorString.hexString(this.values.rgb);
  	},
  	rgbString: function () {
  		return colorString.rgbString(this.values.rgb, this.values.alpha);
  	},
  	rgbaString: function () {
  		return colorString.rgbaString(this.values.rgb, this.values.alpha);
  	},
  	percentString: function () {
  		return colorString.percentString(this.values.rgb, this.values.alpha);
  	},
  	hslString: function () {
  		return colorString.hslString(this.values.hsl, this.values.alpha);
  	},
  	hslaString: function () {
  		return colorString.hslaString(this.values.hsl, this.values.alpha);
  	},
  	hwbString: function () {
  		return colorString.hwbString(this.values.hwb, this.values.alpha);
  	},
  	keyword: function () {
  		return colorString.keyword(this.values.rgb, this.values.alpha);
  	},

  	rgbNumber: function () {
  		var rgb = this.values.rgb;
  		return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];
  	},

  	luminosity: function () {
  		// http://www.w3.org/TR/WCAG20/#relativeluminancedef
  		var rgb = this.values.rgb;
  		var lum = [];
  		for (var i = 0; i < rgb.length; i++) {
  			var chan = rgb[i] / 255;
  			lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
  		}
  		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
  	},

  	contrast: function (color2) {
  		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
  		var lum1 = this.luminosity();
  		var lum2 = color2.luminosity();
  		if (lum1 > lum2) {
  			return (lum1 + 0.05) / (lum2 + 0.05);
  		}
  		return (lum2 + 0.05) / (lum1 + 0.05);
  	},

  	level: function (color2) {
  		var contrastRatio = this.contrast(color2);
  		if (contrastRatio >= 7.1) {
  			return 'AAA';
  		}

  		return (contrastRatio >= 4.5) ? 'AA' : '';
  	},

  	dark: function () {
  		// YIQ equation from http://24ways.org/2010/calculating-color-contrast
  		var rgb = this.values.rgb;
  		var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
  		return yiq < 128;
  	},

  	light: function () {
  		return !this.dark();
  	},

  	negate: function () {
  		var rgb = [];
  		for (var i = 0; i < 3; i++) {
  			rgb[i] = 255 - this.values.rgb[i];
  		}
  		this.setValues('rgb', rgb);
  		return this;
  	},

  	lighten: function (ratio) {
  		var hsl = this.values.hsl;
  		hsl[2] += hsl[2] * ratio;
  		this.setValues('hsl', hsl);
  		return this;
  	},

  	darken: function (ratio) {
  		var hsl = this.values.hsl;
  		hsl[2] -= hsl[2] * ratio;
  		this.setValues('hsl', hsl);
  		return this;
  	},

  	saturate: function (ratio) {
  		var hsl = this.values.hsl;
  		hsl[1] += hsl[1] * ratio;
  		this.setValues('hsl', hsl);
  		return this;
  	},

  	desaturate: function (ratio) {
  		var hsl = this.values.hsl;
  		hsl[1] -= hsl[1] * ratio;
  		this.setValues('hsl', hsl);
  		return this;
  	},

  	whiten: function (ratio) {
  		var hwb = this.values.hwb;
  		hwb[1] += hwb[1] * ratio;
  		this.setValues('hwb', hwb);
  		return this;
  	},

  	blacken: function (ratio) {
  		var hwb = this.values.hwb;
  		hwb[2] += hwb[2] * ratio;
  		this.setValues('hwb', hwb);
  		return this;
  	},

  	greyscale: function () {
  		var rgb = this.values.rgb;
  		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
  		var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
  		this.setValues('rgb', [val, val, val]);
  		return this;
  	},

  	clearer: function (ratio) {
  		var alpha = this.values.alpha;
  		this.setValues('alpha', alpha - (alpha * ratio));
  		return this;
  	},

  	opaquer: function (ratio) {
  		var alpha = this.values.alpha;
  		this.setValues('alpha', alpha + (alpha * ratio));
  		return this;
  	},

  	rotate: function (degrees) {
  		var hsl = this.values.hsl;
  		var hue = (hsl[0] + degrees) % 360;
  		hsl[0] = hue < 0 ? 360 + hue : hue;
  		this.setValues('hsl', hsl);
  		return this;
  	},

  	/**
  	 * Ported from sass implementation in C
  	 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
  	 */
  	mix: function (mixinColor, weight) {
  		var color1 = this;
  		var color2 = mixinColor;
  		var p = weight === undefined ? 0.5 : weight;

  		var w = 2 * p - 1;
  		var a = color1.alpha() - color2.alpha();

  		var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
  		var w2 = 1 - w1;

  		return this
  			.rgb(
  				w1 * color1.red() + w2 * color2.red(),
  				w1 * color1.green() + w2 * color2.green(),
  				w1 * color1.blue() + w2 * color2.blue()
  			)
  			.alpha(color1.alpha() * p + color2.alpha() * (1 - p));
  	},

  	toJSON: function () {
  		return this.rgb();
  	},

  	clone: function () {
  		// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
  		// making the final build way to big to embed in Chart.js. So let's do it manually,
  		// assuming that values to clone are 1 dimension arrays containing only numbers,
  		// except 'alpha' which is a number.
  		var result = new Color();
  		var source = this.values;
  		var target = result.values;
  		var value, type;

  		for (var prop in source) {
  			if (source.hasOwnProperty(prop)) {
  				value = source[prop];
  				type = ({}).toString.call(value);
  				if (type === '[object Array]') {
  					target[prop] = value.slice(0);
  				} else if (type === '[object Number]') {
  					target[prop] = value;
  				} else {
  					console.error('unexpected color value:', value);
  				}
  			}
  		}

  		return result;
  	}
  };

  Color.prototype.spaces = {
  	rgb: ['red', 'green', 'blue'],
  	hsl: ['hue', 'saturation', 'lightness'],
  	hsv: ['hue', 'saturation', 'value'],
  	hwb: ['hue', 'whiteness', 'blackness'],
  	cmyk: ['cyan', 'magenta', 'yellow', 'black']
  };

  Color.prototype.maxes = {
  	rgb: [255, 255, 255],
  	hsl: [360, 100, 100],
  	hsv: [360, 100, 100],
  	hwb: [360, 100, 100],
  	cmyk: [100, 100, 100, 100]
  };

  Color.prototype.getValues = function (space) {
  	var values = this.values;
  	var vals = {};

  	for (var i = 0; i < space.length; i++) {
  		vals[space.charAt(i)] = values[space][i];
  	}

  	if (values.alpha !== 1) {
  		vals.a = values.alpha;
  	}

  	// {r: 255, g: 255, b: 255, a: 0.4}
  	return vals;
  };

  Color.prototype.setValues = function (space, vals) {
  	var values = this.values;
  	var spaces = this.spaces;
  	var maxes = this.maxes;
  	var alpha = 1;
  	var i;

  	this.valid = true;

  	if (space === 'alpha') {
  		alpha = vals;
  	} else if (vals.length) {
  		// [10, 10, 10]
  		values[space] = vals.slice(0, space.length);
  		alpha = vals[space.length];
  	} else if (vals[space.charAt(0)] !== undefined) {
  		// {r: 10, g: 10, b: 10}
  		for (i = 0; i < space.length; i++) {
  			values[space][i] = vals[space.charAt(i)];
  		}

  		alpha = vals.a;
  	} else if (vals[spaces[space][0]] !== undefined) {
  		// {red: 10, green: 10, blue: 10}
  		var chans = spaces[space];

  		for (i = 0; i < space.length; i++) {
  			values[space][i] = vals[chans[i]];
  		}

  		alpha = vals.alpha;
  	}

  	values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));

  	if (space === 'alpha') {
  		return false;
  	}

  	var capped;

  	// cap values of the space prior converting all values
  	for (i = 0; i < space.length; i++) {
  		capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
  		values[space][i] = Math.round(capped);
  	}

  	// convert to all the other color spaces
  	for (var sname in spaces) {
  		if (sname !== space) {
  			values[sname] = colorConvert[space][sname](values[space]);
  		}
  	}

  	return true;
  };

  Color.prototype.setSpace = function (space, args) {
  	var vals = args[0];

  	if (vals === undefined) {
  		// color.rgb()
  		return this.getValues(space);
  	}

  	// color.rgb(10, 10, 10)
  	if (typeof vals === 'number') {
  		vals = Array.prototype.slice.call(args);
  	}

  	this.setValues(space, vals);
  	return this;
  };

  Color.prototype.setChannel = function (space, index, val) {
  	var svalues = this.values[space];
  	if (val === undefined) {
  		// color.red()
  		return svalues[index];
  	} else if (val === svalues[index]) {
  		// color.red(color.red())
  		return this;
  	}

  	// color.red(100)
  	svalues[index] = val;
  	this.setValues(space, svalues);

  	return this;
  };

  if (typeof window !== 'undefined') {
  	window.Color = Color;
  }

  var chartjsColor = Color;

  function filterByPosition(array, position) {
  	return helpers$1.where(array, function(v) {
  		return v.position === position;
  	});
  }

  function sortByWeight(array, reverse) {
  	array.forEach(function(v, i) {
  		v._tmpIndex_ = i;
  		return v;
  	});
  	array.sort(function(a, b) {
  		var v0 = reverse ? b : a;
  		var v1 = reverse ? a : b;
  		return v0.weight === v1.weight ?
  			v0._tmpIndex_ - v1._tmpIndex_ :
  			v0.weight - v1.weight;
  	});
  	array.forEach(function(v) {
  		delete v._tmpIndex_;
  	});
  }

  /**
   * @interface ILayoutItem
   * @prop {String} position - The position of the item in the chart layout. Possible values are
   * 'left', 'top', 'right', 'bottom', and 'chartArea'
   * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area
   * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down
   * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)
   * @prop {Function} update - Takes two parameters: width and height. Returns size of item
   * @prop {Function} getPadding -  Returns an object with padding on the edges
   * @prop {Number} width - Width of item. Must be valid after update()
   * @prop {Number} height - Height of item. Must be valid after update()
   * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update
   * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update
   * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update
   * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update
   */

  // The layout service is very self explanatory.  It's responsible for the layout within a chart.
  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
  // It is this service's responsibility of carrying out that layout.
  var core_layouts = {
  	defaults: {},

  	/**
  	 * Register a box to a chart.
  	 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.
  	 * @param {Chart} chart - the chart to use
  	 * @param {ILayoutItem} item - the item to add to be layed out
  	 */
  	addBox: function(chart, item) {
  		if (!chart.boxes) {
  			chart.boxes = [];
  		}

  		// initialize item with default values
  		item.fullWidth = item.fullWidth || false;
  		item.position = item.position || 'top';
  		item.weight = item.weight || 0;

  		chart.boxes.push(item);
  	},

  	/**
  	 * Remove a layoutItem from a chart
  	 * @param {Chart} chart - the chart to remove the box from
  	 * @param {Object} layoutItem - the item to remove from the layout
  	 */
  	removeBox: function(chart, layoutItem) {
  		var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;
  		if (index !== -1) {
  			chart.boxes.splice(index, 1);
  		}
  	},

  	/**
  	 * Sets (or updates) options on the given `item`.
  	 * @param {Chart} chart - the chart in which the item lives (or will be added to)
  	 * @param {Object} item - the item to configure with the given options
  	 * @param {Object} options - the new item options.
  	 */
  	configure: function(chart, item, options) {
  		var props = ['fullWidth', 'position', 'weight'];
  		var ilen = props.length;
  		var i = 0;
  		var prop;

  		for (; i < ilen; ++i) {
  			prop = props[i];
  			if (options.hasOwnProperty(prop)) {
  				item[prop] = options[prop];
  			}
  		}
  	},

  	/**
  	 * Fits boxes of the given chart into the given size by having each box measure itself
  	 * then running a fitting algorithm
  	 * @param {Chart} chart - the chart
  	 * @param {Number} width - the width to fit into
  	 * @param {Number} height - the height to fit into
  	 */
  	update: function(chart, width, height) {
  		if (!chart) {
  			return;
  		}

  		var layoutOptions = chart.options.layout || {};
  		var padding = helpers$1.options.toPadding(layoutOptions.padding);
  		var leftPadding = padding.left;
  		var rightPadding = padding.right;
  		var topPadding = padding.top;
  		var bottomPadding = padding.bottom;

  		var leftBoxes = filterByPosition(chart.boxes, 'left');
  		var rightBoxes = filterByPosition(chart.boxes, 'right');
  		var topBoxes = filterByPosition(chart.boxes, 'top');
  		var bottomBoxes = filterByPosition(chart.boxes, 'bottom');
  		var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');

  		// Sort boxes by weight. A higher weight is further away from the chart area
  		sortByWeight(leftBoxes, true);
  		sortByWeight(rightBoxes, false);
  		sortByWeight(topBoxes, true);
  		sortByWeight(bottomBoxes, false);

  		// Essentially we now have any number of boxes on each of the 4 sides.
  		// Our canvas looks like the following.
  		// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
  		// B1 is the bottom axis
  		// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
  		// These locations are single-box locations only, when trying to register a chartArea location that is already taken,
  		// an error will be thrown.
  		//
  		// |----------------------------------------------------|
  		// |                  T1 (Full Width)                   |
  		// |----------------------------------------------------|
  		// |    |    |                 T2                  |    |
  		// |    |----|-------------------------------------|----|
  		// |    |    | C1 |                           | C2 |    |
  		// |    |    |----|                           |----|    |
  		// |    |    |                                     |    |
  		// | L1 | L2 |           ChartArea (C0)            | R1 |
  		// |    |    |                                     |    |
  		// |    |    |----|                           |----|    |
  		// |    |    | C3 |                           | C4 |    |
  		// |    |----|-------------------------------------|----|
  		// |    |    |                 B1                  |    |
  		// |----------------------------------------------------|
  		// |                  B2 (Full Width)                   |
  		// |----------------------------------------------------|
  		//
  		// What we do to find the best sizing, we do the following
  		// 1. Determine the minimum size of the chart area.
  		// 2. Split the remaining width equally between each vertical axis
  		// 3. Split the remaining height equally between each horizontal axis
  		// 4. Give each layout the maximum size it can be. The layout will return it's minimum size
  		// 5. Adjust the sizes of each axis based on it's minimum reported size.
  		// 6. Refit each axis
  		// 7. Position each axis in the final location
  		// 8. Tell the chart the final location of the chart area
  		// 9. Tell any axes that overlay the chart area the positions of the chart area

  		// Step 1
  		var chartWidth = width - leftPadding - rightPadding;
  		var chartHeight = height - topPadding - bottomPadding;
  		var chartAreaWidth = chartWidth / 2; // min 50%
  		var chartAreaHeight = chartHeight / 2; // min 50%

  		// Step 2
  		var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);

  		// Step 3
  		var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);

  		// Step 4
  		var maxChartAreaWidth = chartWidth;
  		var maxChartAreaHeight = chartHeight;
  		var minBoxSizes = [];

  		function getMinimumBoxSize(box) {
  			var minSize;
  			var isHorizontal = box.isHorizontal();

  			if (isHorizontal) {
  				minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);
  				maxChartAreaHeight -= minSize.height;
  			} else {
  				minSize = box.update(verticalBoxWidth, maxChartAreaHeight);
  				maxChartAreaWidth -= minSize.width;
  			}

  			minBoxSizes.push({
  				horizontal: isHorizontal,
  				minSize: minSize,
  				box: box,
  			});
  		}

  		helpers$1.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);

  		// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)
  		var maxHorizontalLeftPadding = 0;
  		var maxHorizontalRightPadding = 0;
  		var maxVerticalTopPadding = 0;
  		var maxVerticalBottomPadding = 0;

  		helpers$1.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {
  			if (horizontalBox.getPadding) {
  				var boxPadding = horizontalBox.getPadding();
  				maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);
  				maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);
  			}
  		});

  		helpers$1.each(leftBoxes.concat(rightBoxes), function(verticalBox) {
  			if (verticalBox.getPadding) {
  				var boxPadding = verticalBox.getPadding();
  				maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);
  				maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);
  			}
  		});

  		// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could
  		// be if the axes are drawn at their minimum sizes.
  		// Steps 5 & 6
  		var totalLeftBoxesWidth = leftPadding;
  		var totalRightBoxesWidth = rightPadding;
  		var totalTopBoxesHeight = topPadding;
  		var totalBottomBoxesHeight = bottomPadding;

  		// Function to fit a box
  		function fitBox(box) {
  			var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {
  				return minBox.box === box;
  			});

  			if (minBoxSize) {
  				if (box.isHorizontal()) {
  					var scaleMargin = {
  						left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),
  						right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),
  						top: 0,
  						bottom: 0
  					};

  					// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends
  					// on the margin. Sometimes they need to increase in size slightly
  					box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);
  				} else {
  					box.update(minBoxSize.minSize.width, maxChartAreaHeight);
  				}
  			}
  		}

  		// Update, and calculate the left and right margins for the horizontal boxes
  		helpers$1.each(leftBoxes.concat(rightBoxes), fitBox);

  		helpers$1.each(leftBoxes, function(box) {
  			totalLeftBoxesWidth += box.width;
  		});

  		helpers$1.each(rightBoxes, function(box) {
  			totalRightBoxesWidth += box.width;
  		});

  		// Set the Left and Right margins for the horizontal boxes
  		helpers$1.each(topBoxes.concat(bottomBoxes), fitBox);

  		// Figure out how much margin is on the top and bottom of the vertical boxes
  		helpers$1.each(topBoxes, function(box) {
  			totalTopBoxesHeight += box.height;
  		});

  		helpers$1.each(bottomBoxes, function(box) {
  			totalBottomBoxesHeight += box.height;
  		});

  		function finalFitVerticalBox(box) {
  			var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {
  				return minSize.box === box;
  			});

  			var scaleMargin = {
  				left: 0,
  				right: 0,
  				top: totalTopBoxesHeight,
  				bottom: totalBottomBoxesHeight
  			};

  			if (minBoxSize) {
  				box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);
  			}
  		}

  		// Let the left layout know the final margin
  		helpers$1.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);

  		// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)
  		totalLeftBoxesWidth = leftPadding;
  		totalRightBoxesWidth = rightPadding;
  		totalTopBoxesHeight = topPadding;
  		totalBottomBoxesHeight = bottomPadding;

  		helpers$1.each(leftBoxes, function(box) {
  			totalLeftBoxesWidth += box.width;
  		});

  		helpers$1.each(rightBoxes, function(box) {
  			totalRightBoxesWidth += box.width;
  		});

  		helpers$1.each(topBoxes, function(box) {
  			totalTopBoxesHeight += box.height;
  		});
  		helpers$1.each(bottomBoxes, function(box) {
  			totalBottomBoxesHeight += box.height;
  		});

  		// We may be adding some padding to account for rotated x axis labels
  		var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);
  		totalLeftBoxesWidth += leftPaddingAddition;
  		totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);

  		var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);
  		totalTopBoxesHeight += topPaddingAddition;
  		totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);

  		// Figure out if our chart area changed. This would occur if the dataset layout label rotation
  		// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do
  		// without calling `fit` again
  		var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;
  		var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;

  		if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {
  			helpers$1.each(leftBoxes, function(box) {
  				box.height = newMaxChartAreaHeight;
  			});

  			helpers$1.each(rightBoxes, function(box) {
  				box.height = newMaxChartAreaHeight;
  			});

  			helpers$1.each(topBoxes, function(box) {
  				if (!box.fullWidth) {
  					box.width = newMaxChartAreaWidth;
  				}
  			});

  			helpers$1.each(bottomBoxes, function(box) {
  				if (!box.fullWidth) {
  					box.width = newMaxChartAreaWidth;
  				}
  			});

  			maxChartAreaHeight = newMaxChartAreaHeight;
  			maxChartAreaWidth = newMaxChartAreaWidth;
  		}

  		// Step 7 - Position the boxes
  		var left = leftPadding + leftPaddingAddition;
  		var top = topPadding + topPaddingAddition;

  		function placeBox(box) {
  			if (box.isHorizontal()) {
  				box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;
  				box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;
  				box.top = top;
  				box.bottom = top + box.height;

  				// Move to next point
  				top = box.bottom;

  			} else {

  				box.left = left;
  				box.right = left + box.width;
  				box.top = totalTopBoxesHeight;
  				box.bottom = totalTopBoxesHeight + maxChartAreaHeight;

  				// Move to next point
  				left = box.right;
  			}
  		}

  		helpers$1.each(leftBoxes.concat(topBoxes), placeBox);

  		// Account for chart width and height
  		left += maxChartAreaWidth;
  		top += maxChartAreaHeight;

  		helpers$1.each(rightBoxes, placeBox);
  		helpers$1.each(bottomBoxes, placeBox);

  		// Step 8
  		chart.chartArea = {
  			left: totalLeftBoxesWidth,
  			top: totalTopBoxesHeight,
  			right: totalLeftBoxesWidth + maxChartAreaWidth,
  			bottom: totalTopBoxesHeight + maxChartAreaHeight
  		};

  		// Step 9
  		helpers$1.each(chartAreaBoxes, function(box) {
  			box.left = chart.chartArea.left;
  			box.top = chart.chartArea.top;
  			box.right = chart.chartArea.right;
  			box.bottom = chart.chartArea.bottom;

  			box.update(maxChartAreaWidth, maxChartAreaHeight);
  		});
  	}
  };

  var core_scaleService = {
  	// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
  	// use the new chart options to grab the correct scale
  	constructors: {},
  	// Use a registration function so that we can move to an ES6 map when we no longer need to support
  	// old browsers

  	// Scale config defaults
  	defaults: {},
  	registerScaleType: function(type, scaleConstructor, scaleDefaults) {
  		this.constructors[type] = scaleConstructor;
  		this.defaults[type] = helpers$1.clone(scaleDefaults);
  	},
  	getScaleConstructor: function(type) {
  		return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;
  	},
  	getScaleDefaults: function(type) {
  		// Return the scale defaults merged with the global settings so that we always use the latest ones
  		return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};
  	},
  	updateScaleDefaults: function(type, additions) {
  		var me = this;
  		if (me.defaults.hasOwnProperty(type)) {
  			me.defaults[type] = helpers$1.extend(me.defaults[type], additions);
  		}
  	},
  	addScalesToLayout: function(chart) {
  		// Adds each scale to the chart.boxes array to be sized accordingly
  		helpers$1.each(chart.scales, function(scale) {
  			// Set ILayoutItem parameters for backwards compatibility
  			scale.fullWidth = scale.options.fullWidth;
  			scale.position = scale.options.position;
  			scale.weight = scale.options.weight;
  			core_layouts.addBox(chart, scale);
  		});
  	}
  };

  var core_helpers = function() {

  	// -- Basic js utility methods

  	helpers$1.configMerge = function(/* objects ... */) {
  		return helpers$1.merge(helpers$1.clone(arguments[0]), [].slice.call(arguments, 1), {
  			merger: function(key, target, source, options) {
  				var tval = target[key] || {};
  				var sval = source[key];

  				if (key === 'scales') {
  					// scale config merging is complex. Add our own function here for that
  					target[key] = helpers$1.scaleMerge(tval, sval);
  				} else if (key === 'scale') {
  					// used in polar area & radar charts since there is only one scale
  					target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);
  				} else {
  					helpers$1._merger(key, target, source, options);
  				}
  			}
  		});
  	};

  	helpers$1.scaleMerge = function(/* objects ... */) {
  		return helpers$1.merge(helpers$1.clone(arguments[0]), [].slice.call(arguments, 1), {
  			merger: function(key, target, source, options) {
  				if (key === 'xAxes' || key === 'yAxes') {
  					var slen = source[key].length;
  					var i, type, scale;

  					if (!target[key]) {
  						target[key] = [];
  					}

  					for (i = 0; i < slen; ++i) {
  						scale = source[key][i];
  						type = helpers$1.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');

  						if (i >= target[key].length) {
  							target[key].push({});
  						}

  						if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {
  							// new/untyped scale or type changed: let's apply the new defaults
  							// then merge source scale to correctly overwrite the defaults.
  							helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);
  						} else {
  							// scales type are the same
  							helpers$1.merge(target[key][i], scale);
  						}
  					}
  				} else {
  					helpers$1._merger(key, target, source, options);
  				}
  			}
  		});
  	};

  	helpers$1.where = function(collection, filterCallback) {
  		if (helpers$1.isArray(collection) && Array.prototype.filter) {
  			return collection.filter(filterCallback);
  		}
  		var filtered = [];

  		helpers$1.each(collection, function(item) {
  			if (filterCallback(item)) {
  				filtered.push(item);
  			}
  		});

  		return filtered;
  	};
  	helpers$1.findIndex = Array.prototype.findIndex ?
  		function(array, callback, scope) {
  			return array.findIndex(callback, scope);
  		} :
  		function(array, callback, scope) {
  			scope = scope === undefined ? array : scope;
  			for (var i = 0, ilen = array.length; i < ilen; ++i) {
  				if (callback.call(scope, array[i], i, array)) {
  					return i;
  				}
  			}
  			return -1;
  		};
  	helpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {
  		// Default to start of the array
  		if (helpers$1.isNullOrUndef(startIndex)) {
  			startIndex = -1;
  		}
  		for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
  			var currentItem = arrayToSearch[i];
  			if (filterCallback(currentItem)) {
  				return currentItem;
  			}
  		}
  	};
  	helpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {
  		// Default to end of the array
  		if (helpers$1.isNullOrUndef(startIndex)) {
  			startIndex = arrayToSearch.length;
  		}
  		for (var i = startIndex - 1; i >= 0; i--) {
  			var currentItem = arrayToSearch[i];
  			if (filterCallback(currentItem)) {
  				return currentItem;
  			}
  		}
  	};

  	// -- Math methods
  	helpers$1.isNumber = function(n) {
  		return !isNaN(parseFloat(n)) && isFinite(n);
  	};
  	helpers$1.almostEquals = function(x, y, epsilon) {
  		return Math.abs(x - y) < epsilon;
  	};
  	helpers$1.almostWhole = function(x, epsilon) {
  		var rounded = Math.round(x);
  		return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));
  	};
  	helpers$1.max = function(array) {
  		return array.reduce(function(max, value) {
  			if (!isNaN(value)) {
  				return Math.max(max, value);
  			}
  			return max;
  		}, Number.NEGATIVE_INFINITY);
  	};
  	helpers$1.min = function(array) {
  		return array.reduce(function(min, value) {
  			if (!isNaN(value)) {
  				return Math.min(min, value);
  			}
  			return min;
  		}, Number.POSITIVE_INFINITY);
  	};
  	helpers$1.sign = Math.sign ?
  		function(x) {
  			return Math.sign(x);
  		} :
  		function(x) {
  			x = +x; // convert to a number
  			if (x === 0 || isNaN(x)) {
  				return x;
  			}
  			return x > 0 ? 1 : -1;
  		};
  	helpers$1.log10 = Math.log10 ?
  		function(x) {
  			return Math.log10(x);
  		} :
  		function(x) {
  			var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.
  			// Check for whole powers of 10,
  			// which due to floating point rounding error should be corrected.
  			var powerOf10 = Math.round(exponent);
  			var isPowerOf10 = x === Math.pow(10, powerOf10);

  			return isPowerOf10 ? powerOf10 : exponent;
  		};
  	helpers$1.toRadians = function(degrees) {
  		return degrees * (Math.PI / 180);
  	};
  	helpers$1.toDegrees = function(radians) {
  		return radians * (180 / Math.PI);
  	};
  	// Gets the angle from vertical upright to the point about a centre.
  	helpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {
  		var distanceFromXCenter = anglePoint.x - centrePoint.x;
  		var distanceFromYCenter = anglePoint.y - centrePoint.y;
  		var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);

  		var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

  		if (angle < (-0.5 * Math.PI)) {
  			angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
  		}

  		return {
  			angle: angle,
  			distance: radialDistanceFromCenter
  		};
  	};
  	helpers$1.distanceBetweenPoints = function(pt1, pt2) {
  		return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
  	};
  	helpers$1.aliasPixel = function(pixelWidth) {
  		return (pixelWidth % 2 === 0) ? 0 : 0.5;
  	};
  	helpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {
  		// Props to Rob Spencer at scaled innovation for his post on splining between points
  		// http://scaledinnovation.com/analytics/splines/aboutSplines.html

  		// This function must also respect "skipped" points

  		var previous = firstPoint.skip ? middlePoint : firstPoint;
  		var current = middlePoint;
  		var next = afterPoint.skip ? middlePoint : afterPoint;

  		var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
  		var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));

  		var s01 = d01 / (d01 + d12);
  		var s12 = d12 / (d01 + d12);

  		// If all points are the same, s01 & s02 will be inf
  		s01 = isNaN(s01) ? 0 : s01;
  		s12 = isNaN(s12) ? 0 : s12;

  		var fa = t * s01; // scaling factor for triangle Ta
  		var fb = t * s12;

  		return {
  			previous: {
  				x: current.x - fa * (next.x - previous.x),
  				y: current.y - fa * (next.y - previous.y)
  			},
  			next: {
  				x: current.x + fb * (next.x - previous.x),
  				y: current.y + fb * (next.y - previous.y)
  			}
  		};
  	};
  	helpers$1.EPSILON = Number.EPSILON || 1e-14;
  	helpers$1.splineCurveMonotone = function(points) {
  		// This function calculates Bézier control points in a similar way than |splineCurve|,
  		// but preserves monotonicity of the provided data and ensures no local extremums are added
  		// between the dataset discrete points due to the interpolation.
  		// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation

  		var pointsWithTangents = (points || []).map(function(point) {
  			return {
  				model: point._model,
  				deltaK: 0,
  				mK: 0
  			};
  		});

  		// Calculate slopes (deltaK) and initialize tangents (mK)
  		var pointsLen = pointsWithTangents.length;
  		var i, pointBefore, pointCurrent, pointAfter;
  		for (i = 0; i < pointsLen; ++i) {
  			pointCurrent = pointsWithTangents[i];
  			if (pointCurrent.model.skip) {
  				continue;
  			}

  			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
  			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
  			if (pointAfter && !pointAfter.model.skip) {
  				var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);

  				// In the case of two points that appear at the same x pixel, slopeDeltaX is 0
  				pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;
  			}

  			if (!pointBefore || pointBefore.model.skip) {
  				pointCurrent.mK = pointCurrent.deltaK;
  			} else if (!pointAfter || pointAfter.model.skip) {
  				pointCurrent.mK = pointBefore.deltaK;
  			} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
  				pointCurrent.mK = 0;
  			} else {
  				pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
  			}
  		}

  		// Adjust tangents to ensure monotonic properties
  		var alphaK, betaK, tauK, squaredMagnitude;
  		for (i = 0; i < pointsLen - 1; ++i) {
  			pointCurrent = pointsWithTangents[i];
  			pointAfter = pointsWithTangents[i + 1];
  			if (pointCurrent.model.skip || pointAfter.model.skip) {
  				continue;
  			}

  			if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
  				pointCurrent.mK = pointAfter.mK = 0;
  				continue;
  			}

  			alphaK = pointCurrent.mK / pointCurrent.deltaK;
  			betaK = pointAfter.mK / pointCurrent.deltaK;
  			squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
  			if (squaredMagnitude <= 9) {
  				continue;
  			}

  			tauK = 3 / Math.sqrt(squaredMagnitude);
  			pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
  			pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
  		}

  		// Compute control points
  		var deltaX;
  		for (i = 0; i < pointsLen; ++i) {
  			pointCurrent = pointsWithTangents[i];
  			if (pointCurrent.model.skip) {
  				continue;
  			}

  			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
  			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
  			if (pointBefore && !pointBefore.model.skip) {
  				deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
  				pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
  				pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;
  			}
  			if (pointAfter && !pointAfter.model.skip) {
  				deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
  				pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
  				pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;
  			}
  		}
  	};
  	helpers$1.nextItem = function(collection, index, loop) {
  		if (loop) {
  			return index >= collection.length - 1 ? collection[0] : collection[index + 1];
  		}
  		return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];
  	};
  	helpers$1.previousItem = function(collection, index, loop) {
  		if (loop) {
  			return index <= 0 ? collection[collection.length - 1] : collection[index - 1];
  		}
  		return index <= 0 ? collection[0] : collection[index - 1];
  	};
  	// Implementation of the nice number algorithm used in determining where axis labels will go
  	helpers$1.niceNum = function(range, round) {
  		var exponent = Math.floor(helpers$1.log10(range));
  		var fraction = range / Math.pow(10, exponent);
  		var niceFraction;

  		if (round) {
  			if (fraction < 1.5) {
  				niceFraction = 1;
  			} else if (fraction < 3) {
  				niceFraction = 2;
  			} else if (fraction < 7) {
  				niceFraction = 5;
  			} else {
  				niceFraction = 10;
  			}
  		} else if (fraction <= 1.0) {
  			niceFraction = 1;
  		} else if (fraction <= 2) {
  			niceFraction = 2;
  		} else if (fraction <= 5) {
  			niceFraction = 5;
  		} else {
  			niceFraction = 10;
  		}

  		return niceFraction * Math.pow(10, exponent);
  	};
  	// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
  	helpers$1.requestAnimFrame = (function() {
  		if (typeof window === 'undefined') {
  			return function(callback) {
  				callback();
  			};
  		}
  		return window.requestAnimationFrame ||
  			window.webkitRequestAnimationFrame ||
  			window.mozRequestAnimationFrame ||
  			window.oRequestAnimationFrame ||
  			window.msRequestAnimationFrame ||
  			function(callback) {
  				return window.setTimeout(callback, 1000 / 60);
  			};
  	}());
  	// -- DOM methods
  	helpers$1.getRelativePosition = function(evt, chart) {
  		var mouseX, mouseY;
  		var e = evt.originalEvent || evt;
  		var canvas = evt.target || evt.srcElement;
  		var boundingRect = canvas.getBoundingClientRect();

  		var touches = e.touches;
  		if (touches && touches.length > 0) {
  			mouseX = touches[0].clientX;
  			mouseY = touches[0].clientY;

  		} else {
  			mouseX = e.clientX;
  			mouseY = e.clientY;
  		}

  		// Scale mouse coordinates into canvas coordinates
  		// by following the pattern laid out by 'jerryj' in the comments of
  		// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/
  		var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));
  		var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));
  		var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));
  		var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));
  		var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
  		var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;

  		// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
  		// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here
  		mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);
  		mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);

  		return {
  			x: mouseX,
  			y: mouseY
  		};

  	};

  	// Private helper function to convert max-width/max-height values that may be percentages into a number
  	function parseMaxStyle(styleValue, node, parentProperty) {
  		var valueInPixels;
  		if (typeof styleValue === 'string') {
  			valueInPixels = parseInt(styleValue, 10);

  			if (styleValue.indexOf('%') !== -1) {
  				// percentage * size in dimension
  				valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
  			}
  		} else {
  			valueInPixels = styleValue;
  		}

  		return valueInPixels;
  	}

  	/**
  	 * Returns if the given value contains an effective constraint.
  	 * @private
  	 */
  	function isConstrainedValue(value) {
  		return value !== undefined && value !== null && value !== 'none';
  	}

  	// Private helper to get a constraint dimension
  	// @param domNode : the node to check the constraint on
  	// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)
  	// @param percentageProperty : property of parent to use when calculating width as a percentage
  	// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser
  	function getConstraintDimension(domNode, maxStyle, percentageProperty) {
  		var view = document.defaultView;
  		var parentNode = helpers$1._getParentNode(domNode);
  		var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
  		var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
  		var hasCNode = isConstrainedValue(constrainedNode);
  		var hasCContainer = isConstrainedValue(constrainedContainer);
  		var infinity = Number.POSITIVE_INFINITY;

  		if (hasCNode || hasCContainer) {
  			return Math.min(
  				hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,
  				hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);
  		}

  		return 'none';
  	}
  	// returns Number or undefined if no constraint
  	helpers$1.getConstraintWidth = function(domNode) {
  		return getConstraintDimension(domNode, 'max-width', 'clientWidth');
  	};
  	// returns Number or undefined if no constraint
  	helpers$1.getConstraintHeight = function(domNode) {
  		return getConstraintDimension(domNode, 'max-height', 'clientHeight');
  	};
  	/**
  	 * @private
   	 */
  	helpers$1._calculatePadding = function(container, padding, parentDimension) {
  		padding = helpers$1.getStyle(container, padding);

  		return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);
  	};
  	/**
  	 * @private
  	 */
  	helpers$1._getParentNode = function(domNode) {
  		var parent = domNode.parentNode;
  		if (parent && parent.host) {
  			parent = parent.host;
  		}
  		return parent;
  	};
  	helpers$1.getMaximumWidth = function(domNode) {
  		var container = helpers$1._getParentNode(domNode);
  		if (!container) {
  			return domNode.clientWidth;
  		}

  		var clientWidth = container.clientWidth;
  		var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);
  		var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);

  		var w = clientWidth - paddingLeft - paddingRight;
  		var cw = helpers$1.getConstraintWidth(domNode);
  		return isNaN(cw) ? w : Math.min(w, cw);
  	};
  	helpers$1.getMaximumHeight = function(domNode) {
  		var container = helpers$1._getParentNode(domNode);
  		if (!container) {
  			return domNode.clientHeight;
  		}

  		var clientHeight = container.clientHeight;
  		var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);
  		var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);

  		var h = clientHeight - paddingTop - paddingBottom;
  		var ch = helpers$1.getConstraintHeight(domNode);
  		return isNaN(ch) ? h : Math.min(h, ch);
  	};
  	helpers$1.getStyle = function(el, property) {
  		return el.currentStyle ?
  			el.currentStyle[property] :
  			document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
  	};
  	helpers$1.retinaScale = function(chart, forceRatio) {
  		var pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;
  		if (pixelRatio === 1) {
  			return;
  		}

  		var canvas = chart.canvas;
  		var height = chart.height;
  		var width = chart.width;

  		canvas.height = height * pixelRatio;
  		canvas.width = width * pixelRatio;
  		chart.ctx.scale(pixelRatio, pixelRatio);

  		// If no style has been set on the canvas, the render size is used as display size,
  		// making the chart visually bigger, so let's enforce it to the "correct" values.
  		// See https://github.com/chartjs/Chart.js/issues/3575
  		if (!canvas.style.height && !canvas.style.width) {
  			canvas.style.height = height + 'px';
  			canvas.style.width = width + 'px';
  		}
  	};
  	// -- Canvas methods
  	helpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {
  		return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
  	};
  	helpers$1.longestText = function(ctx, font, arrayOfThings, cache) {
  		cache = cache || {};
  		var data = cache.data = cache.data || {};
  		var gc = cache.garbageCollect = cache.garbageCollect || [];

  		if (cache.font !== font) {
  			data = cache.data = {};
  			gc = cache.garbageCollect = [];
  			cache.font = font;
  		}

  		ctx.font = font;
  		var longest = 0;
  		helpers$1.each(arrayOfThings, function(thing) {
  			// Undefined strings and arrays should not be measured
  			if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {
  				longest = helpers$1.measureText(ctx, data, gc, longest, thing);
  			} else if (helpers$1.isArray(thing)) {
  				// if it is an array lets measure each element
  				// to do maybe simplify this function a bit so we can do this more recursively?
  				helpers$1.each(thing, function(nestedThing) {
  					// Undefined strings and arrays should not be measured
  					if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {
  						longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);
  					}
  				});
  			}
  		});

  		var gcLen = gc.length / 2;
  		if (gcLen > arrayOfThings.length) {
  			for (var i = 0; i < gcLen; i++) {
  				delete data[gc[i]];
  			}
  			gc.splice(0, gcLen);
  		}
  		return longest;
  	};
  	helpers$1.measureText = function(ctx, data, gc, longest, string) {
  		var textWidth = data[string];
  		if (!textWidth) {
  			textWidth = data[string] = ctx.measureText(string).width;
  			gc.push(string);
  		}
  		if (textWidth > longest) {
  			longest = textWidth;
  		}
  		return longest;
  	};
  	helpers$1.numberOfLabelLines = function(arrayOfThings) {
  		var numberOfLines = 1;
  		helpers$1.each(arrayOfThings, function(thing) {
  			if (helpers$1.isArray(thing)) {
  				if (thing.length > numberOfLines) {
  					numberOfLines = thing.length;
  				}
  			}
  		});
  		return numberOfLines;
  	};

  	helpers$1.color = !chartjsColor ?
  		function(value) {
  			console.error('Color.js not found!');
  			return value;
  		} :
  		function(value) {
  			/* global CanvasGradient */
  			if (value instanceof CanvasGradient) {
  				value = core_defaults.global.defaultColor;
  			}

  			return chartjsColor(value);
  		};

  	helpers$1.getHoverColor = function(colorValue) {
  		/* global CanvasPattern */
  		return (colorValue instanceof CanvasPattern) ?
  			colorValue :
  			helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();
  	};
  };

  function interpolate(start, view, model, ease) {
  	var keys = Object.keys(model);
  	var i, ilen, key, actual, origin, target, type, c0, c1;

  	for (i = 0, ilen = keys.length; i < ilen; ++i) {
  		key = keys[i];

  		target = model[key];

  		// if a value is added to the model after pivot() has been called, the view
  		// doesn't contain it, so let's initialize the view to the target value.
  		if (!view.hasOwnProperty(key)) {
  			view[key] = target;
  		}

  		actual = view[key];

  		if (actual === target || key[0] === '_') {
  			continue;
  		}

  		if (!start.hasOwnProperty(key)) {
  			start[key] = actual;
  		}

  		origin = start[key];

  		type = typeof target;

  		if (type === typeof origin) {
  			if (type === 'string') {
  				c0 = chartjsColor(origin);
  				if (c0.valid) {
  					c1 = chartjsColor(target);
  					if (c1.valid) {
  						view[key] = c1.mix(c0, ease).rgbString();
  						continue;
  					}
  				}
  			} else if (type === 'number' && isFinite(origin) && isFinite(target)) {
  				view[key] = origin + (target - origin) * ease;
  				continue;
  			}
  		}

  		view[key] = target;
  	}
  }

  var Element = function(configuration) {
  	helpers$1.extend(this, configuration);
  	this.initialize.apply(this, arguments);
  };

  helpers$1.extend(Element.prototype, {

  	initialize: function() {
  		this.hidden = false;
  	},

  	pivot: function() {
  		var me = this;
  		if (!me._view) {
  			me._view = helpers$1.clone(me._model);
  		}
  		me._start = {};
  		return me;
  	},

  	transition: function(ease) {
  		var me = this;
  		var model = me._model;
  		var start = me._start;
  		var view = me._view;

  		// No animation -> No Transition
  		if (!model || ease === 1) {
  			me._view = model;
  			me._start = null;
  			return me;
  		}

  		if (!view) {
  			view = me._view = {};
  		}

  		if (!start) {
  			start = me._start = {};
  		}

  		interpolate(start, view, model, ease);

  		return me;
  	},

  	tooltipPosition: function() {
  		return {
  			x: this._model.x,
  			y: this._model.y
  		};
  	},

  	hasValue: function() {
  		return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);
  	}
  });

  Element.extend = helpers$1.inherits;

  var core_element = Element;

  var core_animation = createCommonjsModule$1(function (module) {



  var exports = module.exports = core_element.extend({
  	chart: null, // the animation associated chart instance
  	currentStep: 0, // the current animation step
  	numSteps: 60, // default number of steps
  	easing: '', // the easing to use for this animation
  	render: null, // render function used by the animation service

  	onAnimationProgress: null, // user specified callback to fire on each step of the animation
  	onAnimationComplete: null, // user specified callback to fire when the animation finishes
  });

  // DEPRECATIONS

  /**
   * Provided for backward compatibility, use Chart.Animation instead
   * @prop Chart.Animation#animationObject
   * @deprecated since version 2.6.0
   * @todo remove at version 3
   */
  Object.defineProperty(exports.prototype, 'animationObject', {
  	get: function() {
  		return this;
  	}
  });

  /**
   * Provided for backward compatibility, use Chart.Animation#chart instead
   * @prop Chart.Animation#chartInstance
   * @deprecated since version 2.6.0
   * @todo remove at version 3
   */
  Object.defineProperty(exports.prototype, 'chartInstance', {
  	get: function() {
  		return this.chart;
  	},
  	set: function(value) {
  		this.chart = value;
  	}
  });
  });

  core_defaults._set('global', {
  	animation: {
  		duration: 1000,
  		easing: 'easeOutQuart',
  		onProgress: helpers$1.noop,
  		onComplete: helpers$1.noop
  	}
  });

  var core_animations = {
  	frameDuration: 17,
  	animations: [],
  	dropFrames: 0,
  	request: null,

  	/**
  	 * @param {Chart} chart - The chart to animate.
  	 * @param {Chart.Animation} animation - The animation that we will animate.
  	 * @param {Number} duration - The animation duration in ms.
  	 * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions
  	 */
  	addAnimation: function(chart, animation, duration, lazy) {
  		var animations = this.animations;
  		var i, ilen;

  		animation.chart = chart;

  		if (!lazy) {
  			chart.animating = true;
  		}

  		for (i = 0, ilen = animations.length; i < ilen; ++i) {
  			if (animations[i].chart === chart) {
  				animations[i] = animation;
  				return;
  			}
  		}

  		animations.push(animation);

  		// If there are no animations queued, manually kickstart a digest, for lack of a better word
  		if (animations.length === 1) {
  			this.requestAnimationFrame();
  		}
  	},

  	cancelAnimation: function(chart) {
  		var index = helpers$1.findIndex(this.animations, function(animation) {
  			return animation.chart === chart;
  		});

  		if (index !== -1) {
  			this.animations.splice(index, 1);
  			chart.animating = false;
  		}
  	},

  	requestAnimationFrame: function() {
  		var me = this;
  		if (me.request === null) {
  			// Skip animation frame requests until the active one is executed.
  			// This can happen when processing mouse events, e.g. 'mousemove'
  			// and 'mouseout' events will trigger multiple renders.
  			me.request = helpers$1.requestAnimFrame.call(window, function() {
  				me.request = null;
  				me.startDigest();
  			});
  		}
  	},

  	/**
  	 * @private
  	 */
  	startDigest: function() {
  		var me = this;
  		var startTime = Date.now();
  		var framesToDrop = 0;

  		if (me.dropFrames > 1) {
  			framesToDrop = Math.floor(me.dropFrames);
  			me.dropFrames = me.dropFrames % 1;
  		}

  		me.advance(1 + framesToDrop);

  		var endTime = Date.now();

  		me.dropFrames += (endTime - startTime) / me.frameDuration;

  		// Do we have more stuff to animate?
  		if (me.animations.length > 0) {
  			me.requestAnimationFrame();
  		}
  	},

  	/**
  	 * @private
  	 */
  	advance: function(count) {
  		var animations = this.animations;
  		var animation, chart;
  		var i = 0;

  		while (i < animations.length) {
  			animation = animations[i];
  			chart = animation.chart;

  			animation.currentStep = (animation.currentStep || 0) + count;
  			animation.currentStep = Math.min(animation.currentStep, animation.numSteps);

  			helpers$1.callback(animation.render, [chart, animation], chart);
  			helpers$1.callback(animation.onAnimationProgress, [animation], chart);

  			if (animation.currentStep >= animation.numSteps) {
  				helpers$1.callback(animation.onAnimationComplete, [animation], chart);
  				chart.animating = false;
  				animations.splice(i, 1);
  			} else {
  				++i;
  			}
  		}
  	}
  };

  core_defaults._set('global', {
  	elements: {
  		arc: {
  			backgroundColor: core_defaults.global.defaultColor,
  			borderColor: '#fff',
  			borderWidth: 2
  		}
  	}
  });

  var element_arc = core_element.extend({
  	inLabelRange: function(mouseX) {
  		var vm = this._view;

  		if (vm) {
  			return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));
  		}
  		return false;
  	},

  	inRange: function(chartX, chartY) {
  		var vm = this._view;

  		if (vm) {
  			var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});
  			var	angle = pointRelativePosition.angle;
  			var distance = pointRelativePosition.distance;

  			// Sanitise angle range
  			var startAngle = vm.startAngle;
  			var endAngle = vm.endAngle;
  			while (endAngle < startAngle) {
  				endAngle += 2.0 * Math.PI;
  			}
  			while (angle > endAngle) {
  				angle -= 2.0 * Math.PI;
  			}
  			while (angle < startAngle) {
  				angle += 2.0 * Math.PI;
  			}

  			// Check if within the range of the open/close angle
  			var betweenAngles = (angle >= startAngle && angle <= endAngle);
  			var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);

  			return (betweenAngles && withinRadius);
  		}
  		return false;
  	},

  	getCenterPoint: function() {
  		var vm = this._view;
  		var halfAngle = (vm.startAngle + vm.endAngle) / 2;
  		var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
  		return {
  			x: vm.x + Math.cos(halfAngle) * halfRadius,
  			y: vm.y + Math.sin(halfAngle) * halfRadius
  		};
  	},

  	getArea: function() {
  		var vm = this._view;
  		return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));
  	},

  	tooltipPosition: function() {
  		var vm = this._view;
  		var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);
  		var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;

  		return {
  			x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),
  			y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)
  		};
  	},

  	draw: function() {
  		var ctx = this._chart.ctx;
  		var vm = this._view;
  		var sA = vm.startAngle;
  		var eA = vm.endAngle;

  		ctx.beginPath();

  		ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);
  		ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);

  		ctx.closePath();
  		ctx.strokeStyle = vm.borderColor;
  		ctx.lineWidth = vm.borderWidth;

  		ctx.fillStyle = vm.backgroundColor;

  		ctx.fill();
  		ctx.lineJoin = 'bevel';

  		if (vm.borderWidth) {
  			ctx.stroke();
  		}
  	}
  });

  var globalDefaults = core_defaults.global;

  core_defaults._set('global', {
  	elements: {
  		line: {
  			tension: 0.4,
  			backgroundColor: globalDefaults.defaultColor,
  			borderWidth: 3,
  			borderColor: globalDefaults.defaultColor,
  			borderCapStyle: 'butt',
  			borderDash: [],
  			borderDashOffset: 0.0,
  			borderJoinStyle: 'miter',
  			capBezierPoints: true,
  			fill: true, // do we fill in the area between the line and its base axis
  		}
  	}
  });

  var element_line = core_element.extend({
  	draw: function() {
  		var me = this;
  		var vm = me._view;
  		var ctx = me._chart.ctx;
  		var spanGaps = vm.spanGaps;
  		var points = me._children.slice(); // clone array
  		var globalOptionLineElements = globalDefaults.elements.line;
  		var lastDrawnIndex = -1;
  		var index, current, previous, currentVM;

  		// If we are looping, adding the first point again
  		if (me._loop && points.length) {
  			points.push(points[0]);
  		}

  		ctx.save();

  		// Stroke Line Options
  		ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;

  		// IE 9 and 10 do not support line dash
  		if (ctx.setLineDash) {
  			ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);
  		}

  		ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;
  		ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
  		ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;
  		ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;

  		// Stroke Line
  		ctx.beginPath();
  		lastDrawnIndex = -1;

  		for (index = 0; index < points.length; ++index) {
  			current = points[index];
  			previous = helpers$1.previousItem(points, index);
  			currentVM = current._view;

  			// First point moves to it's starting position no matter what
  			if (index === 0) {
  				if (!currentVM.skip) {
  					ctx.moveTo(currentVM.x, currentVM.y);
  					lastDrawnIndex = index;
  				}
  			} else {
  				previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];

  				if (!currentVM.skip) {
  					if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {
  						// There was a gap and this is the first point after the gap
  						ctx.moveTo(currentVM.x, currentVM.y);
  					} else {
  						// Line to next point
  						helpers$1.canvas.lineTo(ctx, previous._view, current._view);
  					}
  					lastDrawnIndex = index;
  				}
  			}
  		}

  		ctx.stroke();
  		ctx.restore();
  	}
  });

  var defaultColor = core_defaults.global.defaultColor;

  core_defaults._set('global', {
  	elements: {
  		point: {
  			radius: 3,
  			pointStyle: 'circle',
  			backgroundColor: defaultColor,
  			borderColor: defaultColor,
  			borderWidth: 1,
  			// Hover
  			hitRadius: 1,
  			hoverRadius: 4,
  			hoverBorderWidth: 1
  		}
  	}
  });

  function xRange(mouseX) {
  	var vm = this._view;
  	return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;
  }

  function yRange(mouseY) {
  	var vm = this._view;
  	return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;
  }

  var element_point = core_element.extend({
  	inRange: function(mouseX, mouseY) {
  		var vm = this._view;
  		return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;
  	},

  	inLabelRange: xRange,
  	inXRange: xRange,
  	inYRange: yRange,

  	getCenterPoint: function() {
  		var vm = this._view;
  		return {
  			x: vm.x,
  			y: vm.y
  		};
  	},

  	getArea: function() {
  		return Math.PI * Math.pow(this._view.radius, 2);
  	},

  	tooltipPosition: function() {
  		var vm = this._view;
  		return {
  			x: vm.x,
  			y: vm.y,
  			padding: vm.radius + vm.borderWidth
  		};
  	},

  	draw: function(chartArea) {
  		var vm = this._view;
  		var model = this._model;
  		var ctx = this._chart.ctx;
  		var pointStyle = vm.pointStyle;
  		var rotation = vm.rotation;
  		var radius = vm.radius;
  		var x = vm.x;
  		var y = vm.y;
  		var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)

  		if (vm.skip) {
  			return;
  		}

  		// Clipping for Points.
  		if (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {
  			ctx.strokeStyle = vm.borderColor || defaultColor;
  			ctx.lineWidth = helpers$1.valueOrDefault(vm.borderWidth, core_defaults.global.elements.point.borderWidth);
  			ctx.fillStyle = vm.backgroundColor || defaultColor;
  			helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);
  		}
  	}
  });

  core_defaults._set('global', {
  	elements: {
  		rectangle: {
  			backgroundColor: core_defaults.global.defaultColor,
  			borderColor: core_defaults.global.defaultColor,
  			borderSkipped: 'bottom',
  			borderWidth: 0
  		}
  	}
  });

  function isVertical(bar) {
  	return bar._view.width !== undefined;
  }

  /**
   * Helper function to get the bounds of the bar regardless of the orientation
   * @param bar {Chart.Element.Rectangle} the bar
   * @return {Bounds} bounds of the bar
   * @private
   */
  function getBarBounds(bar) {
  	var vm = bar._view;
  	var x1, x2, y1, y2;

  	if (isVertical(bar)) {
  		// vertical
  		var halfWidth = vm.width / 2;
  		x1 = vm.x - halfWidth;
  		x2 = vm.x + halfWidth;
  		y1 = Math.min(vm.y, vm.base);
  		y2 = Math.max(vm.y, vm.base);
  	} else {
  		// horizontal bar
  		var halfHeight = vm.height / 2;
  		x1 = Math.min(vm.x, vm.base);
  		x2 = Math.max(vm.x, vm.base);
  		y1 = vm.y - halfHeight;
  		y2 = vm.y + halfHeight;
  	}

  	return {
  		left: x1,
  		top: y1,
  		right: x2,
  		bottom: y2
  	};
  }

  var element_rectangle = core_element.extend({
  	draw: function() {
  		var ctx = this._chart.ctx;
  		var vm = this._view;
  		var left, right, top, bottom, signX, signY, borderSkipped;
  		var borderWidth = vm.borderWidth;

  		if (!vm.horizontal) {
  			// bar
  			left = vm.x - vm.width / 2;
  			right = vm.x + vm.width / 2;
  			top = vm.y;
  			bottom = vm.base;
  			signX = 1;
  			signY = bottom > top ? 1 : -1;
  			borderSkipped = vm.borderSkipped || 'bottom';
  		} else {
  			// horizontal bar
  			left = vm.base;
  			right = vm.x;
  			top = vm.y - vm.height / 2;
  			bottom = vm.y + vm.height / 2;
  			signX = right > left ? 1 : -1;
  			signY = 1;
  			borderSkipped = vm.borderSkipped || 'left';
  		}

  		// Canvas doesn't allow us to stroke inside the width so we can
  		// adjust the sizes to fit if we're setting a stroke on the line
  		if (borderWidth) {
  			// borderWidth shold be less than bar width and bar height.
  			var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));
  			borderWidth = borderWidth > barSize ? barSize : borderWidth;
  			var halfStroke = borderWidth / 2;
  			// Adjust borderWidth when bar top position is near vm.base(zero).
  			var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);
  			var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);
  			var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);
  			var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);
  			// not become a vertical line?
  			if (borderLeft !== borderRight) {
  				top = borderTop;
  				bottom = borderBottom;
  			}
  			// not become a horizontal line?
  			if (borderTop !== borderBottom) {
  				left = borderLeft;
  				right = borderRight;
  			}
  		}

  		ctx.beginPath();
  		ctx.fillStyle = vm.backgroundColor;
  		ctx.strokeStyle = vm.borderColor;
  		ctx.lineWidth = borderWidth;

  		// Corner points, from bottom-left to bottom-right clockwise
  		// | 1 2 |
  		// | 0 3 |
  		var corners = [
  			[left, bottom],
  			[left, top],
  			[right, top],
  			[right, bottom]
  		];

  		// Find first (starting) corner with fallback to 'bottom'
  		var borders = ['bottom', 'left', 'top', 'right'];
  		var startCorner = borders.indexOf(borderSkipped, 0);
  		if (startCorner === -1) {
  			startCorner = 0;
  		}

  		function cornerAt(index) {
  			return corners[(startCorner + index) % 4];
  		}

  		// Draw rectangle from 'startCorner'
  		var corner = cornerAt(0);
  		ctx.moveTo(corner[0], corner[1]);

  		for (var i = 1; i < 4; i++) {
  			corner = cornerAt(i);
  			ctx.lineTo(corner[0], corner[1]);
  		}

  		ctx.fill();
  		if (borderWidth) {
  			ctx.stroke();
  		}
  	},

  	height: function() {
  		var vm = this._view;
  		return vm.base - vm.y;
  	},

  	inRange: function(mouseX, mouseY) {
  		var inRange = false;

  		if (this._view) {
  			var bounds = getBarBounds(this);
  			inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;
  		}

  		return inRange;
  	},

  	inLabelRange: function(mouseX, mouseY) {
  		var me = this;
  		if (!me._view) {
  			return false;
  		}

  		var inRange = false;
  		var bounds = getBarBounds(me);

  		if (isVertical(me)) {
  			inRange = mouseX >= bounds.left && mouseX <= bounds.right;
  		} else {
  			inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;
  		}

  		return inRange;
  	},

  	inXRange: function(mouseX) {
  		var bounds = getBarBounds(this);
  		return mouseX >= bounds.left && mouseX <= bounds.right;
  	},

  	inYRange: function(mouseY) {
  		var bounds = getBarBounds(this);
  		return mouseY >= bounds.top && mouseY <= bounds.bottom;
  	},

  	getCenterPoint: function() {
  		var vm = this._view;
  		var x, y;
  		if (isVertical(this)) {
  			x = vm.x;
  			y = (vm.y + vm.base) / 2;
  		} else {
  			x = (vm.x + vm.base) / 2;
  			y = vm.y;
  		}

  		return {x: x, y: y};
  	},

  	getArea: function() {
  		var vm = this._view;
  		return vm.width * Math.abs(vm.y - vm.base);
  	},

  	tooltipPosition: function() {
  		var vm = this._view;
  		return {
  			x: vm.x,
  			y: vm.y
  		};
  	}
  });

  var elements = {};
  var Arc = element_arc;
  var Line = element_line;
  var Point = element_point;
  var Rectangle = element_rectangle;
  elements.Arc = Arc;
  elements.Line = Line;
  elements.Point = Point;
  elements.Rectangle = Rectangle;

  /**
   * Helper function to get relative position for an event
   * @param {Event|IEvent} event - The event to get the position for
   * @param {Chart} chart - The chart
   * @returns {Point} the event position
   */
  function getRelativePosition(e, chart) {
  	if (e.native) {
  		return {
  			x: e.x,
  			y: e.y
  		};
  	}

  	return helpers$1.getRelativePosition(e, chart);
  }

  /**
   * Helper function to traverse all of the visible elements in the chart
   * @param chart {chart} the chart
   * @param handler {Function} the callback to execute for each visible item
   */
  function parseVisibleItems(chart, handler) {
  	var datasets = chart.data.datasets;
  	var meta, i, j, ilen, jlen;

  	for (i = 0, ilen = datasets.length; i < ilen; ++i) {
  		if (!chart.isDatasetVisible(i)) {
  			continue;
  		}

  		meta = chart.getDatasetMeta(i);
  		for (j = 0, jlen = meta.data.length; j < jlen; ++j) {
  			var element = meta.data[j];
  			if (!element._view.skip) {
  				handler(element);
  			}
  		}
  	}
  }

  /**
   * Helper function to get the items that intersect the event position
   * @param items {ChartElement[]} elements to filter
   * @param position {Point} the point to be nearest to
   * @return {ChartElement[]} the nearest items
   */
  function getIntersectItems(chart, position) {
  	var elements = [];

  	parseVisibleItems(chart, function(element) {
  		if (element.inRange(position.x, position.y)) {
  			elements.push(element);
  		}
  	});

  	return elements;
  }

  /**
   * Helper function to get the items nearest to the event position considering all visible items in teh chart
   * @param chart {Chart} the chart to look at elements from
   * @param position {Point} the point to be nearest to
   * @param intersect {Boolean} if true, only consider items that intersect the position
   * @param distanceMetric {Function} function to provide the distance between points
   * @return {ChartElement[]} the nearest items
   */
  function getNearestItems(chart, position, intersect, distanceMetric) {
  	var minDistance = Number.POSITIVE_INFINITY;
  	var nearestItems = [];

  	parseVisibleItems(chart, function(element) {
  		if (intersect && !element.inRange(position.x, position.y)) {
  			return;
  		}

  		var center = element.getCenterPoint();
  		var distance = distanceMetric(position, center);

  		if (distance < minDistance) {
  			nearestItems = [element];
  			minDistance = distance;
  		} else if (distance === minDistance) {
  			// Can have multiple items at the same distance in which case we sort by size
  			nearestItems.push(element);
  		}
  	});

  	return nearestItems;
  }

  /**
   * Get a distance metric function for two points based on the
   * axis mode setting
   * @param {String} axis the axis mode. x|y|xy
   */
  function getDistanceMetricForAxis(axis) {
  	var useX = axis.indexOf('x') !== -1;
  	var useY = axis.indexOf('y') !== -1;

  	return function(pt1, pt2) {
  		var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;
  		var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;
  		return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
  	};
  }

  function indexMode(chart, e, options) {
  	var position = getRelativePosition(e, chart);
  	// Default axis for index mode is 'x' to match old behaviour
  	options.axis = options.axis || 'x';
  	var distanceMetric = getDistanceMetricForAxis(options.axis);
  	var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
  	var elements = [];

  	if (!items.length) {
  		return [];
  	}

  	chart.data.datasets.forEach(function(dataset, datasetIndex) {
  		if (chart.isDatasetVisible(datasetIndex)) {
  			var meta = chart.getDatasetMeta(datasetIndex);
  			var element = meta.data[items[0]._index];

  			// don't count items that are skipped (null data)
  			if (element && !element._view.skip) {
  				elements.push(element);
  			}
  		}
  	});

  	return elements;
  }

  /**
   * @interface IInteractionOptions
   */
  /**
   * If true, only consider items that intersect the point
   * @name IInterfaceOptions#boolean
   * @type Boolean
   */

  /**
   * Contains interaction related functions
   * @namespace Chart.Interaction
   */
  var core_interaction = {
  	// Helper function for different modes
  	modes: {
  		single: function(chart, e) {
  			var position = getRelativePosition(e, chart);
  			var elements = [];

  			parseVisibleItems(chart, function(element) {
  				if (element.inRange(position.x, position.y)) {
  					elements.push(element);
  					return elements;
  				}
  			});

  			return elements.slice(0, 1);
  		},

  		/**
  		 * @function Chart.Interaction.modes.label
  		 * @deprecated since version 2.4.0
  		 * @todo remove at version 3
  		 * @private
  		 */
  		label: indexMode,

  		/**
  		 * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something
  		 * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item
  		 * @function Chart.Interaction.modes.index
  		 * @since v2.4.0
  		 * @param chart {chart} the chart we are returning items from
  		 * @param e {Event} the event we are find things at
  		 * @param options {IInteractionOptions} options to use during interaction
  		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
  		 */
  		index: indexMode,

  		/**
  		 * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something
  		 * If the options.intersect is false, we find the nearest item and return the items in that dataset
  		 * @function Chart.Interaction.modes.dataset
  		 * @param chart {chart} the chart we are returning items from
  		 * @param e {Event} the event we are find things at
  		 * @param options {IInteractionOptions} options to use during interaction
  		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
  		 */
  		dataset: function(chart, e, options) {
  			var position = getRelativePosition(e, chart);
  			options.axis = options.axis || 'xy';
  			var distanceMetric = getDistanceMetricForAxis(options.axis);
  			var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);

  			if (items.length > 0) {
  				items = chart.getDatasetMeta(items[0]._datasetIndex).data;
  			}

  			return items;
  		},

  		/**
  		 * @function Chart.Interaction.modes.x-axis
  		 * @deprecated since version 2.4.0. Use index mode and intersect == true
  		 * @todo remove at version 3
  		 * @private
  		 */
  		'x-axis': function(chart, e) {
  			return indexMode(chart, e, {intersect: false});
  		},

  		/**
  		 * Point mode returns all elements that hit test based on the event position
  		 * of the event
  		 * @function Chart.Interaction.modes.intersect
  		 * @param chart {chart} the chart we are returning items from
  		 * @param e {Event} the event we are find things at
  		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
  		 */
  		point: function(chart, e) {
  			var position = getRelativePosition(e, chart);
  			return getIntersectItems(chart, position);
  		},

  		/**
  		 * nearest mode returns the element closest to the point
  		 * @function Chart.Interaction.modes.intersect
  		 * @param chart {chart} the chart we are returning items from
  		 * @param e {Event} the event we are find things at
  		 * @param options {IInteractionOptions} options to use
  		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
  		 */
  		nearest: function(chart, e, options) {
  			var position = getRelativePosition(e, chart);
  			options.axis = options.axis || 'xy';
  			var distanceMetric = getDistanceMetricForAxis(options.axis);
  			var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);

  			// We have multiple items at the same distance from the event. Now sort by smallest
  			if (nearestItems.length > 1) {
  				nearestItems.sort(function(a, b) {
  					var sizeA = a.getArea();
  					var sizeB = b.getArea();
  					var ret = sizeA - sizeB;

  					if (ret === 0) {
  						// if equal sort by dataset index
  						ret = a._datasetIndex - b._datasetIndex;
  					}

  					return ret;
  				});
  			}

  			// Return only 1 item
  			return nearestItems.slice(0, 1);
  		},

  		/**
  		 * x mode returns the elements that hit-test at the current x coordinate
  		 * @function Chart.Interaction.modes.x
  		 * @param chart {chart} the chart we are returning items from
  		 * @param e {Event} the event we are find things at
  		 * @param options {IInteractionOptions} options to use
  		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
  		 */
  		x: function(chart, e, options) {
  			var position = getRelativePosition(e, chart);
  			var items = [];
  			var intersectsItem = false;

  			parseVisibleItems(chart, function(element) {
  				if (element.inXRange(position.x)) {
  					items.push(element);
  				}

  				if (element.inRange(position.x, position.y)) {
  					intersectsItem = true;
  				}
  			});

  			// If we want to trigger on an intersect and we don't have any items
  			// that intersect the position, return nothing
  			if (options.intersect && !intersectsItem) {
  				items = [];
  			}
  			return items;
  		},

  		/**
  		 * y mode returns the elements that hit-test at the current y coordinate
  		 * @function Chart.Interaction.modes.y
  		 * @param chart {chart} the chart we are returning items from
  		 * @param e {Event} the event we are find things at
  		 * @param options {IInteractionOptions} options to use
  		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
  		 */
  		y: function(chart, e, options) {
  			var position = getRelativePosition(e, chart);
  			var items = [];
  			var intersectsItem = false;

  			parseVisibleItems(chart, function(element) {
  				if (element.inYRange(position.y)) {
  					items.push(element);
  				}

  				if (element.inRange(position.x, position.y)) {
  					intersectsItem = true;
  				}
  			});

  			// If we want to trigger on an intersect and we don't have any items
  			// that intersect the position, return nothing
  			if (options.intersect && !intersectsItem) {
  				items = [];
  			}
  			return items;
  		}
  	}
  };

  /**
   * Platform fallback implementation (minimal).
   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939
   */

  var platform_basic = {
  	acquireContext: function(item) {
  		if (item && item.canvas) {
  			// Support for any object associated to a canvas (including a context2d)
  			item = item.canvas;
  		}

  		return item && item.getContext('2d') || null;
  	}
  };

  var EXPANDO_KEY = '$chartjs';
  var CSS_PREFIX = 'chartjs-';
  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';
  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';
  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];

  /**
   * DOM event types -> Chart.js event types.
   * Note: only events with different types are mapped.
   * @see https://developer.mozilla.org/en-US/docs/Web/Events
   */
  var EVENT_TYPES = {
  	touchstart: 'mousedown',
  	touchmove: 'mousemove',
  	touchend: 'mouseup',
  	pointerenter: 'mouseenter',
  	pointerdown: 'mousedown',
  	pointermove: 'mousemove',
  	pointerup: 'mouseup',
  	pointerleave: 'mouseout',
  	pointerout: 'mouseout'
  };

  /**
   * The "used" size is the final value of a dimension property after all calculations have
   * been performed. This method uses the computed style of `element` but returns undefined
   * if the computed style is not expressed in pixels. That can happen in some cases where
   * `element` has a size relative to its parent and this last one is not yet displayed,
   * for example because of `display: none` on a parent node.
   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
   * @returns {Number} Size in pixels or undefined if unknown.
   */
  function readUsedSize(element, property) {
  	var value = helpers$1.getStyle(element, property);
  	var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
  	return matches ? Number(matches[1]) : undefined;
  }

  /**
   * Initializes the canvas style and render size without modifying the canvas display size,
   * since responsiveness is handled by the controller.resize() method. The config is used
   * to determine the aspect ratio to apply in case no explicit height has been specified.
   */
  function initCanvas(canvas, config) {
  	var style = canvas.style;

  	// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
  	// returns null or '' if no explicit value has been set to the canvas attribute.
  	var renderHeight = canvas.getAttribute('height');
  	var renderWidth = canvas.getAttribute('width');

  	// Chart.js modifies some canvas values that we want to restore on destroy
  	canvas[EXPANDO_KEY] = {
  		initial: {
  			height: renderHeight,
  			width: renderWidth,
  			style: {
  				display: style.display,
  				height: style.height,
  				width: style.width
  			}
  		}
  	};

  	// Force canvas to display as block to avoid extra space caused by inline
  	// elements, which would interfere with the responsive resize process.
  	// https://github.com/chartjs/Chart.js/issues/2538
  	style.display = style.display || 'block';

  	if (renderWidth === null || renderWidth === '') {
  		var displayWidth = readUsedSize(canvas, 'width');
  		if (displayWidth !== undefined) {
  			canvas.width = displayWidth;
  		}
  	}

  	if (renderHeight === null || renderHeight === '') {
  		if (canvas.style.height === '') {
  			// If no explicit render height and style height, let's apply the aspect ratio,
  			// which one can be specified by the user but also by charts as default option
  			// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.
  			canvas.height = canvas.width / (config.options.aspectRatio || 2);
  		} else {
  			var displayHeight = readUsedSize(canvas, 'height');
  			if (displayWidth !== undefined) {
  				canvas.height = displayHeight;
  			}
  		}
  	}

  	return canvas;
  }

  /**
   * Detects support for options object argument in addEventListener.
   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
   * @private
   */
  var supportsEventListenerOptions = (function() {
  	var supports = false;
  	try {
  		var options = Object.defineProperty({}, 'passive', {
  			get: function() {
  				supports = true;
  			}
  		});
  		window.addEventListener('e', null, options);
  	} catch (e) {
  		// continue regardless of error
  	}
  	return supports;
  }());

  // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.
  // https://github.com/chartjs/Chart.js/issues/4287
  var eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;

  function addEventListener(node, type, listener) {
  	node.addEventListener(type, listener, eventListenerOptions);
  }

  function removeEventListener(node, type, listener) {
  	node.removeEventListener(type, listener, eventListenerOptions);
  }

  function createEvent(type, chart, x, y, nativeEvent) {
  	return {
  		type: type,
  		chart: chart,
  		native: nativeEvent || null,
  		x: x !== undefined ? x : null,
  		y: y !== undefined ? y : null,
  	};
  }

  function fromNativeEvent(event, chart) {
  	var type = EVENT_TYPES[event.type] || event.type;
  	var pos = helpers$1.getRelativePosition(event, chart);
  	return createEvent(type, chart, pos.x, pos.y, event);
  }

  function throttled(fn, thisArg) {
  	var ticking = false;
  	var args = [];

  	return function() {
  		args = Array.prototype.slice.call(arguments);
  		thisArg = thisArg || this;

  		if (!ticking) {
  			ticking = true;
  			helpers$1.requestAnimFrame.call(window, function() {
  				ticking = false;
  				fn.apply(thisArg, args);
  			});
  		}
  	};
  }

  // Implementation based on https://github.com/marcj/css-element-queries
  function createResizer(handler) {
  	var resizer = document.createElement('div');
  	var cls = CSS_PREFIX + 'size-monitor';
  	var maxSize = 1000000;
  	var style =
  		'position:absolute;' +
  		'left:0;' +
  		'top:0;' +
  		'right:0;' +
  		'bottom:0;' +
  		'overflow:hidden;' +
  		'pointer-events:none;' +
  		'visibility:hidden;' +
  		'z-index:-1;';

  	resizer.style.cssText = style;
  	resizer.className = cls;
  	resizer.innerHTML =
  		'<div class="' + cls + '-expand" style="' + style + '">' +
  			'<div style="' +
  				'position:absolute;' +
  				'width:' + maxSize + 'px;' +
  				'height:' + maxSize + 'px;' +
  				'left:0;' +
  				'top:0">' +
  			'</div>' +
  		'</div>' +
  		'<div class="' + cls + '-shrink" style="' + style + '">' +
  			'<div style="' +
  				'position:absolute;' +
  				'width:200%;' +
  				'height:200%;' +
  				'left:0; ' +
  				'top:0">' +
  			'</div>' +
  		'</div>';

  	var expand = resizer.childNodes[0];
  	var shrink = resizer.childNodes[1];

  	resizer._reset = function() {
  		expand.scrollLeft = maxSize;
  		expand.scrollTop = maxSize;
  		shrink.scrollLeft = maxSize;
  		shrink.scrollTop = maxSize;
  	};
  	var onScroll = function() {
  		resizer._reset();
  		handler();
  	};

  	addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));
  	addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));

  	return resizer;
  }

  // https://davidwalsh.name/detect-node-insertion
  function watchForRender(node, handler) {
  	var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});
  	var proxy = expando.renderProxy = function(e) {
  		if (e.animationName === CSS_RENDER_ANIMATION) {
  			handler();
  		}
  	};

  	helpers$1.each(ANIMATION_START_EVENTS, function(type) {
  		addEventListener(node, type, proxy);
  	});

  	// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class
  	// is removed then added back immediately (same animation frame?). Accessing the
  	// `offsetParent` property will force a reflow and re-evaluate the CSS animation.
  	// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics
  	// https://github.com/chartjs/Chart.js/issues/4737
  	expando.reflow = !!node.offsetParent;

  	node.classList.add(CSS_RENDER_MONITOR);
  }

  function unwatchForRender(node) {
  	var expando = node[EXPANDO_KEY] || {};
  	var proxy = expando.renderProxy;

  	if (proxy) {
  		helpers$1.each(ANIMATION_START_EVENTS, function(type) {
  			removeEventListener(node, type, proxy);
  		});

  		delete expando.renderProxy;
  	}

  	node.classList.remove(CSS_RENDER_MONITOR);
  }

  function addResizeListener(node, listener, chart) {
  	var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});

  	// Let's keep track of this added resizer and thus avoid DOM query when removing it.
  	var resizer = expando.resizer = createResizer(throttled(function() {
  		if (expando.resizer) {
  			return listener(createEvent('resize', chart));
  		}
  	}));

  	// The resizer needs to be attached to the node parent, so we first need to be
  	// sure that `node` is attached to the DOM before injecting the resizer element.
  	watchForRender(node, function() {
  		if (expando.resizer) {
  			var container = node.parentNode;
  			if (container && container !== resizer.parentNode) {
  				container.insertBefore(resizer, container.firstChild);
  			}

  			// The container size might have changed, let's reset the resizer state.
  			resizer._reset();
  		}
  	});
  }

  function removeResizeListener(node) {
  	var expando = node[EXPANDO_KEY] || {};
  	var resizer = expando.resizer;

  	delete expando.resizer;
  	unwatchForRender(node);

  	if (resizer && resizer.parentNode) {
  		resizer.parentNode.removeChild(resizer);
  	}
  }

  function injectCSS(platform, css) {
  	// http://stackoverflow.com/q/3922139
  	var style = platform._style || document.createElement('style');
  	if (!platform._style) {
  		platform._style = style;
  		css = '/* Chart.js */\n' + css;
  		style.setAttribute('type', 'text/css');
  		document.getElementsByTagName('head')[0].appendChild(style);
  	}

  	style.appendChild(document.createTextNode(css));
  }

  var platform_dom = {
  	/**
  	 * This property holds whether this platform is enabled for the current environment.
  	 * Currently used by platform.js to select the proper implementation.
  	 * @private
  	 */
  	_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',

  	initialize: function() {
  		var keyframes = 'from{opacity:0.99}to{opacity:1}';

  		injectCSS(this,
  			// DOM rendering detection
  			// https://davidwalsh.name/detect-node-insertion
  			'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +
  			'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +
  			'.' + CSS_RENDER_MONITOR + '{' +
  				'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +
  				'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +
  			'}'
  		);
  	},

  	acquireContext: function(item, config) {
  		if (typeof item === 'string') {
  			item = document.getElementById(item);
  		} else if (item.length) {
  			// Support for array based queries (such as jQuery)
  			item = item[0];
  		}

  		if (item && item.canvas) {
  			// Support for any object associated to a canvas (including a context2d)
  			item = item.canvas;
  		}

  		// To prevent canvas fingerprinting, some add-ons undefine the getContext
  		// method, for example: https://github.com/kkapsner/CanvasBlocker
  		// https://github.com/chartjs/Chart.js/issues/2807
  		var context = item && item.getContext && item.getContext('2d');

  		// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is
  		// inside an iframe or when running in a protected environment. We could guess the
  		// types from their toString() value but let's keep things flexible and assume it's
  		// a sufficient condition if the item has a context2D which has item as `canvas`.
  		// https://github.com/chartjs/Chart.js/issues/3887
  		// https://github.com/chartjs/Chart.js/issues/4102
  		// https://github.com/chartjs/Chart.js/issues/4152
  		if (context && context.canvas === item) {
  			initCanvas(item, config);
  			return context;
  		}

  		return null;
  	},

  	releaseContext: function(context) {
  		var canvas = context.canvas;
  		if (!canvas[EXPANDO_KEY]) {
  			return;
  		}

  		var initial = canvas[EXPANDO_KEY].initial;
  		['height', 'width'].forEach(function(prop) {
  			var value = initial[prop];
  			if (helpers$1.isNullOrUndef(value)) {
  				canvas.removeAttribute(prop);
  			} else {
  				canvas.setAttribute(prop, value);
  			}
  		});

  		helpers$1.each(initial.style || {}, function(value, key) {
  			canvas.style[key] = value;
  		});

  		// The canvas render size might have been changed (and thus the state stack discarded),
  		// we can't use save() and restore() to restore the initial state. So make sure that at
  		// least the canvas context is reset to the default state by setting the canvas width.
  		// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html
  		canvas.width = canvas.width;

  		delete canvas[EXPANDO_KEY];
  	},

  	addEventListener: function(chart, type, listener) {
  		var canvas = chart.canvas;
  		if (type === 'resize') {
  			// Note: the resize event is not supported on all browsers.
  			addResizeListener(canvas, listener, chart);
  			return;
  		}

  		var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});
  		var proxies = expando.proxies || (expando.proxies = {});
  		var proxy = proxies[chart.id + '_' + type] = function(event) {
  			listener(fromNativeEvent(event, chart));
  		};

  		addEventListener(canvas, type, proxy);
  	},

  	removeEventListener: function(chart, type, listener) {
  		var canvas = chart.canvas;
  		if (type === 'resize') {
  			// Note: the resize event is not supported on all browsers.
  			removeResizeListener(canvas, listener);
  			return;
  		}

  		var expando = listener[EXPANDO_KEY] || {};
  		var proxies = expando.proxies || {};
  		var proxy = proxies[chart.id + '_' + type];
  		if (!proxy) {
  			return;
  		}

  		removeEventListener(canvas, type, proxy);
  	}
  };

  // DEPRECATIONS

  /**
   * Provided for backward compatibility, use EventTarget.addEventListener instead.
   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
   * @function Chart.helpers.addEvent
   * @deprecated since version 2.7.0
   * @todo remove at version 3
   * @private
   */
  helpers$1.addEvent = addEventListener;

  /**
   * Provided for backward compatibility, use EventTarget.removeEventListener instead.
   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener
   * @function Chart.helpers.removeEvent
   * @deprecated since version 2.7.0
   * @todo remove at version 3
   * @private
   */
  helpers$1.removeEvent = removeEventListener;

  // @TODO Make possible to select another platform at build time.
  var implementation = platform_dom._enabled ? platform_dom : platform_basic;

  /**
   * @namespace Chart.platform
   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html
   * @since 2.4.0
   */
  var platform = helpers$1.extend({
  	/**
  	 * @since 2.7.0
  	 */
  	initialize: function() {},

  	/**
  	 * Called at chart construction time, returns a context2d instance implementing
  	 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.
  	 * @param {*} item - The native item from which to acquire context (platform specific)
  	 * @param {Object} options - The chart options
  	 * @returns {CanvasRenderingContext2D} context2d instance
  	 */
  	acquireContext: function() {},

  	/**
  	 * Called at chart destruction time, releases any resources associated to the context
  	 * previously returned by the acquireContext() method.
  	 * @param {CanvasRenderingContext2D} context - The context2d instance
  	 * @returns {Boolean} true if the method succeeded, else false
  	 */
  	releaseContext: function() {},

  	/**
  	 * Registers the specified listener on the given chart.
  	 * @param {Chart} chart - Chart from which to listen for event
  	 * @param {String} type - The ({@link IEvent}) type to listen for
  	 * @param {Function} listener - Receives a notification (an object that implements
  	 * the {@link IEvent} interface) when an event of the specified type occurs.
  	 */
  	addEventListener: function() {},

  	/**
  	 * Removes the specified listener previously registered with addEventListener.
  	 * @param {Chart} chart -Chart from which to remove the listener
  	 * @param {String} type - The ({@link IEvent}) type to remove
  	 * @param {Function} listener - The listener function to remove from the event target.
  	 */
  	removeEventListener: function() {}

  }, implementation);

  core_defaults._set('global', {
  	plugins: {}
  });

  /**
   * The plugin service singleton
   * @namespace Chart.plugins
   * @since 2.1.0
   */
  var core_plugins = {
  	/**
  	 * Globally registered plugins.
  	 * @private
  	 */
  	_plugins: [],

  	/**
  	 * This identifier is used to invalidate the descriptors cache attached to each chart
  	 * when a global plugin is registered or unregistered. In this case, the cache ID is
  	 * incremented and descriptors are regenerated during following API calls.
  	 * @private
  	 */
  	_cacheId: 0,

  	/**
  	 * Registers the given plugin(s) if not already registered.
  	 * @param {Array|Object} plugins plugin instance(s).
  	 */
  	register: function(plugins) {
  		var p = this._plugins;
  		([]).concat(plugins).forEach(function(plugin) {
  			if (p.indexOf(plugin) === -1) {
  				p.push(plugin);
  			}
  		});

  		this._cacheId++;
  	},

  	/**
  	 * Unregisters the given plugin(s) only if registered.
  	 * @param {Array|Object} plugins plugin instance(s).
  	 */
  	unregister: function(plugins) {
  		var p = this._plugins;
  		([]).concat(plugins).forEach(function(plugin) {
  			var idx = p.indexOf(plugin);
  			if (idx !== -1) {
  				p.splice(idx, 1);
  			}
  		});

  		this._cacheId++;
  	},

  	/**
  	 * Remove all registered plugins.
  	 * @since 2.1.5
  	 */
  	clear: function() {
  		this._plugins = [];
  		this._cacheId++;
  	},

  	/**
  	 * Returns the number of registered plugins?
  	 * @returns {Number}
  	 * @since 2.1.5
  	 */
  	count: function() {
  		return this._plugins.length;
  	},

  	/**
  	 * Returns all registered plugin instances.
  	 * @returns {Array} array of plugin objects.
  	 * @since 2.1.5
  	 */
  	getAll: function() {
  		return this._plugins;
  	},

  	/**
  	 * Calls enabled plugins for `chart` on the specified hook and with the given args.
  	 * This method immediately returns as soon as a plugin explicitly returns false. The
  	 * returned value can be used, for instance, to interrupt the current action.
  	 * @param {Object} chart - The chart instance for which plugins should be called.
  	 * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').
  	 * @param {Array} [args] - Extra arguments to apply to the hook call.
  	 * @returns {Boolean} false if any of the plugins return false, else returns true.
  	 */
  	notify: function(chart, hook, args) {
  		var descriptors = this.descriptors(chart);
  		var ilen = descriptors.length;
  		var i, descriptor, plugin, params, method;

  		for (i = 0; i < ilen; ++i) {
  			descriptor = descriptors[i];
  			plugin = descriptor.plugin;
  			method = plugin[hook];
  			if (typeof method === 'function') {
  				params = [chart].concat(args || []);
  				params.push(descriptor.options);
  				if (method.apply(plugin, params) === false) {
  					return false;
  				}
  			}
  		}

  		return true;
  	},

  	/**
  	 * Returns descriptors of enabled plugins for the given chart.
  	 * @returns {Array} [{ plugin, options }]
  	 * @private
  	 */
  	descriptors: function(chart) {
  		var cache = chart.$plugins || (chart.$plugins = {});
  		if (cache.id === this._cacheId) {
  			return cache.descriptors;
  		}

  		var plugins = [];
  		var descriptors = [];
  		var config = (chart && chart.config) || {};
  		var options = (config.options && config.options.plugins) || {};

  		this._plugins.concat(config.plugins || []).forEach(function(plugin) {
  			var idx = plugins.indexOf(plugin);
  			if (idx !== -1) {
  				return;
  			}

  			var id = plugin.id;
  			var opts = options[id];
  			if (opts === false) {
  				return;
  			}

  			if (opts === true) {
  				opts = helpers$1.clone(core_defaults.global.plugins[id]);
  			}

  			plugins.push(plugin);
  			descriptors.push({
  				plugin: plugin,
  				options: opts || {}
  			});
  		});

  		cache.descriptors = descriptors;
  		cache.id = this._cacheId;
  		return descriptors;
  	},

  	/**
  	 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,
  	 * but in some cases, this reference can be changed by the user when updating options.
  	 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167
  	 * @private
  	 */
  	_invalidate: function(chart) {
  		delete chart.$plugins;
  	}
  };

  /**
   * Namespace to hold static tick generation functions
   * @namespace Chart.Ticks
   */
  var core_ticks = {
  	/**
  	 * Namespace to hold formatters for different types of ticks
  	 * @namespace Chart.Ticks.formatters
  	 */
  	formatters: {
  		/**
  		 * Formatter for value labels
  		 * @method Chart.Ticks.formatters.values
  		 * @param value the value to display
  		 * @return {String|Array} the label to display
  		 */
  		values: function(value) {
  			return helpers$1.isArray(value) ? value : '' + value;
  		},

  		/**
  		 * Formatter for linear numeric ticks
  		 * @method Chart.Ticks.formatters.linear
  		 * @param tickValue {Number} the value to be formatted
  		 * @param index {Number} the position of the tickValue parameter in the ticks array
  		 * @param ticks {Array<Number>} the list of ticks being converted
  		 * @return {String} string representation of the tickValue parameter
  		 */
  		linear: function(tickValue, index, ticks) {
  			// If we have lots of ticks, don't use the ones
  			var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];

  			// If we have a number like 2.5 as the delta, figure out how many decimal places we need
  			if (Math.abs(delta) > 1) {
  				if (tickValue !== Math.floor(tickValue)) {
  					// not an integer
  					delta = tickValue - Math.floor(tickValue);
  				}
  			}

  			var logDelta = helpers$1.log10(Math.abs(delta));
  			var tickString = '';

  			if (tickValue !== 0) {
  				var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));
  				if (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation
  					var logTick = helpers$1.log10(Math.abs(tickValue));
  					tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));
  				} else {
  					var numDecimal = -1 * Math.floor(logDelta);
  					numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places
  					tickString = tickValue.toFixed(numDecimal);
  				}
  			} else {
  				tickString = '0'; // never show decimal places for 0
  			}

  			return tickString;
  		},

  		logarithmic: function(tickValue, index, ticks) {
  			var remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));

  			if (tickValue === 0) {
  				return '0';
  			} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
  				return tickValue.toExponential();
  			}
  			return '';
  		}
  	}
  };

  core_defaults._set('scale', {
  	display: true,
  	position: 'left',
  	offset: false,

  	// grid line settings
  	gridLines: {
  		display: true,
  		color: 'rgba(0, 0, 0, 0.1)',
  		lineWidth: 1,
  		drawBorder: true,
  		drawOnChartArea: true,
  		drawTicks: true,
  		tickMarkLength: 10,
  		zeroLineWidth: 1,
  		zeroLineColor: 'rgba(0,0,0,0.25)',
  		zeroLineBorderDash: [],
  		zeroLineBorderDashOffset: 0.0,
  		offsetGridLines: false,
  		borderDash: [],
  		borderDashOffset: 0.0
  	},

  	// scale label
  	scaleLabel: {
  		// display property
  		display: false,

  		// actual label
  		labelString: '',

  		// line height
  		lineHeight: 1.2,

  		// top/bottom padding
  		padding: {
  			top: 4,
  			bottom: 4
  		}
  	},

  	// label settings
  	ticks: {
  		beginAtZero: false,
  		minRotation: 0,
  		maxRotation: 50,
  		mirror: false,
  		padding: 0,
  		reverse: false,
  		display: true,
  		autoSkip: true,
  		autoSkipPadding: 0,
  		labelOffset: 0,
  		// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
  		callback: core_ticks.formatters.values,
  		minor: {},
  		major: {}
  	}
  });

  function labelsFromTicks(ticks) {
  	var labels = [];
  	var i, ilen;

  	for (i = 0, ilen = ticks.length; i < ilen; ++i) {
  		labels.push(ticks[i].label);
  	}

  	return labels;
  }

  function getLineValue(scale, index, offsetGridLines) {
  	var lineValue = scale.getPixelForTick(index);

  	if (offsetGridLines) {
  		if (index === 0) {
  			lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;
  		} else {
  			lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;
  		}
  	}
  	return lineValue;
  }

  function computeTextSize(context, tick, font) {
  	return helpers$1.isArray(tick) ?
  		helpers$1.longestText(context, font, tick) :
  		context.measureText(tick).width;
  }

  function parseFontOptions(options) {
  	var valueOrDefault = helpers$1.valueOrDefault;
  	var globalDefaults = core_defaults.global;
  	var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);
  	var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);
  	var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);

  	return {
  		size: size,
  		style: style,
  		family: family,
  		font: helpers$1.fontString(size, style, family)
  	};
  }

  function parseLineHeight(options) {
  	return helpers$1.options.toLineHeight(
  		helpers$1.valueOrDefault(options.lineHeight, 1.2),
  		helpers$1.valueOrDefault(options.fontSize, core_defaults.global.defaultFontSize));
  }

  var core_scale = core_element.extend({
  	/**
  	 * Get the padding needed for the scale
  	 * @method getPadding
  	 * @private
  	 * @returns {Padding} the necessary padding
  	 */
  	getPadding: function() {
  		var me = this;
  		return {
  			left: me.paddingLeft || 0,
  			top: me.paddingTop || 0,
  			right: me.paddingRight || 0,
  			bottom: me.paddingBottom || 0
  		};
  	},

  	/**
  	 * Returns the scale tick objects ({label, major})
  	 * @since 2.7
  	 */
  	getTicks: function() {
  		return this._ticks;
  	},

  	// These methods are ordered by lifecyle. Utilities then follow.
  	// Any function defined here is inherited by all scale types.
  	// Any function can be extended by the scale type

  	mergeTicksOptions: function() {
  		var ticks = this.options.ticks;
  		if (ticks.minor === false) {
  			ticks.minor = {
  				display: false
  			};
  		}
  		if (ticks.major === false) {
  			ticks.major = {
  				display: false
  			};
  		}
  		for (var key in ticks) {
  			if (key !== 'major' && key !== 'minor') {
  				if (typeof ticks.minor[key] === 'undefined') {
  					ticks.minor[key] = ticks[key];
  				}
  				if (typeof ticks.major[key] === 'undefined') {
  					ticks.major[key] = ticks[key];
  				}
  			}
  		}
  	},
  	beforeUpdate: function() {
  		helpers$1.callback(this.options.beforeUpdate, [this]);
  	},

  	update: function(maxWidth, maxHeight, margins) {
  		var me = this;
  		var i, ilen, labels, label, ticks, tick;

  		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
  		me.beforeUpdate();

  		// Absorb the master measurements
  		me.maxWidth = maxWidth;
  		me.maxHeight = maxHeight;
  		me.margins = helpers$1.extend({
  			left: 0,
  			right: 0,
  			top: 0,
  			bottom: 0
  		}, margins);
  		me.longestTextCache = me.longestTextCache || {};

  		// Dimensions
  		me.beforeSetDimensions();
  		me.setDimensions();
  		me.afterSetDimensions();

  		// Data min/max
  		me.beforeDataLimits();
  		me.determineDataLimits();
  		me.afterDataLimits();

  		// Ticks - `this.ticks` is now DEPRECATED!
  		// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member
  		// and must not be accessed directly from outside this class. `this.ticks` being
  		// around for long time and not marked as private, we can't change its structure
  		// without unexpected breaking changes. If you need to access the scale ticks,
  		// use scale.getTicks() instead.

  		me.beforeBuildTicks();

  		// New implementations should return an array of objects but for BACKWARD COMPAT,
  		// we still support no return (`this.ticks` internally set by calling this method).
  		ticks = me.buildTicks() || [];

  		me.afterBuildTicks();

  		me.beforeTickToLabelConversion();

  		// New implementations should return the formatted tick labels but for BACKWARD
  		// COMPAT, we still support no return (`this.ticks` internally changed by calling
  		// this method and supposed to contain only string values).
  		labels = me.convertTicksToLabels(ticks) || me.ticks;

  		me.afterTickToLabelConversion();

  		me.ticks = labels;   // BACKWARD COMPATIBILITY

  		// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!

  		// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)
  		for (i = 0, ilen = labels.length; i < ilen; ++i) {
  			label = labels[i];
  			tick = ticks[i];
  			if (!tick) {
  				ticks.push(tick = {
  					label: label,
  					major: false
  				});
  			} else {
  				tick.label = label;
  			}
  		}

  		me._ticks = ticks;

  		// Tick Rotation
  		me.beforeCalculateTickRotation();
  		me.calculateTickRotation();
  		me.afterCalculateTickRotation();
  		// Fit
  		me.beforeFit();
  		me.fit();
  		me.afterFit();
  		//
  		me.afterUpdate();

  		return me.minSize;

  	},
  	afterUpdate: function() {
  		helpers$1.callback(this.options.afterUpdate, [this]);
  	},

  	//

  	beforeSetDimensions: function() {
  		helpers$1.callback(this.options.beforeSetDimensions, [this]);
  	},
  	setDimensions: function() {
  		var me = this;
  		// Set the unconstrained dimension before label rotation
  		if (me.isHorizontal()) {
  			// Reset position before calculating rotation
  			me.width = me.maxWidth;
  			me.left = 0;
  			me.right = me.width;
  		} else {
  			me.height = me.maxHeight;

  			// Reset position before calculating rotation
  			me.top = 0;
  			me.bottom = me.height;
  		}

  		// Reset padding
  		me.paddingLeft = 0;
  		me.paddingTop = 0;
  		me.paddingRight = 0;
  		me.paddingBottom = 0;
  	},
  	afterSetDimensions: function() {
  		helpers$1.callback(this.options.afterSetDimensions, [this]);
  	},

  	// Data limits
  	beforeDataLimits: function() {
  		helpers$1.callback(this.options.beforeDataLimits, [this]);
  	},
  	determineDataLimits: helpers$1.noop,
  	afterDataLimits: function() {
  		helpers$1.callback(this.options.afterDataLimits, [this]);
  	},

  	//
  	beforeBuildTicks: function() {
  		helpers$1.callback(this.options.beforeBuildTicks, [this]);
  	},
  	buildTicks: helpers$1.noop,
  	afterBuildTicks: function() {
  		helpers$1.callback(this.options.afterBuildTicks, [this]);
  	},

  	beforeTickToLabelConversion: function() {
  		helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);
  	},
  	convertTicksToLabels: function() {
  		var me = this;
  		// Convert ticks to strings
  		var tickOpts = me.options.ticks;
  		me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);
  	},
  	afterTickToLabelConversion: function() {
  		helpers$1.callback(this.options.afterTickToLabelConversion, [this]);
  	},

  	//

  	beforeCalculateTickRotation: function() {
  		helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);
  	},
  	calculateTickRotation: function() {
  		var me = this;
  		var context = me.ctx;
  		var tickOpts = me.options.ticks;
  		var labels = labelsFromTicks(me._ticks);

  		// Get the width of each grid by calculating the difference
  		// between x offsets between 0 and 1.
  		var tickFont = parseFontOptions(tickOpts);
  		context.font = tickFont.font;

  		var labelRotation = tickOpts.minRotation || 0;

  		if (labels.length && me.options.display && me.isHorizontal()) {
  			var originalLabelWidth = helpers$1.longestText(context, tickFont.font, labels, me.longestTextCache);
  			var labelWidth = originalLabelWidth;
  			var cosRotation, sinRotation;

  			// Allow 3 pixels x2 padding either side for label readability
  			var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;

  			// Max label rotation can be set or default to 90 - also act as a loop counter
  			while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {
  				var angleRadians = helpers$1.toRadians(labelRotation);
  				cosRotation = Math.cos(angleRadians);
  				sinRotation = Math.sin(angleRadians);

  				if (sinRotation * originalLabelWidth > me.maxHeight) {
  					// go back one step
  					labelRotation--;
  					break;
  				}

  				labelRotation++;
  				labelWidth = cosRotation * originalLabelWidth;
  			}
  		}

  		me.labelRotation = labelRotation;
  	},
  	afterCalculateTickRotation: function() {
  		helpers$1.callback(this.options.afterCalculateTickRotation, [this]);
  	},

  	//

  	beforeFit: function() {
  		helpers$1.callback(this.options.beforeFit, [this]);
  	},
  	fit: function() {
  		var me = this;
  		// Reset
  		var minSize = me.minSize = {
  			width: 0,
  			height: 0
  		};

  		var labels = labelsFromTicks(me._ticks);

  		var opts = me.options;
  		var tickOpts = opts.ticks;
  		var scaleLabelOpts = opts.scaleLabel;
  		var gridLineOpts = opts.gridLines;
  		var display = opts.display;
  		var isHorizontal = me.isHorizontal();

  		var tickFont = parseFontOptions(tickOpts);
  		var tickMarkLength = opts.gridLines.tickMarkLength;

  		// Width
  		if (isHorizontal) {
  			// subtract the margins to line up with the chartArea if we are a full width scale
  			minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;
  		} else {
  			minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
  		}

  		// height
  		if (isHorizontal) {
  			minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;
  		} else {
  			minSize.height = me.maxHeight; // fill all the height
  		}

  		// Are we showing a title for the scale?
  		if (scaleLabelOpts.display && display) {
  			var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);
  			var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);
  			var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;

  			if (isHorizontal) {
  				minSize.height += deltaHeight;
  			} else {
  				minSize.width += deltaHeight;
  			}
  		}

  		// Don't bother fitting the ticks if we are not showing them
  		if (tickOpts.display && display) {
  			var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);
  			var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);
  			var lineSpace = tickFont.size * 0.5;
  			var tickPadding = me.options.ticks.padding;

  			if (isHorizontal) {
  				// A horizontal axis is more constrained by the height.
  				me.longestLabelWidth = largestTextWidth;

  				var angleRadians = helpers$1.toRadians(me.labelRotation);
  				var cosRotation = Math.cos(angleRadians);
  				var sinRotation = Math.sin(angleRadians);

  				// TODO - improve this calculation
  				var labelHeight = (sinRotation * largestTextWidth)
  					+ (tickFont.size * tallestLabelHeightInLines)
  					+ (lineSpace * (tallestLabelHeightInLines - 1))
  					+ lineSpace; // padding

  				minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);

  				me.ctx.font = tickFont.font;
  				var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);
  				var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);

  				// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned
  				// which means that the right padding is dominated by the font height
  				if (me.labelRotation !== 0) {
  					me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges
  					me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;
  				} else {
  					me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges
  					me.paddingRight = lastLabelWidth / 2 + 3;
  				}
  			} else {
  				// A vertical axis is more constrained by the width. Labels are the
  				// dominant factor here, so get that length first and account for padding
  				if (tickOpts.mirror) {
  					largestTextWidth = 0;
  				} else {
  					// use lineSpace for consistency with horizontal axis
  					// tickPadding is not implemented for horizontal
  					largestTextWidth += tickPadding + lineSpace;
  				}

  				minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);

  				me.paddingTop = tickFont.size / 2;
  				me.paddingBottom = tickFont.size / 2;
  			}
  		}

  		me.handleMargins();

  		me.width = minSize.width;
  		me.height = minSize.height;
  	},

  	/**
  	 * Handle margins and padding interactions
  	 * @private
  	 */
  	handleMargins: function() {
  		var me = this;
  		if (me.margins) {
  			me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);
  			me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);
  			me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);
  			me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);
  		}
  	},

  	afterFit: function() {
  		helpers$1.callback(this.options.afterFit, [this]);
  	},

  	// Shared Methods
  	isHorizontal: function() {
  		return this.options.position === 'top' || this.options.position === 'bottom';
  	},
  	isFullWidth: function() {
  		return (this.options.fullWidth);
  	},

  	// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
  	getRightValue: function(rawValue) {
  		// Null and undefined values first
  		if (helpers$1.isNullOrUndef(rawValue)) {
  			return NaN;
  		}
  		// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values
  		if (typeof rawValue === 'number' && !isFinite(rawValue)) {
  			return NaN;
  		}
  		// If it is in fact an object, dive in one more level
  		if (rawValue) {
  			if (this.isHorizontal()) {
  				if (rawValue.x !== undefined) {
  					return this.getRightValue(rawValue.x);
  				}
  			} else if (rawValue.y !== undefined) {
  				return this.getRightValue(rawValue.y);
  			}
  		}

  		// Value is good, return it
  		return rawValue;
  	},

  	/**
  	 * Used to get the value to display in the tooltip for the data at the given index
  	 * @param index
  	 * @param datasetIndex
  	 */
  	getLabelForIndex: helpers$1.noop,

  	/**
  	 * Returns the location of the given data point. Value can either be an index or a numerical value
  	 * The coordinate (0, 0) is at the upper-left corner of the canvas
  	 * @param value
  	 * @param index
  	 * @param datasetIndex
  	 */
  	getPixelForValue: helpers$1.noop,

  	/**
  	 * Used to get the data value from a given pixel. This is the inverse of getPixelForValue
  	 * The coordinate (0, 0) is at the upper-left corner of the canvas
  	 * @param pixel
  	 */
  	getValueForPixel: helpers$1.noop,

  	/**
  	 * Returns the location of the tick at the given index
  	 * The coordinate (0, 0) is at the upper-left corner of the canvas
  	 */
  	getPixelForTick: function(index) {
  		var me = this;
  		var offset = me.options.offset;
  		if (me.isHorizontal()) {
  			var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
  			var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);
  			var pixel = (tickWidth * index) + me.paddingLeft;

  			if (offset) {
  				pixel += tickWidth / 2;
  			}

  			var finalVal = me.left + Math.round(pixel);
  			finalVal += me.isFullWidth() ? me.margins.left : 0;
  			return finalVal;
  		}
  		var innerHeight = me.height - (me.paddingTop + me.paddingBottom);
  		return me.top + (index * (innerHeight / (me._ticks.length - 1)));
  	},

  	/**
  	 * Utility for getting the pixel location of a percentage of scale
  	 * The coordinate (0, 0) is at the upper-left corner of the canvas
  	 */
  	getPixelForDecimal: function(decimal) {
  		var me = this;
  		if (me.isHorizontal()) {
  			var innerWidth = me.width - (me.paddingLeft + me.paddingRight);
  			var valueOffset = (innerWidth * decimal) + me.paddingLeft;

  			var finalVal = me.left + Math.round(valueOffset);
  			finalVal += me.isFullWidth() ? me.margins.left : 0;
  			return finalVal;
  		}
  		return me.top + (decimal * me.height);
  	},

  	/**
  	 * Returns the pixel for the minimum chart value
  	 * The coordinate (0, 0) is at the upper-left corner of the canvas
  	 */
  	getBasePixel: function() {
  		return this.getPixelForValue(this.getBaseValue());
  	},

  	getBaseValue: function() {
  		var me = this;
  		var min = me.min;
  		var max = me.max;

  		return me.beginAtZero ? 0 :
  			min < 0 && max < 0 ? max :
  			min > 0 && max > 0 ? min :
  			0;
  	},

  	/**
  	 * Returns a subset of ticks to be plotted to avoid overlapping labels.
  	 * @private
  	 */
  	_autoSkip: function(ticks) {
  		var skipRatio;
  		var me = this;
  		var isHorizontal = me.isHorizontal();
  		var optionTicks = me.options.ticks.minor;
  		var tickCount = ticks.length;
  		var labelRotationRadians = helpers$1.toRadians(me.labelRotation);
  		var cosRotation = Math.cos(labelRotationRadians);
  		var longestRotatedLabel = me.longestLabelWidth * cosRotation;
  		var result = [];
  		var i, tick, shouldSkip;

  		// figure out the maximum number of gridlines to show
  		var maxTicks;
  		if (optionTicks.maxTicksLimit) {
  			maxTicks = optionTicks.maxTicksLimit;
  		}

  		if (isHorizontal) {
  			skipRatio = false;

  			if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {
  				skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));
  			}

  			// if they defined a max number of optionTicks,
  			// increase skipRatio until that number is met
  			if (maxTicks && tickCount > maxTicks) {
  				skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));
  			}
  		}

  		for (i = 0; i < tickCount; i++) {
  			tick = ticks[i];

  			// Since we always show the last tick,we need may need to hide the last shown one before
  			shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);
  			if (shouldSkip && i !== tickCount - 1) {
  				// leave tick in place but make sure it's not displayed (#4635)
  				delete tick.label;
  			}
  			result.push(tick);
  		}
  		return result;
  	},

  	// Actually draw the scale on the canvas
  	// @param {rectangle} chartArea : the area of the chart to draw full grid lines on
  	draw: function(chartArea) {
  		var me = this;
  		var options = me.options;
  		if (!options.display) {
  			return;
  		}

  		var context = me.ctx;
  		var globalDefaults = core_defaults.global;
  		var optionTicks = options.ticks.minor;
  		var optionMajorTicks = options.ticks.major || optionTicks;
  		var gridLines = options.gridLines;
  		var scaleLabel = options.scaleLabel;

  		var isRotated = me.labelRotation !== 0;
  		var isHorizontal = me.isHorizontal();

  		var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();
  		var tickFontColor = helpers$1.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);
  		var tickFont = parseFontOptions(optionTicks);
  		var majorTickFontColor = helpers$1.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);
  		var majorTickFont = parseFontOptions(optionMajorTicks);

  		var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;

  		var scaleLabelFontColor = helpers$1.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);
  		var scaleLabelFont = parseFontOptions(scaleLabel);
  		var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);
  		var labelRotationRadians = helpers$1.toRadians(me.labelRotation);

  		var itemsToDraw = [];

  		var axisWidth = me.options.gridLines.lineWidth;
  		var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;
  		var xTickEnd = options.position === 'right' ? me.left + tl : me.right;
  		var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;
  		var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;

  		helpers$1.each(ticks, function(tick, index) {
  			// autoskipper skipped this tick (#4635)
  			if (helpers$1.isNullOrUndef(tick.label)) {
  				return;
  			}

  			var label = tick.label;
  			var lineWidth, lineColor, borderDash, borderDashOffset;
  			if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {
  				// Draw the first index specially
  				lineWidth = gridLines.zeroLineWidth;
  				lineColor = gridLines.zeroLineColor;
  				borderDash = gridLines.zeroLineBorderDash;
  				borderDashOffset = gridLines.zeroLineBorderDashOffset;
  			} else {
  				lineWidth = helpers$1.valueAtIndexOrDefault(gridLines.lineWidth, index);
  				lineColor = helpers$1.valueAtIndexOrDefault(gridLines.color, index);
  				borderDash = helpers$1.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);
  				borderDashOffset = helpers$1.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);
  			}

  			// Common properties
  			var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;
  			var textAlign = 'middle';
  			var textBaseline = 'middle';
  			var tickPadding = optionTicks.padding;

  			if (isHorizontal) {
  				var labelYOffset = tl + tickPadding;

  				if (options.position === 'bottom') {
  					// bottom
  					textBaseline = !isRotated ? 'top' : 'middle';
  					textAlign = !isRotated ? 'center' : 'right';
  					labelY = me.top + labelYOffset;
  				} else {
  					// top
  					textBaseline = !isRotated ? 'bottom' : 'middle';
  					textAlign = !isRotated ? 'center' : 'left';
  					labelY = me.bottom - labelYOffset;
  				}

  				var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);
  				if (xLineValue < me.left) {
  					lineColor = 'rgba(0,0,0,0)';
  				}
  				xLineValue += helpers$1.aliasPixel(lineWidth);

  				labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)

  				tx1 = tx2 = x1 = x2 = xLineValue;
  				ty1 = yTickStart;
  				ty2 = yTickEnd;
  				y1 = chartArea.top;
  				y2 = chartArea.bottom + axisWidth;
  			} else {
  				var isLeft = options.position === 'left';
  				var labelXOffset;

  				if (optionTicks.mirror) {
  					textAlign = isLeft ? 'left' : 'right';
  					labelXOffset = tickPadding;
  				} else {
  					textAlign = isLeft ? 'right' : 'left';
  					labelXOffset = tl + tickPadding;
  				}

  				labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;

  				var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);
  				if (yLineValue < me.top) {
  					lineColor = 'rgba(0,0,0,0)';
  				}
  				yLineValue += helpers$1.aliasPixel(lineWidth);

  				labelY = me.getPixelForTick(index) + optionTicks.labelOffset;

  				tx1 = xTickStart;
  				tx2 = xTickEnd;
  				x1 = chartArea.left;
  				x2 = chartArea.right + axisWidth;
  				ty1 = ty2 = y1 = y2 = yLineValue;
  			}

  			itemsToDraw.push({
  				tx1: tx1,
  				ty1: ty1,
  				tx2: tx2,
  				ty2: ty2,
  				x1: x1,
  				y1: y1,
  				x2: x2,
  				y2: y2,
  				labelX: labelX,
  				labelY: labelY,
  				glWidth: lineWidth,
  				glColor: lineColor,
  				glBorderDash: borderDash,
  				glBorderDashOffset: borderDashOffset,
  				rotation: -1 * labelRotationRadians,
  				label: label,
  				major: tick.major,
  				textBaseline: textBaseline,
  				textAlign: textAlign
  			});
  		});

  		// Draw all of the tick labels, tick marks, and grid lines at the correct places
  		helpers$1.each(itemsToDraw, function(itemToDraw) {
  			if (gridLines.display) {
  				context.save();
  				context.lineWidth = itemToDraw.glWidth;
  				context.strokeStyle = itemToDraw.glColor;
  				if (context.setLineDash) {
  					context.setLineDash(itemToDraw.glBorderDash);
  					context.lineDashOffset = itemToDraw.glBorderDashOffset;
  				}

  				context.beginPath();

  				if (gridLines.drawTicks) {
  					context.moveTo(itemToDraw.tx1, itemToDraw.ty1);
  					context.lineTo(itemToDraw.tx2, itemToDraw.ty2);
  				}

  				if (gridLines.drawOnChartArea) {
  					context.moveTo(itemToDraw.x1, itemToDraw.y1);
  					context.lineTo(itemToDraw.x2, itemToDraw.y2);
  				}

  				context.stroke();
  				context.restore();
  			}

  			if (optionTicks.display) {
  				// Make sure we draw text in the correct color and font
  				context.save();
  				context.translate(itemToDraw.labelX, itemToDraw.labelY);
  				context.rotate(itemToDraw.rotation);
  				context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;
  				context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;
  				context.textBaseline = itemToDraw.textBaseline;
  				context.textAlign = itemToDraw.textAlign;

  				var label = itemToDraw.label;
  				if (helpers$1.isArray(label)) {
  					var lineCount = label.length;
  					var lineHeight = tickFont.size * 1.5;
  					var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;

  					for (var i = 0; i < lineCount; ++i) {
  						// We just make sure the multiline element is a string here..
  						context.fillText('' + label[i], 0, y);
  						// apply same lineSpacing as calculated @ L#320
  						y += lineHeight;
  					}
  				} else {
  					context.fillText(label, 0, 0);
  				}
  				context.restore();
  			}
  		});

  		if (scaleLabel.display) {
  			// Draw the scale label
  			var scaleLabelX;
  			var scaleLabelY;
  			var rotation = 0;
  			var halfLineHeight = parseLineHeight(scaleLabel) / 2;

  			if (isHorizontal) {
  				scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width
  				scaleLabelY = options.position === 'bottom'
  					? me.bottom - halfLineHeight - scaleLabelPadding.bottom
  					: me.top + halfLineHeight + scaleLabelPadding.top;
  			} else {
  				var isLeft = options.position === 'left';
  				scaleLabelX = isLeft
  					? me.left + halfLineHeight + scaleLabelPadding.top
  					: me.right - halfLineHeight - scaleLabelPadding.top;
  				scaleLabelY = me.top + ((me.bottom - me.top) / 2);
  				rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
  			}

  			context.save();
  			context.translate(scaleLabelX, scaleLabelY);
  			context.rotate(rotation);
  			context.textAlign = 'center';
  			context.textBaseline = 'middle';
  			context.fillStyle = scaleLabelFontColor; // render in correct colour
  			context.font = scaleLabelFont.font;
  			context.fillText(scaleLabel.labelString, 0, 0);
  			context.restore();
  		}

  		if (gridLines.drawBorder) {
  			// Draw the line at the edge of the axis
  			context.lineWidth = helpers$1.valueAtIndexOrDefault(gridLines.lineWidth, 0);
  			context.strokeStyle = helpers$1.valueAtIndexOrDefault(gridLines.color, 0);
  			var x1 = me.left;
  			var x2 = me.right + axisWidth;
  			var y1 = me.top;
  			var y2 = me.bottom + axisWidth;

  			var aliasPixel = helpers$1.aliasPixel(context.lineWidth);
  			if (isHorizontal) {
  				y1 = y2 = options.position === 'top' ? me.bottom : me.top;
  				y1 += aliasPixel;
  				y2 += aliasPixel;
  			} else {
  				x1 = x2 = options.position === 'left' ? me.right : me.left;
  				x1 += aliasPixel;
  				x2 += aliasPixel;
  			}

  			context.beginPath();
  			context.moveTo(x1, y1);
  			context.lineTo(x2, y2);
  			context.stroke();
  		}
  	}
  });

  var core_tooltip = createCommonjsModule$1(function (module) {





  core_defaults._set('global', {
  	tooltips: {
  		enabled: true,
  		custom: null,
  		mode: 'nearest',
  		position: 'average',
  		intersect: true,
  		backgroundColor: 'rgba(0,0,0,0.8)',
  		titleFontStyle: 'bold',
  		titleSpacing: 2,
  		titleMarginBottom: 6,
  		titleFontColor: '#fff',
  		titleAlign: 'left',
  		bodySpacing: 2,
  		bodyFontColor: '#fff',
  		bodyAlign: 'left',
  		footerFontStyle: 'bold',
  		footerSpacing: 2,
  		footerMarginTop: 6,
  		footerFontColor: '#fff',
  		footerAlign: 'left',
  		yPadding: 6,
  		xPadding: 6,
  		caretPadding: 2,
  		caretSize: 5,
  		cornerRadius: 6,
  		multiKeyBackground: '#fff',
  		displayColors: true,
  		borderColor: 'rgba(0,0,0,0)',
  		borderWidth: 0,
  		callbacks: {
  			// Args are: (tooltipItems, data)
  			beforeTitle: helpers$1.noop,
  			title: function(tooltipItems, data) {
  				// Pick first xLabel for now
  				var title = '';
  				var labels = data.labels;
  				var labelCount = labels ? labels.length : 0;

  				if (tooltipItems.length > 0) {
  					var item = tooltipItems[0];

  					if (item.xLabel) {
  						title = item.xLabel;
  					} else if (labelCount > 0 && item.index < labelCount) {
  						title = labels[item.index];
  					}
  				}

  				return title;
  			},
  			afterTitle: helpers$1.noop,

  			// Args are: (tooltipItems, data)
  			beforeBody: helpers$1.noop,

  			// Args are: (tooltipItem, data)
  			beforeLabel: helpers$1.noop,
  			label: function(tooltipItem, data) {
  				var label = data.datasets[tooltipItem.datasetIndex].label || '';

  				if (label) {
  					label += ': ';
  				}
  				label += tooltipItem.yLabel;
  				return label;
  			},
  			labelColor: function(tooltipItem, chart) {
  				var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);
  				var activeElement = meta.data[tooltipItem.index];
  				var view = activeElement._view;
  				return {
  					borderColor: view.borderColor,
  					backgroundColor: view.backgroundColor
  				};
  			},
  			labelTextColor: function() {
  				return this._options.bodyFontColor;
  			},
  			afterLabel: helpers$1.noop,

  			// Args are: (tooltipItems, data)
  			afterBody: helpers$1.noop,

  			// Args are: (tooltipItems, data)
  			beforeFooter: helpers$1.noop,
  			footer: helpers$1.noop,
  			afterFooter: helpers$1.noop
  		}
  	}
  });

  var positioners = {
  	/**
  	 * Average mode places the tooltip at the average position of the elements shown
  	 * @function Chart.Tooltip.positioners.average
  	 * @param elements {ChartElement[]} the elements being displayed in the tooltip
  	 * @returns {Point} tooltip position
  	 */
  	average: function(elements) {
  		if (!elements.length) {
  			return false;
  		}

  		var i, len;
  		var x = 0;
  		var y = 0;
  		var count = 0;

  		for (i = 0, len = elements.length; i < len; ++i) {
  			var el = elements[i];
  			if (el && el.hasValue()) {
  				var pos = el.tooltipPosition();
  				x += pos.x;
  				y += pos.y;
  				++count;
  			}
  		}

  		return {
  			x: Math.round(x / count),
  			y: Math.round(y / count)
  		};
  	},

  	/**
  	 * Gets the tooltip position nearest of the item nearest to the event position
  	 * @function Chart.Tooltip.positioners.nearest
  	 * @param elements {Chart.Element[]} the tooltip elements
  	 * @param eventPosition {Point} the position of the event in canvas coordinates
  	 * @returns {Point} the tooltip position
  	 */
  	nearest: function(elements, eventPosition) {
  		var x = eventPosition.x;
  		var y = eventPosition.y;
  		var minDistance = Number.POSITIVE_INFINITY;
  		var i, len, nearestElement;

  		for (i = 0, len = elements.length; i < len; ++i) {
  			var el = elements[i];
  			if (el && el.hasValue()) {
  				var center = el.getCenterPoint();
  				var d = helpers$1.distanceBetweenPoints(eventPosition, center);

  				if (d < minDistance) {
  					minDistance = d;
  					nearestElement = el;
  				}
  			}
  		}

  		if (nearestElement) {
  			var tp = nearestElement.tooltipPosition();
  			x = tp.x;
  			y = tp.y;
  		}

  		return {
  			x: x,
  			y: y
  		};
  	}
  };

  /**
   * Helper method to merge the opacity into a color
   */
  function mergeOpacity(colorString, opacity) {
  	var color = helpers$1.color(colorString);
  	return color.alpha(opacity * color.alpha()).rgbaString();
  }

  // Helper to push or concat based on if the 2nd parameter is an array or not
  function pushOrConcat(base, toPush) {
  	if (toPush) {
  		if (helpers$1.isArray(toPush)) {
  			// base = base.concat(toPush);
  			Array.prototype.push.apply(base, toPush);
  		} else {
  			base.push(toPush);
  		}
  	}

  	return base;
  }

  /**
   * Returns array of strings split by newline
   * @param {String} value - The value to split by newline.
   * @returns {Array} value if newline present - Returned from String split() method
   * @function
   */
  function splitNewlines(str) {
  	if ((typeof str === 'string' || str instanceof String) && str.indexOf('\n') > -1) {
  		return str.split('\n');
  	}
  	return str;
  }


  // Private helper to create a tooltip item model
  // @param element : the chart element (point, arc, bar) to create the tooltip item for
  // @return : new tooltip item
  function createTooltipItem(element) {
  	var xScale = element._xScale;
  	var yScale = element._yScale || element._scale; // handle radar || polarArea charts
  	var index = element._index;
  	var datasetIndex = element._datasetIndex;

  	return {
  		xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
  		yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
  		index: index,
  		datasetIndex: datasetIndex,
  		x: element._model.x,
  		y: element._model.y
  	};
  }

  /**
   * Helper to get the reset model for the tooltip
   * @param tooltipOpts {Object} the tooltip options
   */
  function getBaseModel(tooltipOpts) {
  	var globalDefaults = core_defaults.global;
  	var valueOrDefault = helpers$1.valueOrDefault;

  	return {
  		// Positioning
  		xPadding: tooltipOpts.xPadding,
  		yPadding: tooltipOpts.yPadding,
  		xAlign: tooltipOpts.xAlign,
  		yAlign: tooltipOpts.yAlign,

  		// Body
  		bodyFontColor: tooltipOpts.bodyFontColor,
  		_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
  		_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
  		_bodyAlign: tooltipOpts.bodyAlign,
  		bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
  		bodySpacing: tooltipOpts.bodySpacing,

  		// Title
  		titleFontColor: tooltipOpts.titleFontColor,
  		_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
  		_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
  		titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
  		_titleAlign: tooltipOpts.titleAlign,
  		titleSpacing: tooltipOpts.titleSpacing,
  		titleMarginBottom: tooltipOpts.titleMarginBottom,

  		// Footer
  		footerFontColor: tooltipOpts.footerFontColor,
  		_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
  		_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
  		footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
  		_footerAlign: tooltipOpts.footerAlign,
  		footerSpacing: tooltipOpts.footerSpacing,
  		footerMarginTop: tooltipOpts.footerMarginTop,

  		// Appearance
  		caretSize: tooltipOpts.caretSize,
  		cornerRadius: tooltipOpts.cornerRadius,
  		backgroundColor: tooltipOpts.backgroundColor,
  		opacity: 0,
  		legendColorBackground: tooltipOpts.multiKeyBackground,
  		displayColors: tooltipOpts.displayColors,
  		borderColor: tooltipOpts.borderColor,
  		borderWidth: tooltipOpts.borderWidth
  	};
  }

  /**
   * Get the size of the tooltip
   */
  function getTooltipSize(tooltip, model) {
  	var ctx = tooltip._chart.ctx;

  	var height = model.yPadding * 2; // Tooltip Padding
  	var width = 0;

  	// Count of all lines in the body
  	var body = model.body;
  	var combinedBodyLength = body.reduce(function(count, bodyItem) {
  		return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;
  	}, 0);
  	combinedBodyLength += model.beforeBody.length + model.afterBody.length;

  	var titleLineCount = model.title.length;
  	var footerLineCount = model.footer.length;
  	var titleFontSize = model.titleFontSize;
  	var bodyFontSize = model.bodyFontSize;
  	var footerFontSize = model.footerFontSize;

  	height += titleLineCount * titleFontSize; // Title Lines
  	height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing
  	height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin
  	height += combinedBodyLength * bodyFontSize; // Body Lines
  	height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing
  	height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin
  	height += footerLineCount * (footerFontSize); // Footer Lines
  	height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing

  	// Title width
  	var widthPadding = 0;
  	var maxLineWidth = function(line) {
  		width = Math.max(width, ctx.measureText(line).width + widthPadding);
  	};

  	ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
  	helpers$1.each(model.title, maxLineWidth);

  	// Body width
  	ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
  	helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);

  	// Body lines may include some extra width due to the color box
  	widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;
  	helpers$1.each(body, function(bodyItem) {
  		helpers$1.each(bodyItem.before, maxLineWidth);
  		helpers$1.each(bodyItem.lines, maxLineWidth);
  		helpers$1.each(bodyItem.after, maxLineWidth);
  	});

  	// Reset back to 0
  	widthPadding = 0;

  	// Footer width
  	ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
  	helpers$1.each(model.footer, maxLineWidth);

  	// Add padding
  	width += 2 * model.xPadding;

  	return {
  		width: width,
  		height: height
  	};
  }

  /**
   * Helper to get the alignment of a tooltip given the size
   */
  function determineAlignment(tooltip, size) {
  	var model = tooltip._model;
  	var chart = tooltip._chart;
  	var chartArea = tooltip._chart.chartArea;
  	var xAlign = 'center';
  	var yAlign = 'center';

  	if (model.y < size.height) {
  		yAlign = 'top';
  	} else if (model.y > (chart.height - size.height)) {
  		yAlign = 'bottom';
  	}

  	var lf, rf; // functions to determine left, right alignment
  	var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart
  	var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges
  	var midX = (chartArea.left + chartArea.right) / 2;
  	var midY = (chartArea.top + chartArea.bottom) / 2;

  	if (yAlign === 'center') {
  		lf = function(x) {
  			return x <= midX;
  		};
  		rf = function(x) {
  			return x > midX;
  		};
  	} else {
  		lf = function(x) {
  			return x <= (size.width / 2);
  		};
  		rf = function(x) {
  			return x >= (chart.width - (size.width / 2));
  		};
  	}

  	olf = function(x) {
  		return x + size.width + model.caretSize + model.caretPadding > chart.width;
  	};
  	orf = function(x) {
  		return x - size.width - model.caretSize - model.caretPadding < 0;
  	};
  	yf = function(y) {
  		return y <= midY ? 'top' : 'bottom';
  	};

  	if (lf(model.x)) {
  		xAlign = 'left';

  		// Is tooltip too wide and goes over the right side of the chart.?
  		if (olf(model.x)) {
  			xAlign = 'center';
  			yAlign = yf(model.y);
  		}
  	} else if (rf(model.x)) {
  		xAlign = 'right';

  		// Is tooltip too wide and goes outside left edge of canvas?
  		if (orf(model.x)) {
  			xAlign = 'center';
  			yAlign = yf(model.y);
  		}
  	}

  	var opts = tooltip._options;
  	return {
  		xAlign: opts.xAlign ? opts.xAlign : xAlign,
  		yAlign: opts.yAlign ? opts.yAlign : yAlign
  	};
  }

  /**
   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment
   */
  function getBackgroundPoint(vm, size, alignment, chart) {
  	// Background Position
  	var x = vm.x;
  	var y = vm.y;

  	var caretSize = vm.caretSize;
  	var caretPadding = vm.caretPadding;
  	var cornerRadius = vm.cornerRadius;
  	var xAlign = alignment.xAlign;
  	var yAlign = alignment.yAlign;
  	var paddingAndSize = caretSize + caretPadding;
  	var radiusAndPadding = cornerRadius + caretPadding;

  	if (xAlign === 'right') {
  		x -= size.width;
  	} else if (xAlign === 'center') {
  		x -= (size.width / 2);
  		if (x + size.width > chart.width) {
  			x = chart.width - size.width;
  		}
  		if (x < 0) {
  			x = 0;
  		}
  	}

  	if (yAlign === 'top') {
  		y += paddingAndSize;
  	} else if (yAlign === 'bottom') {
  		y -= size.height + paddingAndSize;
  	} else {
  		y -= (size.height / 2);
  	}

  	if (yAlign === 'center') {
  		if (xAlign === 'left') {
  			x += paddingAndSize;
  		} else if (xAlign === 'right') {
  			x -= paddingAndSize;
  		}
  	} else if (xAlign === 'left') {
  		x -= radiusAndPadding;
  	} else if (xAlign === 'right') {
  		x += radiusAndPadding;
  	}

  	return {
  		x: x,
  		y: y
  	};
  }

  /**
   * Helper to build before and after body lines
   */
  function getBeforeAfterBodyLines(callback) {
  	return pushOrConcat([], splitNewlines(callback));
  }

  var exports = module.exports = core_element.extend({
  	initialize: function() {
  		this._model = getBaseModel(this._options);
  		this._lastActive = [];
  	},

  	// Get the title
  	// Args are: (tooltipItem, data)
  	getTitle: function() {
  		var me = this;
  		var opts = me._options;
  		var callbacks = opts.callbacks;

  		var beforeTitle = callbacks.beforeTitle.apply(me, arguments);
  		var title = callbacks.title.apply(me, arguments);
  		var afterTitle = callbacks.afterTitle.apply(me, arguments);

  		var lines = [];
  		lines = pushOrConcat(lines, splitNewlines(beforeTitle));
  		lines = pushOrConcat(lines, splitNewlines(title));
  		lines = pushOrConcat(lines, splitNewlines(afterTitle));

  		return lines;
  	},

  	// Args are: (tooltipItem, data)
  	getBeforeBody: function() {
  		return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));
  	},

  	// Args are: (tooltipItem, data)
  	getBody: function(tooltipItems, data) {
  		var me = this;
  		var callbacks = me._options.callbacks;
  		var bodyItems = [];

  		helpers$1.each(tooltipItems, function(tooltipItem) {
  			var bodyItem = {
  				before: [],
  				lines: [],
  				after: []
  			};
  			pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));
  			pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
  			pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));

  			bodyItems.push(bodyItem);
  		});

  		return bodyItems;
  	},

  	// Args are: (tooltipItem, data)
  	getAfterBody: function() {
  		return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));
  	},

  	// Get the footer and beforeFooter and afterFooter lines
  	// Args are: (tooltipItem, data)
  	getFooter: function() {
  		var me = this;
  		var callbacks = me._options.callbacks;

  		var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
  		var footer = callbacks.footer.apply(me, arguments);
  		var afterFooter = callbacks.afterFooter.apply(me, arguments);

  		var lines = [];
  		lines = pushOrConcat(lines, splitNewlines(beforeFooter));
  		lines = pushOrConcat(lines, splitNewlines(footer));
  		lines = pushOrConcat(lines, splitNewlines(afterFooter));

  		return lines;
  	},

  	update: function(changed) {
  		var me = this;
  		var opts = me._options;

  		// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition
  		// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time
  		// which breaks any animations.
  		var existingModel = me._model;
  		var model = me._model = getBaseModel(opts);
  		var active = me._active;

  		var data = me._data;

  		// In the case where active.length === 0 we need to keep these at existing values for good animations
  		var alignment = {
  			xAlign: existingModel.xAlign,
  			yAlign: existingModel.yAlign
  		};
  		var backgroundPoint = {
  			x: existingModel.x,
  			y: existingModel.y
  		};
  		var tooltipSize = {
  			width: existingModel.width,
  			height: existingModel.height
  		};
  		var tooltipPosition = {
  			x: existingModel.caretX,
  			y: existingModel.caretY
  		};

  		var i, len;

  		if (active.length) {
  			model.opacity = 1;

  			var labelColors = [];
  			var labelTextColors = [];
  			tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);

  			var tooltipItems = [];
  			for (i = 0, len = active.length; i < len; ++i) {
  				tooltipItems.push(createTooltipItem(active[i]));
  			}

  			// If the user provided a filter function, use it to modify the tooltip items
  			if (opts.filter) {
  				tooltipItems = tooltipItems.filter(function(a) {
  					return opts.filter(a, data);
  				});
  			}

  			// If the user provided a sorting function, use it to modify the tooltip items
  			if (opts.itemSort) {
  				tooltipItems = tooltipItems.sort(function(a, b) {
  					return opts.itemSort(a, b, data);
  				});
  			}

  			// Determine colors for boxes
  			helpers$1.each(tooltipItems, function(tooltipItem) {
  				labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));
  				labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));
  			});


  			// Build the Text Lines
  			model.title = me.getTitle(tooltipItems, data);
  			model.beforeBody = me.getBeforeBody(tooltipItems, data);
  			model.body = me.getBody(tooltipItems, data);
  			model.afterBody = me.getAfterBody(tooltipItems, data);
  			model.footer = me.getFooter(tooltipItems, data);

  			// Initial positioning and colors
  			model.x = Math.round(tooltipPosition.x);
  			model.y = Math.round(tooltipPosition.y);
  			model.caretPadding = opts.caretPadding;
  			model.labelColors = labelColors;
  			model.labelTextColors = labelTextColors;

  			// data points
  			model.dataPoints = tooltipItems;

  			// We need to determine alignment of the tooltip
  			tooltipSize = getTooltipSize(this, model);
  			alignment = determineAlignment(this, tooltipSize);
  			// Final Size and Position
  			backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);
  		} else {
  			model.opacity = 0;
  		}

  		model.xAlign = alignment.xAlign;
  		model.yAlign = alignment.yAlign;
  		model.x = backgroundPoint.x;
  		model.y = backgroundPoint.y;
  		model.width = tooltipSize.width;
  		model.height = tooltipSize.height;

  		// Point where the caret on the tooltip points to
  		model.caretX = tooltipPosition.x;
  		model.caretY = tooltipPosition.y;

  		me._model = model;

  		if (changed && opts.custom) {
  			opts.custom.call(me, model);
  		}

  		return me;
  	},

  	drawCaret: function(tooltipPoint, size) {
  		var ctx = this._chart.ctx;
  		var vm = this._view;
  		var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);

  		ctx.lineTo(caretPosition.x1, caretPosition.y1);
  		ctx.lineTo(caretPosition.x2, caretPosition.y2);
  		ctx.lineTo(caretPosition.x3, caretPosition.y3);
  	},
  	getCaretPosition: function(tooltipPoint, size, vm) {
  		var x1, x2, x3, y1, y2, y3;
  		var caretSize = vm.caretSize;
  		var cornerRadius = vm.cornerRadius;
  		var xAlign = vm.xAlign;
  		var yAlign = vm.yAlign;
  		var ptX = tooltipPoint.x;
  		var ptY = tooltipPoint.y;
  		var width = size.width;
  		var height = size.height;

  		if (yAlign === 'center') {
  			y2 = ptY + (height / 2);

  			if (xAlign === 'left') {
  				x1 = ptX;
  				x2 = x1 - caretSize;
  				x3 = x1;

  				y1 = y2 + caretSize;
  				y3 = y2 - caretSize;
  			} else {
  				x1 = ptX + width;
  				x2 = x1 + caretSize;
  				x3 = x1;

  				y1 = y2 - caretSize;
  				y3 = y2 + caretSize;
  			}
  		} else {
  			if (xAlign === 'left') {
  				x2 = ptX + cornerRadius + (caretSize);
  				x1 = x2 - caretSize;
  				x3 = x2 + caretSize;
  			} else if (xAlign === 'right') {
  				x2 = ptX + width - cornerRadius - caretSize;
  				x1 = x2 - caretSize;
  				x3 = x2 + caretSize;
  			} else {
  				x2 = vm.caretX;
  				x1 = x2 - caretSize;
  				x3 = x2 + caretSize;
  			}
  			if (yAlign === 'top') {
  				y1 = ptY;
  				y2 = y1 - caretSize;
  				y3 = y1;
  			} else {
  				y1 = ptY + height;
  				y2 = y1 + caretSize;
  				y3 = y1;
  				// invert drawing order
  				var tmp = x3;
  				x3 = x1;
  				x1 = tmp;
  			}
  		}
  		return {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};
  	},

  	drawTitle: function(pt, vm, ctx, opacity) {
  		var title = vm.title;

  		if (title.length) {
  			ctx.textAlign = vm._titleAlign;
  			ctx.textBaseline = 'top';

  			var titleFontSize = vm.titleFontSize;
  			var titleSpacing = vm.titleSpacing;

  			ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);
  			ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);

  			var i, len;
  			for (i = 0, len = title.length; i < len; ++i) {
  				ctx.fillText(title[i], pt.x, pt.y);
  				pt.y += titleFontSize + titleSpacing; // Line Height and spacing

  				if (i + 1 === title.length) {
  					pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
  				}
  			}
  		}
  	},

  	drawBody: function(pt, vm, ctx, opacity) {
  		var bodyFontSize = vm.bodyFontSize;
  		var bodySpacing = vm.bodySpacing;
  		var body = vm.body;

  		ctx.textAlign = vm._bodyAlign;
  		ctx.textBaseline = 'top';
  		ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);

  		// Before Body
  		var xLinePadding = 0;
  		var fillLineOfText = function(line) {
  			ctx.fillText(line, pt.x + xLinePadding, pt.y);
  			pt.y += bodyFontSize + bodySpacing;
  		};

  		// Before body lines
  		ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);
  		helpers$1.each(vm.beforeBody, fillLineOfText);

  		var drawColorBoxes = vm.displayColors;
  		xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;

  		// Draw body lines now
  		helpers$1.each(body, function(bodyItem, i) {
  			var textColor = mergeOpacity(vm.labelTextColors[i], opacity);
  			ctx.fillStyle = textColor;
  			helpers$1.each(bodyItem.before, fillLineOfText);

  			helpers$1.each(bodyItem.lines, function(line) {
  				// Draw Legend-like boxes if needed
  				if (drawColorBoxes) {
  					// Fill a white rect so that colours merge nicely if the opacity is < 1
  					ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);
  					ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

  					// Border
  					ctx.lineWidth = 1;
  					ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);
  					ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);

  					// Inner square
  					ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);
  					ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);
  					ctx.fillStyle = textColor;
  				}

  				fillLineOfText(line);
  			});

  			helpers$1.each(bodyItem.after, fillLineOfText);
  		});

  		// Reset back to 0 for after body
  		xLinePadding = 0;

  		// After body lines
  		helpers$1.each(vm.afterBody, fillLineOfText);
  		pt.y -= bodySpacing; // Remove last body spacing
  	},

  	drawFooter: function(pt, vm, ctx, opacity) {
  		var footer = vm.footer;

  		if (footer.length) {
  			pt.y += vm.footerMarginTop;

  			ctx.textAlign = vm._footerAlign;
  			ctx.textBaseline = 'top';

  			ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);
  			ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);

  			helpers$1.each(footer, function(line) {
  				ctx.fillText(line, pt.x, pt.y);
  				pt.y += vm.footerFontSize + vm.footerSpacing;
  			});
  		}
  	},

  	drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {
  		ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);
  		ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);
  		ctx.lineWidth = vm.borderWidth;
  		var xAlign = vm.xAlign;
  		var yAlign = vm.yAlign;
  		var x = pt.x;
  		var y = pt.y;
  		var width = tooltipSize.width;
  		var height = tooltipSize.height;
  		var radius = vm.cornerRadius;

  		ctx.beginPath();
  		ctx.moveTo(x + radius, y);
  		if (yAlign === 'top') {
  			this.drawCaret(pt, tooltipSize);
  		}
  		ctx.lineTo(x + width - radius, y);
  		ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
  		if (yAlign === 'center' && xAlign === 'right') {
  			this.drawCaret(pt, tooltipSize);
  		}
  		ctx.lineTo(x + width, y + height - radius);
  		ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
  		if (yAlign === 'bottom') {
  			this.drawCaret(pt, tooltipSize);
  		}
  		ctx.lineTo(x + radius, y + height);
  		ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
  		if (yAlign === 'center' && xAlign === 'left') {
  			this.drawCaret(pt, tooltipSize);
  		}
  		ctx.lineTo(x, y + radius);
  		ctx.quadraticCurveTo(x, y, x + radius, y);
  		ctx.closePath();

  		ctx.fill();

  		if (vm.borderWidth > 0) {
  			ctx.stroke();
  		}
  	},

  	draw: function() {
  		var ctx = this._chart.ctx;
  		var vm = this._view;

  		if (vm.opacity === 0) {
  			return;
  		}

  		var tooltipSize = {
  			width: vm.width,
  			height: vm.height
  		};
  		var pt = {
  			x: vm.x,
  			y: vm.y
  		};

  		// IE11/Edge does not like very small opacities, so snap to 0
  		var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;

  		// Truthy/falsey value for empty tooltip
  		var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;

  		if (this._options.enabled && hasTooltipContent) {
  			// Draw Background
  			this.drawBackground(pt, vm, ctx, tooltipSize, opacity);

  			// Draw Title, Body, and Footer
  			pt.x += vm.xPadding;
  			pt.y += vm.yPadding;

  			// Titles
  			this.drawTitle(pt, vm, ctx, opacity);

  			// Body
  			this.drawBody(pt, vm, ctx, opacity);

  			// Footer
  			this.drawFooter(pt, vm, ctx, opacity);
  		}
  	},

  	/**
  	 * Handle an event
  	 * @private
  	 * @param {IEvent} event - The event to handle
  	 * @returns {Boolean} true if the tooltip changed
  	 */
  	handleEvent: function(e) {
  		var me = this;
  		var options = me._options;
  		var changed = false;

  		me._lastActive = me._lastActive || [];

  		// Find Active Elements for tooltips
  		if (e.type === 'mouseout') {
  			me._active = [];
  		} else {
  			me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);
  		}

  		// Remember Last Actives
  		changed = !helpers$1.arrayEquals(me._active, me._lastActive);

  		// Only handle target event on tooltip change
  		if (changed) {
  			me._lastActive = me._active;

  			if (options.enabled || options.custom) {
  				me._eventPosition = {
  					x: e.x,
  					y: e.y
  				};

  				me.update(true);
  				me.pivot();
  			}
  		}

  		return changed;
  	}
  });

  /**
   * @namespace Chart.Tooltip.positioners
   */
  exports.positioners = positioners;
  });

  var core_controller = function(Chart) {

  	// Create a dictionary of chart types, to allow for extension of existing types
  	Chart.types = {};

  	// Store a reference to each instance - allowing us to globally resize chart instances on window resize.
  	// Destroy method on the chart will remove the instance of the chart from this reference.
  	Chart.instances = {};

  	// Controllers available for dataset visualization eg. bar, line, slice, etc.
  	Chart.controllers = {};

  	/**
  	 * Initializes the given config with global and chart default values.
  	 */
  	function initConfig(config) {
  		config = config || {};

  		// Do NOT use configMerge() for the data object because this method merges arrays
  		// and so would change references to labels and datasets, preventing data updates.
  		var data = config.data = config.data || {};
  		data.datasets = data.datasets || [];
  		data.labels = data.labels || [];

  		config.options = helpers$1.configMerge(
  			core_defaults.global,
  			core_defaults[config.type],
  			config.options || {});

  		return config;
  	}

  	/**
  	 * Updates the config of the chart
  	 * @param chart {Chart} chart to update the options for
  	 */
  	function updateConfig(chart) {
  		var newOptions = chart.options;

  		helpers$1.each(chart.scales, function(scale) {
  			core_layouts.removeBox(chart, scale);
  		});

  		newOptions = helpers$1.configMerge(
  			Chart.defaults.global,
  			Chart.defaults[chart.config.type],
  			newOptions);

  		chart.options = chart.config.options = newOptions;
  		chart.ensureScalesHaveIDs();
  		chart.buildOrUpdateScales();
  		// Tooltip
  		chart.tooltip._options = newOptions.tooltips;
  		chart.tooltip.initialize();
  	}

  	function positionIsHorizontal(position) {
  		return position === 'top' || position === 'bottom';
  	}

  	helpers$1.extend(Chart.prototype, /** @lends Chart */ {
  		/**
  		 * @private
  		 */
  		construct: function(item, config) {
  			var me = this;

  			config = initConfig(config);

  			var context = platform.acquireContext(item, config);
  			var canvas = context && context.canvas;
  			var height = canvas && canvas.height;
  			var width = canvas && canvas.width;

  			me.id = helpers$1.uid();
  			me.ctx = context;
  			me.canvas = canvas;
  			me.config = config;
  			me.width = width;
  			me.height = height;
  			me.aspectRatio = height ? width / height : null;
  			me.options = config.options;
  			me._bufferedRender = false;

  			/**
  			 * Provided for backward compatibility, Chart and Chart.Controller have been merged,
  			 * the "instance" still need to be defined since it might be called from plugins.
  			 * @prop Chart#chart
  			 * @deprecated since version 2.6.0
  			 * @todo remove at version 3
  			 * @private
  			 */
  			me.chart = me;
  			me.controller = me; // chart.chart.controller #inception

  			// Add the chart instance to the global namespace
  			Chart.instances[me.id] = me;

  			// Define alias to the config data: `chart.data === chart.config.data`
  			Object.defineProperty(me, 'data', {
  				get: function() {
  					return me.config.data;
  				},
  				set: function(value) {
  					me.config.data = value;
  				}
  			});

  			if (!context || !canvas) {
  				// The given item is not a compatible context2d element, let's return before finalizing
  				// the chart initialization but after setting basic chart / controller properties that
  				// can help to figure out that the chart is not valid (e.g chart.canvas !== null);
  				// https://github.com/chartjs/Chart.js/issues/2807
  				console.error("Failed to create chart: can't acquire context from the given item");
  				return;
  			}

  			me.initialize();
  			me.update();
  		},

  		/**
  		 * @private
  		 */
  		initialize: function() {
  			var me = this;

  			// Before init plugin notification
  			core_plugins.notify(me, 'beforeInit');

  			helpers$1.retinaScale(me, me.options.devicePixelRatio);

  			me.bindEvents();

  			if (me.options.responsive) {
  				// Initial resize before chart draws (must be silent to preserve initial animations).
  				me.resize(true);
  			}

  			// Make sure scales have IDs and are built before we build any controllers.
  			me.ensureScalesHaveIDs();
  			me.buildOrUpdateScales();
  			me.initToolTip();

  			// After init plugin notification
  			core_plugins.notify(me, 'afterInit');

  			return me;
  		},

  		clear: function() {
  			helpers$1.canvas.clear(this);
  			return this;
  		},

  		stop: function() {
  			// Stops any current animation loop occurring
  			core_animations.cancelAnimation(this);
  			return this;
  		},

  		resize: function(silent) {
  			var me = this;
  			var options = me.options;
  			var canvas = me.canvas;
  			var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;

  			// the canvas render width and height will be casted to integers so make sure that
  			// the canvas display style uses the same integer values to avoid blurring effect.

  			// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed
  			var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));
  			var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));

  			if (me.width === newWidth && me.height === newHeight) {
  				return;
  			}

  			canvas.width = me.width = newWidth;
  			canvas.height = me.height = newHeight;
  			canvas.style.width = newWidth + 'px';
  			canvas.style.height = newHeight + 'px';

  			helpers$1.retinaScale(me, options.devicePixelRatio);

  			if (!silent) {
  				// Notify any plugins about the resize
  				var newSize = {width: newWidth, height: newHeight};
  				core_plugins.notify(me, 'resize', [newSize]);

  				// Notify of resize
  				if (me.options.onResize) {
  					me.options.onResize(me, newSize);
  				}

  				me.stop();
  				me.update({
  					duration: me.options.responsiveAnimationDuration
  				});
  			}
  		},

  		ensureScalesHaveIDs: function() {
  			var options = this.options;
  			var scalesOptions = options.scales || {};
  			var scaleOptions = options.scale;

  			helpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {
  				xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);
  			});

  			helpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {
  				yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);
  			});

  			if (scaleOptions) {
  				scaleOptions.id = scaleOptions.id || 'scale';
  			}
  		},

  		/**
  		 * Builds a map of scale ID to scale object for future lookup.
  		 */
  		buildOrUpdateScales: function() {
  			var me = this;
  			var options = me.options;
  			var scales = me.scales || {};
  			var items = [];
  			var updated = Object.keys(scales).reduce(function(obj, id) {
  				obj[id] = false;
  				return obj;
  			}, {});

  			if (options.scales) {
  				items = items.concat(
  					(options.scales.xAxes || []).map(function(xAxisOptions) {
  						return {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};
  					}),
  					(options.scales.yAxes || []).map(function(yAxisOptions) {
  						return {options: yAxisOptions, dtype: 'linear', dposition: 'left'};
  					})
  				);
  			}

  			if (options.scale) {
  				items.push({
  					options: options.scale,
  					dtype: 'radialLinear',
  					isDefault: true,
  					dposition: 'chartArea'
  				});
  			}

  			helpers$1.each(items, function(item) {
  				var scaleOptions = item.options;
  				var id = scaleOptions.id;
  				var scaleType = helpers$1.valueOrDefault(scaleOptions.type, item.dtype);

  				if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {
  					scaleOptions.position = item.dposition;
  				}

  				updated[id] = true;
  				var scale = null;
  				if (id in scales && scales[id].type === scaleType) {
  					scale = scales[id];
  					scale.options = scaleOptions;
  					scale.ctx = me.ctx;
  					scale.chart = me;
  				} else {
  					var scaleClass = core_scaleService.getScaleConstructor(scaleType);
  					if (!scaleClass) {
  						return;
  					}
  					scale = new scaleClass({
  						id: id,
  						type: scaleType,
  						options: scaleOptions,
  						ctx: me.ctx,
  						chart: me
  					});
  					scales[scale.id] = scale;
  				}

  				scale.mergeTicksOptions();

  				// TODO(SB): I think we should be able to remove this custom case (options.scale)
  				// and consider it as a regular scale part of the "scales"" map only! This would
  				// make the logic easier and remove some useless? custom code.
  				if (item.isDefault) {
  					me.scale = scale;
  				}
  			});
  			// clear up discarded scales
  			helpers$1.each(updated, function(hasUpdated, id) {
  				if (!hasUpdated) {
  					delete scales[id];
  				}
  			});

  			me.scales = scales;

  			core_scaleService.addScalesToLayout(this);
  		},

  		buildOrUpdateControllers: function() {
  			var me = this;
  			var types = [];
  			var newControllers = [];

  			helpers$1.each(me.data.datasets, function(dataset, datasetIndex) {
  				var meta = me.getDatasetMeta(datasetIndex);
  				var type = dataset.type || me.config.type;

  				if (meta.type && meta.type !== type) {
  					me.destroyDatasetMeta(datasetIndex);
  					meta = me.getDatasetMeta(datasetIndex);
  				}
  				meta.type = type;

  				types.push(meta.type);

  				if (meta.controller) {
  					meta.controller.updateIndex(datasetIndex);
  					meta.controller.linkScales();
  				} else {
  					var ControllerClass = Chart.controllers[meta.type];
  					if (ControllerClass === undefined) {
  						throw new Error('"' + meta.type + '" is not a chart type.');
  					}

  					meta.controller = new ControllerClass(me, datasetIndex);
  					newControllers.push(meta.controller);
  				}
  			}, me);

  			return newControllers;
  		},

  		/**
  		 * Reset the elements of all datasets
  		 * @private
  		 */
  		resetElements: function() {
  			var me = this;
  			helpers$1.each(me.data.datasets, function(dataset, datasetIndex) {
  				me.getDatasetMeta(datasetIndex).controller.reset();
  			}, me);
  		},

  		/**
  		* Resets the chart back to it's state before the initial animation
  		*/
  		reset: function() {
  			this.resetElements();
  			this.tooltip.initialize();
  		},

  		update: function(config) {
  			var me = this;

  			if (!config || typeof config !== 'object') {
  				// backwards compatibility
  				config = {
  					duration: config,
  					lazy: arguments[1]
  				};
  			}

  			updateConfig(me);

  			// plugins options references might have change, let's invalidate the cache
  			// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167
  			core_plugins._invalidate(me);

  			if (core_plugins.notify(me, 'beforeUpdate') === false) {
  				return;
  			}

  			// In case the entire data object changed
  			me.tooltip._data = me.data;

  			// Make sure dataset controllers are updated and new controllers are reset
  			var newControllers = me.buildOrUpdateControllers();

  			// Make sure all dataset controllers have correct meta data counts
  			helpers$1.each(me.data.datasets, function(dataset, datasetIndex) {
  				me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();
  			}, me);

  			me.updateLayout();

  			// Can only reset the new controllers after the scales have been updated
  			if (me.options.animation && me.options.animation.duration) {
  				helpers$1.each(newControllers, function(controller) {
  					controller.reset();
  				});
  			}

  			me.updateDatasets();

  			// Need to reset tooltip in case it is displayed with elements that are removed
  			// after update.
  			me.tooltip.initialize();

  			// Last active contains items that were previously in the tooltip.
  			// When we reset the tooltip, we need to clear it
  			me.lastActive = [];

  			// Do this before render so that any plugins that need final scale updates can use it
  			core_plugins.notify(me, 'afterUpdate');

  			if (me._bufferedRender) {
  				me._bufferedRequest = {
  					duration: config.duration,
  					easing: config.easing,
  					lazy: config.lazy
  				};
  			} else {
  				me.render(config);
  			}
  		},

  		/**
  		 * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`
  		 * hook, in which case, plugins will not be called on `afterLayout`.
  		 * @private
  		 */
  		updateLayout: function() {
  			var me = this;

  			if (core_plugins.notify(me, 'beforeLayout') === false) {
  				return;
  			}

  			core_layouts.update(this, this.width, this.height);

  			/**
  			 * Provided for backward compatibility, use `afterLayout` instead.
  			 * @method IPlugin#afterScaleUpdate
  			 * @deprecated since version 2.5.0
  			 * @todo remove at version 3
  			 * @private
  			 */
  			core_plugins.notify(me, 'afterScaleUpdate');
  			core_plugins.notify(me, 'afterLayout');
  		},

  		/**
  		 * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`
  		 * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.
  		 * @private
  		 */
  		updateDatasets: function() {
  			var me = this;

  			if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {
  				return;
  			}

  			for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
  				me.updateDataset(i);
  			}

  			core_plugins.notify(me, 'afterDatasetsUpdate');
  		},

  		/**
  		 * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`
  		 * hook, in which case, plugins will not be called on `afterDatasetUpdate`.
  		 * @private
  		 */
  		updateDataset: function(index) {
  			var me = this;
  			var meta = me.getDatasetMeta(index);
  			var args = {
  				meta: meta,
  				index: index
  			};

  			if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {
  				return;
  			}

  			meta.controller.update();

  			core_plugins.notify(me, 'afterDatasetUpdate', [args]);
  		},

  		render: function(config) {
  			var me = this;

  			if (!config || typeof config !== 'object') {
  				// backwards compatibility
  				config = {
  					duration: config,
  					lazy: arguments[1]
  				};
  			}

  			var duration = config.duration;
  			var lazy = config.lazy;

  			if (core_plugins.notify(me, 'beforeRender') === false) {
  				return;
  			}

  			var animationOptions = me.options.animation;
  			var onComplete = function(animation) {
  				core_plugins.notify(me, 'afterRender');
  				helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);
  			};

  			if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {
  				var animation = new core_animation({
  					numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps
  					easing: config.easing || animationOptions.easing,

  					render: function(chart, animationObject) {
  						var easingFunction = helpers$1.easing.effects[animationObject.easing];
  						var currentStep = animationObject.currentStep;
  						var stepDecimal = currentStep / animationObject.numSteps;

  						chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);
  					},

  					onAnimationProgress: animationOptions.onProgress,
  					onAnimationComplete: onComplete
  				});

  				core_animations.addAnimation(me, animation, duration, lazy);
  			} else {
  				me.draw();

  				// See https://github.com/chartjs/Chart.js/issues/3781
  				onComplete(new core_animation({numSteps: 0, chart: me}));
  			}

  			return me;
  		},

  		draw: function(easingValue) {
  			var me = this;

  			me.clear();

  			if (helpers$1.isNullOrUndef(easingValue)) {
  				easingValue = 1;
  			}

  			me.transition(easingValue);

  			if (me.width <= 0 || me.height <= 0) {
  				return;
  			}

  			if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {
  				return;
  			}

  			// Draw all the scales
  			helpers$1.each(me.boxes, function(box) {
  				box.draw(me.chartArea);
  			}, me);

  			if (me.scale) {
  				me.scale.draw();
  			}

  			me.drawDatasets(easingValue);
  			me._drawTooltip(easingValue);

  			core_plugins.notify(me, 'afterDraw', [easingValue]);
  		},

  		/**
  		 * @private
  		 */
  		transition: function(easingValue) {
  			var me = this;

  			for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {
  				if (me.isDatasetVisible(i)) {
  					me.getDatasetMeta(i).controller.transition(easingValue);
  				}
  			}

  			me.tooltip.transition(easingValue);
  		},

  		/**
  		 * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`
  		 * hook, in which case, plugins will not be called on `afterDatasetsDraw`.
  		 * @private
  		 */
  		drawDatasets: function(easingValue) {
  			var me = this;

  			if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {
  				return;
  			}

  			// Draw datasets reversed to support proper line stacking
  			for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {
  				if (me.isDatasetVisible(i)) {
  					me.drawDataset(i, easingValue);
  				}
  			}

  			core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);
  		},

  		/**
  		 * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`
  		 * hook, in which case, plugins will not be called on `afterDatasetDraw`.
  		 * @private
  		 */
  		drawDataset: function(index, easingValue) {
  			var me = this;
  			var meta = me.getDatasetMeta(index);
  			var args = {
  				meta: meta,
  				index: index,
  				easingValue: easingValue
  			};

  			if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {
  				return;
  			}

  			meta.controller.draw(easingValue);

  			core_plugins.notify(me, 'afterDatasetDraw', [args]);
  		},

  		/**
  		 * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`
  		 * hook, in which case, plugins will not be called on `afterTooltipDraw`.
  		 * @private
  		 */
  		_drawTooltip: function(easingValue) {
  			var me = this;
  			var tooltip = me.tooltip;
  			var args = {
  				tooltip: tooltip,
  				easingValue: easingValue
  			};

  			if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {
  				return;
  			}

  			tooltip.draw();

  			core_plugins.notify(me, 'afterTooltipDraw', [args]);
  		},

  		// Get the single element that was clicked on
  		// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
  		getElementAtEvent: function(e) {
  			return core_interaction.modes.single(this, e);
  		},

  		getElementsAtEvent: function(e) {
  			return core_interaction.modes.label(this, e, {intersect: true});
  		},

  		getElementsAtXAxis: function(e) {
  			return core_interaction.modes['x-axis'](this, e, {intersect: true});
  		},

  		getElementsAtEventForMode: function(e, mode, options) {
  			var method = core_interaction.modes[mode];
  			if (typeof method === 'function') {
  				return method(this, e, options);
  			}

  			return [];
  		},

  		getDatasetAtEvent: function(e) {
  			return core_interaction.modes.dataset(this, e, {intersect: true});
  		},

  		getDatasetMeta: function(datasetIndex) {
  			var me = this;
  			var dataset = me.data.datasets[datasetIndex];
  			if (!dataset._meta) {
  				dataset._meta = {};
  			}

  			var meta = dataset._meta[me.id];
  			if (!meta) {
  				meta = dataset._meta[me.id] = {
  					type: null,
  					data: [],
  					dataset: null,
  					controller: null,
  					hidden: null,			// See isDatasetVisible() comment
  					xAxisID: null,
  					yAxisID: null
  				};
  			}

  			return meta;
  		},

  		getVisibleDatasetCount: function() {
  			var count = 0;
  			for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {
  				if (this.isDatasetVisible(i)) {
  					count++;
  				}
  			}
  			return count;
  		},

  		isDatasetVisible: function(datasetIndex) {
  			var meta = this.getDatasetMeta(datasetIndex);

  			// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
  			// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.
  			return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;
  		},

  		generateLegend: function() {
  			return this.options.legendCallback(this);
  		},

  		/**
  		 * @private
  		 */
  		destroyDatasetMeta: function(datasetIndex) {
  			var id = this.id;
  			var dataset = this.data.datasets[datasetIndex];
  			var meta = dataset._meta && dataset._meta[id];

  			if (meta) {
  				meta.controller.destroy();
  				delete dataset._meta[id];
  			}
  		},

  		destroy: function() {
  			var me = this;
  			var canvas = me.canvas;
  			var i, ilen;

  			me.stop();

  			// dataset controllers need to cleanup associated data
  			for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
  				me.destroyDatasetMeta(i);
  			}

  			if (canvas) {
  				me.unbindEvents();
  				helpers$1.canvas.clear(me);
  				platform.releaseContext(me.ctx);
  				me.canvas = null;
  				me.ctx = null;
  			}

  			core_plugins.notify(me, 'destroy');

  			delete Chart.instances[me.id];
  		},

  		toBase64Image: function() {
  			return this.canvas.toDataURL.apply(this.canvas, arguments);
  		},

  		initToolTip: function() {
  			var me = this;
  			me.tooltip = new core_tooltip({
  				_chart: me,
  				_chartInstance: me, // deprecated, backward compatibility
  				_data: me.data,
  				_options: me.options.tooltips
  			}, me);
  		},

  		/**
  		 * @private
  		 */
  		bindEvents: function() {
  			var me = this;
  			var listeners = me._listeners = {};
  			var listener = function() {
  				me.eventHandler.apply(me, arguments);
  			};

  			helpers$1.each(me.options.events, function(type) {
  				platform.addEventListener(me, type, listener);
  				listeners[type] = listener;
  			});

  			// Elements used to detect size change should not be injected for non responsive charts.
  			// See https://github.com/chartjs/Chart.js/issues/2210
  			if (me.options.responsive) {
  				listener = function() {
  					me.resize();
  				};

  				platform.addEventListener(me, 'resize', listener);
  				listeners.resize = listener;
  			}
  		},

  		/**
  		 * @private
  		 */
  		unbindEvents: function() {
  			var me = this;
  			var listeners = me._listeners;
  			if (!listeners) {
  				return;
  			}

  			delete me._listeners;
  			helpers$1.each(listeners, function(listener, type) {
  				platform.removeEventListener(me, type, listener);
  			});
  		},

  		updateHoverStyle: function(elements, mode, enabled) {
  			var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';
  			var element, i, ilen;

  			for (i = 0, ilen = elements.length; i < ilen; ++i) {
  				element = elements[i];
  				if (element) {
  					this.getDatasetMeta(element._datasetIndex).controller[method](element);
  				}
  			}
  		},

  		/**
  		 * @private
  		 */
  		eventHandler: function(e) {
  			var me = this;
  			var tooltip = me.tooltip;

  			if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {
  				return;
  			}

  			// Buffer any update calls so that renders do not occur
  			me._bufferedRender = true;
  			me._bufferedRequest = null;

  			var changed = me.handleEvent(e);
  			// for smooth tooltip animations issue #4989
  			// the tooltip should be the source of change
  			// Animation check workaround:
  			// tooltip._start will be null when tooltip isn't animating
  			if (tooltip) {
  				changed = tooltip._start
  					? tooltip.handleEvent(e)
  					: changed | tooltip.handleEvent(e);
  			}

  			core_plugins.notify(me, 'afterEvent', [e]);

  			var bufferedRequest = me._bufferedRequest;
  			if (bufferedRequest) {
  				// If we have an update that was triggered, we need to do a normal render
  				me.render(bufferedRequest);
  			} else if (changed && !me.animating) {
  				// If entering, leaving, or changing elements, animate the change via pivot
  				me.stop();

  				// We only need to render at this point. Updating will cause scales to be
  				// recomputed generating flicker & using more memory than necessary.
  				me.render({
  					duration: me.options.hover.animationDuration,
  					lazy: true
  				});
  			}

  			me._bufferedRender = false;
  			me._bufferedRequest = null;

  			return me;
  		},

  		/**
  		 * Handle an event
  		 * @private
  		 * @param {IEvent} event the event to handle
  		 * @return {Boolean} true if the chart needs to re-render
  		 */
  		handleEvent: function(e) {
  			var me = this;
  			var options = me.options || {};
  			var hoverOptions = options.hover;
  			var changed = false;

  			me.lastActive = me.lastActive || [];

  			// Find Active Elements for hover and tooltips
  			if (e.type === 'mouseout') {
  				me.active = [];
  			} else {
  				me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);
  			}

  			// Invoke onHover hook
  			// Need to call with native event here to not break backwards compatibility
  			helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);

  			if (e.type === 'mouseup' || e.type === 'click') {
  				if (options.onClick) {
  					// Use e.native here for backwards compatibility
  					options.onClick.call(me, e.native, me.active);
  				}
  			}

  			// Remove styling for last active (even if it may still be active)
  			if (me.lastActive.length) {
  				me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
  			}

  			// Built in hover styling
  			if (me.active.length && hoverOptions.mode) {
  				me.updateHoverStyle(me.active, hoverOptions.mode, true);
  			}

  			changed = !helpers$1.arrayEquals(me.active, me.lastActive);

  			// Remember Last Actives
  			me.lastActive = me.active;

  			return changed;
  		}
  	});

  	/**
  	 * Provided for backward compatibility, use Chart instead.
  	 * @class Chart.Controller
  	 * @deprecated since version 2.6.0
  	 * @todo remove at version 3
  	 * @private
  	 */
  	Chart.Controller = Chart;
  };

  var core_datasetController = function(Chart) {

  	var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];

  	/**
  	 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',
  	 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are
  	 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.
  	 */
  	function listenArrayEvents(array, listener) {
  		if (array._chartjs) {
  			array._chartjs.listeners.push(listener);
  			return;
  		}

  		Object.defineProperty(array, '_chartjs', {
  			configurable: true,
  			enumerable: false,
  			value: {
  				listeners: [listener]
  			}
  		});

  		arrayEvents.forEach(function(key) {
  			var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);
  			var base = array[key];

  			Object.defineProperty(array, key, {
  				configurable: true,
  				enumerable: false,
  				value: function() {
  					var args = Array.prototype.slice.call(arguments);
  					var res = base.apply(this, args);

  					helpers$1.each(array._chartjs.listeners, function(object) {
  						if (typeof object[method] === 'function') {
  							object[method].apply(object, args);
  						}
  					});

  					return res;
  				}
  			});
  		});
  	}

  	/**
  	 * Removes the given array event listener and cleanup extra attached properties (such as
  	 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.
  	 */
  	function unlistenArrayEvents(array, listener) {
  		var stub = array._chartjs;
  		if (!stub) {
  			return;
  		}

  		var listeners = stub.listeners;
  		var index = listeners.indexOf(listener);
  		if (index !== -1) {
  			listeners.splice(index, 1);
  		}

  		if (listeners.length > 0) {
  			return;
  		}

  		arrayEvents.forEach(function(key) {
  			delete array[key];
  		});

  		delete array._chartjs;
  	}

  	// Base class for all dataset controllers (line, bar, etc)
  	Chart.DatasetController = function(chart, datasetIndex) {
  		this.initialize(chart, datasetIndex);
  	};

  	helpers$1.extend(Chart.DatasetController.prototype, {

  		/**
  		 * Element type used to generate a meta dataset (e.g. Chart.element.Line).
  		 * @type {Chart.core.element}
  		 */
  		datasetElementType: null,

  		/**
  		 * Element type used to generate a meta data (e.g. Chart.element.Point).
  		 * @type {Chart.core.element}
  		 */
  		dataElementType: null,

  		initialize: function(chart, datasetIndex) {
  			var me = this;
  			me.chart = chart;
  			me.index = datasetIndex;
  			me.linkScales();
  			me.addElements();
  		},

  		updateIndex: function(datasetIndex) {
  			this.index = datasetIndex;
  		},

  		linkScales: function() {
  			var me = this;
  			var meta = me.getMeta();
  			var dataset = me.getDataset();

  			if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {
  				meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;
  			}
  			if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {
  				meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;
  			}
  		},

  		getDataset: function() {
  			return this.chart.data.datasets[this.index];
  		},

  		getMeta: function() {
  			return this.chart.getDatasetMeta(this.index);
  		},

  		getScaleForId: function(scaleID) {
  			return this.chart.scales[scaleID];
  		},

  		reset: function() {
  			this.update(true);
  		},

  		/**
  		 * @private
  		 */
  		destroy: function() {
  			if (this._data) {
  				unlistenArrayEvents(this._data, this);
  			}
  		},

  		createMetaDataset: function() {
  			var me = this;
  			var type = me.datasetElementType;
  			return type && new type({
  				_chart: me.chart,
  				_datasetIndex: me.index
  			});
  		},

  		createMetaData: function(index) {
  			var me = this;
  			var type = me.dataElementType;
  			return type && new type({
  				_chart: me.chart,
  				_datasetIndex: me.index,
  				_index: index
  			});
  		},

  		addElements: function() {
  			var me = this;
  			var meta = me.getMeta();
  			var data = me.getDataset().data || [];
  			var metaData = meta.data;
  			var i, ilen;

  			for (i = 0, ilen = data.length; i < ilen; ++i) {
  				metaData[i] = metaData[i] || me.createMetaData(i);
  			}

  			meta.dataset = meta.dataset || me.createMetaDataset();
  		},

  		addElementAndReset: function(index) {
  			var element = this.createMetaData(index);
  			this.getMeta().data.splice(index, 0, element);
  			this.updateElement(element, index, true);
  		},

  		buildOrUpdateElements: function() {
  			var me = this;
  			var dataset = me.getDataset();
  			var data = dataset.data || (dataset.data = []);

  			// In order to correctly handle data addition/deletion animation (an thus simulate
  			// real-time charts), we need to monitor these data modifications and synchronize
  			// the internal meta data accordingly.
  			if (me._data !== data) {
  				if (me._data) {
  					// This case happens when the user replaced the data array instance.
  					unlistenArrayEvents(me._data, me);
  				}

  				listenArrayEvents(data, me);
  				me._data = data;
  			}

  			// Re-sync meta data in case the user replaced the data array or if we missed
  			// any updates and so make sure that we handle number of datapoints changing.
  			me.resyncElements();
  		},

  		update: helpers$1.noop,

  		transition: function(easingValue) {
  			var meta = this.getMeta();
  			var elements = meta.data || [];
  			var ilen = elements.length;
  			var i = 0;

  			for (; i < ilen; ++i) {
  				elements[i].transition(easingValue);
  			}

  			if (meta.dataset) {
  				meta.dataset.transition(easingValue);
  			}
  		},

  		draw: function() {
  			var meta = this.getMeta();
  			var elements = meta.data || [];
  			var ilen = elements.length;
  			var i = 0;

  			if (meta.dataset) {
  				meta.dataset.draw();
  			}

  			for (; i < ilen; ++i) {
  				elements[i].draw();
  			}
  		},

  		removeHoverStyle: function(element) {
  			helpers$1.merge(element._model, element.$previousStyle || {});
  			delete element.$previousStyle;
  		},

  		setHoverStyle: function(element) {
  			var dataset = this.chart.data.datasets[element._datasetIndex];
  			var index = element._index;
  			var custom = element.custom || {};
  			var valueOrDefault = helpers$1.valueAtIndexOrDefault;
  			var getHoverColor = helpers$1.getHoverColor;
  			var model = element._model;

  			element.$previousStyle = {
  				backgroundColor: model.backgroundColor,
  				borderColor: model.borderColor,
  				borderWidth: model.borderWidth
  			};

  			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));
  			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));
  			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);
  		},

  		/**
  		 * @private
  		 */
  		resyncElements: function() {
  			var me = this;
  			var meta = me.getMeta();
  			var data = me.getDataset().data;
  			var numMeta = meta.data.length;
  			var numData = data.length;

  			if (numData < numMeta) {
  				meta.data.splice(numData, numMeta - numData);
  			} else if (numData > numMeta) {
  				me.insertElements(numMeta, numData - numMeta);
  			}
  		},

  		/**
  		 * @private
  		 */
  		insertElements: function(start, count) {
  			for (var i = 0; i < count; ++i) {
  				this.addElementAndReset(start + i);
  			}
  		},

  		/**
  		 * @private
  		 */
  		onDataPush: function() {
  			this.insertElements(this.getDataset().data.length - 1, arguments.length);
  		},

  		/**
  		 * @private
  		 */
  		onDataPop: function() {
  			this.getMeta().data.pop();
  		},

  		/**
  		 * @private
  		 */
  		onDataShift: function() {
  			this.getMeta().data.shift();
  		},

  		/**
  		 * @private
  		 */
  		onDataSplice: function(start, count) {
  			this.getMeta().data.splice(start, count);
  			this.insertElements(start, arguments.length - 2);
  		},

  		/**
  		 * @private
  		 */
  		onDataUnshift: function() {
  			this.insertElements(0, arguments.length);
  		}
  	});

  	Chart.DatasetController.extend = helpers$1.inherits;
  };

  /**
   * Generate a set of linear ticks
   * @param generationOptions the options used to generate the ticks
   * @param dataRange the range of the data
   * @returns {Array<Number>} array of tick values
   */
  function generateTicks(generationOptions, dataRange) {
  	var ticks = [];
  	// To get a "nice" value for the tick spacing, we will use the appropriately named
  	// "nice number" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
  	// for details.

  	var factor;
  	var precision;
  	var spacing;

  	if (generationOptions.stepSize && generationOptions.stepSize > 0) {
  		spacing = generationOptions.stepSize;
  	} else {
  		var niceRange = helpers$1.niceNum(dataRange.max - dataRange.min, false);
  		spacing = helpers$1.niceNum(niceRange / (generationOptions.maxTicks - 1), true);

  		precision = generationOptions.precision;
  		if (precision !== undefined) {
  			// If the user specified a precision, round to that number of decimal places
  			factor = Math.pow(10, precision);
  			spacing = Math.ceil(spacing * factor) / factor;
  		}
  	}
  	var niceMin = Math.floor(dataRange.min / spacing) * spacing;
  	var niceMax = Math.ceil(dataRange.max / spacing) * spacing;

  	// If min, max and stepSize is set and they make an evenly spaced scale use it.
  	if (!helpers$1.isNullOrUndef(generationOptions.min) && !helpers$1.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {
  		// If very close to our whole number, use it.
  		if (helpers$1.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {
  			niceMin = generationOptions.min;
  			niceMax = generationOptions.max;
  		}
  	}

  	var numSpaces = (niceMax - niceMin) / spacing;
  	// If very close to our rounded value, use it.
  	if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {
  		numSpaces = Math.round(numSpaces);
  	} else {
  		numSpaces = Math.ceil(numSpaces);
  	}

  	precision = 1;
  	if (spacing < 1) {
  		precision = Math.pow(10, 1 - Math.floor(helpers$1.log10(spacing)));
  		niceMin = Math.round(niceMin * precision) / precision;
  		niceMax = Math.round(niceMax * precision) / precision;
  	}
  	ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);
  	for (var j = 1; j < numSpaces; ++j) {
  		ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);
  	}
  	ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);

  	return ticks;
  }

  var scale_linearbase = function(Chart) {

  	var noop = helpers$1.noop;

  	Chart.LinearScaleBase = core_scale.extend({
  		getRightValue: function(value) {
  			if (typeof value === 'string') {
  				return +value;
  			}
  			return core_scale.prototype.getRightValue.call(this, value);
  		},

  		handleTickRangeOptions: function() {
  			var me = this;
  			var opts = me.options;
  			var tickOpts = opts.ticks;

  			// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
  			// do nothing since that would make the chart weird. If the user really wants a weird chart
  			// axis, they can manually override it
  			if (tickOpts.beginAtZero) {
  				var minSign = helpers$1.sign(me.min);
  				var maxSign = helpers$1.sign(me.max);

  				if (minSign < 0 && maxSign < 0) {
  					// move the top up to 0
  					me.max = 0;
  				} else if (minSign > 0 && maxSign > 0) {
  					// move the bottom down to 0
  					me.min = 0;
  				}
  			}

  			var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;
  			var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;

  			if (tickOpts.min !== undefined) {
  				me.min = tickOpts.min;
  			} else if (tickOpts.suggestedMin !== undefined) {
  				if (me.min === null) {
  					me.min = tickOpts.suggestedMin;
  				} else {
  					me.min = Math.min(me.min, tickOpts.suggestedMin);
  				}
  			}

  			if (tickOpts.max !== undefined) {
  				me.max = tickOpts.max;
  			} else if (tickOpts.suggestedMax !== undefined) {
  				if (me.max === null) {
  					me.max = tickOpts.suggestedMax;
  				} else {
  					me.max = Math.max(me.max, tickOpts.suggestedMax);
  				}
  			}

  			if (setMin !== setMax) {
  				// We set the min or the max but not both.
  				// So ensure that our range is good
  				// Inverted or 0 length range can happen when
  				// ticks.min is set, and no datasets are visible
  				if (me.min >= me.max) {
  					if (setMin) {
  						me.max = me.min + 1;
  					} else {
  						me.min = me.max - 1;
  					}
  				}
  			}

  			if (me.min === me.max) {
  				me.max++;

  				if (!tickOpts.beginAtZero) {
  					me.min--;
  				}
  			}
  		},
  		getTickLimit: noop,
  		handleDirectionalChanges: noop,

  		buildTicks: function() {
  			var me = this;
  			var opts = me.options;
  			var tickOpts = opts.ticks;

  			// Figure out what the max number of ticks we can support it is based on the size of
  			// the axis area. For now, we say that the minimum tick spacing in pixels must be 50
  			// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
  			// the graph. Make sure we always have at least 2 ticks
  			var maxTicks = me.getTickLimit();
  			maxTicks = Math.max(2, maxTicks);

  			var numericGeneratorOptions = {
  				maxTicks: maxTicks,
  				min: tickOpts.min,
  				max: tickOpts.max,
  				precision: tickOpts.precision,
  				stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
  			};
  			var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);

  			me.handleDirectionalChanges();

  			// At this point, we need to update our max and min given the tick values since we have expanded the
  			// range of the scale
  			me.max = helpers$1.max(ticks);
  			me.min = helpers$1.min(ticks);

  			if (tickOpts.reverse) {
  				ticks.reverse();

  				me.start = me.max;
  				me.end = me.min;
  			} else {
  				me.start = me.min;
  				me.end = me.max;
  			}
  		},
  		convertTicksToLabels: function() {
  			var me = this;
  			me.ticksAsNumbers = me.ticks.slice();
  			me.zeroLineIndex = me.ticks.indexOf(0);

  			core_scale.prototype.convertTicksToLabels.call(me);
  		}
  	});
  };

  var scale_category = function() {

  	// Default config for a category scale
  	var defaultConfig = {
  		position: 'bottom'
  	};

  	var DatasetScale = core_scale.extend({
  		/**
  		* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those
  		* else fall back to data.labels
  		* @private
  		*/
  		getLabels: function() {
  			var data = this.chart.data;
  			return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;
  		},

  		determineDataLimits: function() {
  			var me = this;
  			var labels = me.getLabels();
  			me.minIndex = 0;
  			me.maxIndex = labels.length - 1;
  			var findIndex;

  			if (me.options.ticks.min !== undefined) {
  				// user specified min value
  				findIndex = labels.indexOf(me.options.ticks.min);
  				me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;
  			}

  			if (me.options.ticks.max !== undefined) {
  				// user specified max value
  				findIndex = labels.indexOf(me.options.ticks.max);
  				me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;
  			}

  			me.min = labels[me.minIndex];
  			me.max = labels[me.maxIndex];
  		},

  		buildTicks: function() {
  			var me = this;
  			var labels = me.getLabels();
  			// If we are viewing some subset of labels, slice the original array
  			me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);
  		},

  		getLabelForIndex: function(index, datasetIndex) {
  			var me = this;
  			var data = me.chart.data;
  			var isHorizontal = me.isHorizontal();

  			if (data.yLabels && !isHorizontal) {
  				return me.getRightValue(data.datasets[datasetIndex].data[index]);
  			}
  			return me.ticks[index - me.minIndex];
  		},

  		// Used to get data value locations.  Value can either be an index or a numerical value
  		getPixelForValue: function(value, index) {
  			var me = this;
  			var offset = me.options.offset;
  			// 1 is added because we need the length but we have the indexes
  			var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);

  			// If value is a data object, then index is the index in the data array,
  			// not the index of the scale. We need to change that.
  			var valueCategory;
  			if (value !== undefined && value !== null) {
  				valueCategory = me.isHorizontal() ? value.x : value.y;
  			}
  			if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {
  				var labels = me.getLabels();
  				value = valueCategory || value;
  				var idx = labels.indexOf(value);
  				index = idx !== -1 ? idx : index;
  			}

  			if (me.isHorizontal()) {
  				var valueWidth = me.width / offsetAmt;
  				var widthOffset = (valueWidth * (index - me.minIndex));

  				if (offset) {
  					widthOffset += (valueWidth / 2);
  				}

  				return me.left + Math.round(widthOffset);
  			}
  			var valueHeight = me.height / offsetAmt;
  			var heightOffset = (valueHeight * (index - me.minIndex));

  			if (offset) {
  				heightOffset += (valueHeight / 2);
  			}

  			return me.top + Math.round(heightOffset);
  		},
  		getPixelForTick: function(index) {
  			return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);
  		},
  		getValueForPixel: function(pixel) {
  			var me = this;
  			var offset = me.options.offset;
  			var value;
  			var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);
  			var horz = me.isHorizontal();
  			var valueDimension = (horz ? me.width : me.height) / offsetAmt;

  			pixel -= horz ? me.left : me.top;

  			if (offset) {
  				pixel -= (valueDimension / 2);
  			}

  			if (pixel <= 0) {
  				value = 0;
  			} else {
  				value = Math.round(pixel / valueDimension);
  			}

  			return value + me.minIndex;
  		},
  		getBasePixel: function() {
  			return this.bottom;
  		}
  	});

  	core_scaleService.registerScaleType('category', DatasetScale, defaultConfig);
  };

  var scale_linear = function(Chart) {

  	var defaultConfig = {
  		position: 'left',
  		ticks: {
  			callback: core_ticks.formatters.linear
  		}
  	};

  	var LinearScale = Chart.LinearScaleBase.extend({

  		determineDataLimits: function() {
  			var me = this;
  			var opts = me.options;
  			var chart = me.chart;
  			var data = chart.data;
  			var datasets = data.datasets;
  			var isHorizontal = me.isHorizontal();
  			var DEFAULT_MIN = 0;
  			var DEFAULT_MAX = 1;

  			function IDMatches(meta) {
  				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
  			}

  			// First Calculate the range
  			me.min = null;
  			me.max = null;

  			var hasStacks = opts.stacked;
  			if (hasStacks === undefined) {
  				helpers$1.each(datasets, function(dataset, datasetIndex) {
  					if (hasStacks) {
  						return;
  					}

  					var meta = chart.getDatasetMeta(datasetIndex);
  					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
  						meta.stack !== undefined) {
  						hasStacks = true;
  					}
  				});
  			}

  			if (opts.stacked || hasStacks) {
  				var valuesPerStack = {};

  				helpers$1.each(datasets, function(dataset, datasetIndex) {
  					var meta = chart.getDatasetMeta(datasetIndex);
  					var key = [
  						meta.type,
  						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
  						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
  						meta.stack
  					].join('.');

  					if (valuesPerStack[key] === undefined) {
  						valuesPerStack[key] = {
  							positiveValues: [],
  							negativeValues: []
  						};
  					}

  					// Store these per type
  					var positiveValues = valuesPerStack[key].positiveValues;
  					var negativeValues = valuesPerStack[key].negativeValues;

  					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
  						helpers$1.each(dataset.data, function(rawValue, index) {
  							var value = +me.getRightValue(rawValue);
  							if (isNaN(value) || meta.data[index].hidden) {
  								return;
  							}

  							positiveValues[index] = positiveValues[index] || 0;
  							negativeValues[index] = negativeValues[index] || 0;

  							if (opts.relativePoints) {
  								positiveValues[index] = 100;
  							} else if (value < 0) {
  								negativeValues[index] += value;
  							} else {
  								positiveValues[index] += value;
  							}
  						});
  					}
  				});

  				helpers$1.each(valuesPerStack, function(valuesForType) {
  					var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);
  					var minVal = helpers$1.min(values);
  					var maxVal = helpers$1.max(values);
  					me.min = me.min === null ? minVal : Math.min(me.min, minVal);
  					me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
  				});

  			} else {
  				helpers$1.each(datasets, function(dataset, datasetIndex) {
  					var meta = chart.getDatasetMeta(datasetIndex);
  					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
  						helpers$1.each(dataset.data, function(rawValue, index) {
  							var value = +me.getRightValue(rawValue);
  							if (isNaN(value) || meta.data[index].hidden) {
  								return;
  							}

  							if (me.min === null) {
  								me.min = value;
  							} else if (value < me.min) {
  								me.min = value;
  							}

  							if (me.max === null) {
  								me.max = value;
  							} else if (value > me.max) {
  								me.max = value;
  							}
  						});
  					}
  				});
  			}

  			me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;
  			me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;

  			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
  			this.handleTickRangeOptions();
  		},
  		getTickLimit: function() {
  			var maxTicks;
  			var me = this;
  			var tickOpts = me.options.ticks;

  			if (me.isHorizontal()) {
  				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));
  			} else {
  				// The factor of 2 used to scale the font size has been experimentally determined.
  				var tickFontSize = helpers$1.valueOrDefault(tickOpts.fontSize, core_defaults.global.defaultFontSize);
  				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));
  			}

  			return maxTicks;
  		},
  		// Called after the ticks are built. We need
  		handleDirectionalChanges: function() {
  			if (!this.isHorizontal()) {
  				// We are in a vertical orientation. The top value is the highest. So reverse the array
  				this.ticks.reverse();
  			}
  		},
  		getLabelForIndex: function(index, datasetIndex) {
  			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
  		},
  		// Utils
  		getPixelForValue: function(value) {
  			// This must be called after fit has been run so that
  			// this.left, this.top, this.right, and this.bottom have been defined
  			var me = this;
  			var start = me.start;

  			var rightValue = +me.getRightValue(value);
  			var pixel;
  			var range = me.end - start;

  			if (me.isHorizontal()) {
  				pixel = me.left + (me.width / range * (rightValue - start));
  			} else {
  				pixel = me.bottom - (me.height / range * (rightValue - start));
  			}
  			return pixel;
  		},
  		getValueForPixel: function(pixel) {
  			var me = this;
  			var isHorizontal = me.isHorizontal();
  			var innerDimension = isHorizontal ? me.width : me.height;
  			var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;
  			return me.start + ((me.end - me.start) * offset);
  		},
  		getPixelForTick: function(index) {
  			return this.getPixelForValue(this.ticksAsNumbers[index]);
  		}
  	});

  	core_scaleService.registerScaleType('linear', LinearScale, defaultConfig);
  };

  /**
   * Generate a set of logarithmic ticks
   * @param generationOptions the options used to generate the ticks
   * @param dataRange the range of the data
   * @returns {Array<Number>} array of tick values
   */
  function generateTicks$1(generationOptions, dataRange) {
  	var ticks = [];
  	var valueOrDefault = helpers$1.valueOrDefault;

  	// Figure out what the max number of ticks we can support it is based on the size of
  	// the axis area. For now, we say that the minimum tick spacing in pixels must be 50
  	// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
  	// the graph
  	var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));

  	var endExp = Math.floor(helpers$1.log10(dataRange.max));
  	var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));
  	var exp, significand;

  	if (tickVal === 0) {
  		exp = Math.floor(helpers$1.log10(dataRange.minNotZero));
  		significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));

  		ticks.push(tickVal);
  		tickVal = significand * Math.pow(10, exp);
  	} else {
  		exp = Math.floor(helpers$1.log10(tickVal));
  		significand = Math.floor(tickVal / Math.pow(10, exp));
  	}
  	var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;

  	do {
  		ticks.push(tickVal);

  		++significand;
  		if (significand === 10) {
  			significand = 1;
  			++exp;
  			precision = exp >= 0 ? 1 : precision;
  		}

  		tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;
  	} while (exp < endExp || (exp === endExp && significand < endSignificand));

  	var lastTick = valueOrDefault(generationOptions.max, tickVal);
  	ticks.push(lastTick);

  	return ticks;
  }


  var scale_logarithmic = function(Chart) {

  	var defaultConfig = {
  		position: 'left',

  		// label settings
  		ticks: {
  			callback: core_ticks.formatters.logarithmic
  		}
  	};

  	var LogarithmicScale = core_scale.extend({
  		determineDataLimits: function() {
  			var me = this;
  			var opts = me.options;
  			var chart = me.chart;
  			var data = chart.data;
  			var datasets = data.datasets;
  			var isHorizontal = me.isHorizontal();
  			function IDMatches(meta) {
  				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
  			}

  			// Calculate Range
  			me.min = null;
  			me.max = null;
  			me.minNotZero = null;

  			var hasStacks = opts.stacked;
  			if (hasStacks === undefined) {
  				helpers$1.each(datasets, function(dataset, datasetIndex) {
  					if (hasStacks) {
  						return;
  					}

  					var meta = chart.getDatasetMeta(datasetIndex);
  					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
  						meta.stack !== undefined) {
  						hasStacks = true;
  					}
  				});
  			}

  			if (opts.stacked || hasStacks) {
  				var valuesPerStack = {};

  				helpers$1.each(datasets, function(dataset, datasetIndex) {
  					var meta = chart.getDatasetMeta(datasetIndex);
  					var key = [
  						meta.type,
  						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
  						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
  						meta.stack
  					].join('.');

  					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
  						if (valuesPerStack[key] === undefined) {
  							valuesPerStack[key] = [];
  						}

  						helpers$1.each(dataset.data, function(rawValue, index) {
  							var values = valuesPerStack[key];
  							var value = +me.getRightValue(rawValue);
  							// invalid, hidden and negative values are ignored
  							if (isNaN(value) || meta.data[index].hidden || value < 0) {
  								return;
  							}
  							values[index] = values[index] || 0;
  							values[index] += value;
  						});
  					}
  				});

  				helpers$1.each(valuesPerStack, function(valuesForType) {
  					if (valuesForType.length > 0) {
  						var minVal = helpers$1.min(valuesForType);
  						var maxVal = helpers$1.max(valuesForType);
  						me.min = me.min === null ? minVal : Math.min(me.min, minVal);
  						me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);
  					}
  				});

  			} else {
  				helpers$1.each(datasets, function(dataset, datasetIndex) {
  					var meta = chart.getDatasetMeta(datasetIndex);
  					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
  						helpers$1.each(dataset.data, function(rawValue, index) {
  							var value = +me.getRightValue(rawValue);
  							// invalid, hidden and negative values are ignored
  							if (isNaN(value) || meta.data[index].hidden || value < 0) {
  								return;
  							}

  							if (me.min === null) {
  								me.min = value;
  							} else if (value < me.min) {
  								me.min = value;
  							}

  							if (me.max === null) {
  								me.max = value;
  							} else if (value > me.max) {
  								me.max = value;
  							}

  							if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {
  								me.minNotZero = value;
  							}
  						});
  					}
  				});
  			}

  			// Common base implementation to handle ticks.min, ticks.max
  			this.handleTickRangeOptions();
  		},
  		handleTickRangeOptions: function() {
  			var me = this;
  			var opts = me.options;
  			var tickOpts = opts.ticks;
  			var valueOrDefault = helpers$1.valueOrDefault;
  			var DEFAULT_MIN = 1;
  			var DEFAULT_MAX = 10;

  			me.min = valueOrDefault(tickOpts.min, me.min);
  			me.max = valueOrDefault(tickOpts.max, me.max);

  			if (me.min === me.max) {
  				if (me.min !== 0 && me.min !== null) {
  					me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);
  					me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);
  				} else {
  					me.min = DEFAULT_MIN;
  					me.max = DEFAULT_MAX;
  				}
  			}
  			if (me.min === null) {
  				me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);
  			}
  			if (me.max === null) {
  				me.max = me.min !== 0
  					? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)
  					: DEFAULT_MAX;
  			}
  			if (me.minNotZero === null) {
  				if (me.min > 0) {
  					me.minNotZero = me.min;
  				} else if (me.max < 1) {
  					me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));
  				} else {
  					me.minNotZero = DEFAULT_MIN;
  				}
  			}
  		},
  		buildTicks: function() {
  			var me = this;
  			var opts = me.options;
  			var tickOpts = opts.ticks;
  			var reverse = !me.isHorizontal();

  			var generationOptions = {
  				min: tickOpts.min,
  				max: tickOpts.max
  			};
  			var ticks = me.ticks = generateTicks$1(generationOptions, me);

  			// At this point, we need to update our max and min given the tick values since we have expanded the
  			// range of the scale
  			me.max = helpers$1.max(ticks);
  			me.min = helpers$1.min(ticks);

  			if (tickOpts.reverse) {
  				reverse = !reverse;
  				me.start = me.max;
  				me.end = me.min;
  			} else {
  				me.start = me.min;
  				me.end = me.max;
  			}
  			if (reverse) {
  				ticks.reverse();
  			}
  		},
  		convertTicksToLabels: function() {
  			this.tickValues = this.ticks.slice();

  			core_scale.prototype.convertTicksToLabels.call(this);
  		},
  		// Get the correct tooltip label
  		getLabelForIndex: function(index, datasetIndex) {
  			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
  		},
  		getPixelForTick: function(index) {
  			return this.getPixelForValue(this.tickValues[index]);
  		},
  		/**
  		 * Returns the value of the first tick.
  		 * @param {Number} value - The minimum not zero value.
  		 * @return {Number} The first tick value.
  		 * @private
  		 */
  		_getFirstTickValue: function(value) {
  			var exp = Math.floor(helpers$1.log10(value));
  			var significand = Math.floor(value / Math.pow(10, exp));

  			return significand * Math.pow(10, exp);
  		},
  		getPixelForValue: function(value) {
  			var me = this;
  			var reverse = me.options.ticks.reverse;
  			var log10 = helpers$1.log10;
  			var firstTickValue = me._getFirstTickValue(me.minNotZero);
  			var offset = 0;
  			var innerDimension, pixel, start, end, sign;

  			value = +me.getRightValue(value);
  			if (reverse) {
  				start = me.end;
  				end = me.start;
  				sign = -1;
  			} else {
  				start = me.start;
  				end = me.end;
  				sign = 1;
  			}
  			if (me.isHorizontal()) {
  				innerDimension = me.width;
  				pixel = reverse ? me.right : me.left;
  			} else {
  				innerDimension = me.height;
  				sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)
  				pixel = reverse ? me.top : me.bottom;
  			}
  			if (value !== start) {
  				if (start === 0) { // include zero tick
  					offset = helpers$1.getValueOrDefault(
  						me.options.ticks.fontSize,
  						Chart.defaults.global.defaultFontSize
  					);
  					innerDimension -= offset;
  					start = firstTickValue;
  				}
  				if (value !== 0) {
  					offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));
  				}
  				pixel += sign * offset;
  			}
  			return pixel;
  		},
  		getValueForPixel: function(pixel) {
  			var me = this;
  			var reverse = me.options.ticks.reverse;
  			var log10 = helpers$1.log10;
  			var firstTickValue = me._getFirstTickValue(me.minNotZero);
  			var innerDimension, start, end, value;

  			if (reverse) {
  				start = me.end;
  				end = me.start;
  			} else {
  				start = me.start;
  				end = me.end;
  			}
  			if (me.isHorizontal()) {
  				innerDimension = me.width;
  				value = reverse ? me.right - pixel : pixel - me.left;
  			} else {
  				innerDimension = me.height;
  				value = reverse ? pixel - me.top : me.bottom - pixel;
  			}
  			if (value !== start) {
  				if (start === 0) { // include zero tick
  					var offset = helpers$1.getValueOrDefault(
  						me.options.ticks.fontSize,
  						Chart.defaults.global.defaultFontSize
  					);
  					value -= offset;
  					innerDimension -= offset;
  					start = firstTickValue;
  				}
  				value *= log10(end) - log10(start);
  				value /= innerDimension;
  				value = Math.pow(10, log10(start) + value);
  			}
  			return value;
  		}
  	});

  	core_scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);
  };

  var scale_radialLinear = function(Chart) {

  	var globalDefaults = core_defaults.global;

  	var defaultConfig = {
  		display: true,

  		// Boolean - Whether to animate scaling the chart from the centre
  		animate: true,
  		position: 'chartArea',

  		angleLines: {
  			display: true,
  			color: 'rgba(0, 0, 0, 0.1)',
  			lineWidth: 1
  		},

  		gridLines: {
  			circular: false
  		},

  		// label settings
  		ticks: {
  			// Boolean - Show a backdrop to the scale label
  			showLabelBackdrop: true,

  			// String - The colour of the label backdrop
  			backdropColor: 'rgba(255,255,255,0.75)',

  			// Number - The backdrop padding above & below the label in pixels
  			backdropPaddingY: 2,

  			// Number - The backdrop padding to the side of the label in pixels
  			backdropPaddingX: 2,

  			callback: core_ticks.formatters.linear
  		},

  		pointLabels: {
  			// Boolean - if true, show point labels
  			display: true,

  			// Number - Point label font size in pixels
  			fontSize: 10,

  			// Function - Used to convert point labels
  			callback: function(label) {
  				return label;
  			}
  		}
  	};

  	function getValueCount(scale) {
  		var opts = scale.options;
  		return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;
  	}

  	function getPointLabelFontOptions(scale) {
  		var pointLabelOptions = scale.options.pointLabels;
  		var fontSize = helpers$1.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);
  		var fontStyle = helpers$1.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);
  		var fontFamily = helpers$1.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);
  		var font = helpers$1.fontString(fontSize, fontStyle, fontFamily);

  		return {
  			size: fontSize,
  			style: fontStyle,
  			family: fontFamily,
  			font: font
  		};
  	}

  	function measureLabelSize(ctx, fontSize, label) {
  		if (helpers$1.isArray(label)) {
  			return {
  				w: helpers$1.longestText(ctx, ctx.font, label),
  				h: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)
  			};
  		}

  		return {
  			w: ctx.measureText(label).width,
  			h: fontSize
  		};
  	}

  	function determineLimits(angle, pos, size, min, max) {
  		if (angle === min || angle === max) {
  			return {
  				start: pos - (size / 2),
  				end: pos + (size / 2)
  			};
  		} else if (angle < min || angle > max) {
  			return {
  				start: pos - size - 5,
  				end: pos
  			};
  		}

  		return {
  			start: pos,
  			end: pos + size + 5
  		};
  	}

  	/**
  	 * Helper function to fit a radial linear scale with point labels
  	 */
  	function fitWithPointLabels(scale) {
  		/*
  		 * Right, this is really confusing and there is a lot of maths going on here
  		 * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
  		 *
  		 * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
  		 *
  		 * Solution:
  		 *
  		 * We assume the radius of the polygon is half the size of the canvas at first
  		 * at each index we check if the text overlaps.
  		 *
  		 * Where it does, we store that angle and that index.
  		 *
  		 * After finding the largest index and angle we calculate how much we need to remove
  		 * from the shape radius to move the point inwards by that x.
  		 *
  		 * We average the left and right distances to get the maximum shape radius that can fit in the box
  		 * along with labels.
  		 *
  		 * Once we have that, we can find the centre point for the chart, by taking the x text protrusion
  		 * on each side, removing that from the size, halving it and adding the left x protrusion width.
  		 *
  		 * This will mean we have a shape fitted to the canvas, as large as it can be with the labels
  		 * and position it in the most space efficient manner
  		 *
  		 * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif
  		 */

  		var plFont = getPointLabelFontOptions(scale);

  		// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
  		// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points
  		var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
  		var furthestLimits = {
  			r: scale.width,
  			l: 0,
  			t: scale.height,
  			b: 0
  		};
  		var furthestAngles = {};
  		var i, textSize, pointPosition;

  		scale.ctx.font = plFont.font;
  		scale._pointLabelSizes = [];

  		var valueCount = getValueCount(scale);
  		for (i = 0; i < valueCount; i++) {
  			pointPosition = scale.getPointPosition(i, largestPossibleRadius);
  			textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');
  			scale._pointLabelSizes[i] = textSize;

  			// Add quarter circle to make degree 0 mean top of circle
  			var angleRadians = scale.getIndexAngle(i);
  			var angle = helpers$1.toDegrees(angleRadians) % 360;
  			var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
  			var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);

  			if (hLimits.start < furthestLimits.l) {
  				furthestLimits.l = hLimits.start;
  				furthestAngles.l = angleRadians;
  			}

  			if (hLimits.end > furthestLimits.r) {
  				furthestLimits.r = hLimits.end;
  				furthestAngles.r = angleRadians;
  			}

  			if (vLimits.start < furthestLimits.t) {
  				furthestLimits.t = vLimits.start;
  				furthestAngles.t = angleRadians;
  			}

  			if (vLimits.end > furthestLimits.b) {
  				furthestLimits.b = vLimits.end;
  				furthestAngles.b = angleRadians;
  			}
  		}

  		scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);
  	}

  	/**
  	 * Helper function to fit a radial linear scale with no point labels
  	 */
  	function fit(scale) {
  		var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);
  		scale.drawingArea = Math.round(largestPossibleRadius);
  		scale.setCenterPoint(0, 0, 0, 0);
  	}

  	function getTextAlignForAngle(angle) {
  		if (angle === 0 || angle === 180) {
  			return 'center';
  		} else if (angle < 180) {
  			return 'left';
  		}

  		return 'right';
  	}

  	function fillText(ctx, text, position, fontSize) {
  		if (helpers$1.isArray(text)) {
  			var y = position.y;
  			var spacing = 1.5 * fontSize;

  			for (var i = 0; i < text.length; ++i) {
  				ctx.fillText(text[i], position.x, y);
  				y += spacing;
  			}
  		} else {
  			ctx.fillText(text, position.x, position.y);
  		}
  	}

  	function adjustPointPositionForLabelHeight(angle, textSize, position) {
  		if (angle === 90 || angle === 270) {
  			position.y -= (textSize.h / 2);
  		} else if (angle > 270 || angle < 90) {
  			position.y -= textSize.h;
  		}
  	}

  	function drawPointLabels(scale) {
  		var ctx = scale.ctx;
  		var opts = scale.options;
  		var angleLineOpts = opts.angleLines;
  		var pointLabelOpts = opts.pointLabels;

  		ctx.lineWidth = angleLineOpts.lineWidth;
  		ctx.strokeStyle = angleLineOpts.color;

  		var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);

  		// Point Label Font
  		var plFont = getPointLabelFontOptions(scale);

  		ctx.textBaseline = 'top';

  		for (var i = getValueCount(scale) - 1; i >= 0; i--) {
  			if (angleLineOpts.display) {
  				var outerPosition = scale.getPointPosition(i, outerDistance);
  				ctx.beginPath();
  				ctx.moveTo(scale.xCenter, scale.yCenter);
  				ctx.lineTo(outerPosition.x, outerPosition.y);
  				ctx.stroke();
  				ctx.closePath();
  			}

  			if (pointLabelOpts.display) {
  				// Extra 3px out for some label spacing
  				var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);

  				// Keep this in loop since we may support array properties here
  				var pointLabelFontColor = helpers$1.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);
  				ctx.font = plFont.font;
  				ctx.fillStyle = pointLabelFontColor;

  				var angleRadians = scale.getIndexAngle(i);
  				var angle = helpers$1.toDegrees(angleRadians);
  				ctx.textAlign = getTextAlignForAngle(angle);
  				adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);
  				fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);
  			}
  		}
  	}

  	function drawRadiusLine(scale, gridLineOpts, radius, index) {
  		var ctx = scale.ctx;
  		ctx.strokeStyle = helpers$1.valueAtIndexOrDefault(gridLineOpts.color, index - 1);
  		ctx.lineWidth = helpers$1.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);

  		if (scale.options.gridLines.circular) {
  			// Draw circular arcs between the points
  			ctx.beginPath();
  			ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);
  			ctx.closePath();
  			ctx.stroke();
  		} else {
  			// Draw straight lines connecting each index
  			var valueCount = getValueCount(scale);

  			if (valueCount === 0) {
  				return;
  			}

  			ctx.beginPath();
  			var pointPosition = scale.getPointPosition(0, radius);
  			ctx.moveTo(pointPosition.x, pointPosition.y);

  			for (var i = 1; i < valueCount; i++) {
  				pointPosition = scale.getPointPosition(i, radius);
  				ctx.lineTo(pointPosition.x, pointPosition.y);
  			}

  			ctx.closePath();
  			ctx.stroke();
  		}
  	}

  	function numberOrZero(param) {
  		return helpers$1.isNumber(param) ? param : 0;
  	}

  	var LinearRadialScale = Chart.LinearScaleBase.extend({
  		setDimensions: function() {
  			var me = this;
  			var opts = me.options;
  			var tickOpts = opts.ticks;
  			// Set the unconstrained dimension before label rotation
  			me.width = me.maxWidth;
  			me.height = me.maxHeight;
  			me.xCenter = Math.round(me.width / 2);
  			me.yCenter = Math.round(me.height / 2);

  			var minSize = helpers$1.min([me.height, me.width]);
  			var tickFontSize = helpers$1.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
  			me.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);
  		},
  		determineDataLimits: function() {
  			var me = this;
  			var chart = me.chart;
  			var min = Number.POSITIVE_INFINITY;
  			var max = Number.NEGATIVE_INFINITY;

  			helpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {
  				if (chart.isDatasetVisible(datasetIndex)) {
  					var meta = chart.getDatasetMeta(datasetIndex);

  					helpers$1.each(dataset.data, function(rawValue, index) {
  						var value = +me.getRightValue(rawValue);
  						if (isNaN(value) || meta.data[index].hidden) {
  							return;
  						}

  						min = Math.min(value, min);
  						max = Math.max(value, max);
  					});
  				}
  			});

  			me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);
  			me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);

  			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
  			me.handleTickRangeOptions();
  		},
  		getTickLimit: function() {
  			var tickOpts = this.options.ticks;
  			var tickFontSize = helpers$1.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
  			return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));
  		},
  		convertTicksToLabels: function() {
  			var me = this;

  			Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);

  			// Point labels
  			me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);
  		},
  		getLabelForIndex: function(index, datasetIndex) {
  			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
  		},
  		fit: function() {
  			if (this.options.pointLabels.display) {
  				fitWithPointLabels(this);
  			} else {
  				fit(this);
  			}
  		},
  		/**
  		 * Set radius reductions and determine new radius and center point
  		 * @private
  		 */
  		setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {
  			var me = this;
  			var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);
  			var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);
  			var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);
  			var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);

  			radiusReductionLeft = numberOrZero(radiusReductionLeft);
  			radiusReductionRight = numberOrZero(radiusReductionRight);
  			radiusReductionTop = numberOrZero(radiusReductionTop);
  			radiusReductionBottom = numberOrZero(radiusReductionBottom);

  			me.drawingArea = Math.min(
  				Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),
  				Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));
  			me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);
  		},
  		setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {
  			var me = this;
  			var maxRight = me.width - rightMovement - me.drawingArea;
  			var maxLeft = leftMovement + me.drawingArea;
  			var maxTop = topMovement + me.drawingArea;
  			var maxBottom = me.height - bottomMovement - me.drawingArea;

  			me.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);
  			me.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);
  		},

  		getIndexAngle: function(index) {
  			var angleMultiplier = (Math.PI * 2) / getValueCount(this);
  			var startAngle = this.chart.options && this.chart.options.startAngle ?
  				this.chart.options.startAngle :
  				0;

  			var startAngleRadians = startAngle * Math.PI * 2 / 360;

  			// Start from the top instead of right, so remove a quarter of the circle
  			return index * angleMultiplier + startAngleRadians;
  		},
  		getDistanceFromCenterForValue: function(value) {
  			var me = this;

  			if (value === null) {
  				return 0; // null always in center
  			}

  			// Take into account half font size + the yPadding of the top value
  			var scalingFactor = me.drawingArea / (me.max - me.min);
  			if (me.options.ticks.reverse) {
  				return (me.max - value) * scalingFactor;
  			}
  			return (value - me.min) * scalingFactor;
  		},
  		getPointPosition: function(index, distanceFromCenter) {
  			var me = this;
  			var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);
  			return {
  				x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,
  				y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter
  			};
  		},
  		getPointPositionForValue: function(index, value) {
  			return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
  		},

  		getBasePosition: function() {
  			var me = this;
  			var min = me.min;
  			var max = me.max;

  			return me.getPointPositionForValue(0,
  				me.beginAtZero ? 0 :
  				min < 0 && max < 0 ? max :
  				min > 0 && max > 0 ? min :
  				0);
  		},

  		draw: function() {
  			var me = this;
  			var opts = me.options;
  			var gridLineOpts = opts.gridLines;
  			var tickOpts = opts.ticks;
  			var valueOrDefault = helpers$1.valueOrDefault;

  			if (opts.display) {
  				var ctx = me.ctx;
  				var startAngle = this.getIndexAngle(0);

  				// Tick Font
  				var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);
  				var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);
  				var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);
  				var tickLabelFont = helpers$1.fontString(tickFontSize, tickFontStyle, tickFontFamily);

  				helpers$1.each(me.ticks, function(label, index) {
  					// Don't draw a centre value (if it is minimum)
  					if (index > 0 || tickOpts.reverse) {
  						var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);

  						// Draw circular lines around the scale
  						if (gridLineOpts.display && index !== 0) {
  							drawRadiusLine(me, gridLineOpts, yCenterOffset, index);
  						}

  						if (tickOpts.display) {
  							var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);
  							ctx.font = tickLabelFont;

  							ctx.save();
  							ctx.translate(me.xCenter, me.yCenter);
  							ctx.rotate(startAngle);

  							if (tickOpts.showLabelBackdrop) {
  								var labelWidth = ctx.measureText(label).width;
  								ctx.fillStyle = tickOpts.backdropColor;
  								ctx.fillRect(
  									-labelWidth / 2 - tickOpts.backdropPaddingX,
  									-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,
  									labelWidth + tickOpts.backdropPaddingX * 2,
  									tickFontSize + tickOpts.backdropPaddingY * 2
  								);
  							}

  							ctx.textAlign = 'center';
  							ctx.textBaseline = 'middle';
  							ctx.fillStyle = tickFontColor;
  							ctx.fillText(label, 0, -yCenterOffset);
  							ctx.restore();
  						}
  					}
  				});

  				if (opts.angleLines.display || opts.pointLabels.display) {
  					drawPointLabels(me);
  				}
  			}
  		}
  	});

  	core_scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);
  };

  var moment = createCommonjsModule$1(function (module, exports) {
  (function (global, factory) {
      module.exports = factory();
  }(commonjsGlobal, (function () {
      var hookCallback;

      function hooks () {
          return hookCallback.apply(null, arguments);
      }

      // This is done to register the method called with moment()
      // without creating circular dependencies.
      function setHookCallback (callback) {
          hookCallback = callback;
      }

      function isArray(input) {
          return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
      }

      function isObject(input) {
          // IE8 will treat undefined and null as object if it wasn't for
          // input != null
          return input != null && Object.prototype.toString.call(input) === '[object Object]';
      }

      function isObjectEmpty(obj) {
          if (Object.getOwnPropertyNames) {
              return (Object.getOwnPropertyNames(obj).length === 0);
          } else {
              var k;
              for (k in obj) {
                  if (obj.hasOwnProperty(k)) {
                      return false;
                  }
              }
              return true;
          }
      }

      function isUndefined(input) {
          return input === void 0;
      }

      function isNumber(input) {
          return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
      }

      function isDate(input) {
          return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
      }

      function map(arr, fn) {
          var res = [], i;
          for (i = 0; i < arr.length; ++i) {
              res.push(fn(arr[i], i));
          }
          return res;
      }

      function hasOwnProp(a, b) {
          return Object.prototype.hasOwnProperty.call(a, b);
      }

      function extend(a, b) {
          for (var i in b) {
              if (hasOwnProp(b, i)) {
                  a[i] = b[i];
              }
          }

          if (hasOwnProp(b, 'toString')) {
              a.toString = b.toString;
          }

          if (hasOwnProp(b, 'valueOf')) {
              a.valueOf = b.valueOf;
          }

          return a;
      }

      function createUTC (input, format, locale, strict) {
          return createLocalOrUTC(input, format, locale, strict, true).utc();
      }

      function defaultParsingFlags() {
          // We need to deep clone this object.
          return {
              empty           : false,
              unusedTokens    : [],
              unusedInput     : [],
              overflow        : -2,
              charsLeftOver   : 0,
              nullInput       : false,
              invalidMonth    : null,
              invalidFormat   : false,
              userInvalidated : false,
              iso             : false,
              parsedDateParts : [],
              meridiem        : null,
              rfc2822         : false,
              weekdayMismatch : false
          };
      }

      function getParsingFlags(m) {
          if (m._pf == null) {
              m._pf = defaultParsingFlags();
          }
          return m._pf;
      }

      var some;
      if (Array.prototype.some) {
          some = Array.prototype.some;
      } else {
          some = function (fun) {
              var t = Object(this);
              var len = t.length >>> 0;

              for (var i = 0; i < len; i++) {
                  if (i in t && fun.call(this, t[i], i, t)) {
                      return true;
                  }
              }

              return false;
          };
      }

      function isValid(m) {
          if (m._isValid == null) {
              var flags = getParsingFlags(m);
              var parsedParts = some.call(flags.parsedDateParts, function (i) {
                  return i != null;
              });
              var isNowValid = !isNaN(m._d.getTime()) &&
                  flags.overflow < 0 &&
                  !flags.empty &&
                  !flags.invalidMonth &&
                  !flags.invalidWeekday &&
                  !flags.weekdayMismatch &&
                  !flags.nullInput &&
                  !flags.invalidFormat &&
                  !flags.userInvalidated &&
                  (!flags.meridiem || (flags.meridiem && parsedParts));

              if (m._strict) {
                  isNowValid = isNowValid &&
                      flags.charsLeftOver === 0 &&
                      flags.unusedTokens.length === 0 &&
                      flags.bigHour === undefined;
              }

              if (Object.isFrozen == null || !Object.isFrozen(m)) {
                  m._isValid = isNowValid;
              }
              else {
                  return isNowValid;
              }
          }
          return m._isValid;
      }

      function createInvalid (flags) {
          var m = createUTC(NaN);
          if (flags != null) {
              extend(getParsingFlags(m), flags);
          }
          else {
              getParsingFlags(m).userInvalidated = true;
          }

          return m;
      }

      // Plugins that add properties should also add the key here (null value),
      // so we can properly clone ourselves.
      var momentProperties = hooks.momentProperties = [];

      function copyConfig(to, from) {
          var i, prop, val;

          if (!isUndefined(from._isAMomentObject)) {
              to._isAMomentObject = from._isAMomentObject;
          }
          if (!isUndefined(from._i)) {
              to._i = from._i;
          }
          if (!isUndefined(from._f)) {
              to._f = from._f;
          }
          if (!isUndefined(from._l)) {
              to._l = from._l;
          }
          if (!isUndefined(from._strict)) {
              to._strict = from._strict;
          }
          if (!isUndefined(from._tzm)) {
              to._tzm = from._tzm;
          }
          if (!isUndefined(from._isUTC)) {
              to._isUTC = from._isUTC;
          }
          if (!isUndefined(from._offset)) {
              to._offset = from._offset;
          }
          if (!isUndefined(from._pf)) {
              to._pf = getParsingFlags(from);
          }
          if (!isUndefined(from._locale)) {
              to._locale = from._locale;
          }

          if (momentProperties.length > 0) {
              for (i = 0; i < momentProperties.length; i++) {
                  prop = momentProperties[i];
                  val = from[prop];
                  if (!isUndefined(val)) {
                      to[prop] = val;
                  }
              }
          }

          return to;
      }

      var updateInProgress = false;

      // Moment prototype object
      function Moment(config) {
          copyConfig(this, config);
          this._d = new Date(config._d != null ? config._d.getTime() : NaN);
          if (!this.isValid()) {
              this._d = new Date(NaN);
          }
          // Prevent infinite loop in case updateOffset creates new moment
          // objects.
          if (updateInProgress === false) {
              updateInProgress = true;
              hooks.updateOffset(this);
              updateInProgress = false;
          }
      }

      function isMoment (obj) {
          return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
      }

      function absFloor (number) {
          if (number < 0) {
              // -0 -> 0
              return Math.ceil(number) || 0;
          } else {
              return Math.floor(number);
          }
      }

      function toInt(argumentForCoercion) {
          var coercedNumber = +argumentForCoercion,
              value = 0;

          if (coercedNumber !== 0 && isFinite(coercedNumber)) {
              value = absFloor(coercedNumber);
          }

          return value;
      }

      // compare two arrays, return the number of differences
      function compareArrays(array1, array2, dontConvert) {
          var len = Math.min(array1.length, array2.length),
              lengthDiff = Math.abs(array1.length - array2.length),
              diffs = 0,
              i;
          for (i = 0; i < len; i++) {
              if ((dontConvert && array1[i] !== array2[i]) ||
                  (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                  diffs++;
              }
          }
          return diffs + lengthDiff;
      }

      function warn(msg) {
          if (hooks.suppressDeprecationWarnings === false &&
                  (typeof console !==  'undefined') && console.warn) {
              console.warn('Deprecation warning: ' + msg);
          }
      }

      function deprecate(msg, fn) {
          var firstTime = true;

          return extend(function () {
              if (hooks.deprecationHandler != null) {
                  hooks.deprecationHandler(null, msg);
              }
              if (firstTime) {
                  var args = [];
                  var arg;
                  for (var i = 0; i < arguments.length; i++) {
                      arg = '';
                      if (typeof arguments[i] === 'object') {
                          arg += '\n[' + i + '] ';
                          for (var key in arguments[0]) {
                              arg += key + ': ' + arguments[0][key] + ', ';
                          }
                          arg = arg.slice(0, -2); // Remove trailing comma and space
                      } else {
                          arg = arguments[i];
                      }
                      args.push(arg);
                  }
                  warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                  firstTime = false;
              }
              return fn.apply(this, arguments);
          }, fn);
      }

      var deprecations = {};

      function deprecateSimple(name, msg) {
          if (hooks.deprecationHandler != null) {
              hooks.deprecationHandler(name, msg);
          }
          if (!deprecations[name]) {
              warn(msg);
              deprecations[name] = true;
          }
      }

      hooks.suppressDeprecationWarnings = false;
      hooks.deprecationHandler = null;

      function isFunction(input) {
          return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
      }

      function set (config) {
          var prop, i;
          for (i in config) {
              prop = config[i];
              if (isFunction(prop)) {
                  this[i] = prop;
              } else {
                  this['_' + i] = prop;
              }
          }
          this._config = config;
          // Lenient ordinal parsing accepts just a number in addition to
          // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
          // TODO: Remove "ordinalParse" fallback in next major release.
          this._dayOfMonthOrdinalParseLenient = new RegExp(
              (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                  '|' + (/\d{1,2}/).source);
      }

      function mergeConfigs(parentConfig, childConfig) {
          var res = extend({}, parentConfig), prop;
          for (prop in childConfig) {
              if (hasOwnProp(childConfig, prop)) {
                  if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                      res[prop] = {};
                      extend(res[prop], parentConfig[prop]);
                      extend(res[prop], childConfig[prop]);
                  } else if (childConfig[prop] != null) {
                      res[prop] = childConfig[prop];
                  } else {
                      delete res[prop];
                  }
              }
          }
          for (prop in parentConfig) {
              if (hasOwnProp(parentConfig, prop) &&
                      !hasOwnProp(childConfig, prop) &&
                      isObject(parentConfig[prop])) {
                  // make sure changes to properties don't modify parent config
                  res[prop] = extend({}, res[prop]);
              }
          }
          return res;
      }

      function Locale(config) {
          if (config != null) {
              this.set(config);
          }
      }

      var keys;

      if (Object.keys) {
          keys = Object.keys;
      } else {
          keys = function (obj) {
              var i, res = [];
              for (i in obj) {
                  if (hasOwnProp(obj, i)) {
                      res.push(i);
                  }
              }
              return res;
          };
      }

      var defaultCalendar = {
          sameDay : '[Today at] LT',
          nextDay : '[Tomorrow at] LT',
          nextWeek : 'dddd [at] LT',
          lastDay : '[Yesterday at] LT',
          lastWeek : '[Last] dddd [at] LT',
          sameElse : 'L'
      };

      function calendar (key, mom, now) {
          var output = this._calendar[key] || this._calendar['sameElse'];
          return isFunction(output) ? output.call(mom, now) : output;
      }

      var defaultLongDateFormat = {
          LTS  : 'h:mm:ss A',
          LT   : 'h:mm A',
          L    : 'MM/DD/YYYY',
          LL   : 'MMMM D, YYYY',
          LLL  : 'MMMM D, YYYY h:mm A',
          LLLL : 'dddd, MMMM D, YYYY h:mm A'
      };

      function longDateFormat (key) {
          var format = this._longDateFormat[key],
              formatUpper = this._longDateFormat[key.toUpperCase()];

          if (format || !formatUpper) {
              return format;
          }

          this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
              return val.slice(1);
          });

          return this._longDateFormat[key];
      }

      var defaultInvalidDate = 'Invalid date';

      function invalidDate () {
          return this._invalidDate;
      }

      var defaultOrdinal = '%d';
      var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

      function ordinal (number) {
          return this._ordinal.replace('%d', number);
      }

      var defaultRelativeTime = {
          future : 'in %s',
          past   : '%s ago',
          s  : 'a few seconds',
          ss : '%d seconds',
          m  : 'a minute',
          mm : '%d minutes',
          h  : 'an hour',
          hh : '%d hours',
          d  : 'a day',
          dd : '%d days',
          M  : 'a month',
          MM : '%d months',
          y  : 'a year',
          yy : '%d years'
      };

      function relativeTime (number, withoutSuffix, string, isFuture) {
          var output = this._relativeTime[string];
          return (isFunction(output)) ?
              output(number, withoutSuffix, string, isFuture) :
              output.replace(/%d/i, number);
      }

      function pastFuture (diff, output) {
          var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
          return isFunction(format) ? format(output) : format.replace(/%s/i, output);
      }

      var aliases = {};

      function addUnitAlias (unit, shorthand) {
          var lowerCase = unit.toLowerCase();
          aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
      }

      function normalizeUnits(units) {
          return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
      }

      function normalizeObjectUnits(inputObject) {
          var normalizedInput = {},
              normalizedProp,
              prop;

          for (prop in inputObject) {
              if (hasOwnProp(inputObject, prop)) {
                  normalizedProp = normalizeUnits(prop);
                  if (normalizedProp) {
                      normalizedInput[normalizedProp] = inputObject[prop];
                  }
              }
          }

          return normalizedInput;
      }

      var priorities = {};

      function addUnitPriority(unit, priority) {
          priorities[unit] = priority;
      }

      function getPrioritizedUnits(unitsObj) {
          var units = [];
          for (var u in unitsObj) {
              units.push({unit: u, priority: priorities[u]});
          }
          units.sort(function (a, b) {
              return a.priority - b.priority;
          });
          return units;
      }

      function zeroFill(number, targetLength, forceSign) {
          var absNumber = '' + Math.abs(number),
              zerosToFill = targetLength - absNumber.length,
              sign = number >= 0;
          return (sign ? (forceSign ? '+' : '') : '-') +
              Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
      }

      var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

      var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

      var formatFunctions = {};

      var formatTokenFunctions = {};

      // token:    'M'
      // padded:   ['MM', 2]
      // ordinal:  'Mo'
      // callback: function () { this.month() + 1 }
      function addFormatToken (token, padded, ordinal, callback) {
          var func = callback;
          if (typeof callback === 'string') {
              func = function () {
                  return this[callback]();
              };
          }
          if (token) {
              formatTokenFunctions[token] = func;
          }
          if (padded) {
              formatTokenFunctions[padded[0]] = function () {
                  return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
              };
          }
          if (ordinal) {
              formatTokenFunctions[ordinal] = function () {
                  return this.localeData().ordinal(func.apply(this, arguments), token);
              };
          }
      }

      function removeFormattingTokens(input) {
          if (input.match(/\[[\s\S]/)) {
              return input.replace(/^\[|\]$/g, '');
          }
          return input.replace(/\\/g, '');
      }

      function makeFormatFunction(format) {
          var array = format.match(formattingTokens), i, length;

          for (i = 0, length = array.length; i < length; i++) {
              if (formatTokenFunctions[array[i]]) {
                  array[i] = formatTokenFunctions[array[i]];
              } else {
                  array[i] = removeFormattingTokens(array[i]);
              }
          }

          return function (mom) {
              var output = '', i;
              for (i = 0; i < length; i++) {
                  output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
              }
              return output;
          };
      }

      // format date using native date object
      function formatMoment(m, format) {
          if (!m.isValid()) {
              return m.localeData().invalidDate();
          }

          format = expandFormat(format, m.localeData());
          formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

          return formatFunctions[format](m);
      }

      function expandFormat(format, locale) {
          var i = 5;

          function replaceLongDateFormatTokens(input) {
              return locale.longDateFormat(input) || input;
          }

          localFormattingTokens.lastIndex = 0;
          while (i >= 0 && localFormattingTokens.test(format)) {
              format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
              localFormattingTokens.lastIndex = 0;
              i -= 1;
          }

          return format;
      }

      var match1         = /\d/;            //       0 - 9
      var match2         = /\d\d/;          //      00 - 99
      var match3         = /\d{3}/;         //     000 - 999
      var match4         = /\d{4}/;         //    0000 - 9999
      var match6         = /[+-]?\d{6}/;    // -999999 - 999999
      var match1to2      = /\d\d?/;         //       0 - 99
      var match3to4      = /\d\d\d\d?/;     //     999 - 9999
      var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
      var match1to3      = /\d{1,3}/;       //       0 - 999
      var match1to4      = /\d{1,4}/;       //       0 - 9999
      var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

      var matchUnsigned  = /\d+/;           //       0 - inf
      var matchSigned    = /[+-]?\d+/;      //    -inf - inf

      var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
      var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

      var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

      // any word (or two) characters or numbers including two/three word month in arabic.
      // includes scottish gaelic two word and hyphenated months
      var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

      var regexes = {};

      function addRegexToken (token, regex, strictRegex) {
          regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
              return (isStrict && strictRegex) ? strictRegex : regex;
          };
      }

      function getParseRegexForToken (token, config) {
          if (!hasOwnProp(regexes, token)) {
              return new RegExp(unescapeFormat(token));
          }

          return regexes[token](config._strict, config._locale);
      }

      // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
      function unescapeFormat(s) {
          return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
              return p1 || p2 || p3 || p4;
          }));
      }

      function regexEscape(s) {
          return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
      }

      var tokens = {};

      function addParseToken (token, callback) {
          var i, func = callback;
          if (typeof token === 'string') {
              token = [token];
          }
          if (isNumber(callback)) {
              func = function (input, array) {
                  array[callback] = toInt(input);
              };
          }
          for (i = 0; i < token.length; i++) {
              tokens[token[i]] = func;
          }
      }

      function addWeekParseToken (token, callback) {
          addParseToken(token, function (input, array, config, token) {
              config._w = config._w || {};
              callback(input, config._w, config, token);
          });
      }

      function addTimeToArrayFromToken(token, input, config) {
          if (input != null && hasOwnProp(tokens, token)) {
              tokens[token](input, config._a, config, token);
          }
      }

      var YEAR = 0;
      var MONTH = 1;
      var DATE = 2;
      var HOUR = 3;
      var MINUTE = 4;
      var SECOND = 5;
      var MILLISECOND = 6;
      var WEEK = 7;
      var WEEKDAY = 8;

      // FORMATTING

      addFormatToken('Y', 0, 0, function () {
          var y = this.year();
          return y <= 9999 ? '' + y : '+' + y;
      });

      addFormatToken(0, ['YY', 2], 0, function () {
          return this.year() % 100;
      });

      addFormatToken(0, ['YYYY',   4],       0, 'year');
      addFormatToken(0, ['YYYYY',  5],       0, 'year');
      addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

      // ALIASES

      addUnitAlias('year', 'y');

      // PRIORITIES

      addUnitPriority('year', 1);

      // PARSING

      addRegexToken('Y',      matchSigned);
      addRegexToken('YY',     match1to2, match2);
      addRegexToken('YYYY',   match1to4, match4);
      addRegexToken('YYYYY',  match1to6, match6);
      addRegexToken('YYYYYY', match1to6, match6);

      addParseToken(['YYYYY', 'YYYYYY'], YEAR);
      addParseToken('YYYY', function (input, array) {
          array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
      });
      addParseToken('YY', function (input, array) {
          array[YEAR] = hooks.parseTwoDigitYear(input);
      });
      addParseToken('Y', function (input, array) {
          array[YEAR] = parseInt(input, 10);
      });

      // HELPERS

      function daysInYear(year) {
          return isLeapYear(year) ? 366 : 365;
      }

      function isLeapYear(year) {
          return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
      }

      // HOOKS

      hooks.parseTwoDigitYear = function (input) {
          return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
      };

      // MOMENTS

      var getSetYear = makeGetSet('FullYear', true);

      function getIsLeapYear () {
          return isLeapYear(this.year());
      }

      function makeGetSet (unit, keepTime) {
          return function (value) {
              if (value != null) {
                  set$1(this, unit, value);
                  hooks.updateOffset(this, keepTime);
                  return this;
              } else {
                  return get(this, unit);
              }
          };
      }

      function get (mom, unit) {
          return mom.isValid() ?
              mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
      }

      function set$1 (mom, unit, value) {
          if (mom.isValid() && !isNaN(value)) {
              if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                  mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
              }
              else {
                  mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
              }
          }
      }

      // MOMENTS

      function stringGet (units) {
          units = normalizeUnits(units);
          if (isFunction(this[units])) {
              return this[units]();
          }
          return this;
      }


      function stringSet (units, value) {
          if (typeof units === 'object') {
              units = normalizeObjectUnits(units);
              var prioritized = getPrioritizedUnits(units);
              for (var i = 0; i < prioritized.length; i++) {
                  this[prioritized[i].unit](units[prioritized[i].unit]);
              }
          } else {
              units = normalizeUnits(units);
              if (isFunction(this[units])) {
                  return this[units](value);
              }
          }
          return this;
      }

      function mod(n, x) {
          return ((n % x) + x) % x;
      }

      var indexOf;

      if (Array.prototype.indexOf) {
          indexOf = Array.prototype.indexOf;
      } else {
          indexOf = function (o) {
              // I know
              var i;
              for (i = 0; i < this.length; ++i) {
                  if (this[i] === o) {
                      return i;
                  }
              }
              return -1;
          };
      }

      function daysInMonth(year, month) {
          if (isNaN(year) || isNaN(month)) {
              return NaN;
          }
          var modMonth = mod(month, 12);
          year += (month - modMonth) / 12;
          return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
      }

      // FORMATTING

      addFormatToken('M', ['MM', 2], 'Mo', function () {
          return this.month() + 1;
      });

      addFormatToken('MMM', 0, 0, function (format) {
          return this.localeData().monthsShort(this, format);
      });

      addFormatToken('MMMM', 0, 0, function (format) {
          return this.localeData().months(this, format);
      });

      // ALIASES

      addUnitAlias('month', 'M');

      // PRIORITY

      addUnitPriority('month', 8);

      // PARSING

      addRegexToken('M',    match1to2);
      addRegexToken('MM',   match1to2, match2);
      addRegexToken('MMM',  function (isStrict, locale) {
          return locale.monthsShortRegex(isStrict);
      });
      addRegexToken('MMMM', function (isStrict, locale) {
          return locale.monthsRegex(isStrict);
      });

      addParseToken(['M', 'MM'], function (input, array) {
          array[MONTH] = toInt(input) - 1;
      });

      addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
          var month = config._locale.monthsParse(input, token, config._strict);
          // if we didn't find a month name, mark the date as invalid.
          if (month != null) {
              array[MONTH] = month;
          } else {
              getParsingFlags(config).invalidMonth = input;
          }
      });

      // LOCALES

      var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
      var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
      function localeMonths (m, format) {
          if (!m) {
              return isArray(this._months) ? this._months :
                  this._months['standalone'];
          }
          return isArray(this._months) ? this._months[m.month()] :
              this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
      }

      var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
      function localeMonthsShort (m, format) {
          if (!m) {
              return isArray(this._monthsShort) ? this._monthsShort :
                  this._monthsShort['standalone'];
          }
          return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
              this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
      }

      function handleStrictParse(monthName, format, strict) {
          var i, ii, mom, llc = monthName.toLocaleLowerCase();
          if (!this._monthsParse) {
              // this is not used
              this._monthsParse = [];
              this._longMonthsParse = [];
              this._shortMonthsParse = [];
              for (i = 0; i < 12; ++i) {
                  mom = createUTC([2000, i]);
                  this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                  this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
              }
          }

          if (strict) {
              if (format === 'MMM') {
                  ii = indexOf.call(this._shortMonthsParse, llc);
                  return ii !== -1 ? ii : null;
              } else {
                  ii = indexOf.call(this._longMonthsParse, llc);
                  return ii !== -1 ? ii : null;
              }
          } else {
              if (format === 'MMM') {
                  ii = indexOf.call(this._shortMonthsParse, llc);
                  if (ii !== -1) {
                      return ii;
                  }
                  ii = indexOf.call(this._longMonthsParse, llc);
                  return ii !== -1 ? ii : null;
              } else {
                  ii = indexOf.call(this._longMonthsParse, llc);
                  if (ii !== -1) {
                      return ii;
                  }
                  ii = indexOf.call(this._shortMonthsParse, llc);
                  return ii !== -1 ? ii : null;
              }
          }
      }

      function localeMonthsParse (monthName, format, strict) {
          var i, mom, regex;

          if (this._monthsParseExact) {
              return handleStrictParse.call(this, monthName, format, strict);
          }

          if (!this._monthsParse) {
              this._monthsParse = [];
              this._longMonthsParse = [];
              this._shortMonthsParse = [];
          }

          // TODO: add sorting
          // Sorting makes sure if one month (or abbr) is a prefix of another
          // see sorting in computeMonthsParse
          for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, i]);
              if (strict && !this._longMonthsParse[i]) {
                  this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                  this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
              }
              if (!strict && !this._monthsParse[i]) {
                  regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                  this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
              }
              // test the regex
              if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                  return i;
              } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                  return i;
              } else if (!strict && this._monthsParse[i].test(monthName)) {
                  return i;
              }
          }
      }

      // MOMENTS

      function setMonth (mom, value) {
          var dayOfMonth;

          if (!mom.isValid()) {
              // No op
              return mom;
          }

          if (typeof value === 'string') {
              if (/^\d+$/.test(value)) {
                  value = toInt(value);
              } else {
                  value = mom.localeData().monthsParse(value);
                  // TODO: Another silent failure?
                  if (!isNumber(value)) {
                      return mom;
                  }
              }
          }

          dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
          mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
          return mom;
      }

      function getSetMonth (value) {
          if (value != null) {
              setMonth(this, value);
              hooks.updateOffset(this, true);
              return this;
          } else {
              return get(this, 'Month');
          }
      }

      function getDaysInMonth () {
          return daysInMonth(this.year(), this.month());
      }

      var defaultMonthsShortRegex = matchWord;
      function monthsShortRegex (isStrict) {
          if (this._monthsParseExact) {
              if (!hasOwnProp(this, '_monthsRegex')) {
                  computeMonthsParse.call(this);
              }
              if (isStrict) {
                  return this._monthsShortStrictRegex;
              } else {
                  return this._monthsShortRegex;
              }
          } else {
              if (!hasOwnProp(this, '_monthsShortRegex')) {
                  this._monthsShortRegex = defaultMonthsShortRegex;
              }
              return this._monthsShortStrictRegex && isStrict ?
                  this._monthsShortStrictRegex : this._monthsShortRegex;
          }
      }

      var defaultMonthsRegex = matchWord;
      function monthsRegex (isStrict) {
          if (this._monthsParseExact) {
              if (!hasOwnProp(this, '_monthsRegex')) {
                  computeMonthsParse.call(this);
              }
              if (isStrict) {
                  return this._monthsStrictRegex;
              } else {
                  return this._monthsRegex;
              }
          } else {
              if (!hasOwnProp(this, '_monthsRegex')) {
                  this._monthsRegex = defaultMonthsRegex;
              }
              return this._monthsStrictRegex && isStrict ?
                  this._monthsStrictRegex : this._monthsRegex;
          }
      }

      function computeMonthsParse () {
          function cmpLenRev(a, b) {
              return b.length - a.length;
          }

          var shortPieces = [], longPieces = [], mixedPieces = [],
              i, mom;
          for (i = 0; i < 12; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, i]);
              shortPieces.push(this.monthsShort(mom, ''));
              longPieces.push(this.months(mom, ''));
              mixedPieces.push(this.months(mom, ''));
              mixedPieces.push(this.monthsShort(mom, ''));
          }
          // Sorting makes sure if one month (or abbr) is a prefix of another it
          // will match the longer piece.
          shortPieces.sort(cmpLenRev);
          longPieces.sort(cmpLenRev);
          mixedPieces.sort(cmpLenRev);
          for (i = 0; i < 12; i++) {
              shortPieces[i] = regexEscape(shortPieces[i]);
              longPieces[i] = regexEscape(longPieces[i]);
          }
          for (i = 0; i < 24; i++) {
              mixedPieces[i] = regexEscape(mixedPieces[i]);
          }

          this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
          this._monthsShortRegex = this._monthsRegex;
          this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
          this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
      }

      function createDate (y, m, d, h, M, s, ms) {
          // can't just apply() to create a date:
          // https://stackoverflow.com/q/181348
          var date = new Date(y, m, d, h, M, s, ms);

          // the date constructor remaps years 0-99 to 1900-1999
          if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
              date.setFullYear(y);
          }
          return date;
      }

      function createUTCDate (y) {
          var date = new Date(Date.UTC.apply(null, arguments));

          // the Date.UTC function remaps years 0-99 to 1900-1999
          if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
              date.setUTCFullYear(y);
          }
          return date;
      }

      // start-of-first-week - start-of-year
      function firstWeekOffset(year, dow, doy) {
          var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
              fwd = 7 + dow - doy,
              // first-week day local weekday -- which local weekday is fwd
              fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

          return -fwdlw + fwd - 1;
      }

      // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
      function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
          var localWeekday = (7 + weekday - dow) % 7,
              weekOffset = firstWeekOffset(year, dow, doy),
              dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
              resYear, resDayOfYear;

          if (dayOfYear <= 0) {
              resYear = year - 1;
              resDayOfYear = daysInYear(resYear) + dayOfYear;
          } else if (dayOfYear > daysInYear(year)) {
              resYear = year + 1;
              resDayOfYear = dayOfYear - daysInYear(year);
          } else {
              resYear = year;
              resDayOfYear = dayOfYear;
          }

          return {
              year: resYear,
              dayOfYear: resDayOfYear
          };
      }

      function weekOfYear(mom, dow, doy) {
          var weekOffset = firstWeekOffset(mom.year(), dow, doy),
              week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
              resWeek, resYear;

          if (week < 1) {
              resYear = mom.year() - 1;
              resWeek = week + weeksInYear(resYear, dow, doy);
          } else if (week > weeksInYear(mom.year(), dow, doy)) {
              resWeek = week - weeksInYear(mom.year(), dow, doy);
              resYear = mom.year() + 1;
          } else {
              resYear = mom.year();
              resWeek = week;
          }

          return {
              week: resWeek,
              year: resYear
          };
      }

      function weeksInYear(year, dow, doy) {
          var weekOffset = firstWeekOffset(year, dow, doy),
              weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
          return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
      }

      // FORMATTING

      addFormatToken('w', ['ww', 2], 'wo', 'week');
      addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

      // ALIASES

      addUnitAlias('week', 'w');
      addUnitAlias('isoWeek', 'W');

      // PRIORITIES

      addUnitPriority('week', 5);
      addUnitPriority('isoWeek', 5);

      // PARSING

      addRegexToken('w',  match1to2);
      addRegexToken('ww', match1to2, match2);
      addRegexToken('W',  match1to2);
      addRegexToken('WW', match1to2, match2);

      addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
          week[token.substr(0, 1)] = toInt(input);
      });

      // HELPERS

      // LOCALES

      function localeWeek (mom) {
          return weekOfYear(mom, this._week.dow, this._week.doy).week;
      }

      var defaultLocaleWeek = {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      };

      function localeFirstDayOfWeek () {
          return this._week.dow;
      }

      function localeFirstDayOfYear () {
          return this._week.doy;
      }

      // MOMENTS

      function getSetWeek (input) {
          var week = this.localeData().week(this);
          return input == null ? week : this.add((input - week) * 7, 'd');
      }

      function getSetISOWeek (input) {
          var week = weekOfYear(this, 1, 4).week;
          return input == null ? week : this.add((input - week) * 7, 'd');
      }

      // FORMATTING

      addFormatToken('d', 0, 'do', 'day');

      addFormatToken('dd', 0, 0, function (format) {
          return this.localeData().weekdaysMin(this, format);
      });

      addFormatToken('ddd', 0, 0, function (format) {
          return this.localeData().weekdaysShort(this, format);
      });

      addFormatToken('dddd', 0, 0, function (format) {
          return this.localeData().weekdays(this, format);
      });

      addFormatToken('e', 0, 0, 'weekday');
      addFormatToken('E', 0, 0, 'isoWeekday');

      // ALIASES

      addUnitAlias('day', 'd');
      addUnitAlias('weekday', 'e');
      addUnitAlias('isoWeekday', 'E');

      // PRIORITY
      addUnitPriority('day', 11);
      addUnitPriority('weekday', 11);
      addUnitPriority('isoWeekday', 11);

      // PARSING

      addRegexToken('d',    match1to2);
      addRegexToken('e',    match1to2);
      addRegexToken('E',    match1to2);
      addRegexToken('dd',   function (isStrict, locale) {
          return locale.weekdaysMinRegex(isStrict);
      });
      addRegexToken('ddd',   function (isStrict, locale) {
          return locale.weekdaysShortRegex(isStrict);
      });
      addRegexToken('dddd',   function (isStrict, locale) {
          return locale.weekdaysRegex(isStrict);
      });

      addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
          var weekday = config._locale.weekdaysParse(input, token, config._strict);
          // if we didn't get a weekday name, mark the date as invalid
          if (weekday != null) {
              week.d = weekday;
          } else {
              getParsingFlags(config).invalidWeekday = input;
          }
      });

      addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
          week[token] = toInt(input);
      });

      // HELPERS

      function parseWeekday(input, locale) {
          if (typeof input !== 'string') {
              return input;
          }

          if (!isNaN(input)) {
              return parseInt(input, 10);
          }

          input = locale.weekdaysParse(input);
          if (typeof input === 'number') {
              return input;
          }

          return null;
      }

      function parseIsoWeekday(input, locale) {
          if (typeof input === 'string') {
              return locale.weekdaysParse(input) % 7 || 7;
          }
          return isNaN(input) ? null : input;
      }

      // LOCALES

      var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
      function localeWeekdays (m, format) {
          if (!m) {
              return isArray(this._weekdays) ? this._weekdays :
                  this._weekdays['standalone'];
          }
          return isArray(this._weekdays) ? this._weekdays[m.day()] :
              this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
      }

      var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
      function localeWeekdaysShort (m) {
          return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
      }

      var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
      function localeWeekdaysMin (m) {
          return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
      }

      function handleStrictParse$1(weekdayName, format, strict) {
          var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
          if (!this._weekdaysParse) {
              this._weekdaysParse = [];
              this._shortWeekdaysParse = [];
              this._minWeekdaysParse = [];

              for (i = 0; i < 7; ++i) {
                  mom = createUTC([2000, 1]).day(i);
                  this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                  this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                  this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
              }
          }

          if (strict) {
              if (format === 'dddd') {
                  ii = indexOf.call(this._weekdaysParse, llc);
                  return ii !== -1 ? ii : null;
              } else if (format === 'ddd') {
                  ii = indexOf.call(this._shortWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
              } else {
                  ii = indexOf.call(this._minWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
              }
          } else {
              if (format === 'dddd') {
                  ii = indexOf.call(this._weekdaysParse, llc);
                  if (ii !== -1) {
                      return ii;
                  }
                  ii = indexOf.call(this._shortWeekdaysParse, llc);
                  if (ii !== -1) {
                      return ii;
                  }
                  ii = indexOf.call(this._minWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
              } else if (format === 'ddd') {
                  ii = indexOf.call(this._shortWeekdaysParse, llc);
                  if (ii !== -1) {
                      return ii;
                  }
                  ii = indexOf.call(this._weekdaysParse, llc);
                  if (ii !== -1) {
                      return ii;
                  }
                  ii = indexOf.call(this._minWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
              } else {
                  ii = indexOf.call(this._minWeekdaysParse, llc);
                  if (ii !== -1) {
                      return ii;
                  }
                  ii = indexOf.call(this._weekdaysParse, llc);
                  if (ii !== -1) {
                      return ii;
                  }
                  ii = indexOf.call(this._shortWeekdaysParse, llc);
                  return ii !== -1 ? ii : null;
              }
          }
      }

      function localeWeekdaysParse (weekdayName, format, strict) {
          var i, mom, regex;

          if (this._weekdaysParseExact) {
              return handleStrictParse$1.call(this, weekdayName, format, strict);
          }

          if (!this._weekdaysParse) {
              this._weekdaysParse = [];
              this._minWeekdaysParse = [];
              this._shortWeekdaysParse = [];
              this._fullWeekdaysParse = [];
          }

          for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already

              mom = createUTC([2000, 1]).day(i);
              if (strict && !this._fullWeekdaysParse[i]) {
                  this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                  this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                  this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
              }
              if (!this._weekdaysParse[i]) {
                  regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                  this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
              }
              // test the regex
              if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                  return i;
              } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                  return i;
              } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                  return i;
              } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                  return i;
              }
          }
      }

      // MOMENTS

      function getSetDayOfWeek (input) {
          if (!this.isValid()) {
              return input != null ? this : NaN;
          }
          var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
          if (input != null) {
              input = parseWeekday(input, this.localeData());
              return this.add(input - day, 'd');
          } else {
              return day;
          }
      }

      function getSetLocaleDayOfWeek (input) {
          if (!this.isValid()) {
              return input != null ? this : NaN;
          }
          var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
          return input == null ? weekday : this.add(input - weekday, 'd');
      }

      function getSetISODayOfWeek (input) {
          if (!this.isValid()) {
              return input != null ? this : NaN;
          }

          // behaves the same as moment#day except
          // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
          // as a setter, sunday should belong to the previous week.

          if (input != null) {
              var weekday = parseIsoWeekday(input, this.localeData());
              return this.day(this.day() % 7 ? weekday : weekday - 7);
          } else {
              return this.day() || 7;
          }
      }

      var defaultWeekdaysRegex = matchWord;
      function weekdaysRegex (isStrict) {
          if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                  computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                  return this._weekdaysStrictRegex;
              } else {
                  return this._weekdaysRegex;
              }
          } else {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                  this._weekdaysRegex = defaultWeekdaysRegex;
              }
              return this._weekdaysStrictRegex && isStrict ?
                  this._weekdaysStrictRegex : this._weekdaysRegex;
          }
      }

      var defaultWeekdaysShortRegex = matchWord;
      function weekdaysShortRegex (isStrict) {
          if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                  computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                  return this._weekdaysShortStrictRegex;
              } else {
                  return this._weekdaysShortRegex;
              }
          } else {
              if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                  this._weekdaysShortRegex = defaultWeekdaysShortRegex;
              }
              return this._weekdaysShortStrictRegex && isStrict ?
                  this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
          }
      }

      var defaultWeekdaysMinRegex = matchWord;
      function weekdaysMinRegex (isStrict) {
          if (this._weekdaysParseExact) {
              if (!hasOwnProp(this, '_weekdaysRegex')) {
                  computeWeekdaysParse.call(this);
              }
              if (isStrict) {
                  return this._weekdaysMinStrictRegex;
              } else {
                  return this._weekdaysMinRegex;
              }
          } else {
              if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                  this._weekdaysMinRegex = defaultWeekdaysMinRegex;
              }
              return this._weekdaysMinStrictRegex && isStrict ?
                  this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
          }
      }


      function computeWeekdaysParse () {
          function cmpLenRev(a, b) {
              return b.length - a.length;
          }

          var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
              i, mom, minp, shortp, longp;
          for (i = 0; i < 7; i++) {
              // make the regex if we don't have it already
              mom = createUTC([2000, 1]).day(i);
              minp = this.weekdaysMin(mom, '');
              shortp = this.weekdaysShort(mom, '');
              longp = this.weekdays(mom, '');
              minPieces.push(minp);
              shortPieces.push(shortp);
              longPieces.push(longp);
              mixedPieces.push(minp);
              mixedPieces.push(shortp);
              mixedPieces.push(longp);
          }
          // Sorting makes sure if one weekday (or abbr) is a prefix of another it
          // will match the longer piece.
          minPieces.sort(cmpLenRev);
          shortPieces.sort(cmpLenRev);
          longPieces.sort(cmpLenRev);
          mixedPieces.sort(cmpLenRev);
          for (i = 0; i < 7; i++) {
              shortPieces[i] = regexEscape(shortPieces[i]);
              longPieces[i] = regexEscape(longPieces[i]);
              mixedPieces[i] = regexEscape(mixedPieces[i]);
          }

          this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
          this._weekdaysShortRegex = this._weekdaysRegex;
          this._weekdaysMinRegex = this._weekdaysRegex;

          this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
          this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
          this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
      }

      // FORMATTING

      function hFormat() {
          return this.hours() % 12 || 12;
      }

      function kFormat() {
          return this.hours() || 24;
      }

      addFormatToken('H', ['HH', 2], 0, 'hour');
      addFormatToken('h', ['hh', 2], 0, hFormat);
      addFormatToken('k', ['kk', 2], 0, kFormat);

      addFormatToken('hmm', 0, 0, function () {
          return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
      });

      addFormatToken('hmmss', 0, 0, function () {
          return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
              zeroFill(this.seconds(), 2);
      });

      addFormatToken('Hmm', 0, 0, function () {
          return '' + this.hours() + zeroFill(this.minutes(), 2);
      });

      addFormatToken('Hmmss', 0, 0, function () {
          return '' + this.hours() + zeroFill(this.minutes(), 2) +
              zeroFill(this.seconds(), 2);
      });

      function meridiem (token, lowercase) {
          addFormatToken(token, 0, 0, function () {
              return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
          });
      }

      meridiem('a', true);
      meridiem('A', false);

      // ALIASES

      addUnitAlias('hour', 'h');

      // PRIORITY
      addUnitPriority('hour', 13);

      // PARSING

      function matchMeridiem (isStrict, locale) {
          return locale._meridiemParse;
      }

      addRegexToken('a',  matchMeridiem);
      addRegexToken('A',  matchMeridiem);
      addRegexToken('H',  match1to2);
      addRegexToken('h',  match1to2);
      addRegexToken('k',  match1to2);
      addRegexToken('HH', match1to2, match2);
      addRegexToken('hh', match1to2, match2);
      addRegexToken('kk', match1to2, match2);

      addRegexToken('hmm', match3to4);
      addRegexToken('hmmss', match5to6);
      addRegexToken('Hmm', match3to4);
      addRegexToken('Hmmss', match5to6);

      addParseToken(['H', 'HH'], HOUR);
      addParseToken(['k', 'kk'], function (input, array, config) {
          var kInput = toInt(input);
          array[HOUR] = kInput === 24 ? 0 : kInput;
      });
      addParseToken(['a', 'A'], function (input, array, config) {
          config._isPm = config._locale.isPM(input);
          config._meridiem = input;
      });
      addParseToken(['h', 'hh'], function (input, array, config) {
          array[HOUR] = toInt(input);
          getParsingFlags(config).bigHour = true;
      });
      addParseToken('hmm', function (input, array, config) {
          var pos = input.length - 2;
          array[HOUR] = toInt(input.substr(0, pos));
          array[MINUTE] = toInt(input.substr(pos));
          getParsingFlags(config).bigHour = true;
      });
      addParseToken('hmmss', function (input, array, config) {
          var pos1 = input.length - 4;
          var pos2 = input.length - 2;
          array[HOUR] = toInt(input.substr(0, pos1));
          array[MINUTE] = toInt(input.substr(pos1, 2));
          array[SECOND] = toInt(input.substr(pos2));
          getParsingFlags(config).bigHour = true;
      });
      addParseToken('Hmm', function (input, array, config) {
          var pos = input.length - 2;
          array[HOUR] = toInt(input.substr(0, pos));
          array[MINUTE] = toInt(input.substr(pos));
      });
      addParseToken('Hmmss', function (input, array, config) {
          var pos1 = input.length - 4;
          var pos2 = input.length - 2;
          array[HOUR] = toInt(input.substr(0, pos1));
          array[MINUTE] = toInt(input.substr(pos1, 2));
          array[SECOND] = toInt(input.substr(pos2));
      });

      // LOCALES

      function localeIsPM (input) {
          // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
          // Using charAt should be more compatible.
          return ((input + '').toLowerCase().charAt(0) === 'p');
      }

      var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
      function localeMeridiem (hours, minutes, isLower) {
          if (hours > 11) {
              return isLower ? 'pm' : 'PM';
          } else {
              return isLower ? 'am' : 'AM';
          }
      }


      // MOMENTS

      // Setting the hour should keep the time, because the user explicitly
      // specified which hour they want. So trying to maintain the same hour (in
      // a new timezone) makes sense. Adding/subtracting hours does not follow
      // this rule.
      var getSetHour = makeGetSet('Hours', true);

      var baseConfig = {
          calendar: defaultCalendar,
          longDateFormat: defaultLongDateFormat,
          invalidDate: defaultInvalidDate,
          ordinal: defaultOrdinal,
          dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
          relativeTime: defaultRelativeTime,

          months: defaultLocaleMonths,
          monthsShort: defaultLocaleMonthsShort,

          week: defaultLocaleWeek,

          weekdays: defaultLocaleWeekdays,
          weekdaysMin: defaultLocaleWeekdaysMin,
          weekdaysShort: defaultLocaleWeekdaysShort,

          meridiemParse: defaultLocaleMeridiemParse
      };

      // internal storage for locale config files
      var locales = {};
      var localeFamilies = {};
      var globalLocale;

      function normalizeLocale(key) {
          return key ? key.toLowerCase().replace('_', '-') : key;
      }

      // pick the locale from the array
      // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
      // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
      function chooseLocale(names) {
          var i = 0, j, next, locale, split;

          while (i < names.length) {
              split = normalizeLocale(names[i]).split('-');
              j = split.length;
              next = normalizeLocale(names[i + 1]);
              next = next ? next.split('-') : null;
              while (j > 0) {
                  locale = loadLocale(split.slice(0, j).join('-'));
                  if (locale) {
                      return locale;
                  }
                  if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                      //the next array item is better than a shallower substring of this one
                      break;
                  }
                  j--;
              }
              i++;
          }
          return globalLocale;
      }

      function loadLocale(name) {
          var oldLocale = null;
          // TODO: Find a better way to register and load all the locales in Node
          if (!locales[name] && ('object' !== 'undefined') &&
                  module && module.exports) {
              try {
                  oldLocale = globalLocale._abbr;
                  var aliasedRequire = commonjsRequire;
                  aliasedRequire('./locale/' + name);
                  getSetGlobalLocale(oldLocale);
              } catch (e) {}
          }
          return locales[name];
      }

      // This function will load locale and then set the global locale.  If
      // no arguments are passed in, it will simply return the current global
      // locale key.
      function getSetGlobalLocale (key, values) {
          var data;
          if (key) {
              if (isUndefined(values)) {
                  data = getLocale(key);
              }
              else {
                  data = defineLocale(key, values);
              }

              if (data) {
                  // moment.duration._locale = moment._locale = data;
                  globalLocale = data;
              }
              else {
                  if ((typeof console !==  'undefined') && console.warn) {
                      //warn user if arguments are passed but the locale could not be set
                      console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                  }
              }
          }

          return globalLocale._abbr;
      }

      function defineLocale (name, config) {
          if (config !== null) {
              var locale, parentConfig = baseConfig;
              config.abbr = name;
              if (locales[name] != null) {
                  deprecateSimple('defineLocaleOverride',
                          'use moment.updateLocale(localeName, config) to change ' +
                          'an existing locale. moment.defineLocale(localeName, ' +
                          'config) should only be used for creating a new locale ' +
                          'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                  parentConfig = locales[name]._config;
              } else if (config.parentLocale != null) {
                  if (locales[config.parentLocale] != null) {
                      parentConfig = locales[config.parentLocale]._config;
                  } else {
                      locale = loadLocale(config.parentLocale);
                      if (locale != null) {
                          parentConfig = locale._config;
                      } else {
                          if (!localeFamilies[config.parentLocale]) {
                              localeFamilies[config.parentLocale] = [];
                          }
                          localeFamilies[config.parentLocale].push({
                              name: name,
                              config: config
                          });
                          return null;
                      }
                  }
              }
              locales[name] = new Locale(mergeConfigs(parentConfig, config));

              if (localeFamilies[name]) {
                  localeFamilies[name].forEach(function (x) {
                      defineLocale(x.name, x.config);
                  });
              }

              // backwards compat for now: also set the locale
              // make sure we set the locale AFTER all child locales have been
              // created, so we won't end up with the child locale set.
              getSetGlobalLocale(name);


              return locales[name];
          } else {
              // useful for testing
              delete locales[name];
              return null;
          }
      }

      function updateLocale(name, config) {
          if (config != null) {
              var locale, tmpLocale, parentConfig = baseConfig;
              // MERGE
              tmpLocale = loadLocale(name);
              if (tmpLocale != null) {
                  parentConfig = tmpLocale._config;
              }
              config = mergeConfigs(parentConfig, config);
              locale = new Locale(config);
              locale.parentLocale = locales[name];
              locales[name] = locale;

              // backwards compat for now: also set the locale
              getSetGlobalLocale(name);
          } else {
              // pass null for config to unupdate, useful for tests
              if (locales[name] != null) {
                  if (locales[name].parentLocale != null) {
                      locales[name] = locales[name].parentLocale;
                  } else if (locales[name] != null) {
                      delete locales[name];
                  }
              }
          }
          return locales[name];
      }

      // returns locale data
      function getLocale (key) {
          var locale;

          if (key && key._locale && key._locale._abbr) {
              key = key._locale._abbr;
          }

          if (!key) {
              return globalLocale;
          }

          if (!isArray(key)) {
              //short-circuit everything else
              locale = loadLocale(key);
              if (locale) {
                  return locale;
              }
              key = [key];
          }

          return chooseLocale(key);
      }

      function listLocales() {
          return keys(locales);
      }

      function checkOverflow (m) {
          var overflow;
          var a = m._a;

          if (a && getParsingFlags(m).overflow === -2) {
              overflow =
                  a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                  a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                  a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                  a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                  a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                  a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                  -1;

              if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                  overflow = DATE;
              }
              if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                  overflow = WEEK;
              }
              if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                  overflow = WEEKDAY;
              }

              getParsingFlags(m).overflow = overflow;
          }

          return m;
      }

      // Pick the first defined of two or three arguments.
      function defaults(a, b, c) {
          if (a != null) {
              return a;
          }
          if (b != null) {
              return b;
          }
          return c;
      }

      function currentDateArray(config) {
          // hooks is actually the exported moment object
          var nowValue = new Date(hooks.now());
          if (config._useUTC) {
              return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
          }
          return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
      }

      // convert an array to a date.
      // the array should mirror the parameters below
      // note: all values past the year are optional and will default to the lowest possible value.
      // [year, month, day , hour, minute, second, millisecond]
      function configFromArray (config) {
          var i, date, input = [], currentDate, expectedWeekday, yearToUse;

          if (config._d) {
              return;
          }

          currentDate = currentDateArray(config);

          //compute day of the year from weeks and weekdays
          if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
              dayOfYearFromWeekInfo(config);
          }

          //if the day of the year is set, figure out what it is
          if (config._dayOfYear != null) {
              yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

              if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                  getParsingFlags(config)._overflowDayOfYear = true;
              }

              date = createUTCDate(yearToUse, 0, config._dayOfYear);
              config._a[MONTH] = date.getUTCMonth();
              config._a[DATE] = date.getUTCDate();
          }

          // Default to current date.
          // * if no year, month, day of month are given, default to today
          // * if day of month is given, default month and year
          // * if month is given, default only year
          // * if year is given, don't default anything
          for (i = 0; i < 3 && config._a[i] == null; ++i) {
              config._a[i] = input[i] = currentDate[i];
          }

          // Zero out whatever was not defaulted, including time
          for (; i < 7; i++) {
              config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
          }

          // Check for 24:00:00.000
          if (config._a[HOUR] === 24 &&
                  config._a[MINUTE] === 0 &&
                  config._a[SECOND] === 0 &&
                  config._a[MILLISECOND] === 0) {
              config._nextDay = true;
              config._a[HOUR] = 0;
          }

          config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
          expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

          // Apply timezone offset from input. The actual utcOffset can be changed
          // with parseZone.
          if (config._tzm != null) {
              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
          }

          if (config._nextDay) {
              config._a[HOUR] = 24;
          }

          // check for mismatching day of week
          if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
              getParsingFlags(config).weekdayMismatch = true;
          }
      }

      function dayOfYearFromWeekInfo(config) {
          var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

          w = config._w;
          if (w.GG != null || w.W != null || w.E != null) {
              dow = 1;
              doy = 4;

              // TODO: We need to take the current isoWeekYear, but that depends on
              // how we interpret now (local, utc, fixed offset). So create
              // a now version of current config (take local/utc/offset flags, and
              // create now).
              weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
              week = defaults(w.W, 1);
              weekday = defaults(w.E, 1);
              if (weekday < 1 || weekday > 7) {
                  weekdayOverflow = true;
              }
          } else {
              dow = config._locale._week.dow;
              doy = config._locale._week.doy;

              var curWeek = weekOfYear(createLocal(), dow, doy);

              weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

              // Default to current week.
              week = defaults(w.w, curWeek.week);

              if (w.d != null) {
                  // weekday -- low day numbers are considered next week
                  weekday = w.d;
                  if (weekday < 0 || weekday > 6) {
                      weekdayOverflow = true;
                  }
              } else if (w.e != null) {
                  // local weekday -- counting starts from begining of week
                  weekday = w.e + dow;
                  if (w.e < 0 || w.e > 6) {
                      weekdayOverflow = true;
                  }
              } else {
                  // default to begining of week
                  weekday = dow;
              }
          }
          if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
              getParsingFlags(config)._overflowWeeks = true;
          } else if (weekdayOverflow != null) {
              getParsingFlags(config)._overflowWeekday = true;
          } else {
              temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
              config._a[YEAR] = temp.year;
              config._dayOfYear = temp.dayOfYear;
          }
      }

      // iso 8601 regex
      // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
      var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
      var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

      var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

      var isoDates = [
          ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
          ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
          ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
          ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
          ['YYYY-DDD', /\d{4}-\d{3}/],
          ['YYYY-MM', /\d{4}-\d\d/, false],
          ['YYYYYYMMDD', /[+-]\d{10}/],
          ['YYYYMMDD', /\d{8}/],
          // YYYYMM is NOT allowed by the standard
          ['GGGG[W]WWE', /\d{4}W\d{3}/],
          ['GGGG[W]WW', /\d{4}W\d{2}/, false],
          ['YYYYDDD', /\d{7}/]
      ];

      // iso time formats and regexes
      var isoTimes = [
          ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
          ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
          ['HH:mm:ss', /\d\d:\d\d:\d\d/],
          ['HH:mm', /\d\d:\d\d/],
          ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
          ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
          ['HHmmss', /\d\d\d\d\d\d/],
          ['HHmm', /\d\d\d\d/],
          ['HH', /\d\d/]
      ];

      var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

      // date from iso format
      function configFromISO(config) {
          var i, l,
              string = config._i,
              match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
              allowTime, dateFormat, timeFormat, tzFormat;

          if (match) {
              getParsingFlags(config).iso = true;

              for (i = 0, l = isoDates.length; i < l; i++) {
                  if (isoDates[i][1].exec(match[1])) {
                      dateFormat = isoDates[i][0];
                      allowTime = isoDates[i][2] !== false;
                      break;
                  }
              }
              if (dateFormat == null) {
                  config._isValid = false;
                  return;
              }
              if (match[3]) {
                  for (i = 0, l = isoTimes.length; i < l; i++) {
                      if (isoTimes[i][1].exec(match[3])) {
                          // match[2] should be 'T' or space
                          timeFormat = (match[2] || ' ') + isoTimes[i][0];
                          break;
                      }
                  }
                  if (timeFormat == null) {
                      config._isValid = false;
                      return;
                  }
              }
              if (!allowTime && timeFormat != null) {
                  config._isValid = false;
                  return;
              }
              if (match[4]) {
                  if (tzRegex.exec(match[4])) {
                      tzFormat = 'Z';
                  } else {
                      config._isValid = false;
                      return;
                  }
              }
              config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
              configFromStringAndFormat(config);
          } else {
              config._isValid = false;
          }
      }

      // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
      var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

      function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
          var result = [
              untruncateYear(yearStr),
              defaultLocaleMonthsShort.indexOf(monthStr),
              parseInt(dayStr, 10),
              parseInt(hourStr, 10),
              parseInt(minuteStr, 10)
          ];

          if (secondStr) {
              result.push(parseInt(secondStr, 10));
          }

          return result;
      }

      function untruncateYear(yearStr) {
          var year = parseInt(yearStr, 10);
          if (year <= 49) {
              return 2000 + year;
          } else if (year <= 999) {
              return 1900 + year;
          }
          return year;
      }

      function preprocessRFC2822(s) {
          // Remove comments and folding whitespace and replace multiple-spaces with a single space
          return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
      }

      function checkWeekday(weekdayStr, parsedInput, config) {
          if (weekdayStr) {
              // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
              var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                  weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
              if (weekdayProvided !== weekdayActual) {
                  getParsingFlags(config).weekdayMismatch = true;
                  config._isValid = false;
                  return false;
              }
          }
          return true;
      }

      var obsOffsets = {
          UT: 0,
          GMT: 0,
          EDT: -4 * 60,
          EST: -5 * 60,
          CDT: -5 * 60,
          CST: -6 * 60,
          MDT: -6 * 60,
          MST: -7 * 60,
          PDT: -7 * 60,
          PST: -8 * 60
      };

      function calculateOffset(obsOffset, militaryOffset, numOffset) {
          if (obsOffset) {
              return obsOffsets[obsOffset];
          } else if (militaryOffset) {
              // the only allowed military tz is Z
              return 0;
          } else {
              var hm = parseInt(numOffset, 10);
              var m = hm % 100, h = (hm - m) / 100;
              return h * 60 + m;
          }
      }

      // date and time from ref 2822 format
      function configFromRFC2822(config) {
          var match = rfc2822.exec(preprocessRFC2822(config._i));
          if (match) {
              var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
              if (!checkWeekday(match[1], parsedArray, config)) {
                  return;
              }

              config._a = parsedArray;
              config._tzm = calculateOffset(match[8], match[9], match[10]);

              config._d = createUTCDate.apply(null, config._a);
              config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

              getParsingFlags(config).rfc2822 = true;
          } else {
              config._isValid = false;
          }
      }

      // date from iso format or fallback
      function configFromString(config) {
          var matched = aspNetJsonRegex.exec(config._i);

          if (matched !== null) {
              config._d = new Date(+matched[1]);
              return;
          }

          configFromISO(config);
          if (config._isValid === false) {
              delete config._isValid;
          } else {
              return;
          }

          configFromRFC2822(config);
          if (config._isValid === false) {
              delete config._isValid;
          } else {
              return;
          }

          // Final attempt, use Input Fallback
          hooks.createFromInputFallback(config);
      }

      hooks.createFromInputFallback = deprecate(
          'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
          'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
          'discouraged and will be removed in an upcoming major release. Please refer to ' +
          'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
          function (config) {
              config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
          }
      );

      // constant that refers to the ISO standard
      hooks.ISO_8601 = function () {};

      // constant that refers to the RFC 2822 form
      hooks.RFC_2822 = function () {};

      // date from string and format string
      function configFromStringAndFormat(config) {
          // TODO: Move this to another part of the creation flow to prevent circular deps
          if (config._f === hooks.ISO_8601) {
              configFromISO(config);
              return;
          }
          if (config._f === hooks.RFC_2822) {
              configFromRFC2822(config);
              return;
          }
          config._a = [];
          getParsingFlags(config).empty = true;

          // This array is used to make a Date, either with `new Date` or `Date.UTC`
          var string = '' + config._i,
              i, parsedInput, tokens, token, skipped,
              stringLength = string.length,
              totalParsedInputLength = 0;

          tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

          for (i = 0; i < tokens.length; i++) {
              token = tokens[i];
              parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
              // console.log('token', token, 'parsedInput', parsedInput,
              //         'regex', getParseRegexForToken(token, config));
              if (parsedInput) {
                  skipped = string.substr(0, string.indexOf(parsedInput));
                  if (skipped.length > 0) {
                      getParsingFlags(config).unusedInput.push(skipped);
                  }
                  string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                  totalParsedInputLength += parsedInput.length;
              }
              // don't parse if it's not a known token
              if (formatTokenFunctions[token]) {
                  if (parsedInput) {
                      getParsingFlags(config).empty = false;
                  }
                  else {
                      getParsingFlags(config).unusedTokens.push(token);
                  }
                  addTimeToArrayFromToken(token, parsedInput, config);
              }
              else if (config._strict && !parsedInput) {
                  getParsingFlags(config).unusedTokens.push(token);
              }
          }

          // add remaining unparsed input length to the string
          getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
          if (string.length > 0) {
              getParsingFlags(config).unusedInput.push(string);
          }

          // clear _12h flag if hour is <= 12
          if (config._a[HOUR] <= 12 &&
              getParsingFlags(config).bigHour === true &&
              config._a[HOUR] > 0) {
              getParsingFlags(config).bigHour = undefined;
          }

          getParsingFlags(config).parsedDateParts = config._a.slice(0);
          getParsingFlags(config).meridiem = config._meridiem;
          // handle meridiem
          config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

          configFromArray(config);
          checkOverflow(config);
      }


      function meridiemFixWrap (locale, hour, meridiem) {
          var isPm;

          if (meridiem == null) {
              // nothing to do
              return hour;
          }
          if (locale.meridiemHour != null) {
              return locale.meridiemHour(hour, meridiem);
          } else if (locale.isPM != null) {
              // Fallback
              isPm = locale.isPM(meridiem);
              if (isPm && hour < 12) {
                  hour += 12;
              }
              if (!isPm && hour === 12) {
                  hour = 0;
              }
              return hour;
          } else {
              // this is not supposed to happen
              return hour;
          }
      }

      // date from string and array of format strings
      function configFromStringAndArray(config) {
          var tempConfig,
              bestMoment,

              scoreToBeat,
              i,
              currentScore;

          if (config._f.length === 0) {
              getParsingFlags(config).invalidFormat = true;
              config._d = new Date(NaN);
              return;
          }

          for (i = 0; i < config._f.length; i++) {
              currentScore = 0;
              tempConfig = copyConfig({}, config);
              if (config._useUTC != null) {
                  tempConfig._useUTC = config._useUTC;
              }
              tempConfig._f = config._f[i];
              configFromStringAndFormat(tempConfig);

              if (!isValid(tempConfig)) {
                  continue;
              }

              // if there is any input that was not parsed add a penalty for that format
              currentScore += getParsingFlags(tempConfig).charsLeftOver;

              //or tokens
              currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

              getParsingFlags(tempConfig).score = currentScore;

              if (scoreToBeat == null || currentScore < scoreToBeat) {
                  scoreToBeat = currentScore;
                  bestMoment = tempConfig;
              }
          }

          extend(config, bestMoment || tempConfig);
      }

      function configFromObject(config) {
          if (config._d) {
              return;
          }

          var i = normalizeObjectUnits(config._i);
          config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
              return obj && parseInt(obj, 10);
          });

          configFromArray(config);
      }

      function createFromConfig (config) {
          var res = new Moment(checkOverflow(prepareConfig(config)));
          if (res._nextDay) {
              // Adding is smart enough around DST
              res.add(1, 'd');
              res._nextDay = undefined;
          }

          return res;
      }

      function prepareConfig (config) {
          var input = config._i,
              format = config._f;

          config._locale = config._locale || getLocale(config._l);

          if (input === null || (format === undefined && input === '')) {
              return createInvalid({nullInput: true});
          }

          if (typeof input === 'string') {
              config._i = input = config._locale.preparse(input);
          }

          if (isMoment(input)) {
              return new Moment(checkOverflow(input));
          } else if (isDate(input)) {
              config._d = input;
          } else if (isArray(format)) {
              configFromStringAndArray(config);
          } else if (format) {
              configFromStringAndFormat(config);
          }  else {
              configFromInput(config);
          }

          if (!isValid(config)) {
              config._d = null;
          }

          return config;
      }

      function configFromInput(config) {
          var input = config._i;
          if (isUndefined(input)) {
              config._d = new Date(hooks.now());
          } else if (isDate(input)) {
              config._d = new Date(input.valueOf());
          } else if (typeof input === 'string') {
              configFromString(config);
          } else if (isArray(input)) {
              config._a = map(input.slice(0), function (obj) {
                  return parseInt(obj, 10);
              });
              configFromArray(config);
          } else if (isObject(input)) {
              configFromObject(config);
          } else if (isNumber(input)) {
              // from milliseconds
              config._d = new Date(input);
          } else {
              hooks.createFromInputFallback(config);
          }
      }

      function createLocalOrUTC (input, format, locale, strict, isUTC) {
          var c = {};

          if (locale === true || locale === false) {
              strict = locale;
              locale = undefined;
          }

          if ((isObject(input) && isObjectEmpty(input)) ||
                  (isArray(input) && input.length === 0)) {
              input = undefined;
          }
          // object construction must be done this way.
          // https://github.com/moment/moment/issues/1423
          c._isAMomentObject = true;
          c._useUTC = c._isUTC = isUTC;
          c._l = locale;
          c._i = input;
          c._f = format;
          c._strict = strict;

          return createFromConfig(c);
      }

      function createLocal (input, format, locale, strict) {
          return createLocalOrUTC(input, format, locale, strict, false);
      }

      var prototypeMin = deprecate(
          'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
          function () {
              var other = createLocal.apply(null, arguments);
              if (this.isValid() && other.isValid()) {
                  return other < this ? this : other;
              } else {
                  return createInvalid();
              }
          }
      );

      var prototypeMax = deprecate(
          'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
          function () {
              var other = createLocal.apply(null, arguments);
              if (this.isValid() && other.isValid()) {
                  return other > this ? this : other;
              } else {
                  return createInvalid();
              }
          }
      );

      // Pick a moment m from moments so that m[fn](other) is true for all
      // other. This relies on the function fn to be transitive.
      //
      // moments should either be an array of moment objects or an array, whose
      // first element is an array of moment objects.
      function pickBy(fn, moments) {
          var res, i;
          if (moments.length === 1 && isArray(moments[0])) {
              moments = moments[0];
          }
          if (!moments.length) {
              return createLocal();
          }
          res = moments[0];
          for (i = 1; i < moments.length; ++i) {
              if (!moments[i].isValid() || moments[i][fn](res)) {
                  res = moments[i];
              }
          }
          return res;
      }

      // TODO: Use [].sort instead?
      function min () {
          var args = [].slice.call(arguments, 0);

          return pickBy('isBefore', args);
      }

      function max () {
          var args = [].slice.call(arguments, 0);

          return pickBy('isAfter', args);
      }

      var now = function () {
          return Date.now ? Date.now() : +(new Date());
      };

      var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

      function isDurationValid(m) {
          for (var key in m) {
              if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                  return false;
              }
          }

          var unitHasDecimal = false;
          for (var i = 0; i < ordering.length; ++i) {
              if (m[ordering[i]]) {
                  if (unitHasDecimal) {
                      return false; // only allow non-integers for smallest unit
                  }
                  if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                      unitHasDecimal = true;
                  }
              }
          }

          return true;
      }

      function isValid$1() {
          return this._isValid;
      }

      function createInvalid$1() {
          return createDuration(NaN);
      }

      function Duration (duration) {
          var normalizedInput = normalizeObjectUnits(duration),
              years = normalizedInput.year || 0,
              quarters = normalizedInput.quarter || 0,
              months = normalizedInput.month || 0,
              weeks = normalizedInput.week || 0,
              days = normalizedInput.day || 0,
              hours = normalizedInput.hour || 0,
              minutes = normalizedInput.minute || 0,
              seconds = normalizedInput.second || 0,
              milliseconds = normalizedInput.millisecond || 0;

          this._isValid = isDurationValid(normalizedInput);

          // representation for dateAddRemove
          this._milliseconds = +milliseconds +
              seconds * 1e3 + // 1000
              minutes * 6e4 + // 1000 * 60
              hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
          // Because of dateAddRemove treats 24 hours as different from a
          // day when working around DST, we need to store them separately
          this._days = +days +
              weeks * 7;
          // It is impossible to translate months into days without knowing
          // which months you are are talking about, so we have to store
          // it separately.
          this._months = +months +
              quarters * 3 +
              years * 12;

          this._data = {};

          this._locale = getLocale();

          this._bubble();
      }

      function isDuration (obj) {
          return obj instanceof Duration;
      }

      function absRound (number) {
          if (number < 0) {
              return Math.round(-1 * number) * -1;
          } else {
              return Math.round(number);
          }
      }

      // FORMATTING

      function offset (token, separator) {
          addFormatToken(token, 0, 0, function () {
              var offset = this.utcOffset();
              var sign = '+';
              if (offset < 0) {
                  offset = -offset;
                  sign = '-';
              }
              return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
          });
      }

      offset('Z', ':');
      offset('ZZ', '');

      // PARSING

      addRegexToken('Z',  matchShortOffset);
      addRegexToken('ZZ', matchShortOffset);
      addParseToken(['Z', 'ZZ'], function (input, array, config) {
          config._useUTC = true;
          config._tzm = offsetFromString(matchShortOffset, input);
      });

      // HELPERS

      // timezone chunker
      // '+10:00' > ['10',  '00']
      // '-1530'  > ['-15', '30']
      var chunkOffset = /([\+\-]|\d\d)/gi;

      function offsetFromString(matcher, string) {
          var matches = (string || '').match(matcher);

          if (matches === null) {
              return null;
          }

          var chunk   = matches[matches.length - 1] || [];
          var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
          var minutes = +(parts[1] * 60) + toInt(parts[2]);

          return minutes === 0 ?
            0 :
            parts[0] === '+' ? minutes : -minutes;
      }

      // Return a moment from input, that is local/utc/zone equivalent to model.
      function cloneWithOffset(input, model) {
          var res, diff;
          if (model._isUTC) {
              res = model.clone();
              diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
              // Use low-level api, because this fn is low-level api.
              res._d.setTime(res._d.valueOf() + diff);
              hooks.updateOffset(res, false);
              return res;
          } else {
              return createLocal(input).local();
          }
      }

      function getDateOffset (m) {
          // On Firefox.24 Date#getTimezoneOffset returns a floating point.
          // https://github.com/moment/moment/pull/1871
          return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
      }

      // HOOKS

      // This function will be called whenever a moment is mutated.
      // It is intended to keep the offset in sync with the timezone.
      hooks.updateOffset = function () {};

      // MOMENTS

      // keepLocalTime = true means only change the timezone, without
      // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
      // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
      // +0200, so we adjust the time as needed, to be valid.
      //
      // Keeping the time actually adds/subtracts (one hour)
      // from the actual represented time. That is why we call updateOffset
      // a second time. In case it wants us to change the offset again
      // _changeInProgress == true case, then we have to adjust, because
      // there is no such time in the given timezone.
      function getSetOffset (input, keepLocalTime, keepMinutes) {
          var offset = this._offset || 0,
              localAdjust;
          if (!this.isValid()) {
              return input != null ? this : NaN;
          }
          if (input != null) {
              if (typeof input === 'string') {
                  input = offsetFromString(matchShortOffset, input);
                  if (input === null) {
                      return this;
                  }
              } else if (Math.abs(input) < 16 && !keepMinutes) {
                  input = input * 60;
              }
              if (!this._isUTC && keepLocalTime) {
                  localAdjust = getDateOffset(this);
              }
              this._offset = input;
              this._isUTC = true;
              if (localAdjust != null) {
                  this.add(localAdjust, 'm');
              }
              if (offset !== input) {
                  if (!keepLocalTime || this._changeInProgress) {
                      addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                  } else if (!this._changeInProgress) {
                      this._changeInProgress = true;
                      hooks.updateOffset(this, true);
                      this._changeInProgress = null;
                  }
              }
              return this;
          } else {
              return this._isUTC ? offset : getDateOffset(this);
          }
      }

      function getSetZone (input, keepLocalTime) {
          if (input != null) {
              if (typeof input !== 'string') {
                  input = -input;
              }

              this.utcOffset(input, keepLocalTime);

              return this;
          } else {
              return -this.utcOffset();
          }
      }

      function setOffsetToUTC (keepLocalTime) {
          return this.utcOffset(0, keepLocalTime);
      }

      function setOffsetToLocal (keepLocalTime) {
          if (this._isUTC) {
              this.utcOffset(0, keepLocalTime);
              this._isUTC = false;

              if (keepLocalTime) {
                  this.subtract(getDateOffset(this), 'm');
              }
          }
          return this;
      }

      function setOffsetToParsedOffset () {
          if (this._tzm != null) {
              this.utcOffset(this._tzm, false, true);
          } else if (typeof this._i === 'string') {
              var tZone = offsetFromString(matchOffset, this._i);
              if (tZone != null) {
                  this.utcOffset(tZone);
              }
              else {
                  this.utcOffset(0, true);
              }
          }
          return this;
      }

      function hasAlignedHourOffset (input) {
          if (!this.isValid()) {
              return false;
          }
          input = input ? createLocal(input).utcOffset() : 0;

          return (this.utcOffset() - input) % 60 === 0;
      }

      function isDaylightSavingTime () {
          return (
              this.utcOffset() > this.clone().month(0).utcOffset() ||
              this.utcOffset() > this.clone().month(5).utcOffset()
          );
      }

      function isDaylightSavingTimeShifted () {
          if (!isUndefined(this._isDSTShifted)) {
              return this._isDSTShifted;
          }

          var c = {};

          copyConfig(c, this);
          c = prepareConfig(c);

          if (c._a) {
              var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
              this._isDSTShifted = this.isValid() &&
                  compareArrays(c._a, other.toArray()) > 0;
          } else {
              this._isDSTShifted = false;
          }

          return this._isDSTShifted;
      }

      function isLocal () {
          return this.isValid() ? !this._isUTC : false;
      }

      function isUtcOffset () {
          return this.isValid() ? this._isUTC : false;
      }

      function isUtc () {
          return this.isValid() ? this._isUTC && this._offset === 0 : false;
      }

      // ASP.NET json date format regex
      var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

      // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
      // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
      // and further modified to allow for strings containing both week and day
      var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

      function createDuration (input, key) {
          var duration = input,
              // matching against regexp is expensive, do it on demand
              match = null,
              sign,
              ret,
              diffRes;

          if (isDuration(input)) {
              duration = {
                  ms : input._milliseconds,
                  d  : input._days,
                  M  : input._months
              };
          } else if (isNumber(input)) {
              duration = {};
              if (key) {
                  duration[key] = input;
              } else {
                  duration.milliseconds = input;
              }
          } else if (!!(match = aspNetRegex.exec(input))) {
              sign = (match[1] === '-') ? -1 : 1;
              duration = {
                  y  : 0,
                  d  : toInt(match[DATE])                         * sign,
                  h  : toInt(match[HOUR])                         * sign,
                  m  : toInt(match[MINUTE])                       * sign,
                  s  : toInt(match[SECOND])                       * sign,
                  ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
              };
          } else if (!!(match = isoRegex.exec(input))) {
              sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
              duration = {
                  y : parseIso(match[2], sign),
                  M : parseIso(match[3], sign),
                  w : parseIso(match[4], sign),
                  d : parseIso(match[5], sign),
                  h : parseIso(match[6], sign),
                  m : parseIso(match[7], sign),
                  s : parseIso(match[8], sign)
              };
          } else if (duration == null) {// checks for null or undefined
              duration = {};
          } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
              diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

              duration = {};
              duration.ms = diffRes.milliseconds;
              duration.M = diffRes.months;
          }

          ret = new Duration(duration);

          if (isDuration(input) && hasOwnProp(input, '_locale')) {
              ret._locale = input._locale;
          }

          return ret;
      }

      createDuration.fn = Duration.prototype;
      createDuration.invalid = createInvalid$1;

      function parseIso (inp, sign) {
          // We'd normally use ~~inp for this, but unfortunately it also
          // converts floats to ints.
          // inp may be undefined, so careful calling replace on it.
          var res = inp && parseFloat(inp.replace(',', '.'));
          // apply sign while we're at it
          return (isNaN(res) ? 0 : res) * sign;
      }

      function positiveMomentsDifference(base, other) {
          var res = {milliseconds: 0, months: 0};

          res.months = other.month() - base.month() +
              (other.year() - base.year()) * 12;
          if (base.clone().add(res.months, 'M').isAfter(other)) {
              --res.months;
          }

          res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

          return res;
      }

      function momentsDifference(base, other) {
          var res;
          if (!(base.isValid() && other.isValid())) {
              return {milliseconds: 0, months: 0};
          }

          other = cloneWithOffset(other, base);
          if (base.isBefore(other)) {
              res = positiveMomentsDifference(base, other);
          } else {
              res = positiveMomentsDifference(other, base);
              res.milliseconds = -res.milliseconds;
              res.months = -res.months;
          }

          return res;
      }

      // TODO: remove 'name' arg after deprecation is removed
      function createAdder(direction, name) {
          return function (val, period) {
              var dur, tmp;
              //invert the arguments, but complain about it
              if (period !== null && !isNaN(+period)) {
                  deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                  'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                  tmp = val; val = period; period = tmp;
              }

              val = typeof val === 'string' ? +val : val;
              dur = createDuration(val, period);
              addSubtract(this, dur, direction);
              return this;
          };
      }

      function addSubtract (mom, duration, isAdding, updateOffset) {
          var milliseconds = duration._milliseconds,
              days = absRound(duration._days),
              months = absRound(duration._months);

          if (!mom.isValid()) {
              // No op
              return;
          }

          updateOffset = updateOffset == null ? true : updateOffset;

          if (months) {
              setMonth(mom, get(mom, 'Month') + months * isAdding);
          }
          if (days) {
              set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
          }
          if (milliseconds) {
              mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
          }
          if (updateOffset) {
              hooks.updateOffset(mom, days || months);
          }
      }

      var add      = createAdder(1, 'add');
      var subtract = createAdder(-1, 'subtract');

      function getCalendarFormat(myMoment, now) {
          var diff = myMoment.diff(now, 'days', true);
          return diff < -6 ? 'sameElse' :
                  diff < -1 ? 'lastWeek' :
                  diff < 0 ? 'lastDay' :
                  diff < 1 ? 'sameDay' :
                  diff < 2 ? 'nextDay' :
                  diff < 7 ? 'nextWeek' : 'sameElse';
      }

      function calendar$1 (time, formats) {
          // We want to compare the start of today, vs this.
          // Getting start-of-today depends on whether we're local/utc/offset or not.
          var now = time || createLocal(),
              sod = cloneWithOffset(now, this).startOf('day'),
              format = hooks.calendarFormat(this, sod) || 'sameElse';

          var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

          return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
      }

      function clone () {
          return new Moment(this);
      }

      function isAfter (input, units) {
          var localInput = isMoment(input) ? input : createLocal(input);
          if (!(this.isValid() && localInput.isValid())) {
              return false;
          }
          units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
          if (units === 'millisecond') {
              return this.valueOf() > localInput.valueOf();
          } else {
              return localInput.valueOf() < this.clone().startOf(units).valueOf();
          }
      }

      function isBefore (input, units) {
          var localInput = isMoment(input) ? input : createLocal(input);
          if (!(this.isValid() && localInput.isValid())) {
              return false;
          }
          units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
          if (units === 'millisecond') {
              return this.valueOf() < localInput.valueOf();
          } else {
              return this.clone().endOf(units).valueOf() < localInput.valueOf();
          }
      }

      function isBetween (from, to, units, inclusivity) {
          inclusivity = inclusivity || '()';
          return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
              (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
      }

      function isSame (input, units) {
          var localInput = isMoment(input) ? input : createLocal(input),
              inputMs;
          if (!(this.isValid() && localInput.isValid())) {
              return false;
          }
          units = normalizeUnits(units || 'millisecond');
          if (units === 'millisecond') {
              return this.valueOf() === localInput.valueOf();
          } else {
              inputMs = localInput.valueOf();
              return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
          }
      }

      function isSameOrAfter (input, units) {
          return this.isSame(input, units) || this.isAfter(input,units);
      }

      function isSameOrBefore (input, units) {
          return this.isSame(input, units) || this.isBefore(input,units);
      }

      function diff (input, units, asFloat) {
          var that,
              zoneDelta,
              output;

          if (!this.isValid()) {
              return NaN;
          }

          that = cloneWithOffset(input, this);

          if (!that.isValid()) {
              return NaN;
          }

          zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

          units = normalizeUnits(units);

          switch (units) {
              case 'year': output = monthDiff(this, that) / 12; break;
              case 'month': output = monthDiff(this, that); break;
              case 'quarter': output = monthDiff(this, that) / 3; break;
              case 'second': output = (this - that) / 1e3; break; // 1000
              case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
              case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
              case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
              case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
              default: output = this - that;
          }

          return asFloat ? output : absFloor(output);
      }

      function monthDiff (a, b) {
          // difference in months
          var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
              // b is in (anchor - 1 month, anchor + 1 month)
              anchor = a.clone().add(wholeMonthDiff, 'months'),
              anchor2, adjust;

          if (b - anchor < 0) {
              anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
              // linear across the month
              adjust = (b - anchor) / (anchor - anchor2);
          } else {
              anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
              // linear across the month
              adjust = (b - anchor) / (anchor2 - anchor);
          }

          //check for negative zero, return zero if negative zero
          return -(wholeMonthDiff + adjust) || 0;
      }

      hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
      hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

      function toString () {
          return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
      }

      function toISOString(keepOffset) {
          if (!this.isValid()) {
              return null;
          }
          var utc = keepOffset !== true;
          var m = utc ? this.clone().utc() : this;
          if (m.year() < 0 || m.year() > 9999) {
              return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
          }
          if (isFunction(Date.prototype.toISOString)) {
              // native implementation is ~50x faster, use it when we can
              if (utc) {
                  return this.toDate().toISOString();
              } else {
                  return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
              }
          }
          return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
      }

      /**
       * Return a human readable representation of a moment that can
       * also be evaluated to get a new moment which is the same
       *
       * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
       */
      function inspect () {
          if (!this.isValid()) {
              return 'moment.invalid(/* ' + this._i + ' */)';
          }
          var func = 'moment';
          var zone = '';
          if (!this.isLocal()) {
              func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
              zone = 'Z';
          }
          var prefix = '[' + func + '("]';
          var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
          var datetime = '-MM-DD[T]HH:mm:ss.SSS';
          var suffix = zone + '[")]';

          return this.format(prefix + year + datetime + suffix);
      }

      function format (inputString) {
          if (!inputString) {
              inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
          }
          var output = formatMoment(this, inputString);
          return this.localeData().postformat(output);
      }

      function from (time, withoutSuffix) {
          if (this.isValid() &&
                  ((isMoment(time) && time.isValid()) ||
                   createLocal(time).isValid())) {
              return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
          } else {
              return this.localeData().invalidDate();
          }
      }

      function fromNow (withoutSuffix) {
          return this.from(createLocal(), withoutSuffix);
      }

      function to (time, withoutSuffix) {
          if (this.isValid() &&
                  ((isMoment(time) && time.isValid()) ||
                   createLocal(time).isValid())) {
              return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
          } else {
              return this.localeData().invalidDate();
          }
      }

      function toNow (withoutSuffix) {
          return this.to(createLocal(), withoutSuffix);
      }

      // If passed a locale key, it will set the locale for this
      // instance.  Otherwise, it will return the locale configuration
      // variables for this instance.
      function locale (key) {
          var newLocaleData;

          if (key === undefined) {
              return this._locale._abbr;
          } else {
              newLocaleData = getLocale(key);
              if (newLocaleData != null) {
                  this._locale = newLocaleData;
              }
              return this;
          }
      }

      var lang = deprecate(
          'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
          function (key) {
              if (key === undefined) {
                  return this.localeData();
              } else {
                  return this.locale(key);
              }
          }
      );

      function localeData () {
          return this._locale;
      }

      function startOf (units) {
          units = normalizeUnits(units);
          // the following switch intentionally omits break keywords
          // to utilize falling through the cases.
          switch (units) {
              case 'year':
                  this.month(0);
                  /* falls through */
              case 'quarter':
              case 'month':
                  this.date(1);
                  /* falls through */
              case 'week':
              case 'isoWeek':
              case 'day':
              case 'date':
                  this.hours(0);
                  /* falls through */
              case 'hour':
                  this.minutes(0);
                  /* falls through */
              case 'minute':
                  this.seconds(0);
                  /* falls through */
              case 'second':
                  this.milliseconds(0);
          }

          // weeks are a special case
          if (units === 'week') {
              this.weekday(0);
          }
          if (units === 'isoWeek') {
              this.isoWeekday(1);
          }

          // quarters are also special
          if (units === 'quarter') {
              this.month(Math.floor(this.month() / 3) * 3);
          }

          return this;
      }

      function endOf (units) {
          units = normalizeUnits(units);
          if (units === undefined || units === 'millisecond') {
              return this;
          }

          // 'date' is an alias for 'day', so it should be considered as such.
          if (units === 'date') {
              units = 'day';
          }

          return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
      }

      function valueOf () {
          return this._d.valueOf() - ((this._offset || 0) * 60000);
      }

      function unix () {
          return Math.floor(this.valueOf() / 1000);
      }

      function toDate () {
          return new Date(this.valueOf());
      }

      function toArray () {
          var m = this;
          return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
      }

      function toObject () {
          var m = this;
          return {
              years: m.year(),
              months: m.month(),
              date: m.date(),
              hours: m.hours(),
              minutes: m.minutes(),
              seconds: m.seconds(),
              milliseconds: m.milliseconds()
          };
      }

      function toJSON () {
          // new Date(NaN).toJSON() === null
          return this.isValid() ? this.toISOString() : null;
      }

      function isValid$2 () {
          return isValid(this);
      }

      function parsingFlags () {
          return extend({}, getParsingFlags(this));
      }

      function invalidAt () {
          return getParsingFlags(this).overflow;
      }

      function creationData() {
          return {
              input: this._i,
              format: this._f,
              locale: this._locale,
              isUTC: this._isUTC,
              strict: this._strict
          };
      }

      // FORMATTING

      addFormatToken(0, ['gg', 2], 0, function () {
          return this.weekYear() % 100;
      });

      addFormatToken(0, ['GG', 2], 0, function () {
          return this.isoWeekYear() % 100;
      });

      function addWeekYearFormatToken (token, getter) {
          addFormatToken(0, [token, token.length], 0, getter);
      }

      addWeekYearFormatToken('gggg',     'weekYear');
      addWeekYearFormatToken('ggggg',    'weekYear');
      addWeekYearFormatToken('GGGG',  'isoWeekYear');
      addWeekYearFormatToken('GGGGG', 'isoWeekYear');

      // ALIASES

      addUnitAlias('weekYear', 'gg');
      addUnitAlias('isoWeekYear', 'GG');

      // PRIORITY

      addUnitPriority('weekYear', 1);
      addUnitPriority('isoWeekYear', 1);


      // PARSING

      addRegexToken('G',      matchSigned);
      addRegexToken('g',      matchSigned);
      addRegexToken('GG',     match1to2, match2);
      addRegexToken('gg',     match1to2, match2);
      addRegexToken('GGGG',   match1to4, match4);
      addRegexToken('gggg',   match1to4, match4);
      addRegexToken('GGGGG',  match1to6, match6);
      addRegexToken('ggggg',  match1to6, match6);

      addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
          week[token.substr(0, 2)] = toInt(input);
      });

      addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
          week[token] = hooks.parseTwoDigitYear(input);
      });

      // MOMENTS

      function getSetWeekYear (input) {
          return getSetWeekYearHelper.call(this,
                  input,
                  this.week(),
                  this.weekday(),
                  this.localeData()._week.dow,
                  this.localeData()._week.doy);
      }

      function getSetISOWeekYear (input) {
          return getSetWeekYearHelper.call(this,
                  input, this.isoWeek(), this.isoWeekday(), 1, 4);
      }

      function getISOWeeksInYear () {
          return weeksInYear(this.year(), 1, 4);
      }

      function getWeeksInYear () {
          var weekInfo = this.localeData()._week;
          return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
      }

      function getSetWeekYearHelper(input, week, weekday, dow, doy) {
          var weeksTarget;
          if (input == null) {
              return weekOfYear(this, dow, doy).year;
          } else {
              weeksTarget = weeksInYear(input, dow, doy);
              if (week > weeksTarget) {
                  week = weeksTarget;
              }
              return setWeekAll.call(this, input, week, weekday, dow, doy);
          }
      }

      function setWeekAll(weekYear, week, weekday, dow, doy) {
          var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
              date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

          this.year(date.getUTCFullYear());
          this.month(date.getUTCMonth());
          this.date(date.getUTCDate());
          return this;
      }

      // FORMATTING

      addFormatToken('Q', 0, 'Qo', 'quarter');

      // ALIASES

      addUnitAlias('quarter', 'Q');

      // PRIORITY

      addUnitPriority('quarter', 7);

      // PARSING

      addRegexToken('Q', match1);
      addParseToken('Q', function (input, array) {
          array[MONTH] = (toInt(input) - 1) * 3;
      });

      // MOMENTS

      function getSetQuarter (input) {
          return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
      }

      // FORMATTING

      addFormatToken('D', ['DD', 2], 'Do', 'date');

      // ALIASES

      addUnitAlias('date', 'D');

      // PRIORITY
      addUnitPriority('date', 9);

      // PARSING

      addRegexToken('D',  match1to2);
      addRegexToken('DD', match1to2, match2);
      addRegexToken('Do', function (isStrict, locale) {
          // TODO: Remove "ordinalParse" fallback in next major release.
          return isStrict ?
            (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
            locale._dayOfMonthOrdinalParseLenient;
      });

      addParseToken(['D', 'DD'], DATE);
      addParseToken('Do', function (input, array) {
          array[DATE] = toInt(input.match(match1to2)[0]);
      });

      // MOMENTS

      var getSetDayOfMonth = makeGetSet('Date', true);

      // FORMATTING

      addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

      // ALIASES

      addUnitAlias('dayOfYear', 'DDD');

      // PRIORITY
      addUnitPriority('dayOfYear', 4);

      // PARSING

      addRegexToken('DDD',  match1to3);
      addRegexToken('DDDD', match3);
      addParseToken(['DDD', 'DDDD'], function (input, array, config) {
          config._dayOfYear = toInt(input);
      });

      // HELPERS

      // MOMENTS

      function getSetDayOfYear (input) {
          var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
          return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
      }

      // FORMATTING

      addFormatToken('m', ['mm', 2], 0, 'minute');

      // ALIASES

      addUnitAlias('minute', 'm');

      // PRIORITY

      addUnitPriority('minute', 14);

      // PARSING

      addRegexToken('m',  match1to2);
      addRegexToken('mm', match1to2, match2);
      addParseToken(['m', 'mm'], MINUTE);

      // MOMENTS

      var getSetMinute = makeGetSet('Minutes', false);

      // FORMATTING

      addFormatToken('s', ['ss', 2], 0, 'second');

      // ALIASES

      addUnitAlias('second', 's');

      // PRIORITY

      addUnitPriority('second', 15);

      // PARSING

      addRegexToken('s',  match1to2);
      addRegexToken('ss', match1to2, match2);
      addParseToken(['s', 'ss'], SECOND);

      // MOMENTS

      var getSetSecond = makeGetSet('Seconds', false);

      // FORMATTING

      addFormatToken('S', 0, 0, function () {
          return ~~(this.millisecond() / 100);
      });

      addFormatToken(0, ['SS', 2], 0, function () {
          return ~~(this.millisecond() / 10);
      });

      addFormatToken(0, ['SSS', 3], 0, 'millisecond');
      addFormatToken(0, ['SSSS', 4], 0, function () {
          return this.millisecond() * 10;
      });
      addFormatToken(0, ['SSSSS', 5], 0, function () {
          return this.millisecond() * 100;
      });
      addFormatToken(0, ['SSSSSS', 6], 0, function () {
          return this.millisecond() * 1000;
      });
      addFormatToken(0, ['SSSSSSS', 7], 0, function () {
          return this.millisecond() * 10000;
      });
      addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
          return this.millisecond() * 100000;
      });
      addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
          return this.millisecond() * 1000000;
      });


      // ALIASES

      addUnitAlias('millisecond', 'ms');

      // PRIORITY

      addUnitPriority('millisecond', 16);

      // PARSING

      addRegexToken('S',    match1to3, match1);
      addRegexToken('SS',   match1to3, match2);
      addRegexToken('SSS',  match1to3, match3);

      var token;
      for (token = 'SSSS'; token.length <= 9; token += 'S') {
          addRegexToken(token, matchUnsigned);
      }

      function parseMs(input, array) {
          array[MILLISECOND] = toInt(('0.' + input) * 1000);
      }

      for (token = 'S'; token.length <= 9; token += 'S') {
          addParseToken(token, parseMs);
      }
      // MOMENTS

      var getSetMillisecond = makeGetSet('Milliseconds', false);

      // FORMATTING

      addFormatToken('z',  0, 0, 'zoneAbbr');
      addFormatToken('zz', 0, 0, 'zoneName');

      // MOMENTS

      function getZoneAbbr () {
          return this._isUTC ? 'UTC' : '';
      }

      function getZoneName () {
          return this._isUTC ? 'Coordinated Universal Time' : '';
      }

      var proto = Moment.prototype;

      proto.add               = add;
      proto.calendar          = calendar$1;
      proto.clone             = clone;
      proto.diff              = diff;
      proto.endOf             = endOf;
      proto.format            = format;
      proto.from              = from;
      proto.fromNow           = fromNow;
      proto.to                = to;
      proto.toNow             = toNow;
      proto.get               = stringGet;
      proto.invalidAt         = invalidAt;
      proto.isAfter           = isAfter;
      proto.isBefore          = isBefore;
      proto.isBetween         = isBetween;
      proto.isSame            = isSame;
      proto.isSameOrAfter     = isSameOrAfter;
      proto.isSameOrBefore    = isSameOrBefore;
      proto.isValid           = isValid$2;
      proto.lang              = lang;
      proto.locale            = locale;
      proto.localeData        = localeData;
      proto.max               = prototypeMax;
      proto.min               = prototypeMin;
      proto.parsingFlags      = parsingFlags;
      proto.set               = stringSet;
      proto.startOf           = startOf;
      proto.subtract          = subtract;
      proto.toArray           = toArray;
      proto.toObject          = toObject;
      proto.toDate            = toDate;
      proto.toISOString       = toISOString;
      proto.inspect           = inspect;
      proto.toJSON            = toJSON;
      proto.toString          = toString;
      proto.unix              = unix;
      proto.valueOf           = valueOf;
      proto.creationData      = creationData;
      proto.year       = getSetYear;
      proto.isLeapYear = getIsLeapYear;
      proto.weekYear    = getSetWeekYear;
      proto.isoWeekYear = getSetISOWeekYear;
      proto.quarter = proto.quarters = getSetQuarter;
      proto.month       = getSetMonth;
      proto.daysInMonth = getDaysInMonth;
      proto.week           = proto.weeks        = getSetWeek;
      proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
      proto.weeksInYear    = getWeeksInYear;
      proto.isoWeeksInYear = getISOWeeksInYear;
      proto.date       = getSetDayOfMonth;
      proto.day        = proto.days             = getSetDayOfWeek;
      proto.weekday    = getSetLocaleDayOfWeek;
      proto.isoWeekday = getSetISODayOfWeek;
      proto.dayOfYear  = getSetDayOfYear;
      proto.hour = proto.hours = getSetHour;
      proto.minute = proto.minutes = getSetMinute;
      proto.second = proto.seconds = getSetSecond;
      proto.millisecond = proto.milliseconds = getSetMillisecond;
      proto.utcOffset            = getSetOffset;
      proto.utc                  = setOffsetToUTC;
      proto.local                = setOffsetToLocal;
      proto.parseZone            = setOffsetToParsedOffset;
      proto.hasAlignedHourOffset = hasAlignedHourOffset;
      proto.isDST                = isDaylightSavingTime;
      proto.isLocal              = isLocal;
      proto.isUtcOffset          = isUtcOffset;
      proto.isUtc                = isUtc;
      proto.isUTC                = isUtc;
      proto.zoneAbbr = getZoneAbbr;
      proto.zoneName = getZoneName;
      proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
      proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
      proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
      proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
      proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

      function createUnix (input) {
          return createLocal(input * 1000);
      }

      function createInZone () {
          return createLocal.apply(null, arguments).parseZone();
      }

      function preParsePostFormat (string) {
          return string;
      }

      var proto$1 = Locale.prototype;

      proto$1.calendar        = calendar;
      proto$1.longDateFormat  = longDateFormat;
      proto$1.invalidDate     = invalidDate;
      proto$1.ordinal         = ordinal;
      proto$1.preparse        = preParsePostFormat;
      proto$1.postformat      = preParsePostFormat;
      proto$1.relativeTime    = relativeTime;
      proto$1.pastFuture      = pastFuture;
      proto$1.set             = set;

      proto$1.months            =        localeMonths;
      proto$1.monthsShort       =        localeMonthsShort;
      proto$1.monthsParse       =        localeMonthsParse;
      proto$1.monthsRegex       = monthsRegex;
      proto$1.monthsShortRegex  = monthsShortRegex;
      proto$1.week = localeWeek;
      proto$1.firstDayOfYear = localeFirstDayOfYear;
      proto$1.firstDayOfWeek = localeFirstDayOfWeek;

      proto$1.weekdays       =        localeWeekdays;
      proto$1.weekdaysMin    =        localeWeekdaysMin;
      proto$1.weekdaysShort  =        localeWeekdaysShort;
      proto$1.weekdaysParse  =        localeWeekdaysParse;

      proto$1.weekdaysRegex       =        weekdaysRegex;
      proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
      proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

      proto$1.isPM = localeIsPM;
      proto$1.meridiem = localeMeridiem;

      function get$1 (format, index, field, setter) {
          var locale = getLocale();
          var utc = createUTC().set(setter, index);
          return locale[field](utc, format);
      }

      function listMonthsImpl (format, index, field) {
          if (isNumber(format)) {
              index = format;
              format = undefined;
          }

          format = format || '';

          if (index != null) {
              return get$1(format, index, field, 'month');
          }

          var i;
          var out = [];
          for (i = 0; i < 12; i++) {
              out[i] = get$1(format, i, field, 'month');
          }
          return out;
      }

      // ()
      // (5)
      // (fmt, 5)
      // (fmt)
      // (true)
      // (true, 5)
      // (true, fmt, 5)
      // (true, fmt)
      function listWeekdaysImpl (localeSorted, format, index, field) {
          if (typeof localeSorted === 'boolean') {
              if (isNumber(format)) {
                  index = format;
                  format = undefined;
              }

              format = format || '';
          } else {
              format = localeSorted;
              index = format;
              localeSorted = false;

              if (isNumber(format)) {
                  index = format;
                  format = undefined;
              }

              format = format || '';
          }

          var locale = getLocale(),
              shift = localeSorted ? locale._week.dow : 0;

          if (index != null) {
              return get$1(format, (index + shift) % 7, field, 'day');
          }

          var i;
          var out = [];
          for (i = 0; i < 7; i++) {
              out[i] = get$1(format, (i + shift) % 7, field, 'day');
          }
          return out;
      }

      function listMonths (format, index) {
          return listMonthsImpl(format, index, 'months');
      }

      function listMonthsShort (format, index) {
          return listMonthsImpl(format, index, 'monthsShort');
      }

      function listWeekdays (localeSorted, format, index) {
          return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
      }

      function listWeekdaysShort (localeSorted, format, index) {
          return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
      }

      function listWeekdaysMin (localeSorted, format, index) {
          return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
      }

      getSetGlobalLocale('en', {
          dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
          ordinal : function (number) {
              var b = number % 10,
                  output = (toInt(number % 100 / 10) === 1) ? 'th' :
                  (b === 1) ? 'st' :
                  (b === 2) ? 'nd' :
                  (b === 3) ? 'rd' : 'th';
              return number + output;
          }
      });

      // Side effect imports

      hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
      hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

      var mathAbs = Math.abs;

      function abs () {
          var data           = this._data;

          this._milliseconds = mathAbs(this._milliseconds);
          this._days         = mathAbs(this._days);
          this._months       = mathAbs(this._months);

          data.milliseconds  = mathAbs(data.milliseconds);
          data.seconds       = mathAbs(data.seconds);
          data.minutes       = mathAbs(data.minutes);
          data.hours         = mathAbs(data.hours);
          data.months        = mathAbs(data.months);
          data.years         = mathAbs(data.years);

          return this;
      }

      function addSubtract$1 (duration, input, value, direction) {
          var other = createDuration(input, value);

          duration._milliseconds += direction * other._milliseconds;
          duration._days         += direction * other._days;
          duration._months       += direction * other._months;

          return duration._bubble();
      }

      // supports only 2.0-style add(1, 's') or add(duration)
      function add$1 (input, value) {
          return addSubtract$1(this, input, value, 1);
      }

      // supports only 2.0-style subtract(1, 's') or subtract(duration)
      function subtract$1 (input, value) {
          return addSubtract$1(this, input, value, -1);
      }

      function absCeil (number) {
          if (number < 0) {
              return Math.floor(number);
          } else {
              return Math.ceil(number);
          }
      }

      function bubble () {
          var milliseconds = this._milliseconds;
          var days         = this._days;
          var months       = this._months;
          var data         = this._data;
          var seconds, minutes, hours, years, monthsFromDays;

          // if we have a mix of positive and negative values, bubble down first
          // check: https://github.com/moment/moment/issues/2166
          if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                  (milliseconds <= 0 && days <= 0 && months <= 0))) {
              milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
              days = 0;
              months = 0;
          }

          // The following code bubbles up values, see the tests for
          // examples of what that means.
          data.milliseconds = milliseconds % 1000;

          seconds           = absFloor(milliseconds / 1000);
          data.seconds      = seconds % 60;

          minutes           = absFloor(seconds / 60);
          data.minutes      = minutes % 60;

          hours             = absFloor(minutes / 60);
          data.hours        = hours % 24;

          days += absFloor(hours / 24);

          // convert days to months
          monthsFromDays = absFloor(daysToMonths(days));
          months += monthsFromDays;
          days -= absCeil(monthsToDays(monthsFromDays));

          // 12 months -> 1 year
          years = absFloor(months / 12);
          months %= 12;

          data.days   = days;
          data.months = months;
          data.years  = years;

          return this;
      }

      function daysToMonths (days) {
          // 400 years have 146097 days (taking into account leap year rules)
          // 400 years have 12 months === 4800
          return days * 4800 / 146097;
      }

      function monthsToDays (months) {
          // the reverse of daysToMonths
          return months * 146097 / 4800;
      }

      function as (units) {
          if (!this.isValid()) {
              return NaN;
          }
          var days;
          var months;
          var milliseconds = this._milliseconds;

          units = normalizeUnits(units);

          if (units === 'month' || units === 'year') {
              days   = this._days   + milliseconds / 864e5;
              months = this._months + daysToMonths(days);
              return units === 'month' ? months : months / 12;
          } else {
              // handle milliseconds separately because of floating point math errors (issue #1867)
              days = this._days + Math.round(monthsToDays(this._months));
              switch (units) {
                  case 'week'   : return days / 7     + milliseconds / 6048e5;
                  case 'day'    : return days         + milliseconds / 864e5;
                  case 'hour'   : return days * 24    + milliseconds / 36e5;
                  case 'minute' : return days * 1440  + milliseconds / 6e4;
                  case 'second' : return days * 86400 + milliseconds / 1000;
                  // Math.floor prevents floating point math errors here
                  case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                  default: throw new Error('Unknown unit ' + units);
              }
          }
      }

      // TODO: Use this.as('ms')?
      function valueOf$1 () {
          if (!this.isValid()) {
              return NaN;
          }
          return (
              this._milliseconds +
              this._days * 864e5 +
              (this._months % 12) * 2592e6 +
              toInt(this._months / 12) * 31536e6
          );
      }

      function makeAs (alias) {
          return function () {
              return this.as(alias);
          };
      }

      var asMilliseconds = makeAs('ms');
      var asSeconds      = makeAs('s');
      var asMinutes      = makeAs('m');
      var asHours        = makeAs('h');
      var asDays         = makeAs('d');
      var asWeeks        = makeAs('w');
      var asMonths       = makeAs('M');
      var asYears        = makeAs('y');

      function clone$1 () {
          return createDuration(this);
      }

      function get$2 (units) {
          units = normalizeUnits(units);
          return this.isValid() ? this[units + 's']() : NaN;
      }

      function makeGetter(name) {
          return function () {
              return this.isValid() ? this._data[name] : NaN;
          };
      }

      var milliseconds = makeGetter('milliseconds');
      var seconds      = makeGetter('seconds');
      var minutes      = makeGetter('minutes');
      var hours        = makeGetter('hours');
      var days         = makeGetter('days');
      var months       = makeGetter('months');
      var years        = makeGetter('years');

      function weeks () {
          return absFloor(this.days() / 7);
      }

      var round = Math.round;
      var thresholds = {
          ss: 44,         // a few seconds to seconds
          s : 45,         // seconds to minute
          m : 45,         // minutes to hour
          h : 22,         // hours to day
          d : 26,         // days to month
          M : 11          // months to year
      };

      // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
      function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
          return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
      }

      function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
          var duration = createDuration(posNegDuration).abs();
          var seconds  = round(duration.as('s'));
          var minutes  = round(duration.as('m'));
          var hours    = round(duration.as('h'));
          var days     = round(duration.as('d'));
          var months   = round(duration.as('M'));
          var years    = round(duration.as('y'));

          var a = seconds <= thresholds.ss && ['s', seconds]  ||
                  seconds < thresholds.s   && ['ss', seconds] ||
                  minutes <= 1             && ['m']           ||
                  minutes < thresholds.m   && ['mm', minutes] ||
                  hours   <= 1             && ['h']           ||
                  hours   < thresholds.h   && ['hh', hours]   ||
                  days    <= 1             && ['d']           ||
                  days    < thresholds.d   && ['dd', days]    ||
                  months  <= 1             && ['M']           ||
                  months  < thresholds.M   && ['MM', months]  ||
                  years   <= 1             && ['y']           || ['yy', years];

          a[2] = withoutSuffix;
          a[3] = +posNegDuration > 0;
          a[4] = locale;
          return substituteTimeAgo.apply(null, a);
      }

      // This function allows you to set the rounding function for relative time strings
      function getSetRelativeTimeRounding (roundingFunction) {
          if (roundingFunction === undefined) {
              return round;
          }
          if (typeof(roundingFunction) === 'function') {
              round = roundingFunction;
              return true;
          }
          return false;
      }

      // This function allows you to set a threshold for relative time strings
      function getSetRelativeTimeThreshold (threshold, limit) {
          if (thresholds[threshold] === undefined) {
              return false;
          }
          if (limit === undefined) {
              return thresholds[threshold];
          }
          thresholds[threshold] = limit;
          if (threshold === 's') {
              thresholds.ss = limit - 1;
          }
          return true;
      }

      function humanize (withSuffix) {
          if (!this.isValid()) {
              return this.localeData().invalidDate();
          }

          var locale = this.localeData();
          var output = relativeTime$1(this, !withSuffix, locale);

          if (withSuffix) {
              output = locale.pastFuture(+this, output);
          }

          return locale.postformat(output);
      }

      var abs$1 = Math.abs;

      function sign(x) {
          return ((x > 0) - (x < 0)) || +x;
      }

      function toISOString$1() {
          // for ISO strings we do not use the normal bubbling rules:
          //  * milliseconds bubble up until they become hours
          //  * days do not bubble at all
          //  * months bubble up until they become years
          // This is because there is no context-free conversion between hours and days
          // (think of clock changes)
          // and also not between days and months (28-31 days per month)
          if (!this.isValid()) {
              return this.localeData().invalidDate();
          }

          var seconds = abs$1(this._milliseconds) / 1000;
          var days         = abs$1(this._days);
          var months       = abs$1(this._months);
          var minutes, hours, years;

          // 3600 seconds -> 60 minutes -> 1 hour
          minutes           = absFloor(seconds / 60);
          hours             = absFloor(minutes / 60);
          seconds %= 60;
          minutes %= 60;

          // 12 months -> 1 year
          years  = absFloor(months / 12);
          months %= 12;


          // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
          var Y = years;
          var M = months;
          var D = days;
          var h = hours;
          var m = minutes;
          var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
          var total = this.asSeconds();

          if (!total) {
              // this is the same as C#'s (Noda) and python (isodate)...
              // but not other JS (goog.date)
              return 'P0D';
          }

          var totalSign = total < 0 ? '-' : '';
          var ymSign = sign(this._months) !== sign(total) ? '-' : '';
          var daysSign = sign(this._days) !== sign(total) ? '-' : '';
          var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

          return totalSign + 'P' +
              (Y ? ymSign + Y + 'Y' : '') +
              (M ? ymSign + M + 'M' : '') +
              (D ? daysSign + D + 'D' : '') +
              ((h || m || s) ? 'T' : '') +
              (h ? hmsSign + h + 'H' : '') +
              (m ? hmsSign + m + 'M' : '') +
              (s ? hmsSign + s + 'S' : '');
      }

      var proto$2 = Duration.prototype;

      proto$2.isValid        = isValid$1;
      proto$2.abs            = abs;
      proto$2.add            = add$1;
      proto$2.subtract       = subtract$1;
      proto$2.as             = as;
      proto$2.asMilliseconds = asMilliseconds;
      proto$2.asSeconds      = asSeconds;
      proto$2.asMinutes      = asMinutes;
      proto$2.asHours        = asHours;
      proto$2.asDays         = asDays;
      proto$2.asWeeks        = asWeeks;
      proto$2.asMonths       = asMonths;
      proto$2.asYears        = asYears;
      proto$2.valueOf        = valueOf$1;
      proto$2._bubble        = bubble;
      proto$2.clone          = clone$1;
      proto$2.get            = get$2;
      proto$2.milliseconds   = milliseconds;
      proto$2.seconds        = seconds;
      proto$2.minutes        = minutes;
      proto$2.hours          = hours;
      proto$2.days           = days;
      proto$2.weeks          = weeks;
      proto$2.months         = months;
      proto$2.years          = years;
      proto$2.humanize       = humanize;
      proto$2.toISOString    = toISOString$1;
      proto$2.toString       = toISOString$1;
      proto$2.toJSON         = toISOString$1;
      proto$2.locale         = locale;
      proto$2.localeData     = localeData;

      proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
      proto$2.lang = lang;

      // Side effect imports

      // FORMATTING

      addFormatToken('X', 0, 0, 'unix');
      addFormatToken('x', 0, 0, 'valueOf');

      // PARSING

      addRegexToken('x', matchSigned);
      addRegexToken('X', matchTimestamp);
      addParseToken('X', function (input, array, config) {
          config._d = new Date(parseFloat(input, 10) * 1000);
      });
      addParseToken('x', function (input, array, config) {
          config._d = new Date(toInt(input));
      });

      // Side effect imports


      hooks.version = '2.22.2';

      setHookCallback(createLocal);

      hooks.fn                    = proto;
      hooks.min                   = min;
      hooks.max                   = max;
      hooks.now                   = now;
      hooks.utc                   = createUTC;
      hooks.unix                  = createUnix;
      hooks.months                = listMonths;
      hooks.isDate                = isDate;
      hooks.locale                = getSetGlobalLocale;
      hooks.invalid               = createInvalid;
      hooks.duration              = createDuration;
      hooks.isMoment              = isMoment;
      hooks.weekdays              = listWeekdays;
      hooks.parseZone             = createInZone;
      hooks.localeData            = getLocale;
      hooks.isDuration            = isDuration;
      hooks.monthsShort           = listMonthsShort;
      hooks.weekdaysMin           = listWeekdaysMin;
      hooks.defineLocale          = defineLocale;
      hooks.updateLocale          = updateLocale;
      hooks.locales               = listLocales;
      hooks.weekdaysShort         = listWeekdaysShort;
      hooks.normalizeUnits        = normalizeUnits;
      hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
      hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
      hooks.calendarFormat        = getCalendarFormat;
      hooks.prototype             = proto;

      // currently HTML5 input type only supports 24-hour formats
      hooks.HTML5_FMT = {
          DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
          DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
          DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
          DATE: 'YYYY-MM-DD',                             // <input type="date" />
          TIME: 'HH:mm',                                  // <input type="time" />
          TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
          TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
          WEEK: 'YYYY-[W]WW',                             // <input type="week" />
          MONTH: 'YYYY-MM'                                // <input type="month" />
      };

      return hooks;

  })));
  });

  var moment$1 = moment;
  moment$1 = typeof moment$1 === 'function' ? moment$1 : window.moment;






  // Integer constants are from the ES6 spec.
  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;
  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;

  var INTERVALS = {
  	millisecond: {
  		common: true,
  		size: 1,
  		steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]
  	},
  	second: {
  		common: true,
  		size: 1000,
  		steps: [1, 2, 5, 10, 15, 30]
  	},
  	minute: {
  		common: true,
  		size: 60000,
  		steps: [1, 2, 5, 10, 15, 30]
  	},
  	hour: {
  		common: true,
  		size: 3600000,
  		steps: [1, 2, 3, 6, 12]
  	},
  	day: {
  		common: true,
  		size: 86400000,
  		steps: [1, 2, 5]
  	},
  	week: {
  		common: false,
  		size: 604800000,
  		steps: [1, 2, 3, 4]
  	},
  	month: {
  		common: true,
  		size: 2.628e9,
  		steps: [1, 2, 3]
  	},
  	quarter: {
  		common: false,
  		size: 7.884e9,
  		steps: [1, 2, 3, 4]
  	},
  	year: {
  		common: true,
  		size: 3.154e10
  	}
  };

  var UNITS = Object.keys(INTERVALS);

  function sorter(a, b) {
  	return a - b;
  }

  function arrayUnique(items) {
  	var hash = {};
  	var out = [];
  	var i, ilen, item;

  	for (i = 0, ilen = items.length; i < ilen; ++i) {
  		item = items[i];
  		if (!hash[item]) {
  			hash[item] = true;
  			out.push(item);
  		}
  	}

  	return out;
  }

  /**
   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position
   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is
   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other
   * extremity (left + width or top + height). Note that it would be more optimized to directly
   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need
   * to create the lookup table. The table ALWAYS contains at least two items: min and max.
   *
   * @param {Number[]} timestamps - timestamps sorted from lowest to highest.
   * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min
   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.
   * If 'series', timestamps will be positioned at the same distance from each other. In this
   * case, only timestamps that break the time linearity are registered, meaning that in the
   * best case, all timestamps are linear, the table contains only min and max.
   */
  function buildLookupTable(timestamps, min, max, distribution) {
  	if (distribution === 'linear' || !timestamps.length) {
  		return [
  			{time: min, pos: 0},
  			{time: max, pos: 1}
  		];
  	}

  	var table = [];
  	var items = [min];
  	var i, ilen, prev, curr, next;

  	for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
  		curr = timestamps[i];
  		if (curr > min && curr < max) {
  			items.push(curr);
  		}
  	}

  	items.push(max);

  	for (i = 0, ilen = items.length; i < ilen; ++i) {
  		next = items[i + 1];
  		prev = items[i - 1];
  		curr = items[i];

  		// only add points that breaks the scale linearity
  		if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {
  			table.push({time: curr, pos: i / (ilen - 1)});
  		}
  	}

  	return table;
  }

  // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/
  function lookup(table, key, value) {
  	var lo = 0;
  	var hi = table.length - 1;
  	var mid, i0, i1;

  	while (lo >= 0 && lo <= hi) {
  		mid = (lo + hi) >> 1;
  		i0 = table[mid - 1] || null;
  		i1 = table[mid];

  		if (!i0) {
  			// given value is outside table (before first item)
  			return {lo: null, hi: i1};
  		} else if (i1[key] < value) {
  			lo = mid + 1;
  		} else if (i0[key] > value) {
  			hi = mid - 1;
  		} else {
  			return {lo: i0, hi: i1};
  		}
  	}

  	// given value is outside table (after last item)
  	return {lo: i1, hi: null};
  }

  /**
   * Linearly interpolates the given source `value` using the table items `skey` values and
   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')
   * returns the position for a timestamp equal to 42. If value is out of bounds, values at
   * index [0, 1] or [n - 1, n] are used for the interpolation.
   */
  function interpolate$1(table, skey, sval, tkey) {
  	var range = lookup(table, skey, sval);

  	// Note: the lookup table ALWAYS contains at least 2 items (min and max)
  	var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;
  	var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;

  	var span = next[skey] - prev[skey];
  	var ratio = span ? (sval - prev[skey]) / span : 0;
  	var offset = (next[tkey] - prev[tkey]) * ratio;

  	return prev[tkey] + offset;
  }

  /**
   * Convert the given value to a moment object using the given time options.
   * @see http://momentjs.com/docs/#/parsing/
   */
  function momentify(value, options) {
  	var parser = options.parser;
  	var format = options.parser || options.format;

  	if (typeof parser === 'function') {
  		return parser(value);
  	}

  	if (typeof value === 'string' && typeof format === 'string') {
  		return moment$1(value, format);
  	}

  	if (!(value instanceof moment$1)) {
  		value = moment$1(value);
  	}

  	if (value.isValid()) {
  		return value;
  	}

  	// Labels are in an incompatible moment format and no `parser` has been provided.
  	// The user might still use the deprecated `format` option to convert his inputs.
  	if (typeof format === 'function') {
  		return format(value);
  	}

  	return value;
  }

  function parse$1(input, scale) {
  	if (helpers$1.isNullOrUndef(input)) {
  		return null;
  	}

  	var options = scale.options.time;
  	var value = momentify(scale.getRightValue(input), options);
  	if (!value.isValid()) {
  		return null;
  	}

  	if (options.round) {
  		value.startOf(options.round);
  	}

  	return value.valueOf();
  }

  /**
   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks
   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.
   */
  function determineStepSize(min, max, unit, capacity) {
  	var range = max - min;
  	var interval = INTERVALS[unit];
  	var milliseconds = interval.size;
  	var steps = interval.steps;
  	var i, ilen, factor;

  	if (!steps) {
  		return Math.ceil(range / (capacity * milliseconds));
  	}

  	for (i = 0, ilen = steps.length; i < ilen; ++i) {
  		factor = steps[i];
  		if (Math.ceil(range / (milliseconds * factor)) <= capacity) {
  			break;
  		}
  	}

  	return factor;
  }

  /**
   * Figures out what unit results in an appropriate number of auto-generated ticks
   */
  function determineUnitForAutoTicks(minUnit, min, max, capacity) {
  	var ilen = UNITS.length;
  	var i, interval, factor;

  	for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {
  		interval = INTERVALS[UNITS[i]];
  		factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;

  		if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {
  			return UNITS[i];
  		}
  	}

  	return UNITS[ilen - 1];
  }

  /**
   * Figures out what unit to format a set of ticks with
   */
  function determineUnitForFormatting(ticks, minUnit, min, max) {
  	var duration = moment$1.duration(moment$1(max).diff(moment$1(min)));
  	var ilen = UNITS.length;
  	var i, unit;

  	for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {
  		unit = UNITS[i];
  		if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {
  			return unit;
  		}
  	}

  	return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];
  }

  function determineMajorUnit(unit) {
  	for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {
  		if (INTERVALS[UNITS[i]].common) {
  			return UNITS[i];
  		}
  	}
  }

  /**
   * Generates a maximum of `capacity` timestamps between min and max, rounded to the
   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.
   * Important: this method can return ticks outside the min and max range, it's the
   * responsibility of the calling code to clamp values if needed.
   */
  function generate(min, max, capacity, options) {
  	var timeOpts = options.time;
  	var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);
  	var major = determineMajorUnit(minor);
  	var stepSize = helpers$1.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);
  	var weekday = minor === 'week' ? timeOpts.isoWeekday : false;
  	var majorTicksEnabled = options.ticks.major.enabled;
  	var interval = INTERVALS[minor];
  	var first = moment$1(min);
  	var last = moment$1(max);
  	var ticks = [];
  	var time;

  	if (!stepSize) {
  		stepSize = determineStepSize(min, max, minor, capacity);
  	}

  	// For 'week' unit, handle the first day of week option
  	if (weekday) {
  		first = first.isoWeekday(weekday);
  		last = last.isoWeekday(weekday);
  	}

  	// Align first/last ticks on unit
  	first = first.startOf(weekday ? 'day' : minor);
  	last = last.startOf(weekday ? 'day' : minor);

  	// Make sure that the last tick include max
  	if (last < max) {
  		last.add(1, minor);
  	}

  	time = moment$1(first);

  	if (majorTicksEnabled && major && !weekday && !timeOpts.round) {
  		// Align the first tick on the previous `minor` unit aligned on the `major` unit:
  		// we first aligned time on the previous `major` unit then add the number of full
  		// stepSize there is between first and the previous major time.
  		time.startOf(major);
  		time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);
  	}

  	for (; time < last; time.add(stepSize, minor)) {
  		ticks.push(+time);
  	}

  	ticks.push(+time);

  	return ticks;
  }

  /**
   * Returns the right and left offsets from edges in the form of {left, right}.
   * Offsets are added when the `offset` option is true.
   */
  function computeOffsets(table, ticks, min, max, options) {
  	var left = 0;
  	var right = 0;
  	var upper, lower;

  	if (options.offset && ticks.length) {
  		if (!options.time.min) {
  			upper = ticks.length > 1 ? ticks[1] : max;
  			lower = ticks[0];
  			left = (
  				interpolate$1(table, 'time', upper, 'pos') -
  				interpolate$1(table, 'time', lower, 'pos')
  			) / 2;
  		}
  		if (!options.time.max) {
  			upper = ticks[ticks.length - 1];
  			lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;
  			right = (
  				interpolate$1(table, 'time', upper, 'pos') -
  				interpolate$1(table, 'time', lower, 'pos')
  			) / 2;
  		}
  	}

  	return {left: left, right: right};
  }

  function ticksFromTimestamps(values, majorUnit) {
  	var ticks = [];
  	var i, ilen, value, major;

  	for (i = 0, ilen = values.length; i < ilen; ++i) {
  		value = values[i];
  		major = majorUnit ? value === +moment$1(value).startOf(majorUnit) : false;

  		ticks.push({
  			value: value,
  			major: major
  		});
  	}

  	return ticks;
  }

  function determineLabelFormat(data, timeOpts) {
  	var i, momentDate, hasTime;
  	var ilen = data.length;

  	// find the label with the most parts (milliseconds, minutes, etc.)
  	// format all labels with the same level of detail as the most specific label
  	for (i = 0; i < ilen; i++) {
  		momentDate = momentify(data[i], timeOpts);
  		if (momentDate.millisecond() !== 0) {
  			return 'MMM D, YYYY h:mm:ss.SSS a';
  		}
  		if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {
  			hasTime = true;
  		}
  	}
  	if (hasTime) {
  		return 'MMM D, YYYY h:mm:ss a';
  	}
  	return 'MMM D, YYYY';
  }

  var scale_time = function() {

  	var defaultConfig = {
  		position: 'bottom',

  		/**
  		 * Data distribution along the scale:
  		 * - 'linear': data are spread according to their time (distances can vary),
  		 * - 'series': data are spread at the same distance from each other.
  		 * @see https://github.com/chartjs/Chart.js/pull/4507
  		 * @since 2.7.0
  		 */
  		distribution: 'linear',

  		/**
  		 * Scale boundary strategy (bypassed by min/max time options)
  		 * - `data`: make sure data are fully visible, ticks outside are removed
  		 * - `ticks`: make sure ticks are fully visible, data outside are truncated
  		 * @see https://github.com/chartjs/Chart.js/pull/4556
  		 * @since 2.7.0
  		 */
  		bounds: 'data',

  		time: {
  			parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
  			format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/
  			unit: false, // false == automatic or override with week, month, year, etc.
  			round: false, // none, or override with week, month, year, etc.
  			displayFormat: false, // DEPRECATED
  			isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/
  			minUnit: 'millisecond',

  			// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/
  			displayFormats: {
  				millisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,
  				second: 'h:mm:ss a', // 11:20:01 AM
  				minute: 'h:mm a', // 11:20 AM
  				hour: 'hA', // 5PM
  				day: 'MMM D', // Sep 4
  				week: 'll', // Week 46, or maybe "[W]WW - YYYY" ?
  				month: 'MMM YYYY', // Sept 2015
  				quarter: '[Q]Q - YYYY', // Q3
  				year: 'YYYY' // 2015
  			},
  		},
  		ticks: {
  			autoSkip: false,

  			/**
  			 * Ticks generation input values:
  			 * - 'auto': generates "optimal" ticks based on scale size and time options.
  			 * - 'data': generates ticks from data (including labels from data {t|x|y} objects).
  			 * - 'labels': generates ticks from user given `data.labels` values ONLY.
  			 * @see https://github.com/chartjs/Chart.js/pull/4507
  			 * @since 2.7.0
  			 */
  			source: 'auto',

  			major: {
  				enabled: false
  			}
  		}
  	};

  	var TimeScale = core_scale.extend({
  		initialize: function() {
  			if (!moment$1) {
  				throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');
  			}

  			this.mergeTicksOptions();

  			core_scale.prototype.initialize.call(this);
  		},

  		update: function() {
  			var me = this;
  			var options = me.options;

  			// DEPRECATIONS: output a message only one time per update
  			if (options.time && options.time.format) {
  				console.warn('options.time.format is deprecated and replaced by options.time.parser.');
  			}

  			return core_scale.prototype.update.apply(me, arguments);
  		},

  		/**
  		 * Allows data to be referenced via 't' attribute
  		 */
  		getRightValue: function(rawValue) {
  			if (rawValue && rawValue.t !== undefined) {
  				rawValue = rawValue.t;
  			}
  			return core_scale.prototype.getRightValue.call(this, rawValue);
  		},

  		determineDataLimits: function() {
  			var me = this;
  			var chart = me.chart;
  			var timeOpts = me.options.time;
  			var unit = timeOpts.unit || 'day';
  			var min = MAX_INTEGER;
  			var max = MIN_INTEGER;
  			var timestamps = [];
  			var datasets = [];
  			var labels = [];
  			var i, j, ilen, jlen, data, timestamp;

  			// Convert labels to timestamps
  			for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {
  				labels.push(parse$1(chart.data.labels[i], me));
  			}

  			// Convert data to timestamps
  			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
  				if (chart.isDatasetVisible(i)) {
  					data = chart.data.datasets[i].data;

  					// Let's consider that all data have the same format.
  					if (helpers$1.isObject(data[0])) {
  						datasets[i] = [];

  						for (j = 0, jlen = data.length; j < jlen; ++j) {
  							timestamp = parse$1(data[j], me);
  							timestamps.push(timestamp);
  							datasets[i][j] = timestamp;
  						}
  					} else {
  						timestamps.push.apply(timestamps, labels);
  						datasets[i] = labels.slice(0);
  					}
  				} else {
  					datasets[i] = [];
  				}
  			}

  			if (labels.length) {
  				// Sort labels **after** data have been converted
  				labels = arrayUnique(labels).sort(sorter);
  				min = Math.min(min, labels[0]);
  				max = Math.max(max, labels[labels.length - 1]);
  			}

  			if (timestamps.length) {
  				timestamps = arrayUnique(timestamps).sort(sorter);
  				min = Math.min(min, timestamps[0]);
  				max = Math.max(max, timestamps[timestamps.length - 1]);
  			}

  			min = parse$1(timeOpts.min, me) || min;
  			max = parse$1(timeOpts.max, me) || max;

  			// In case there is no valid min/max, set limits based on unit time option
  			min = min === MAX_INTEGER ? +moment$1().startOf(unit) : min;
  			max = max === MIN_INTEGER ? +moment$1().endOf(unit) + 1 : max;

  			// Make sure that max is strictly higher than min (required by the lookup table)
  			me.min = Math.min(min, max);
  			me.max = Math.max(min + 1, max);

  			// PRIVATE
  			me._horizontal = me.isHorizontal();
  			me._table = [];
  			me._timestamps = {
  				data: timestamps,
  				datasets: datasets,
  				labels: labels
  			};
  		},

  		buildTicks: function() {
  			var me = this;
  			var min = me.min;
  			var max = me.max;
  			var options = me.options;
  			var timeOpts = options.time;
  			var timestamps = [];
  			var ticks = [];
  			var i, ilen, timestamp;

  			switch (options.ticks.source) {
  			case 'data':
  				timestamps = me._timestamps.data;
  				break;
  			case 'labels':
  				timestamps = me._timestamps.labels;
  				break;
  			case 'auto':
  			default:
  				timestamps = generate(min, max, me.getLabelCapacity(min), options);
  			}

  			if (options.bounds === 'ticks' && timestamps.length) {
  				min = timestamps[0];
  				max = timestamps[timestamps.length - 1];
  			}

  			// Enforce limits with user min/max options
  			min = parse$1(timeOpts.min, me) || min;
  			max = parse$1(timeOpts.max, me) || max;

  			// Remove ticks outside the min/max range
  			for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
  				timestamp = timestamps[i];
  				if (timestamp >= min && timestamp <= max) {
  					ticks.push(timestamp);
  				}
  			}

  			me.min = min;
  			me.max = max;

  			// PRIVATE
  			me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);
  			me._majorUnit = determineMajorUnit(me._unit);
  			me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);
  			me._offsets = computeOffsets(me._table, ticks, min, max, options);
  			me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);

  			return ticksFromTimestamps(ticks, me._majorUnit);
  		},

  		getLabelForIndex: function(index, datasetIndex) {
  			var me = this;
  			var data = me.chart.data;
  			var timeOpts = me.options.time;
  			var label = data.labels && index < data.labels.length ? data.labels[index] : '';
  			var value = data.datasets[datasetIndex].data[index];

  			if (helpers$1.isObject(value)) {
  				label = me.getRightValue(value);
  			}
  			if (timeOpts.tooltipFormat) {
  				return momentify(label, timeOpts).format(timeOpts.tooltipFormat);
  			}
  			if (typeof label === 'string') {
  				return label;
  			}

  			return momentify(label, timeOpts).format(me._labelFormat);
  		},

  		/**
  		 * Function to format an individual tick mark
  		 * @private
  		 */
  		tickFormatFunction: function(tick, index, ticks, formatOverride) {
  			var me = this;
  			var options = me.options;
  			var time = tick.valueOf();
  			var formats = options.time.displayFormats;
  			var minorFormat = formats[me._unit];
  			var majorUnit = me._majorUnit;
  			var majorFormat = formats[majorUnit];
  			var majorTime = tick.clone().startOf(majorUnit).valueOf();
  			var majorTickOpts = options.ticks.major;
  			var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;
  			var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);
  			var tickOpts = major ? majorTickOpts : options.ticks.minor;
  			var formatter = helpers$1.valueOrDefault(tickOpts.callback, tickOpts.userCallback);

  			return formatter ? formatter(label, index, ticks) : label;
  		},

  		convertTicksToLabels: function(ticks) {
  			var labels = [];
  			var i, ilen;

  			for (i = 0, ilen = ticks.length; i < ilen; ++i) {
  				labels.push(this.tickFormatFunction(moment$1(ticks[i].value), i, ticks));
  			}

  			return labels;
  		},

  		/**
  		 * @private
  		 */
  		getPixelForOffset: function(time) {
  			var me = this;
  			var size = me._horizontal ? me.width : me.height;
  			var start = me._horizontal ? me.left : me.top;
  			var pos = interpolate$1(me._table, 'time', time, 'pos');

  			return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);
  		},

  		getPixelForValue: function(value, index, datasetIndex) {
  			var me = this;
  			var time = null;

  			if (index !== undefined && datasetIndex !== undefined) {
  				time = me._timestamps.datasets[datasetIndex][index];
  			}

  			if (time === null) {
  				time = parse$1(value, me);
  			}

  			if (time !== null) {
  				return me.getPixelForOffset(time);
  			}
  		},

  		getPixelForTick: function(index) {
  			var ticks = this.getTicks();
  			return index >= 0 && index < ticks.length ?
  				this.getPixelForOffset(ticks[index].value) :
  				null;
  		},

  		getValueForPixel: function(pixel) {
  			var me = this;
  			var size = me._horizontal ? me.width : me.height;
  			var start = me._horizontal ? me.left : me.top;
  			var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;
  			var time = interpolate$1(me._table, 'pos', pos, 'time');

  			return moment$1(time);
  		},

  		/**
  		 * Crude approximation of what the label width might be
  		 * @private
  		 */
  		getLabelWidth: function(label) {
  			var me = this;
  			var ticksOpts = me.options.ticks;
  			var tickLabelWidth = me.ctx.measureText(label).width;
  			var angle = helpers$1.toRadians(ticksOpts.maxRotation);
  			var cosRotation = Math.cos(angle);
  			var sinRotation = Math.sin(angle);
  			var tickFontSize = helpers$1.valueOrDefault(ticksOpts.fontSize, core_defaults.global.defaultFontSize);

  			return (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);
  		},

  		/**
  		 * @private
  		 */
  		getLabelCapacity: function(exampleTime) {
  			var me = this;

  			var formatOverride = me.options.time.displayFormats.millisecond;	// Pick the longest format for guestimation

  			var exampleLabel = me.tickFormatFunction(moment$1(exampleTime), 0, [], formatOverride);
  			var tickLabelWidth = me.getLabelWidth(exampleLabel);
  			var innerWidth = me.isHorizontal() ? me.width : me.height;

  			var capacity = Math.floor(innerWidth / tickLabelWidth);
  			return capacity > 0 ? capacity : 1;
  		}
  	});

  	core_scaleService.registerScaleType('time', TimeScale, defaultConfig);
  };

  core_defaults._set('bar', {
  	hover: {
  		mode: 'label'
  	},

  	scales: {
  		xAxes: [{
  			type: 'category',

  			// Specific to Bar Controller
  			categoryPercentage: 0.8,
  			barPercentage: 0.9,

  			// offset settings
  			offset: true,

  			// grid line settings
  			gridLines: {
  				offsetGridLines: true
  			}
  		}],

  		yAxes: [{
  			type: 'linear'
  		}]
  	}
  });

  core_defaults._set('horizontalBar', {
  	hover: {
  		mode: 'index',
  		axis: 'y'
  	},

  	scales: {
  		xAxes: [{
  			type: 'linear',
  			position: 'bottom'
  		}],

  		yAxes: [{
  			position: 'left',
  			type: 'category',

  			// Specific to Horizontal Bar Controller
  			categoryPercentage: 0.8,
  			barPercentage: 0.9,

  			// offset settings
  			offset: true,

  			// grid line settings
  			gridLines: {
  				offsetGridLines: true
  			}
  		}]
  	},

  	elements: {
  		rectangle: {
  			borderSkipped: 'left'
  		}
  	},

  	tooltips: {
  		callbacks: {
  			title: function(item, data) {
  				// Pick first xLabel for now
  				var title = '';

  				if (item.length > 0) {
  					if (item[0].yLabel) {
  						title = item[0].yLabel;
  					} else if (data.labels.length > 0 && item[0].index < data.labels.length) {
  						title = data.labels[item[0].index];
  					}
  				}

  				return title;
  			},

  			label: function(item, data) {
  				var datasetLabel = data.datasets[item.datasetIndex].label || '';
  				return datasetLabel + ': ' + item.xLabel;
  			}
  		},
  		mode: 'index',
  		axis: 'y'
  	}
  });

  /**
   * Computes the "optimal" sample size to maintain bars equally sized while preventing overlap.
   * @private
   */
  function computeMinSampleSize(scale, pixels) {
  	var min = scale.isHorizontal() ? scale.width : scale.height;
  	var ticks = scale.getTicks();
  	var prev, curr, i, ilen;

  	for (i = 1, ilen = pixels.length; i < ilen; ++i) {
  		min = Math.min(min, pixels[i] - pixels[i - 1]);
  	}

  	for (i = 0, ilen = ticks.length; i < ilen; ++i) {
  		curr = scale.getPixelForTick(i);
  		min = i > 0 ? Math.min(min, curr - prev) : min;
  		prev = curr;
  	}

  	return min;
  }

  /**
   * Computes an "ideal" category based on the absolute bar thickness or, if undefined or null,
   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This
   * mode currently always generates bars equally sized (until we introduce scriptable options?).
   * @private
   */
  function computeFitCategoryTraits(index, ruler, options) {
  	var thickness = options.barThickness;
  	var count = ruler.stackCount;
  	var curr = ruler.pixels[index];
  	var size, ratio;

  	if (helpers$1.isNullOrUndef(thickness)) {
  		size = ruler.min * options.categoryPercentage;
  		ratio = options.barPercentage;
  	} else {
  		// When bar thickness is enforced, category and bar percentages are ignored.
  		// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')
  		// and deprecate barPercentage since this value is ignored when thickness is absolute.
  		size = thickness * count;
  		ratio = 1;
  	}

  	return {
  		chunk: size / count,
  		ratio: ratio,
  		start: curr - (size / 2)
  	};
  }

  /**
   * Computes an "optimal" category that globally arranges bars side by side (no gap when
   * percentage options are 1), based on the previous and following categories. This mode
   * generates bars with different widths when data are not evenly spaced.
   * @private
   */
  function computeFlexCategoryTraits(index, ruler, options) {
  	var pixels = ruler.pixels;
  	var curr = pixels[index];
  	var prev = index > 0 ? pixels[index - 1] : null;
  	var next = index < pixels.length - 1 ? pixels[index + 1] : null;
  	var percent = options.categoryPercentage;
  	var start, size;

  	if (prev === null) {
  		// first data: its size is double based on the next point or,
  		// if it's also the last data, we use the scale end extremity.
  		prev = curr - (next === null ? ruler.end - curr : next - curr);
  	}

  	if (next === null) {
  		// last data: its size is also double based on the previous point.
  		next = curr + curr - prev;
  	}

  	start = curr - ((curr - prev) / 2) * percent;
  	size = ((next - prev) / 2) * percent;

  	return {
  		chunk: size / ruler.stackCount,
  		ratio: options.barPercentage,
  		start: start
  	};
  }

  var controller_bar = function(Chart) {

  	Chart.controllers.bar = Chart.DatasetController.extend({

  		dataElementType: elements.Rectangle,

  		initialize: function() {
  			var me = this;
  			var meta;

  			Chart.DatasetController.prototype.initialize.apply(me, arguments);

  			meta = me.getMeta();
  			meta.stack = me.getDataset().stack;
  			meta.bar = true;
  		},

  		update: function(reset) {
  			var me = this;
  			var rects = me.getMeta().data;
  			var i, ilen;

  			me._ruler = me.getRuler();

  			for (i = 0, ilen = rects.length; i < ilen; ++i) {
  				me.updateElement(rects[i], i, reset);
  			}
  		},

  		updateElement: function(rectangle, index, reset) {
  			var me = this;
  			var chart = me.chart;
  			var meta = me.getMeta();
  			var dataset = me.getDataset();
  			var custom = rectangle.custom || {};
  			var rectangleOptions = chart.options.elements.rectangle;

  			rectangle._xScale = me.getScaleForId(meta.xAxisID);
  			rectangle._yScale = me.getScaleForId(meta.yAxisID);
  			rectangle._datasetIndex = me.index;
  			rectangle._index = index;

  			rectangle._model = {
  				datasetLabel: dataset.label,
  				label: chart.data.labels[index],
  				borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,
  				backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers$1.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),
  				borderColor: custom.borderColor ? custom.borderColor : helpers$1.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),
  				borderWidth: custom.borderWidth ? custom.borderWidth : helpers$1.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)
  			};

  			me.updateElementGeometry(rectangle, index, reset);

  			rectangle.pivot();
  		},

  		/**
  		 * @private
  		 */
  		updateElementGeometry: function(rectangle, index, reset) {
  			var me = this;
  			var model = rectangle._model;
  			var vscale = me.getValueScale();
  			var base = vscale.getBasePixel();
  			var horizontal = vscale.isHorizontal();
  			var ruler = me._ruler || me.getRuler();
  			var vpixels = me.calculateBarValuePixels(me.index, index);
  			var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);

  			model.horizontal = horizontal;
  			model.base = reset ? base : vpixels.base;
  			model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;
  			model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;
  			model.height = horizontal ? ipixels.size : undefined;
  			model.width = horizontal ? undefined : ipixels.size;
  		},

  		/**
  		 * @private
  		 */
  		getValueScaleId: function() {
  			return this.getMeta().yAxisID;
  		},

  		/**
  		 * @private
  		 */
  		getIndexScaleId: function() {
  			return this.getMeta().xAxisID;
  		},

  		/**
  		 * @private
  		 */
  		getValueScale: function() {
  			return this.getScaleForId(this.getValueScaleId());
  		},

  		/**
  		 * @private
  		 */
  		getIndexScale: function() {
  			return this.getScaleForId(this.getIndexScaleId());
  		},

  		/**
  		 * Returns the stacks based on groups and bar visibility.
  		 * @param {Number} [last] - The dataset index
  		 * @returns {Array} The stack list
  		 * @private
  		 */
  		_getStacks: function(last) {
  			var me = this;
  			var chart = me.chart;
  			var scale = me.getIndexScale();
  			var stacked = scale.options.stacked;
  			var ilen = last === undefined ? chart.data.datasets.length : last + 1;
  			var stacks = [];
  			var i, meta;

  			for (i = 0; i < ilen; ++i) {
  				meta = chart.getDatasetMeta(i);
  				if (meta.bar && chart.isDatasetVisible(i) &&
  					(stacked === false ||
  					(stacked === true && stacks.indexOf(meta.stack) === -1) ||
  					(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {
  					stacks.push(meta.stack);
  				}
  			}

  			return stacks;
  		},

  		/**
  		 * Returns the effective number of stacks based on groups and bar visibility.
  		 * @private
  		 */
  		getStackCount: function() {
  			return this._getStacks().length;
  		},

  		/**
  		 * Returns the stack index for the given dataset based on groups and bar visibility.
  		 * @param {Number} [datasetIndex] - The dataset index
  		 * @param {String} [name] - The stack name to find
  		 * @returns {Number} The stack index
  		 * @private
  		 */
  		getStackIndex: function(datasetIndex, name) {
  			var stacks = this._getStacks(datasetIndex);
  			var index = (name !== undefined)
  				? stacks.indexOf(name)
  				: -1; // indexOf returns -1 if element is not present

  			return (index === -1)
  				? stacks.length - 1
  				: index;
  		},

  		/**
  		 * @private
  		 */
  		getRuler: function() {
  			var me = this;
  			var scale = me.getIndexScale();
  			var stackCount = me.getStackCount();
  			var datasetIndex = me.index;
  			var isHorizontal = scale.isHorizontal();
  			var start = isHorizontal ? scale.left : scale.top;
  			var end = start + (isHorizontal ? scale.width : scale.height);
  			var pixels = [];
  			var i, ilen, min;

  			for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {
  				pixels.push(scale.getPixelForValue(null, i, datasetIndex));
  			}

  			min = helpers$1.isNullOrUndef(scale.options.barThickness)
  				? computeMinSampleSize(scale, pixels)
  				: -1;

  			return {
  				min: min,
  				pixels: pixels,
  				start: start,
  				end: end,
  				stackCount: stackCount,
  				scale: scale
  			};
  		},

  		/**
  		 * Note: pixel values are not clamped to the scale area.
  		 * @private
  		 */
  		calculateBarValuePixels: function(datasetIndex, index) {
  			var me = this;
  			var chart = me.chart;
  			var meta = me.getMeta();
  			var scale = me.getValueScale();
  			var datasets = chart.data.datasets;
  			var value = scale.getRightValue(datasets[datasetIndex].data[index]);
  			var stacked = scale.options.stacked;
  			var stack = meta.stack;
  			var start = 0;
  			var i, imeta, ivalue, base, head, size;

  			if (stacked || (stacked === undefined && stack !== undefined)) {
  				for (i = 0; i < datasetIndex; ++i) {
  					imeta = chart.getDatasetMeta(i);

  					if (imeta.bar &&
  						imeta.stack === stack &&
  						imeta.controller.getValueScaleId() === scale.id &&
  						chart.isDatasetVisible(i)) {

  						ivalue = scale.getRightValue(datasets[i].data[index]);
  						if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {
  							start += ivalue;
  						}
  					}
  				}
  			}

  			base = scale.getPixelForValue(start);
  			head = scale.getPixelForValue(start + value);
  			size = (head - base) / 2;

  			return {
  				size: size,
  				base: base,
  				head: head,
  				center: head + size / 2
  			};
  		},

  		/**
  		 * @private
  		 */
  		calculateBarIndexPixels: function(datasetIndex, index, ruler) {
  			var me = this;
  			var options = ruler.scale.options;
  			var range = options.barThickness === 'flex'
  				? computeFlexCategoryTraits(index, ruler, options)
  				: computeFitCategoryTraits(index, ruler, options);

  			var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);
  			var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);
  			var size = Math.min(
  				helpers$1.valueOrDefault(options.maxBarThickness, Infinity),
  				range.chunk * range.ratio);

  			return {
  				base: center - size / 2,
  				head: center + size / 2,
  				center: center,
  				size: size
  			};
  		},

  		draw: function() {
  			var me = this;
  			var chart = me.chart;
  			var scale = me.getValueScale();
  			var rects = me.getMeta().data;
  			var dataset = me.getDataset();
  			var ilen = rects.length;
  			var i = 0;

  			helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);

  			for (; i < ilen; ++i) {
  				if (!isNaN(scale.getRightValue(dataset.data[i]))) {
  					rects[i].draw();
  				}
  			}

  			helpers$1.canvas.unclipArea(chart.ctx);
  		},
  	});

  	Chart.controllers.horizontalBar = Chart.controllers.bar.extend({
  		/**
  		 * @private
  		 */
  		getValueScaleId: function() {
  			return this.getMeta().xAxisID;
  		},

  		/**
  		 * @private
  		 */
  		getIndexScaleId: function() {
  			return this.getMeta().yAxisID;
  		}
  	});
  };

  core_defaults._set('bubble', {
  	hover: {
  		mode: 'single'
  	},

  	scales: {
  		xAxes: [{
  			type: 'linear', // bubble should probably use a linear scale by default
  			position: 'bottom',
  			id: 'x-axis-0' // need an ID so datasets can reference the scale
  		}],
  		yAxes: [{
  			type: 'linear',
  			position: 'left',
  			id: 'y-axis-0'
  		}]
  	},

  	tooltips: {
  		callbacks: {
  			title: function() {
  				// Title doesn't make sense for scatter since we format the data as a point
  				return '';
  			},
  			label: function(item, data) {
  				var datasetLabel = data.datasets[item.datasetIndex].label || '';
  				var dataPoint = data.datasets[item.datasetIndex].data[item.index];
  				return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';
  			}
  		}
  	}
  });


  var controller_bubble = function(Chart) {

  	Chart.controllers.bubble = Chart.DatasetController.extend({
  		/**
  		 * @protected
  		 */
  		dataElementType: elements.Point,

  		/**
  		 * @protected
  		 */
  		update: function(reset) {
  			var me = this;
  			var meta = me.getMeta();
  			var points = meta.data;

  			// Update Points
  			helpers$1.each(points, function(point, index) {
  				me.updateElement(point, index, reset);
  			});
  		},

  		/**
  		 * @protected
  		 */
  		updateElement: function(point, index, reset) {
  			var me = this;
  			var meta = me.getMeta();
  			var custom = point.custom || {};
  			var xScale = me.getScaleForId(meta.xAxisID);
  			var yScale = me.getScaleForId(meta.yAxisID);
  			var options = me._resolveElementOptions(point, index);
  			var data = me.getDataset().data[index];
  			var dsIndex = me.index;

  			var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);
  			var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);

  			point._xScale = xScale;
  			point._yScale = yScale;
  			point._options = options;
  			point._datasetIndex = dsIndex;
  			point._index = index;
  			point._model = {
  				backgroundColor: options.backgroundColor,
  				borderColor: options.borderColor,
  				borderWidth: options.borderWidth,
  				hitRadius: options.hitRadius,
  				pointStyle: options.pointStyle,
  				rotation: options.rotation,
  				radius: reset ? 0 : options.radius,
  				skip: custom.skip || isNaN(x) || isNaN(y),
  				x: x,
  				y: y,
  			};

  			point.pivot();
  		},

  		/**
  		 * @protected
  		 */
  		setHoverStyle: function(point) {
  			var model = point._model;
  			var options = point._options;
  			point.$previousStyle = {
  				backgroundColor: model.backgroundColor,
  				borderColor: model.borderColor,
  				borderWidth: model.borderWidth,
  				radius: model.radius
  			};
  			model.backgroundColor = helpers$1.valueOrDefault(options.hoverBackgroundColor, helpers$1.getHoverColor(options.backgroundColor));
  			model.borderColor = helpers$1.valueOrDefault(options.hoverBorderColor, helpers$1.getHoverColor(options.borderColor));
  			model.borderWidth = helpers$1.valueOrDefault(options.hoverBorderWidth, options.borderWidth);
  			model.radius = options.radius + options.hoverRadius;
  		},

  		/**
  		 * @private
  		 */
  		_resolveElementOptions: function(point, index) {
  			var me = this;
  			var chart = me.chart;
  			var datasets = chart.data.datasets;
  			var dataset = datasets[me.index];
  			var custom = point.custom || {};
  			var options = chart.options.elements.point;
  			var resolve = helpers$1.options.resolve;
  			var data = dataset.data[index];
  			var values = {};
  			var i, ilen, key;

  			// Scriptable options
  			var context = {
  				chart: chart,
  				dataIndex: index,
  				dataset: dataset,
  				datasetIndex: me.index
  			};

  			var keys = [
  				'backgroundColor',
  				'borderColor',
  				'borderWidth',
  				'hoverBackgroundColor',
  				'hoverBorderColor',
  				'hoverBorderWidth',
  				'hoverRadius',
  				'hitRadius',
  				'pointStyle',
  				'rotation'
  			];

  			for (i = 0, ilen = keys.length; i < ilen; ++i) {
  				key = keys[i];
  				values[key] = resolve([
  					custom[key],
  					dataset[key],
  					options[key]
  				], context, index);
  			}

  			// Custom radius resolution
  			values.radius = resolve([
  				custom.radius,
  				data ? data.r : undefined,
  				dataset.radius,
  				options.radius
  			], context, index);
  			return values;
  		}
  	});
  };

  core_defaults._set('doughnut', {
  	animation: {
  		// Boolean - Whether we animate the rotation of the Doughnut
  		animateRotate: true,
  		// Boolean - Whether we animate scaling the Doughnut from the centre
  		animateScale: false
  	},
  	hover: {
  		mode: 'single'
  	},
  	legendCallback: function(chart) {
  		var text = [];
  		text.push('<ul class="' + chart.id + '-legend">');

  		var data = chart.data;
  		var datasets = data.datasets;
  		var labels = data.labels;

  		if (datasets.length) {
  			for (var i = 0; i < datasets[0].data.length; ++i) {
  				text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
  				if (labels[i]) {
  					text.push(labels[i]);
  				}
  				text.push('</li>');
  			}
  		}

  		text.push('</ul>');
  		return text.join('');
  	},
  	legend: {
  		labels: {
  			generateLabels: function(chart) {
  				var data = chart.data;
  				if (data.labels.length && data.datasets.length) {
  					return data.labels.map(function(label, i) {
  						var meta = chart.getDatasetMeta(0);
  						var ds = data.datasets[0];
  						var arc = meta.data[i];
  						var custom = arc && arc.custom || {};
  						var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;
  						var arcOpts = chart.options.elements.arc;
  						var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
  						var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
  						var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

  						return {
  							text: label,
  							fillStyle: fill,
  							strokeStyle: stroke,
  							lineWidth: bw,
  							hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

  							// Extra data used for toggling the correct item
  							index: i
  						};
  					});
  				}
  				return [];
  			}
  		},

  		onClick: function(e, legendItem) {
  			var index = legendItem.index;
  			var chart = this.chart;
  			var i, ilen, meta;

  			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
  				meta = chart.getDatasetMeta(i);
  				// toggle visibility of index if exists
  				if (meta.data[index]) {
  					meta.data[index].hidden = !meta.data[index].hidden;
  				}
  			}

  			chart.update();
  		}
  	},

  	// The percentage of the chart that we cut out of the middle.
  	cutoutPercentage: 50,

  	// The rotation of the chart, where the first data arc begins.
  	rotation: Math.PI * -0.5,

  	// The total circumference of the chart.
  	circumference: Math.PI * 2.0,

  	// Need to override these to give a nice default
  	tooltips: {
  		callbacks: {
  			title: function() {
  				return '';
  			},
  			label: function(tooltipItem, data) {
  				var dataLabel = data.labels[tooltipItem.index];
  				var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];

  				if (helpers$1.isArray(dataLabel)) {
  					// show value on first line of multiline label
  					// need to clone because we are changing the value
  					dataLabel = dataLabel.slice();
  					dataLabel[0] += value;
  				} else {
  					dataLabel += value;
  				}

  				return dataLabel;
  			}
  		}
  	}
  });

  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));
  core_defaults._set('pie', {
  	cutoutPercentage: 0
  });

  var controller_doughnut = function(Chart) {

  	Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({

  		dataElementType: elements.Arc,

  		linkScales: helpers$1.noop,

  		// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
  		getRingIndex: function(datasetIndex) {
  			var ringIndex = 0;

  			for (var j = 0; j < datasetIndex; ++j) {
  				if (this.chart.isDatasetVisible(j)) {
  					++ringIndex;
  				}
  			}

  			return ringIndex;
  		},

  		update: function(reset) {
  			var me = this;
  			var chart = me.chart;
  			var chartArea = chart.chartArea;
  			var opts = chart.options;
  			var arcOpts = opts.elements.arc;
  			var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;
  			var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;
  			var minSize = Math.min(availableWidth, availableHeight);
  			var offset = {x: 0, y: 0};
  			var meta = me.getMeta();
  			var cutoutPercentage = opts.cutoutPercentage;
  			var circumference = opts.circumference;

  			// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc
  			if (circumference < Math.PI * 2.0) {
  				var startAngle = opts.rotation % (Math.PI * 2.0);
  				startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);
  				var endAngle = startAngle + circumference;
  				var start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};
  				var end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};
  				var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);
  				var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);
  				var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);
  				var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);
  				var cutout = cutoutPercentage / 100.0;
  				var min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};
  				var max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};
  				var size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};
  				minSize = Math.min(availableWidth / size.width, availableHeight / size.height);
  				offset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};
  			}

  			chart.borderWidth = me.getMaxBorderWidth(meta.data);
  			chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);
  			chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);
  			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();
  			chart.offsetX = offset.x * chart.outerRadius;
  			chart.offsetY = offset.y * chart.outerRadius;

  			meta.total = me.calculateTotal();

  			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));
  			me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);

  			helpers$1.each(meta.data, function(arc, index) {
  				me.updateElement(arc, index, reset);
  			});
  		},

  		updateElement: function(arc, index, reset) {
  			var me = this;
  			var chart = me.chart;
  			var chartArea = chart.chartArea;
  			var opts = chart.options;
  			var animationOpts = opts.animation;
  			var centerX = (chartArea.left + chartArea.right) / 2;
  			var centerY = (chartArea.top + chartArea.bottom) / 2;
  			var startAngle = opts.rotation; // non reset case handled later
  			var endAngle = opts.rotation; // non reset case handled later
  			var dataset = me.getDataset();
  			var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));
  			var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;
  			var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;
  			var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;

  			helpers$1.extend(arc, {
  				// Utility
  				_datasetIndex: me.index,
  				_index: index,

  				// Desired view properties
  				_model: {
  					x: centerX + chart.offsetX,
  					y: centerY + chart.offsetY,
  					startAngle: startAngle,
  					endAngle: endAngle,
  					circumference: circumference,
  					outerRadius: outerRadius,
  					innerRadius: innerRadius,
  					label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
  				}
  			});

  			var model = arc._model;

  			// Resets the visual styles
  			var custom = arc.custom || {};
  			var valueOrDefault = helpers$1.valueAtIndexOrDefault;
  			var elementOpts = this.chart.options.elements.arc;
  			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
  			model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
  			model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);

  			// Set correct angles if not resetting
  			if (!reset || !animationOpts.animateRotate) {
  				if (index === 0) {
  					model.startAngle = opts.rotation;
  				} else {
  					model.startAngle = me.getMeta().data[index - 1]._model.endAngle;
  				}

  				model.endAngle = model.startAngle + model.circumference;
  			}

  			arc.pivot();
  		},

  		calculateTotal: function() {
  			var dataset = this.getDataset();
  			var meta = this.getMeta();
  			var total = 0;
  			var value;

  			helpers$1.each(meta.data, function(element, index) {
  				value = dataset.data[index];
  				if (!isNaN(value) && !element.hidden) {
  					total += Math.abs(value);
  				}
  			});

  			/* if (total === 0) {
  				total = NaN;
  			}*/

  			return total;
  		},

  		calculateCircumference: function(value) {
  			var total = this.getMeta().total;
  			if (total > 0 && !isNaN(value)) {
  				return (Math.PI * 2.0) * (Math.abs(value) / total);
  			}
  			return 0;
  		},

  		// gets the max border or hover width to properly scale pie charts
  		getMaxBorderWidth: function(arcs) {
  			var max = 0;
  			var index = this.index;
  			var length = arcs.length;
  			var borderWidth;
  			var hoverWidth;

  			for (var i = 0; i < length; i++) {
  				borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;
  				hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;

  				max = borderWidth > max ? borderWidth : max;
  				max = hoverWidth > max ? hoverWidth : max;
  			}
  			return max;
  		}
  	});
  };

  core_defaults._set('line', {
  	showLines: true,
  	spanGaps: false,

  	hover: {
  		mode: 'label'
  	},

  	scales: {
  		xAxes: [{
  			type: 'category',
  			id: 'x-axis-0'
  		}],
  		yAxes: [{
  			type: 'linear',
  			id: 'y-axis-0'
  		}]
  	}
  });

  var controller_line = function(Chart) {

  	function lineEnabled(dataset, options) {
  		return helpers$1.valueOrDefault(dataset.showLine, options.showLines);
  	}

  	Chart.controllers.line = Chart.DatasetController.extend({

  		datasetElementType: elements.Line,

  		dataElementType: elements.Point,

  		update: function(reset) {
  			var me = this;
  			var meta = me.getMeta();
  			var line = meta.dataset;
  			var points = meta.data || [];
  			var options = me.chart.options;
  			var lineElementOptions = options.elements.line;
  			var scale = me.getScaleForId(meta.yAxisID);
  			var i, ilen, custom;
  			var dataset = me.getDataset();
  			var showLine = lineEnabled(dataset, options);

  			// Update Line
  			if (showLine) {
  				custom = line.custom || {};

  				// Compatibility: If the properties are defined with only the old name, use those values
  				if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
  					dataset.lineTension = dataset.tension;
  				}

  				// Utility
  				line._scale = scale;
  				line._datasetIndex = me.index;
  				// Data
  				line._children = points;
  				// Model
  				line._model = {
  					// Appearance
  					// The default behavior of lines is to break at null values, according
  					// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
  					// This option gives lines the ability to span gaps
  					spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,
  					tension: custom.tension ? custom.tension : helpers$1.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
  					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
  					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
  					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
  					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
  					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
  					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
  					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
  					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
  					steppedLine: custom.steppedLine ? custom.steppedLine : helpers$1.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),
  					cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers$1.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),
  				};

  				line.pivot();
  			}

  			// Update Points
  			for (i = 0, ilen = points.length; i < ilen; ++i) {
  				me.updateElement(points[i], i, reset);
  			}

  			if (showLine && line._model.tension !== 0) {
  				me.updateBezierControlPoints();
  			}

  			// Now pivot the point for animation
  			for (i = 0, ilen = points.length; i < ilen; ++i) {
  				points[i].pivot();
  			}
  		},

  		getPointBackgroundColor: function(point, index) {
  			var backgroundColor = this.chart.options.elements.point.backgroundColor;
  			var dataset = this.getDataset();
  			var custom = point.custom || {};

  			if (custom.backgroundColor) {
  				backgroundColor = custom.backgroundColor;
  			} else if (dataset.pointBackgroundColor) {
  				backgroundColor = helpers$1.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);
  			} else if (dataset.backgroundColor) {
  				backgroundColor = dataset.backgroundColor;
  			}

  			return backgroundColor;
  		},

  		getPointBorderColor: function(point, index) {
  			var borderColor = this.chart.options.elements.point.borderColor;
  			var dataset = this.getDataset();
  			var custom = point.custom || {};

  			if (custom.borderColor) {
  				borderColor = custom.borderColor;
  			} else if (dataset.pointBorderColor) {
  				borderColor = helpers$1.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);
  			} else if (dataset.borderColor) {
  				borderColor = dataset.borderColor;
  			}

  			return borderColor;
  		},

  		getPointBorderWidth: function(point, index) {
  			var borderWidth = this.chart.options.elements.point.borderWidth;
  			var dataset = this.getDataset();
  			var custom = point.custom || {};

  			if (!isNaN(custom.borderWidth)) {
  				borderWidth = custom.borderWidth;
  			} else if (!isNaN(dataset.pointBorderWidth) || helpers$1.isArray(dataset.pointBorderWidth)) {
  				borderWidth = helpers$1.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);
  			} else if (!isNaN(dataset.borderWidth)) {
  				borderWidth = dataset.borderWidth;
  			}

  			return borderWidth;
  		},

  		getPointRotation: function(point, index) {
  			var pointRotation = this.chart.options.elements.point.rotation;
  			var dataset = this.getDataset();
  			var custom = point.custom || {};

  			if (!isNaN(custom.rotation)) {
  				pointRotation = custom.rotation;
  			} else if (!isNaN(dataset.pointRotation) || helpers$1.isArray(dataset.pointRotation)) {
  				pointRotation = helpers$1.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);
  			}
  			return pointRotation;
  		},

  		updateElement: function(point, index, reset) {
  			var me = this;
  			var meta = me.getMeta();
  			var custom = point.custom || {};
  			var dataset = me.getDataset();
  			var datasetIndex = me.index;
  			var value = dataset.data[index];
  			var yScale = me.getScaleForId(meta.yAxisID);
  			var xScale = me.getScaleForId(meta.xAxisID);
  			var pointOptions = me.chart.options.elements.point;
  			var x, y;

  			// Compatibility: If the properties are defined with only the old name, use those values
  			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
  				dataset.pointRadius = dataset.radius;
  			}
  			if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {
  				dataset.pointHitRadius = dataset.hitRadius;
  			}

  			x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);
  			y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);

  			// Utility
  			point._xScale = xScale;
  			point._yScale = yScale;
  			point._datasetIndex = datasetIndex;
  			point._index = index;

  			// Desired view properties
  			point._model = {
  				x: x,
  				y: y,
  				skip: custom.skip || isNaN(x) || isNaN(y),
  				// Appearance
  				radius: custom.radius || helpers$1.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),
  				pointStyle: custom.pointStyle || helpers$1.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),
  				rotation: me.getPointRotation(point, index),
  				backgroundColor: me.getPointBackgroundColor(point, index),
  				borderColor: me.getPointBorderColor(point, index),
  				borderWidth: me.getPointBorderWidth(point, index),
  				tension: meta.dataset._model ? meta.dataset._model.tension : 0,
  				steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,
  				// Tooltip
  				hitRadius: custom.hitRadius || helpers$1.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)
  			};
  		},

  		calculatePointY: function(value, index, datasetIndex) {
  			var me = this;
  			var chart = me.chart;
  			var meta = me.getMeta();
  			var yScale = me.getScaleForId(meta.yAxisID);
  			var sumPos = 0;
  			var sumNeg = 0;
  			var i, ds, dsMeta;

  			if (yScale.options.stacked) {
  				for (i = 0; i < datasetIndex; i++) {
  					ds = chart.data.datasets[i];
  					dsMeta = chart.getDatasetMeta(i);
  					if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {
  						var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));
  						if (stackedRightValue < 0) {
  							sumNeg += stackedRightValue || 0;
  						} else {
  							sumPos += stackedRightValue || 0;
  						}
  					}
  				}

  				var rightValue = Number(yScale.getRightValue(value));
  				if (rightValue < 0) {
  					return yScale.getPixelForValue(sumNeg + rightValue);
  				}
  				return yScale.getPixelForValue(sumPos + rightValue);
  			}

  			return yScale.getPixelForValue(value);
  		},

  		updateBezierControlPoints: function() {
  			var me = this;
  			var meta = me.getMeta();
  			var area = me.chart.chartArea;
  			var points = (meta.data || []);
  			var i, ilen, point, model, controlPoints;

  			// Only consider points that are drawn in case the spanGaps option is used
  			if (meta.dataset._model.spanGaps) {
  				points = points.filter(function(pt) {
  					return !pt._model.skip;
  				});
  			}

  			function capControlPoint(pt, min, max) {
  				return Math.max(Math.min(pt, max), min);
  			}

  			if (meta.dataset._model.cubicInterpolationMode === 'monotone') {
  				helpers$1.splineCurveMonotone(points);
  			} else {
  				for (i = 0, ilen = points.length; i < ilen; ++i) {
  					point = points[i];
  					model = point._model;
  					controlPoints = helpers$1.splineCurve(
  						helpers$1.previousItem(points, i)._model,
  						model,
  						helpers$1.nextItem(points, i)._model,
  						meta.dataset._model.tension
  					);
  					model.controlPointPreviousX = controlPoints.previous.x;
  					model.controlPointPreviousY = controlPoints.previous.y;
  					model.controlPointNextX = controlPoints.next.x;
  					model.controlPointNextY = controlPoints.next.y;
  				}
  			}

  			if (me.chart.options.elements.line.capBezierPoints) {
  				for (i = 0, ilen = points.length; i < ilen; ++i) {
  					model = points[i]._model;
  					model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
  					model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
  					model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
  					model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);
  				}
  			}
  		},

  		draw: function() {
  			var me = this;
  			var chart = me.chart;
  			var meta = me.getMeta();
  			var points = meta.data || [];
  			var area = chart.chartArea;
  			var ilen = points.length;
  			var halfBorderWidth;
  			var i = 0;

  			if (lineEnabled(me.getDataset(), chart.options)) {
  				halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;

  				helpers$1.canvas.clipArea(chart.ctx, {
  					left: area.left,
  					right: area.right,
  					top: area.top - halfBorderWidth,
  					bottom: area.bottom + halfBorderWidth
  				});

  				meta.dataset.draw();

  				helpers$1.canvas.unclipArea(chart.ctx);
  			}

  			// Draw the points
  			for (; i < ilen; ++i) {
  				points[i].draw(area);
  			}
  		},

  		setHoverStyle: function(element) {
  			// Point
  			var dataset = this.chart.data.datasets[element._datasetIndex];
  			var index = element._index;
  			var custom = element.custom || {};
  			var model = element._model;

  			element.$previousStyle = {
  				backgroundColor: model.backgroundColor,
  				borderColor: model.borderColor,
  				borderWidth: model.borderWidth,
  				radius: model.radius
  			};

  			model.backgroundColor = custom.hoverBackgroundColor || helpers$1.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers$1.getHoverColor(model.backgroundColor));
  			model.borderColor = custom.hoverBorderColor || helpers$1.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers$1.getHoverColor(model.borderColor));
  			model.borderWidth = custom.hoverBorderWidth || helpers$1.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
  			model.radius = custom.hoverRadius || helpers$1.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
  		},
  	});
  };

  core_defaults._set('polarArea', {
  	scale: {
  		type: 'radialLinear',
  		angleLines: {
  			display: false
  		},
  		gridLines: {
  			circular: true
  		},
  		pointLabels: {
  			display: false
  		},
  		ticks: {
  			beginAtZero: true
  		}
  	},

  	// Boolean - Whether to animate the rotation of the chart
  	animation: {
  		animateRotate: true,
  		animateScale: true
  	},

  	startAngle: -0.5 * Math.PI,
  	legendCallback: function(chart) {
  		var text = [];
  		text.push('<ul class="' + chart.id + '-legend">');

  		var data = chart.data;
  		var datasets = data.datasets;
  		var labels = data.labels;

  		if (datasets.length) {
  			for (var i = 0; i < datasets[0].data.length; ++i) {
  				text.push('<li><span style="background-color:' + datasets[0].backgroundColor[i] + '"></span>');
  				if (labels[i]) {
  					text.push(labels[i]);
  				}
  				text.push('</li>');
  			}
  		}

  		text.push('</ul>');
  		return text.join('');
  	},
  	legend: {
  		labels: {
  			generateLabels: function(chart) {
  				var data = chart.data;
  				if (data.labels.length && data.datasets.length) {
  					return data.labels.map(function(label, i) {
  						var meta = chart.getDatasetMeta(0);
  						var ds = data.datasets[0];
  						var arc = meta.data[i];
  						var custom = arc.custom || {};
  						var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;
  						var arcOpts = chart.options.elements.arc;
  						var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
  						var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
  						var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

  						return {
  							text: label,
  							fillStyle: fill,
  							strokeStyle: stroke,
  							lineWidth: bw,
  							hidden: isNaN(ds.data[i]) || meta.data[i].hidden,

  							// Extra data used for toggling the correct item
  							index: i
  						};
  					});
  				}
  				return [];
  			}
  		},

  		onClick: function(e, legendItem) {
  			var index = legendItem.index;
  			var chart = this.chart;
  			var i, ilen, meta;

  			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
  				meta = chart.getDatasetMeta(i);
  				meta.data[index].hidden = !meta.data[index].hidden;
  			}

  			chart.update();
  		}
  	},

  	// Need to override these to give a nice default
  	tooltips: {
  		callbacks: {
  			title: function() {
  				return '';
  			},
  			label: function(item, data) {
  				return data.labels[item.index] + ': ' + item.yLabel;
  			}
  		}
  	}
  });

  var controller_polarArea = function(Chart) {

  	Chart.controllers.polarArea = Chart.DatasetController.extend({

  		dataElementType: elements.Arc,

  		linkScales: helpers$1.noop,

  		update: function(reset) {
  			var me = this;
  			var dataset = me.getDataset();
  			var meta = me.getMeta();
  			var start = me.chart.options.startAngle || 0;
  			var starts = me._starts = [];
  			var angles = me._angles = [];
  			var i, ilen, angle;

  			me._updateRadius();

  			meta.count = me.countVisibleElements();

  			for (i = 0, ilen = dataset.data.length; i < ilen; i++) {
  				starts[i] = start;
  				angle = me._computeAngle(i);
  				angles[i] = angle;
  				start += angle;
  			}

  			helpers$1.each(meta.data, function(arc, index) {
  				me.updateElement(arc, index, reset);
  			});
  		},

  		/**
  		 * @private
  		 */
  		_updateRadius: function() {
  			var me = this;
  			var chart = me.chart;
  			var chartArea = chart.chartArea;
  			var opts = chart.options;
  			var arcOpts = opts.elements.arc;
  			var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);

  			chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);
  			chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);
  			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();

  			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);
  			me.innerRadius = me.outerRadius - chart.radiusLength;
  		},

  		updateElement: function(arc, index, reset) {
  			var me = this;
  			var chart = me.chart;
  			var dataset = me.getDataset();
  			var opts = chart.options;
  			var animationOpts = opts.animation;
  			var scale = chart.scale;
  			var labels = chart.data.labels;

  			var centerX = scale.xCenter;
  			var centerY = scale.yCenter;

  			// var negHalfPI = -0.5 * Math.PI;
  			var datasetStartAngle = opts.startAngle;
  			var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
  			var startAngle = me._starts[index];
  			var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);

  			var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);

  			helpers$1.extend(arc, {
  				// Utility
  				_datasetIndex: me.index,
  				_index: index,
  				_scale: scale,

  				// Desired view properties
  				_model: {
  					x: centerX,
  					y: centerY,
  					innerRadius: 0,
  					outerRadius: reset ? resetRadius : distance,
  					startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,
  					endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,
  					label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])
  				}
  			});

  			// Apply border and fill style
  			var elementOpts = this.chart.options.elements.arc;
  			var custom = arc.custom || {};
  			var valueOrDefault = helpers$1.valueAtIndexOrDefault;
  			var model = arc._model;

  			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);
  			model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);
  			model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);

  			arc.pivot();
  		},

  		countVisibleElements: function() {
  			var dataset = this.getDataset();
  			var meta = this.getMeta();
  			var count = 0;

  			helpers$1.each(meta.data, function(element, index) {
  				if (!isNaN(dataset.data[index]) && !element.hidden) {
  					count++;
  				}
  			});

  			return count;
  		},

  		/**
  		 * @private
  		 */
  		_computeAngle: function(index) {
  			var me = this;
  			var count = this.getMeta().count;
  			var dataset = me.getDataset();
  			var meta = me.getMeta();

  			if (isNaN(dataset.data[index]) || meta.data[index].hidden) {
  				return 0;
  			}

  			// Scriptable options
  			var context = {
  				chart: me.chart,
  				dataIndex: index,
  				dataset: dataset,
  				datasetIndex: me.index
  			};

  			return helpers$1.options.resolve([
  				me.chart.options.elements.arc.angle,
  				(2 * Math.PI) / count
  			], context, index);
  		}
  	});
  };

  core_defaults._set('radar', {
  	scale: {
  		type: 'radialLinear'
  	},
  	elements: {
  		line: {
  			tension: 0 // no bezier in radar
  		}
  	}
  });

  var controller_radar = function(Chart) {

  	Chart.controllers.radar = Chart.DatasetController.extend({

  		datasetElementType: elements.Line,

  		dataElementType: elements.Point,

  		linkScales: helpers$1.noop,

  		update: function(reset) {
  			var me = this;
  			var meta = me.getMeta();
  			var line = meta.dataset;
  			var points = meta.data;
  			var custom = line.custom || {};
  			var dataset = me.getDataset();
  			var lineElementOptions = me.chart.options.elements.line;
  			var scale = me.chart.scale;

  			// Compatibility: If the properties are defined with only the old name, use those values
  			if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {
  				dataset.lineTension = dataset.tension;
  			}

  			helpers$1.extend(meta.dataset, {
  				// Utility
  				_datasetIndex: me.index,
  				_scale: scale,
  				// Data
  				_children: points,
  				_loop: true,
  				// Model
  				_model: {
  					// Appearance
  					tension: custom.tension ? custom.tension : helpers$1.valueOrDefault(dataset.lineTension, lineElementOptions.tension),
  					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),
  					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),
  					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),
  					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),
  					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),
  					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),
  					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),
  					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),
  				}
  			});

  			meta.dataset.pivot();

  			// Update Points
  			helpers$1.each(points, function(point, index) {
  				me.updateElement(point, index, reset);
  			}, me);

  			// Update bezier control points
  			me.updateBezierControlPoints();
  		},
  		updateElement: function(point, index, reset) {
  			var me = this;
  			var custom = point.custom || {};
  			var dataset = me.getDataset();
  			var scale = me.chart.scale;
  			var pointElementOptions = me.chart.options.elements.point;
  			var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);

  			// Compatibility: If the properties are defined with only the old name, use those values
  			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {
  				dataset.pointRadius = dataset.radius;
  			}
  			if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {
  				dataset.pointHitRadius = dataset.hitRadius;
  			}

  			helpers$1.extend(point, {
  				// Utility
  				_datasetIndex: me.index,
  				_index: index,
  				_scale: scale,

  				// Desired view properties
  				_model: {
  					x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales
  					y: reset ? scale.yCenter : pointPosition.y,

  					// Appearance
  					tension: custom.tension ? custom.tension : helpers$1.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),
  					radius: custom.radius ? custom.radius : helpers$1.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),
  					backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers$1.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),
  					borderColor: custom.borderColor ? custom.borderColor : helpers$1.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),
  					borderWidth: custom.borderWidth ? custom.borderWidth : helpers$1.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),
  					pointStyle: custom.pointStyle ? custom.pointStyle : helpers$1.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),
  					rotation: custom.rotation ? custom.rotation : helpers$1.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),

  					// Tooltip
  					hitRadius: custom.hitRadius ? custom.hitRadius : helpers$1.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)
  				}
  			});

  			point._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));
  		},
  		updateBezierControlPoints: function() {
  			var chartArea = this.chart.chartArea;
  			var meta = this.getMeta();

  			helpers$1.each(meta.data, function(point, index) {
  				var model = point._model;
  				var controlPoints = helpers$1.splineCurve(
  					helpers$1.previousItem(meta.data, index, true)._model,
  					model,
  					helpers$1.nextItem(meta.data, index, true)._model,
  					model.tension
  				);

  				// Prevent the bezier going outside of the bounds of the graph
  				model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);
  				model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);

  				model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);
  				model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);

  				// Now pivot the point for animation
  				point.pivot();
  			});
  		},

  		setHoverStyle: function(point) {
  			// Point
  			var dataset = this.chart.data.datasets[point._datasetIndex];
  			var custom = point.custom || {};
  			var index = point._index;
  			var model = point._model;

  			point.$previousStyle = {
  				backgroundColor: model.backgroundColor,
  				borderColor: model.borderColor,
  				borderWidth: model.borderWidth,
  				radius: model.radius
  			};

  			model.radius = custom.hoverRadius ? custom.hoverRadius : helpers$1.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);
  			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers$1.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers$1.getHoverColor(model.backgroundColor));
  			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers$1.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers$1.getHoverColor(model.borderColor));
  			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers$1.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);
  		},
  	});
  };

  core_defaults._set('scatter', {
  	hover: {
  		mode: 'single'
  	},

  	scales: {
  		xAxes: [{
  			id: 'x-axis-1',    // need an ID so datasets can reference the scale
  			type: 'linear',    // scatter should not use a category axis
  			position: 'bottom'
  		}],
  		yAxes: [{
  			id: 'y-axis-1',
  			type: 'linear',
  			position: 'left'
  		}]
  	},

  	showLines: false,

  	tooltips: {
  		callbacks: {
  			title: function() {
  				return '';     // doesn't make sense for scatter since data are formatted as a point
  			},
  			label: function(item) {
  				return '(' + item.xLabel + ', ' + item.yLabel + ')';
  			}
  		}
  	}
  });

  var controller_scatter = function(Chart) {

  	// Scatter charts use line controllers
  	Chart.controllers.scatter = Chart.controllers.line;

  };

  var Chart_Bar = function(Chart) {

  	Chart.Bar = function(context, config) {
  		config.type = 'bar';

  		return new Chart(context, config);
  	};

  };

  var Chart_Bubble = function(Chart) {

  	Chart.Bubble = function(context, config) {
  		config.type = 'bubble';
  		return new Chart(context, config);
  	};

  };

  var Chart_Doughnut = function(Chart) {

  	Chart.Doughnut = function(context, config) {
  		config.type = 'doughnut';

  		return new Chart(context, config);
  	};

  };

  var Chart_Line = function(Chart) {

  	Chart.Line = function(context, config) {
  		config.type = 'line';

  		return new Chart(context, config);
  	};

  };

  var Chart_PolarArea = function(Chart) {

  	Chart.PolarArea = function(context, config) {
  		config.type = 'polarArea';

  		return new Chart(context, config);
  	};

  };

  var Chart_Radar = function(Chart) {

  	Chart.Radar = function(context, config) {
  		config.type = 'radar';

  		return new Chart(context, config);
  	};

  };

  var Chart_Scatter = function(Chart) {
  	Chart.Scatter = function(context, config) {
  		config.type = 'scatter';
  		return new Chart(context, config);
  	};
  };

  core_defaults._set('global', {
  	plugins: {
  		filler: {
  			propagate: true
  		}
  	}
  });

  var mappers = {
  	dataset: function(source) {
  		var index = source.fill;
  		var chart = source.chart;
  		var meta = chart.getDatasetMeta(index);
  		var visible = meta && chart.isDatasetVisible(index);
  		var points = (visible && meta.dataset._children) || [];
  		var length = points.length || 0;

  		return !length ? null : function(point, i) {
  			return (i < length && points[i]._view) || null;
  		};
  	},

  	boundary: function(source) {
  		var boundary = source.boundary;
  		var x = boundary ? boundary.x : null;
  		var y = boundary ? boundary.y : null;

  		return function(point) {
  			return {
  				x: x === null ? point.x : x,
  				y: y === null ? point.y : y,
  			};
  		};
  	}
  };

  // @todo if (fill[0] === '#')
  function decodeFill(el, index, count) {
  	var model = el._model || {};
  	var fill = model.fill;
  	var target;

  	if (fill === undefined) {
  		fill = !!model.backgroundColor;
  	}

  	if (fill === false || fill === null) {
  		return false;
  	}

  	if (fill === true) {
  		return 'origin';
  	}

  	target = parseFloat(fill, 10);
  	if (isFinite(target) && Math.floor(target) === target) {
  		if (fill[0] === '-' || fill[0] === '+') {
  			target = index + target;
  		}

  		if (target === index || target < 0 || target >= count) {
  			return false;
  		}

  		return target;
  	}

  	switch (fill) {
  	// compatibility
  	case 'bottom':
  		return 'start';
  	case 'top':
  		return 'end';
  	case 'zero':
  		return 'origin';
  	// supported boundaries
  	case 'origin':
  	case 'start':
  	case 'end':
  		return fill;
  	// invalid fill values
  	default:
  		return false;
  	}
  }

  function computeBoundary(source) {
  	var model = source.el._model || {};
  	var scale = source.el._scale || {};
  	var fill = source.fill;
  	var target = null;
  	var horizontal;

  	if (isFinite(fill)) {
  		return null;
  	}

  	// Backward compatibility: until v3, we still need to support boundary values set on
  	// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and
  	// controllers might still use it (e.g. the Smith chart).

  	if (fill === 'start') {
  		target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;
  	} else if (fill === 'end') {
  		target = model.scaleTop === undefined ? scale.top : model.scaleTop;
  	} else if (model.scaleZero !== undefined) {
  		target = model.scaleZero;
  	} else if (scale.getBasePosition) {
  		target = scale.getBasePosition();
  	} else if (scale.getBasePixel) {
  		target = scale.getBasePixel();
  	}

  	if (target !== undefined && target !== null) {
  		if (target.x !== undefined && target.y !== undefined) {
  			return target;
  		}

  		if (typeof target === 'number' && isFinite(target)) {
  			horizontal = scale.isHorizontal();
  			return {
  				x: horizontal ? target : null,
  				y: horizontal ? null : target
  			};
  		}
  	}

  	return null;
  }

  function resolveTarget(sources, index, propagate) {
  	var source = sources[index];
  	var fill = source.fill;
  	var visited = [index];
  	var target;

  	if (!propagate) {
  		return fill;
  	}

  	while (fill !== false && visited.indexOf(fill) === -1) {
  		if (!isFinite(fill)) {
  			return fill;
  		}

  		target = sources[fill];
  		if (!target) {
  			return false;
  		}

  		if (target.visible) {
  			return fill;
  		}

  		visited.push(fill);
  		fill = target.fill;
  	}

  	return false;
  }

  function createMapper(source) {
  	var fill = source.fill;
  	var type = 'dataset';

  	if (fill === false) {
  		return null;
  	}

  	if (!isFinite(fill)) {
  		type = 'boundary';
  	}

  	return mappers[type](source);
  }

  function isDrawable(point) {
  	return point && !point.skip;
  }

  function drawArea(ctx, curve0, curve1, len0, len1) {
  	var i;

  	if (!len0 || !len1) {
  		return;
  	}

  	// building first area curve (normal)
  	ctx.moveTo(curve0[0].x, curve0[0].y);
  	for (i = 1; i < len0; ++i) {
  		helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);
  	}

  	// joining the two area curves
  	ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);

  	// building opposite area curve (reverse)
  	for (i = len1 - 1; i > 0; --i) {
  		helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);
  	}
  }

  function doFill(ctx, points, mapper, view, color, loop) {
  	var count = points.length;
  	var span = view.spanGaps;
  	var curve0 = [];
  	var curve1 = [];
  	var len0 = 0;
  	var len1 = 0;
  	var i, ilen, index, p0, p1, d0, d1;

  	ctx.beginPath();

  	for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {
  		index = i % count;
  		p0 = points[index]._view;
  		p1 = mapper(p0, index, view);
  		d0 = isDrawable(p0);
  		d1 = isDrawable(p1);

  		if (d0 && d1) {
  			len0 = curve0.push(p0);
  			len1 = curve1.push(p1);
  		} else if (len0 && len1) {
  			if (!span) {
  				drawArea(ctx, curve0, curve1, len0, len1);
  				len0 = len1 = 0;
  				curve0 = [];
  				curve1 = [];
  			} else {
  				if (d0) {
  					curve0.push(p0);
  				}
  				if (d1) {
  					curve1.push(p1);
  				}
  			}
  		}
  	}

  	drawArea(ctx, curve0, curve1, len0, len1);

  	ctx.closePath();
  	ctx.fillStyle = color;
  	ctx.fill();
  }

  var plugin_filler = {
  	id: 'filler',

  	afterDatasetsUpdate: function(chart, options) {
  		var count = (chart.data.datasets || []).length;
  		var propagate = options.propagate;
  		var sources = [];
  		var meta, i, el, source;

  		for (i = 0; i < count; ++i) {
  			meta = chart.getDatasetMeta(i);
  			el = meta.dataset;
  			source = null;

  			if (el && el._model && el instanceof elements.Line) {
  				source = {
  					visible: chart.isDatasetVisible(i),
  					fill: decodeFill(el, i, count),
  					chart: chart,
  					el: el
  				};
  			}

  			meta.$filler = source;
  			sources.push(source);
  		}

  		for (i = 0; i < count; ++i) {
  			source = sources[i];
  			if (!source) {
  				continue;
  			}

  			source.fill = resolveTarget(sources, i, propagate);
  			source.boundary = computeBoundary(source);
  			source.mapper = createMapper(source);
  		}
  	},

  	beforeDatasetDraw: function(chart, args) {
  		var meta = args.meta.$filler;
  		if (!meta) {
  			return;
  		}

  		var ctx = chart.ctx;
  		var el = meta.el;
  		var view = el._view;
  		var points = el._children || [];
  		var mapper = meta.mapper;
  		var color = view.backgroundColor || core_defaults.global.defaultColor;

  		if (mapper && color && points.length) {
  			helpers$1.canvas.clipArea(ctx, chart.chartArea);
  			doFill(ctx, points, mapper, view, color, el._loop);
  			helpers$1.canvas.unclipArea(ctx);
  		}
  	}
  };

  var noop = helpers$1.noop;

  core_defaults._set('global', {
  	legend: {
  		display: true,
  		position: 'top',
  		fullWidth: true,
  		reverse: false,
  		weight: 1000,

  		// a callback that will handle
  		onClick: function(e, legendItem) {
  			var index = legendItem.datasetIndex;
  			var ci = this.chart;
  			var meta = ci.getDatasetMeta(index);

  			// See controller.isDatasetVisible comment
  			meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;

  			// We hid a dataset ... rerender the chart
  			ci.update();
  		},

  		onHover: null,

  		labels: {
  			boxWidth: 40,
  			padding: 10,
  			// Generates labels shown in the legend
  			// Valid properties to return:
  			// text : text to display
  			// fillStyle : fill of coloured box
  			// strokeStyle: stroke of coloured box
  			// hidden : if this legend item refers to a hidden item
  			// lineCap : cap style for line
  			// lineDash
  			// lineDashOffset :
  			// lineJoin :
  			// lineWidth :
  			generateLabels: function(chart) {
  				var data = chart.data;
  				return helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {
  					return {
  						text: dataset.label,
  						fillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),
  						hidden: !chart.isDatasetVisible(i),
  						lineCap: dataset.borderCapStyle,
  						lineDash: dataset.borderDash,
  						lineDashOffset: dataset.borderDashOffset,
  						lineJoin: dataset.borderJoinStyle,
  						lineWidth: dataset.borderWidth,
  						strokeStyle: dataset.borderColor,
  						pointStyle: dataset.pointStyle,

  						// Below is extra data used for toggling the datasets
  						datasetIndex: i
  					};
  				}, this) : [];
  			}
  		}
  	},

  	legendCallback: function(chart) {
  		var text = [];
  		text.push('<ul class="' + chart.id + '-legend">');
  		for (var i = 0; i < chart.data.datasets.length; i++) {
  			text.push('<li><span style="background-color:' + chart.data.datasets[i].backgroundColor + '"></span>');
  			if (chart.data.datasets[i].label) {
  				text.push(chart.data.datasets[i].label);
  			}
  			text.push('</li>');
  		}
  		text.push('</ul>');
  		return text.join('');
  	}
  });

  /**
   * Helper function to get the box width based on the usePointStyle option
   * @param labelopts {Object} the label options on the legend
   * @param fontSize {Number} the label font size
   * @return {Number} width of the color box area
   */
  function getBoxWidth(labelOpts, fontSize) {
  	return labelOpts.usePointStyle ?
  		fontSize * Math.SQRT2 :
  		labelOpts.boxWidth;
  }

  /**
   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!
   */
  var Legend = core_element.extend({

  	initialize: function(config) {
  		helpers$1.extend(this, config);

  		// Contains hit boxes for each dataset (in dataset order)
  		this.legendHitBoxes = [];

  		// Are we in doughnut mode which has a different data type
  		this.doughnutMode = false;
  	},

  	// These methods are ordered by lifecycle. Utilities then follow.
  	// Any function defined here is inherited by all legend types.
  	// Any function can be extended by the legend type

  	beforeUpdate: noop,
  	update: function(maxWidth, maxHeight, margins) {
  		var me = this;

  		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
  		me.beforeUpdate();

  		// Absorb the master measurements
  		me.maxWidth = maxWidth;
  		me.maxHeight = maxHeight;
  		me.margins = margins;

  		// Dimensions
  		me.beforeSetDimensions();
  		me.setDimensions();
  		me.afterSetDimensions();
  		// Labels
  		me.beforeBuildLabels();
  		me.buildLabels();
  		me.afterBuildLabels();

  		// Fit
  		me.beforeFit();
  		me.fit();
  		me.afterFit();
  		//
  		me.afterUpdate();

  		return me.minSize;
  	},
  	afterUpdate: noop,

  	//

  	beforeSetDimensions: noop,
  	setDimensions: function() {
  		var me = this;
  		// Set the unconstrained dimension before label rotation
  		if (me.isHorizontal()) {
  			// Reset position before calculating rotation
  			me.width = me.maxWidth;
  			me.left = 0;
  			me.right = me.width;
  		} else {
  			me.height = me.maxHeight;

  			// Reset position before calculating rotation
  			me.top = 0;
  			me.bottom = me.height;
  		}

  		// Reset padding
  		me.paddingLeft = 0;
  		me.paddingTop = 0;
  		me.paddingRight = 0;
  		me.paddingBottom = 0;

  		// Reset minSize
  		me.minSize = {
  			width: 0,
  			height: 0
  		};
  	},
  	afterSetDimensions: noop,

  	//

  	beforeBuildLabels: noop,
  	buildLabels: function() {
  		var me = this;
  		var labelOpts = me.options.labels || {};
  		var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];

  		if (labelOpts.filter) {
  			legendItems = legendItems.filter(function(item) {
  				return labelOpts.filter(item, me.chart.data);
  			});
  		}

  		if (me.options.reverse) {
  			legendItems.reverse();
  		}

  		me.legendItems = legendItems;
  	},
  	afterBuildLabels: noop,

  	//

  	beforeFit: noop,
  	fit: function() {
  		var me = this;
  		var opts = me.options;
  		var labelOpts = opts.labels;
  		var display = opts.display;

  		var ctx = me.ctx;

  		var globalDefault = core_defaults.global;
  		var valueOrDefault = helpers$1.valueOrDefault;
  		var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
  		var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
  		var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
  		var labelFont = helpers$1.fontString(fontSize, fontStyle, fontFamily);

  		// Reset hit boxes
  		var hitboxes = me.legendHitBoxes = [];

  		var minSize = me.minSize;
  		var isHorizontal = me.isHorizontal();

  		if (isHorizontal) {
  			minSize.width = me.maxWidth; // fill all the width
  			minSize.height = display ? 10 : 0;
  		} else {
  			minSize.width = display ? 10 : 0;
  			minSize.height = me.maxHeight; // fill all the height
  		}

  		// Increase sizes here
  		if (display) {
  			ctx.font = labelFont;

  			if (isHorizontal) {
  				// Labels

  				// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
  				var lineWidths = me.lineWidths = [0];
  				var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;

  				ctx.textAlign = 'left';
  				ctx.textBaseline = 'top';

  				helpers$1.each(me.legendItems, function(legendItem, i) {
  					var boxWidth = getBoxWidth(labelOpts, fontSize);
  					var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

  					if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {
  						totalHeight += fontSize + (labelOpts.padding);
  						lineWidths[lineWidths.length] = me.left;
  					}

  					// Store the hitbox width and height here. Final position will be updated in `draw`
  					hitboxes[i] = {
  						left: 0,
  						top: 0,
  						width: width,
  						height: fontSize
  					};

  					lineWidths[lineWidths.length - 1] += width + labelOpts.padding;
  				});

  				minSize.height += totalHeight;

  			} else {
  				var vPadding = labelOpts.padding;
  				var columnWidths = me.columnWidths = [];
  				var totalWidth = labelOpts.padding;
  				var currentColWidth = 0;
  				var currentColHeight = 0;
  				var itemHeight = fontSize + vPadding;

  				helpers$1.each(me.legendItems, function(legendItem, i) {
  					var boxWidth = getBoxWidth(labelOpts, fontSize);
  					var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

  					// If too tall, go to new column
  					if (currentColHeight + itemHeight > minSize.height) {
  						totalWidth += currentColWidth + labelOpts.padding;
  						columnWidths.push(currentColWidth); // previous column width

  						currentColWidth = 0;
  						currentColHeight = 0;
  					}

  					// Get max width
  					currentColWidth = Math.max(currentColWidth, itemWidth);
  					currentColHeight += itemHeight;

  					// Store the hitbox width and height here. Final position will be updated in `draw`
  					hitboxes[i] = {
  						left: 0,
  						top: 0,
  						width: itemWidth,
  						height: fontSize
  					};
  				});

  				totalWidth += currentColWidth;
  				columnWidths.push(currentColWidth);
  				minSize.width += totalWidth;
  			}
  		}

  		me.width = minSize.width;
  		me.height = minSize.height;
  	},
  	afterFit: noop,

  	// Shared Methods
  	isHorizontal: function() {
  		return this.options.position === 'top' || this.options.position === 'bottom';
  	},

  	// Actually draw the legend on the canvas
  	draw: function() {
  		var me = this;
  		var opts = me.options;
  		var labelOpts = opts.labels;
  		var globalDefault = core_defaults.global;
  		var lineDefault = globalDefault.elements.line;
  		var legendWidth = me.width;
  		var lineWidths = me.lineWidths;

  		if (opts.display) {
  			var ctx = me.ctx;
  			var valueOrDefault = helpers$1.valueOrDefault;
  			var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);
  			var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);
  			var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);
  			var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);
  			var labelFont = helpers$1.fontString(fontSize, fontStyle, fontFamily);
  			var cursor;

  			// Canvas setup
  			ctx.textAlign = 'left';
  			ctx.textBaseline = 'middle';
  			ctx.lineWidth = 0.5;
  			ctx.strokeStyle = fontColor; // for strikethrough effect
  			ctx.fillStyle = fontColor; // render in correct colour
  			ctx.font = labelFont;

  			var boxWidth = getBoxWidth(labelOpts, fontSize);
  			var hitboxes = me.legendHitBoxes;

  			// current position
  			var drawLegendBox = function(x, y, legendItem) {
  				if (isNaN(boxWidth) || boxWidth <= 0) {
  					return;
  				}

  				// Set the ctx for the box
  				ctx.save();

  				ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);
  				ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);
  				ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);
  				ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);
  				ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);
  				ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);
  				var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);

  				if (ctx.setLineDash) {
  					// IE 9 and 10 do not support line dash
  					ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));
  				}

  				if (opts.labels && opts.labels.usePointStyle) {
  					// Recalculate x and y for drawPoint() because its expecting
  					// x and y to be center of figure (instead of top left)
  					var radius = fontSize * Math.SQRT2 / 2;
  					var offSet = radius / Math.SQRT2;
  					var centerX = x + offSet;
  					var centerY = y + offSet;

  					// Draw pointStyle as legend symbol
  					helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);
  				} else {
  					// Draw box as legend symbol
  					if (!isLineWidthZero) {
  						ctx.strokeRect(x, y, boxWidth, fontSize);
  					}
  					ctx.fillRect(x, y, boxWidth, fontSize);
  				}

  				ctx.restore();
  			};
  			var fillText = function(x, y, legendItem, textWidth) {
  				var halfFontSize = fontSize / 2;
  				var xLeft = boxWidth + halfFontSize + x;
  				var yMiddle = y + halfFontSize;

  				ctx.fillText(legendItem.text, xLeft, yMiddle);

  				if (legendItem.hidden) {
  					// Strikethrough the text if hidden
  					ctx.beginPath();
  					ctx.lineWidth = 2;
  					ctx.moveTo(xLeft, yMiddle);
  					ctx.lineTo(xLeft + textWidth, yMiddle);
  					ctx.stroke();
  				}
  			};

  			// Horizontal
  			var isHorizontal = me.isHorizontal();
  			if (isHorizontal) {
  				cursor = {
  					x: me.left + ((legendWidth - lineWidths[0]) / 2),
  					y: me.top + labelOpts.padding,
  					line: 0
  				};
  			} else {
  				cursor = {
  					x: me.left + labelOpts.padding,
  					y: me.top + labelOpts.padding,
  					line: 0
  				};
  			}

  			var itemHeight = fontSize + labelOpts.padding;
  			helpers$1.each(me.legendItems, function(legendItem, i) {
  				var textWidth = ctx.measureText(legendItem.text).width;
  				var width = boxWidth + (fontSize / 2) + textWidth;
  				var x = cursor.x;
  				var y = cursor.y;

  				if (isHorizontal) {
  					if (x + width >= legendWidth) {
  						y = cursor.y += itemHeight;
  						cursor.line++;
  						x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);
  					}
  				} else if (y + itemHeight > me.bottom) {
  					x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
  					y = cursor.y = me.top + labelOpts.padding;
  					cursor.line++;
  				}

  				drawLegendBox(x, y, legendItem);

  				hitboxes[i].left = x;
  				hitboxes[i].top = y;

  				// Fill the actual label
  				fillText(x, y, legendItem, textWidth);

  				if (isHorizontal) {
  					cursor.x += width + (labelOpts.padding);
  				} else {
  					cursor.y += itemHeight;
  				}

  			});
  		}
  	},

  	/**
  	 * Handle an event
  	 * @private
  	 * @param {IEvent} event - The event to handle
  	 * @return {Boolean} true if a change occured
  	 */
  	handleEvent: function(e) {
  		var me = this;
  		var opts = me.options;
  		var type = e.type === 'mouseup' ? 'click' : e.type;
  		var changed = false;

  		if (type === 'mousemove') {
  			if (!opts.onHover) {
  				return;
  			}
  		} else if (type === 'click') {
  			if (!opts.onClick) {
  				return;
  			}
  		} else {
  			return;
  		}

  		// Chart event already has relative position in it
  		var x = e.x;
  		var y = e.y;

  		if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {
  			// See if we are touching one of the dataset boxes
  			var lh = me.legendHitBoxes;
  			for (var i = 0; i < lh.length; ++i) {
  				var hitBox = lh[i];

  				if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {
  					// Touching an element
  					if (type === 'click') {
  						// use e.native for backwards compatibility
  						opts.onClick.call(me, e.native, me.legendItems[i]);
  						changed = true;
  						break;
  					} else if (type === 'mousemove') {
  						// use e.native for backwards compatibility
  						opts.onHover.call(me, e.native, me.legendItems[i]);
  						changed = true;
  						break;
  					}
  				}
  			}
  		}

  		return changed;
  	}
  });

  function createNewLegendAndAttach(chart, legendOpts) {
  	var legend = new Legend({
  		ctx: chart.ctx,
  		options: legendOpts,
  		chart: chart
  	});

  	core_layouts.configure(chart, legend, legendOpts);
  	core_layouts.addBox(chart, legend);
  	chart.legend = legend;
  }

  var plugin_legend = {
  	id: 'legend',

  	/**
  	 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making
  	 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of
  	 * the plugin, which one will be re-exposed in the chart.js file.
  	 * https://github.com/chartjs/Chart.js/pull/2640
  	 * @private
  	 */
  	_element: Legend,

  	beforeInit: function(chart) {
  		var legendOpts = chart.options.legend;

  		if (legendOpts) {
  			createNewLegendAndAttach(chart, legendOpts);
  		}
  	},

  	beforeUpdate: function(chart) {
  		var legendOpts = chart.options.legend;
  		var legend = chart.legend;

  		if (legendOpts) {
  			helpers$1.mergeIf(legendOpts, core_defaults.global.legend);

  			if (legend) {
  				core_layouts.configure(chart, legend, legendOpts);
  				legend.options = legendOpts;
  			} else {
  				createNewLegendAndAttach(chart, legendOpts);
  			}
  		} else if (legend) {
  			core_layouts.removeBox(chart, legend);
  			delete chart.legend;
  		}
  	},

  	afterEvent: function(chart, e) {
  		var legend = chart.legend;
  		if (legend) {
  			legend.handleEvent(e);
  		}
  	}
  };

  var noop$1 = helpers$1.noop;

  core_defaults._set('global', {
  	title: {
  		display: false,
  		fontStyle: 'bold',
  		fullWidth: true,
  		lineHeight: 1.2,
  		padding: 10,
  		position: 'top',
  		text: '',
  		weight: 2000         // by default greater than legend (1000) to be above
  	}
  });

  /**
   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!
   */
  var Title = core_element.extend({
  	initialize: function(config) {
  		var me = this;
  		helpers$1.extend(me, config);

  		// Contains hit boxes for each dataset (in dataset order)
  		me.legendHitBoxes = [];
  	},

  	// These methods are ordered by lifecycle. Utilities then follow.

  	beforeUpdate: noop$1,
  	update: function(maxWidth, maxHeight, margins) {
  		var me = this;

  		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
  		me.beforeUpdate();

  		// Absorb the master measurements
  		me.maxWidth = maxWidth;
  		me.maxHeight = maxHeight;
  		me.margins = margins;

  		// Dimensions
  		me.beforeSetDimensions();
  		me.setDimensions();
  		me.afterSetDimensions();
  		// Labels
  		me.beforeBuildLabels();
  		me.buildLabels();
  		me.afterBuildLabels();

  		// Fit
  		me.beforeFit();
  		me.fit();
  		me.afterFit();
  		//
  		me.afterUpdate();

  		return me.minSize;

  	},
  	afterUpdate: noop$1,

  	//

  	beforeSetDimensions: noop$1,
  	setDimensions: function() {
  		var me = this;
  		// Set the unconstrained dimension before label rotation
  		if (me.isHorizontal()) {
  			// Reset position before calculating rotation
  			me.width = me.maxWidth;
  			me.left = 0;
  			me.right = me.width;
  		} else {
  			me.height = me.maxHeight;

  			// Reset position before calculating rotation
  			me.top = 0;
  			me.bottom = me.height;
  		}

  		// Reset padding
  		me.paddingLeft = 0;
  		me.paddingTop = 0;
  		me.paddingRight = 0;
  		me.paddingBottom = 0;

  		// Reset minSize
  		me.minSize = {
  			width: 0,
  			height: 0
  		};
  	},
  	afterSetDimensions: noop$1,

  	//

  	beforeBuildLabels: noop$1,
  	buildLabels: noop$1,
  	afterBuildLabels: noop$1,

  	//

  	beforeFit: noop$1,
  	fit: function() {
  		var me = this;
  		var valueOrDefault = helpers$1.valueOrDefault;
  		var opts = me.options;
  		var display = opts.display;
  		var fontSize = valueOrDefault(opts.fontSize, core_defaults.global.defaultFontSize);
  		var minSize = me.minSize;
  		var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;
  		var lineHeight = helpers$1.options.toLineHeight(opts.lineHeight, fontSize);
  		var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;

  		if (me.isHorizontal()) {
  			minSize.width = me.maxWidth; // fill all the width
  			minSize.height = textSize;
  		} else {
  			minSize.width = textSize;
  			minSize.height = me.maxHeight; // fill all the height
  		}

  		me.width = minSize.width;
  		me.height = minSize.height;

  	},
  	afterFit: noop$1,

  	// Shared Methods
  	isHorizontal: function() {
  		var pos = this.options.position;
  		return pos === 'top' || pos === 'bottom';
  	},

  	// Actually draw the title block on the canvas
  	draw: function() {
  		var me = this;
  		var ctx = me.ctx;
  		var valueOrDefault = helpers$1.valueOrDefault;
  		var opts = me.options;
  		var globalDefaults = core_defaults.global;

  		if (opts.display) {
  			var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);
  			var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);
  			var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);
  			var titleFont = helpers$1.fontString(fontSize, fontStyle, fontFamily);
  			var lineHeight = helpers$1.options.toLineHeight(opts.lineHeight, fontSize);
  			var offset = lineHeight / 2 + opts.padding;
  			var rotation = 0;
  			var top = me.top;
  			var left = me.left;
  			var bottom = me.bottom;
  			var right = me.right;
  			var maxWidth, titleX, titleY;

  			ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour
  			ctx.font = titleFont;

  			// Horizontal
  			if (me.isHorizontal()) {
  				titleX = left + ((right - left) / 2); // midpoint of the width
  				titleY = top + offset;
  				maxWidth = right - left;
  			} else {
  				titleX = opts.position === 'left' ? left + offset : right - offset;
  				titleY = top + ((bottom - top) / 2);
  				maxWidth = bottom - top;
  				rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
  			}

  			ctx.save();
  			ctx.translate(titleX, titleY);
  			ctx.rotate(rotation);
  			ctx.textAlign = 'center';
  			ctx.textBaseline = 'middle';

  			var text = opts.text;
  			if (helpers$1.isArray(text)) {
  				var y = 0;
  				for (var i = 0; i < text.length; ++i) {
  					ctx.fillText(text[i], 0, y, maxWidth);
  					y += lineHeight;
  				}
  			} else {
  				ctx.fillText(text, 0, 0, maxWidth);
  			}

  			ctx.restore();
  		}
  	}
  });

  function createNewTitleBlockAndAttach(chart, titleOpts) {
  	var title = new Title({
  		ctx: chart.ctx,
  		options: titleOpts,
  		chart: chart
  	});

  	core_layouts.configure(chart, title, titleOpts);
  	core_layouts.addBox(chart, title);
  	chart.titleBlock = title;
  }

  var plugin_title = {
  	id: 'title',

  	/**
  	 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making
  	 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of
  	 * the plugin, which one will be re-exposed in the chart.js file.
  	 * https://github.com/chartjs/Chart.js/pull/2640
  	 * @private
  	 */
  	_element: Title,

  	beforeInit: function(chart) {
  		var titleOpts = chart.options.title;

  		if (titleOpts) {
  			createNewTitleBlockAndAttach(chart, titleOpts);
  		}
  	},

  	beforeUpdate: function(chart) {
  		var titleOpts = chart.options.title;
  		var titleBlock = chart.titleBlock;

  		if (titleOpts) {
  			helpers$1.mergeIf(titleOpts, core_defaults.global.title);

  			if (titleBlock) {
  				core_layouts.configure(chart, titleBlock, titleOpts);
  				titleBlock.options = titleOpts;
  			} else {
  				createNewTitleBlockAndAttach(chart, titleOpts);
  			}
  		} else if (titleBlock) {
  			core_layouts.removeBox(chart, titleBlock);
  			delete chart.titleBlock;
  		}
  	}
  };

  var plugins = {};
  var filler = plugin_filler;
  var legend = plugin_legend;
  var title = plugin_title;
  plugins.filler = filler;
  plugins.legend = legend;
  plugins.title = title;

  /**
   * @namespace Chart
   */
  var Chart = core();

  Chart.helpers = helpers$1;

  // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!
  core_helpers(Chart);

  Chart.Animation = core_animation;
  Chart.animationService = core_animations;
  Chart.defaults = core_defaults;
  Chart.Element = core_element;
  Chart.elements = elements;
  Chart.Interaction = core_interaction;
  Chart.layouts = core_layouts;
  Chart.platform = platform;
  Chart.plugins = core_plugins;
  Chart.Scale = core_scale;
  Chart.scaleService = core_scaleService;
  Chart.Ticks = core_ticks;
  Chart.Tooltip = core_tooltip;

  core_controller(Chart);
  core_datasetController(Chart);

  scale_linearbase(Chart);
  scale_category(Chart);
  scale_linear(Chart);
  scale_logarithmic(Chart);
  scale_radialLinear(Chart);
  scale_time(Chart);

  // Controllers must be loaded after elements
  // See Chart.core.datasetController.dataElementType
  controller_bar(Chart);
  controller_bubble(Chart);
  controller_doughnut(Chart);
  controller_line(Chart);
  controller_polarArea(Chart);
  controller_radar(Chart);
  controller_scatter(Chart);

  Chart_Bar(Chart);
  Chart_Bubble(Chart);
  Chart_Doughnut(Chart);
  Chart_Line(Chart);
  Chart_PolarArea(Chart);
  Chart_Radar(Chart);
  Chart_Scatter(Chart);

  // Loading built-in plugins

  for (var k$1 in plugins) {
  	if (plugins.hasOwnProperty(k$1)) {
  		Chart.plugins.register(plugins[k$1]);
  	}
  }

  Chart.platform.initialize();

  var chart = Chart;
  if (typeof window !== 'undefined') {
  	window.Chart = Chart;
  }

  // DEPRECATIONS

  /**
   * Provided for backward compatibility, not available anymore
   * @namespace Chart.Legend
   * @deprecated since version 2.1.5
   * @todo remove at version 3
   * @private
   */
  Chart.Legend = plugins.legend._element;

  /**
   * Provided for backward compatibility, not available anymore
   * @namespace Chart.Title
   * @deprecated since version 2.1.5
   * @todo remove at version 3
   * @private
   */
  Chart.Title = plugins.title._element;

  /**
   * Provided for backward compatibility, use Chart.plugins instead
   * @namespace Chart.pluginService
   * @deprecated since version 2.1.5
   * @todo remove at version 3
   * @private
   */
  Chart.pluginService = Chart.plugins;

  /**
   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no
   * effect, instead simply create/register plugins via plain JavaScript objects.
   * @interface Chart.PluginBase
   * @deprecated since version 2.5.0
   * @todo remove at version 3
   * @private
   */
  Chart.PluginBase = Chart.Element.extend({});

  /**
   * Provided for backward compatibility, use Chart.helpers.canvas instead.
   * @namespace Chart.canvasHelpers
   * @deprecated since version 2.6.0
   * @todo remove at version 3
   * @private
   */
  Chart.canvasHelpers = Chart.helpers.canvas;

  /**
   * Provided for backward compatibility, use Chart.layouts instead.
   * @namespace Chart.layoutService
   * @deprecated since version 2.8.0
   * @todo remove at version 3
   * @private
   */
  Chart.layoutService = Chart.layouts;

  var Chart$1 = chart;
  Chart$1 = typeof(Chart$1) === 'function' ? Chart$1 : window.Chart;

  var helpers$2 = Chart$1.helpers;

  var defaultOptions = {
      enabled: false,

      // max number of points to display per dataset
      threshold: 1000,

      // if true, downsamples data automatically every update
      auto: true,
      // if true, downsamples data when the chart is initialized
      onInit: true,

      // if true, replaces the downsampled data with the original data after each update
      restoreOriginalData: true,
      // if true, downsamples original data instead of data
      preferOriginalData: false,

  };

  var floor$1 = Math.floor,
      abs$1 = Math.abs;

  function downsample(data, threshold) {
      // this function is from flot-downsample (MIT), with modifications

      var dataLength = data.length;
      if (threshold >= dataLength || threshold <= 0) {
          return data; // nothing to do
      }

      var sampled = [],
          sampledIndex = 0;

      // bucket size, leave room for start and end data points
      var every = (dataLength - 2) / (threshold - 2);

      var a = 0,  // initially a is the first point in the triangle
          maxAreaPoint,
          maxArea,
          area,
          nextA;

      // always add the first point
      sampled[sampledIndex++] = data[a];

      for (var i = 0; i < threshold - 2; i++) {
          // Calculate point average for next bucket (containing c)
          var avgX = 0,
              avgY = 0,
              avgRangeStart = floor$1(( i + 1 ) * every) + 1,
              avgRangeEnd = floor$1(( i + 2 ) * every) + 1;
          avgRangeEnd = avgRangeEnd < dataLength ? avgRangeEnd : dataLength;

          var avgRangeLength = avgRangeEnd - avgRangeStart;

          for (; avgRangeStart < avgRangeEnd; avgRangeStart++) {
              avgX += data[avgRangeStart].x * 1; // * 1 enforces Number (value may be Date)
              avgY += data[avgRangeStart].y * 1;
          }
          avgX /= avgRangeLength;
          avgY /= avgRangeLength;

          // Get the range for this bucket
          var rangeOffs = floor$1((i + 0) * every) + 1,
              rangeTo = floor$1((i + 1) * every) + 1;

          // Point a
          var pointAX = data[a].x * 1, // enforce Number (value may be Date)
              pointAY = data[a].y * 1;

          maxArea = area = -1;

          for (; rangeOffs < rangeTo; rangeOffs++) {
              // Calculate triangle area over three buckets
              area = abs$1(( pointAX - avgX ) * ( data[rangeOffs].y - pointAY ) -
                      ( pointAX - data[rangeOffs].x ) * ( avgY - pointAY )
                  ) * 0.5;
              if (area > maxArea) {
                  maxArea = area;
                  maxAreaPoint = data[rangeOffs];
                  nextA = rangeOffs; // Next a is this b
              }
          }

          sampled[sampledIndex++] = maxAreaPoint; // Pick this point from the bucket
          a = nextA; // This a is the next a (chosen b)
      }

      sampled[sampledIndex] = data[dataLength - 1]; // Always add last

      return sampled;
  }

  function getOptions(chartInstance) {
      return chartInstance.options.downsample;
  }

  function downsampleChart(chartInstance) {
      var options = getOptions(chartInstance),
          threshold = options.threshold;
      if(!options.enabled) return;

      var datasets = chartInstance.data.datasets;
      for(var i = 0; i < datasets.length; i++) {
          var dataset = datasets[i];

          var dataToDownsample = null;
          if(options.preferOriginalData) {
              dataToDownsample = dataset.originalData;
          }
          dataToDownsample = dataToDownsample || dataset.data;

          dataset.originalData = dataToDownsample;
          dataset.data = downsample(dataToDownsample, threshold);
      }
  }

  var downsamplePlugin = {
      beforeInit: function (chartInstance) {
          var options = chartInstance.options.downsample = helpers$2.extend({}, defaultOptions, chartInstance.options.downsample || {});

          if(options.onInit) {
              downsampleChart(chartInstance);
          }

          // allow manual downsample-triggering with chartInstance.downsample();
          chartInstance.downsample = function(threshold) {
              if(typeof(threshold) !== 'undefined') {
                  chartInstance.options.downsample.threshold = threshold;
              }

              downsampleChart(chartInstance);
          };
      },

      beforeDatasetsUpdate: function(chartInstance) {
          if(chartInstance.options.downsample.auto) {
              downsampleChart(chartInstance);
          }
      },

      afterDatasetsUpdate: function(chartInstance) {
          var options = getOptions(chartInstance);
          if(!options.enabled || !options.restoreOriginalData) return;

          var datasets = chartInstance.data.datasets;
          for(var i = 0; i < datasets.length; i++) {
              var dataset = datasets[i];

              dataset.data = dataset.originalData || dataset.data;
              dataset.originalData = null;
          }
      }
  };

  var chartjsPluginDownsample = downsamplePlugin;
  Chart$1.pluginService.register(downsamplePlugin);

  const getChartConfig = (title, xAxisTitle, yAxisTitle, isHigherBetter, threshold, cycleNumberLabels, WasmBoyCoreObjectsWithData) => {
    const datasets = [];
    WasmBoyCoreObjectsWithData.forEach(coreObjectWithData => {
      datasets.push({
        label: `${coreObjectWithData.label} (${coreObjectWithData.subLabel})`,
        backgroundColor: coreObjectWithData.color,
        borderColor: coreObjectWithData.color,
        fill: false,
        data: coreObjectWithData.data
      });
    });
    return {
      type: 'line',
      data: {
        labels: cycleNumberLabels,
        datasets
      },
      plugins: [chartjsPluginDownsample],
      options: {
        responsive: true,
        title: {
          display: true,
          text: title
        },
        tooltips: {
          position: 'nearest',
          mode: 'index',
          intersect: false,
          callbacks: {
            title: () => null,
            footer: (tooltipItems, data) => {
              let fastestDifference = 0; // Get the label of the fastest dataset,

              const getBetterObject = () => {
                let tooltipCompare;

                if (isHigherBetter) {
                  tooltipCompare = tooltipItems[0].yLabel > tooltipItems[1].yLabel;
                } else {
                  tooltipCompare = tooltipItems[0].yLabel < tooltipItems[1].yLabel;
                }

                if (tooltipCompare) {
                  fastestDifference = tooltipItems[0].yLabel - tooltipItems[1].yLabel;
                  return tooltipItems[0];
                } else {
                  fastestDifference = tooltipItems[1].yLabel - tooltipItems[0].yLabel;
                  return tooltipItems[1];
                }
              };

              const fastestItem = getBetterObject();
              const fastestDataset = data.datasets[fastestItem.datasetIndex];
              return `Best: ${fastestDataset.label} ` + (isHigherBetter ? `(+${fastestDifference})` : `(${fastestDifference})`);
            }
          }
        },
        hover: {
          mode: 'average',
          intersect: true
        },
        scales: {
          xAxes: [{
            display: true,
            scaleLabel: {
              display: true,
              labelString: xAxisTitle
            },
            ticks: {
              suggestedMin: 0,
              callback: (dataLabel, index) => {
                if (index % 10 === 0 || index === WasmBoyCoreObjectsWithData[0].data.length) {
                  return dataLabel;
                }

                return null;
              }
            }
          }],
          yAxes: [{
            display: true,
            scaleLabel: {
              display: true,
              labelString: yAxisTitle
            },
            ticks: {
              suggestedMin: 0
            }
          }]
        },
        downsample: {
          enabled: true,
          threshold: threshold // max number of points to display per dataset

        }
      }
    };
  };

  let timesVsFramesChart = undefined;
  let fpsVsFramesChart = undefined;
  let generalStatsTable = [];
  class BenchmarkRunner$1 extends Component {
    constructor(props) {
      super(props);
    }

    componentDidMount() {
      this.renderCharts(this.props.WasmBoyCoreObjects);
      this.generateTable(this.props.WasmBoyCoreObjects);
    }

    componentWillReceiveProps(newProps) {
      if (newProps.running()) {
        return;
      }

      if (newProps.WasmBoyCoreObjects && newProps.WasmBoyCoreObjects[0].resultTimes && newProps.WasmBoyCoreObjects[0].resultTimes.length > 0) {
        sendAnalyticsEvent('render_results');
      }

      this.generateTable(newProps.WasmBoyCoreObjects);
      this.renderCharts(newProps.WasmBoyCoreObjects);
    } // Function to return an array with a response from a callback for
    // Each core object


    getInfoFromCoreObjects(WasmBoyCoreObjects, callback) {
      const responses = [];
      WasmBoyCoreObjects.forEach(coreObject => {
        responses.push(callback(coreObject));
      });
      return responses;
    }

    generateTable(WasmBoyCoreObjects) {
      if (!WasmBoyCoreObjects || WasmBoyCoreObjects <= 0) {
        return h("table", null);
      }

      const shouldReturnEmptyTable = WasmBoyCoreObjects.some(wasmboyCoreObject => {
        if (!wasmboyCoreObject.resultTimes || wasmboyCoreObject.resultTimes.length <= 0) {
          return true;
        }

        return false;
      });

      if (shouldReturnEmptyTable) {
        return h("table", null);
      }

      generalStatsTable = h("table", {
        class: "table is-bordered is-striped is-narrow is-fullwidth"
      }, h("thead", null, h("tr", null, h("th", null, "Statistic"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("th", null, `${coreObject.label} (${coreObject.subLabel})`);
      }))), h("tbody", null, h("tr", null, h("td", null, "Total Used Frame Times"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, coreObject.resultTimes.length);
      })), h("tr", null, h("td", null, "Sum"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, stats.sum(coreObject.resultTimes));
      })), h("tr", null, h("td", null, "Mean"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, stats.mean(coreObject.resultTimes));
      })), h("tr", null, h("td", null, "Median"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, stats.median(coreObject.resultTimes));
      })), h("tr", null, h("td", null, "Mode"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, stats.mode(coreObject.resultTimes));
      })), h("tr", null, h("td", null, "Variance"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, stats.variance(coreObject.resultTimes));
      })), h("tr", null, h("td", null, "Standard Deviation"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, stats.stdev(coreObject.resultTimes));
      })), h("tr", null, h("td", null, "Sample Variance"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, stats.sampleVariance(coreObject.resultTimes));
      })), h("tr", null, h("td", null, "Sample Standard Deviation"), this.getInfoFromCoreObjects(WasmBoyCoreObjects, coreObject => {
        return h("td", null, stats.sampleStdev(coreObject.resultTimes));
      }))));
      this.setState(_objectSpread({}, this.state));
    }

    getCoreObjectWithDataField(WasmBoyCoreObjects) {
      const response = [];
      WasmBoyCoreObjects.forEach(coreObject => {
        response.push(_objectSpread({}, coreObject));
      });
      response.forEach(coreObject => {
        coreObject.data = [];
      });
      return response;
    }

    renderCharts(WasmBoyCoreObjects) {
      if (!WasmBoyCoreObjects || WasmBoyCoreObjects <= 0) {
        return;
      }

      const timesNumberLabels = [];

      for (let i = 0; i < WasmBoyCoreObjects[0].resultTimes.length; i++) {
        timesNumberLabels.push(i + 1);
      }

      const timesVsFramesCoreObjects = this.getCoreObjectWithDataField(WasmBoyCoreObjects);
      const timesVsFramesContext = document.getElementById('times-vs-frames-chart').getContext('2d'); // Get our times as points

      timesVsFramesCoreObjects.forEach(coreObject => {
        coreObject.resultTimes.forEach((time, index) => {
          coreObject.data.push({
            x: index + 1,
            y: time
          });
        });
      });

      if (timesVsFramesChart) {
        timesVsFramesChart.destroy();
      }

      timesVsFramesChart = new chart(timesVsFramesContext, getChartConfig(`Time to Run per Frame (Downsampled, Lower is Better)`, 'Frame Number', 'Time in Microseconds', false, 60, timesNumberLabels, timesVsFramesCoreObjects));
      const framesPerSet = 30;
      const framesPerSetCoreObjects = this.getCoreObjectWithDataField(WasmBoyCoreObjects); // Get an FPs By averaging every 60 frames.

      framesPerSetCoreObjects.forEach(coreObject => {
        let counter = 0;

        while (counter + framesPerSet < coreObject.resultTimes.length) {
          const timesAsFps = coreObject.resultTimes.slice(counter, counter + framesPerSet).map(x => Math.floor(1000000 / x));
          let mode = stats.mode(timesAsFps);

          if (typeof mode !== 'number') {
            mode = Array.from(mode)[0];
          }

          coreObject.data.push(mode);
          counter += framesPerSet;
        }
      });
      const fpsNumberLabels = [];

      for (let i = 0; i < framesPerSetCoreObjects[0].data.length; i++) {
        fpsNumberLabels.push(i + 1);
      }

      const fpsVsFramesCoreObjects = this.getCoreObjectWithDataField(WasmBoyCoreObjects);
      const fpsVsFramesContext = document.getElementById('fps-vs-frames-chart').getContext('2d'); // Get our times as points

      framesPerSetCoreObjects.forEach((coreObject, coreObjectIndex) => {
        coreObject.data.forEach((fps, index) => {
          fpsVsFramesCoreObjects[coreObjectIndex].data.push({
            x: index + 1,
            y: fps
          });
        });
      });

      if (fpsVsFramesChart) {
        fpsVsFramesChart.destroy();
      }

      fpsVsFramesChart = new chart(fpsVsFramesContext, getChartConfig('Average Frames per Second per Frame Set (Downsampled, Higher is Better)', `Frame Set (${framesPerSet} Frames Per Set)`, 'Average Frames Per Second', true, 60, fpsNumberLabels, fpsVsFramesCoreObjects));
    }

    render() {
      const shouldDisable = this.props.WasmBoyCoreObjects.some(coreObject => {
        if (!coreObject.resultTimes || coreObject.resultTimes.length <= 0) {
          return true;
        }

        return false;
      });
      return h("section", {
        class: "results"
      }, h("div", null, h("button", {
        class: "button",
        onClick: () => {
          this.props.WasmBoyCoreObjects.forEach(coreObject => {
            console.log(`${coreObject.label} (${coreObject.subLabel}) times:`, coreObject.resultTimes);
          });
        },
        disabled: !this.props || this.props.running() || shouldDisable
      }, "Log Frame Execution Times to Console")), h("div", null, h("h1", null, "General Statistics of Times (In Microseconds)"), generalStatsTable), h("div", null, h("h1", null, "Frame Times Visualization"), h("canvas", {
        id: "times-vs-frames-chart"
      }), h("canvas", {
        id: "fps-vs-frames-chart"
      })));
    }

  }

  let wasmboyCoreObjects = []; // Create our valoo variables with dummy callbacks so they update

  const dummyCallback = v => {};

  class WasmBoyBenchmarkApp extends Component {
    constructor() {
      super();
      const browserInfo = browserDetect();
      const running = valoo(false);
      running.on(() => this.setState(_objectSpread({}, this.state)));
      this.state = {
        ready: false,
        loading: false,
        running,
        browserInfo: _objectSpread({}, browserInfo)
      };
    }

    componentDidMount() {
      // Instantiate our cores
      const instantiateCoresTask = async () => {
        // Get our cores
        let wasmboyWasmCore = await getWasmBoyWasmCore();
        let wasmboyTsCore = await getWasmBoyTsCore();
        let wasmboyTsClosureCore = await getWasmBoyTsClosureCore();
        console.log('WasmBoy Wasm Core:', wasmboyWasmCore);
        console.log('WasmBoy TS Core:', wasmboyTsCore);
        console.log('WasmBoy TS Closure Core:', wasmboyTsClosureCore); // Set up our times

        const wasmTimes = valoo([]);
        const tsTimes = valoo([]);
        const tsClosureTimes = valoo([]);
        wasmTimes.on(dummyCallback);
        tsTimes.on(dummyCallback);
        tsClosureTimes.on(dummyCallback);
        wasmboyCoreObjects = [{
          label: 'AssemblyScript',
          subLabel: 'Web Assembly',
          canvasId: 'wasm-canvas',
          color: '#6447f4',
          core: wasmboyWasmCore,
          times: wasmTimes,
          resultTimes: [],
          timesStartIndexes: [],
          data: []
        }, {
          label: 'Javascript',
          subLabel: 'Typescript',
          canvasId: 'ts-canvas',
          color: '#f7a800',
          core: wasmboyTsCore,
          times: tsTimes,
          resultTimes: [],
          timesStartIndexes: [],
          data: []
        }, {
          label: 'Javascript',
          subLabel: 'Typescript, Closure Compiled',
          canvasId: 'closure-canvas',
          color: '#009588',
          core: wasmboyTsClosureCore,
          times: tsClosureTimes,
          resultTimes: [],
          timesStartIndexes: [],
          data: []
        }];
        this.setState(_objectSpread({}, this.state, {
          loading: false
        }));
      };

      instantiateCoresTask();
      this.setState(_objectSpread({}, this.state, {
        loading: true
      }));
    }

    render() {
      return h("div", {
        class: "wasmboy-benchmark"
      }, h("h1", {
        class: "wasmboy-benchmark__title"
      }, "WasmBoy Benchmarking"), h("div", {
        class: "wasmboy-benchmark__link"
      }, h("a", {
        href: "https://github.com/torch2424/wasmBoy",
        target: "_blank"
      }, "Fork Me on Github")), h("div", {
        class: "wasmboy-benchmark__notices"
      }, "Source is not minified, to allow easy analysis of the bundle."), h("table", {
        class: "table is-bordered is-striped is-narrow is-fullwidth"
      }, h("thead", null, h("tr", null, h("th", null, "Current Enviroment"), h("th", null))), h("tbody", null, h("tr", null, h("td", null, "Browser"), h("td", null, this.state.browserInfo.name.charAt(0).toUpperCase() + this.state.browserInfo.name.slice(1), ' ', this.state.browserInfo.version)), h("tr", null, h("td", null, "Operating System"), h("td", null, this.state.browserInfo.os)), h("tr", null, h("td", null, "WasmBoy Lib Version"), h("td", null, packageJson.version)))), this.state.loading ? h("div", {
        class: "donut-center"
      }, h("div", {
        class: "donut"
      })) : h("main", null, h("hr", null), h("h1", null, "Setup"), h("hr", null), h(LoadROMSelector, {
        WasmBoyCoreObjects: wasmboyCoreObjects,
        ROMLoaded: () => this.setState(_objectSpread({}, this.state, {
          ready: true
        }))
      }), h("hr", null), h("h1", null, "Runner"), h("hr", null), h(BenchmarkRunner, {
        WasmBoyCoreObjects: wasmboyCoreObjects,
        ready: this.state.ready,
        running: this.state.running
      }), h("hr", null), h("h1", null, "Results"), h("hr", null), h(BenchmarkRunner$1, {
        WasmBoyCoreObjects: wasmboyCoreObjects,
        running: this.state.running
      })));
    }

  }

  render(h(WasmBoyBenchmarkApp, null), document.body);

}());
