'use strict';(function(Y,A){"object"===typeof exports&&"undefined"!==typeof module?A(exports):"function"===typeof define&&define.amd?define(["exports"],A):A(Y.WasmBoy={})})(this,function(Y){function A(a){return a.data?a.data:a}function ia(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));
d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}return a}function Z(a,b){return b={exports:{}},a(b,b.exports),b.exports}function oa(){let a=Object.assign({},ya);a.wasmboyMemory.wasmBoyInternalState=this.internalState;a.wasmboyMemory.wasmBoyPaletteMemory=this.paletteMemory;a.wasmboyMemory.gameBoyMemory=this.gameboyMemory;a.wasmboyMemory.cartridgeRam=this.cartridgeRam;a.date=Date.now();a.isAuto=!1;this.saveStateCallback&&
this.saveStateCallback(a);return a}function U(){if(!this.internalState)return null;const a=oa.bind(this)(),b=Object.keys(a.wasmboyMemory);for(let c=0;c<b.length;c++)a.wasmboyMemory[b[c]]=Array.prototype.slice.call(a.wasmboyMemory[b[c]]);a.isAuto=!0;localStorage.setItem(this.WASMBOY_UNLOAD_STORAGE,JSON.stringify({header:Array.prototype.slice.call(this.cartridgeHeader),cartridgeRam:Array.prototype.slice.call(this.cartridgeRam),saveState:a}));return null}function za(){return(async()=>{var a=localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);
if(a){var b=JSON.parse(a);localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);a=new Uint8Array(b.header);const c=new Uint8Array(b.cartridgeRam);if(b=b.saveState){const a=Object.keys(b.wasmboyMemory);for(let c=0;c<a.length;c++)b.wasmboyMemory[a[c]]=new Uint8Array(b.wasmboyMemory[a[c]])}await this.saveCartridgeRam(a,c);await this.saveState(a,b)}})()}function Aa(){window.addEventListener("beforeunload",()=>{U.bind(this)()},!1);window.addEventListener("unload",()=>{U.bind(this)()},!1);window.addEventListener("pagehide",
()=>{U.bind(this)()},!1);document.addEventListener("visibilitychange",()=>{"hidden"===document.visibilityState&&U.bind(this)()});return za.bind(this)()}function V(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,
enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}return a}function pa(a,b){let c;a.type.includes("touch")?c=a.touches[0]:a.type.includes("mouse")&&(c=a);return{rectCenterX:(b.right-b.left)/2,rectCenterY:(b.bottom-b.top)/2,touchX:c.clientX-b.left,touchY:c.clientY-b.top}}function Ba(){return{onGetState:(a)=>{const b=a.B;a.A=a.A||a.X;a.B=b||a.Y;return a}}}function Ca(a,b,c){b||(b=ja());return{workerId:c,messageId:b,message:a}}function Da(a,b){this.loadedAndStarted=this.ready=!1;const c=async()=>
{const c=[Ea(a,b),this._instantiateWorkers()];!this.options.headless&&D.getLoadedCartridgeMemoryState().RAM&&c.push(D.saveCartridgeRam());let d;await Promise.all(c).then((a)=>{d=a[0]});this.coreType=(await this.worker.postMessage({type:u.INSTANTIATE_WASM})).message.type;return d},d=async(a)=>{await D.clearMemory();await D.loadCartridgeRom(a);this.loadedROM=a;await this.worker.postMessage({type:u.CONFIG,config:[0,this.options.isGbcEnabled?1:0,this.options.audioBatchProcessing?1:0,this.options.graphicsBatchProcessing?
1:0,this.options.timersBatchProcessing?1:0,this.options.graphicsDisableScanlineRendering?1:0,this.options.audioAccumulateSamples?1:0,this.options.tileRendering?1:0,this.options.tileCaching?1:0],options:{gameboyFrameRate:this.options.gameboyFrameRate,headless:this.options.headless,isAudioEnabled:this.options.isAudioEnabled,frameSkip:this.options.frameSkip}})};return(async()=>{await this.pause();let a=await c();this.options.headless?(await D.initialize(this.options.headless,this.options.saveStateCallback),
await d(a)):(await Promise.all([L.initialize(this.canvasElement,this.options.updateGraphicsCallback),G.initialize(this.options.updateAudioCallback),I.initialize(),D.initialize(this.options.headless,this.options.saveStateCallback)]),await d(a),await D.loadCartridgeRam());this.ready=!0;if(this.options.onReady)this.options.onReady()})()}function qa(){if(this.paused)return!0;let a=!1;this.frameSkip&&0<this.frameSkip&&(this.frameSkipCounter++,this.frameSkipCounter<this.frameSkip?a=!0:this.frameSkipCounter=
0);a||L.renderFrame();I.updateController();this.renderId=P(()=>{qa.call(this)})}function aa(a,b,c){for(var d=0;d<c.length;d++)a.setUint8(b+d,c.charCodeAt(d))}function Fa(a){R[a]||(R[a]=[]);return new Promise((b)=>{R[a].push(b)})}function Ga(a){const b=A(a);if(b.message)switch(R[b.message.type]&&R[b.message.type].forEach((a)=>a(b.message)),b.message.type){case u.UPDATED:this.fps=b.message.fps;break;case u.CRASHED:(async()=>{await this.pause();console.log("Wasmboy Crashed!");let a=await J("getProgramCounter");
var b=await ra("GAMEBOY_INTERNAL_MEMORY_LOCATION");b=await sa(b+a,b+a+1);console.log(`Program Counter: 0x${a.toString(16)}`);console.log(`Opcode: 0x${b[0].toString(16)}`)})()}}const u={CONNECT:"CONNECT",INSTANTIATE_WASM:"INSTANTIATE_WASM",CLEAR_MEMORY:"CLEAR_MEMORY",CLEAR_MEMORY_DONE:"CLEAR_MEMORY_DONE",GET_MEMORY:"GET_MEMORY",SET_MEMORY:"SET_MEMORY",SET_MEMORY_DONE:"SET_MEMORY_DONE",GET_CONSTANTS:"GET_CONSTANTS",GET_CONSTANTS_DONE:"GET_CONSTANTS_DONE",CONFIG:"CONFIG",RESET_AUDIO_QUEUE:"RESET_AUDIO_QUEUE",
PLAY:"PLAY",PLAY_UNTIL_BREAKPOINT:"PLAY_UNTIL_BREAKPOINT",BREAKPOINT:"BREAKPOINT",PAUSE:"PAUSE",UPDATED:"UPDATED",CRASHED:"CRASHED",SET_JOYPAD_STATE:"SET_JOYPAD_STATE",AUDIO_LATENCY:"AUDIO_LATENCY",RUN_WASM_EXPORT:"RUN_WASM_EXPORT",GET_WASM_MEMORY_SECTION:"GET_WASM_MEMORY_SECTION",GET_WASM_CONSTANT:"GET_WASM_CONSTANT",FORCE_OUTPUT_FRAME:"FORCE_OUTPUT_FRAME"};class Ha{constructor(){this.imageDataArray=this.canvasImageData=this.canvasContext=this.canvasElement=this.frameQueueRenderPromise=this.frameQueue=
this.updateGraphicsCallback=this.worker=void 0;this.imageDataArrayChanged=!1}initialize(a,b){this.updateGraphicsCallback=b;this.frameQueue=[];return(async()=>{this.canvasElement=a;this.canvasContext=this.canvasElement.getContext("2d");this.canvasElement.width=160;this.canvasElement.height=144;this.canvasImageData=this.canvasContext.createImageData(160,144);this.canvasElement.style="\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      ";
this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);this.worker&&await this.worker.postMessage({type:u.GET_CONSTANTS})})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=A(a);switch(a.message.type){case u.UPDATED:this.imageDataArray=new Uint8ClampedArray(a.message.imageDataArrayBuffer),this.imageDataArrayChanged=!0}})}renderFrame(){if(this.imageDataArrayChanged){this.imageDataArrayChanged=!1;this.updateGraphicsCallback&&this.updateGraphicsCallback(this.imageDataArray);
for(let a=0;a<this.imageDataArray.length;a++)this.canvasImageData.data[a]=this.imageDataArray[a];this.canvasContext.clearRect(0,0,160,144);this.canvasContext.putImageData(this.canvasImageData,0,0)}}}const L=new Ha;class Ia{constructor(){this.audioPlaytime=this.audioBuffer=this.audioContext=this.updateAudioCallback=this.worker=void 0;this.audioSources=[];this.averageTimeStretchFps=[];this.WASMBOY_SOUND_OUTPUT_LOCATION=0}initialize(a){return(async()=>{this.updateAudioCallback=a;this.averageTimeStretchFps=
[];0<this.audioSources.length&&this.cancelAllAudio();this.audioSources=[];this._createAudioContextIfNone();return this.worker.postMessage({type:u.GET_CONSTANTS})})()}resumeAudioContext(){this._createAudioContextIfNone();"suspended"===this.audioContext.state&&(this.audioContext.resume(),this.audioPlaytime=this.audioContext.currentTime)}resetTimeStretch(){this.averageTimeStretchFps=[]}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=A(a);switch(a.message.type){case u.UPDATED:this.playAudio(a.message.fps,
a.message.allowFastSpeedStretching,a.message.numberOfSamples,a.message.leftChannel,a.message.rightChannel),a=0,this.audioContext.currentTime&&0<this.audioContext.currentTime&&(a=this.audioPlaytime-this.audioContext.currentTime),this.worker.postMessage({type:u.AUDIO_LATENCY,latency:a})}})}playAudio(a,b,c,d,f){let e=a||60;const g=Math.abs(a-this.averageTimeStretchFps[this.averageTimeStretchFps.length-1]);g&&15<=g&&this.resetTimeStretch();this.averageTimeStretchFps.push(a);171<this.averageTimeStretchFps.length&&
this.averageTimeStretchFps.shift();57<=this.averageTimeStretchFps.length&&(e=this.averageTimeStretchFps.reduce((a,b)=>a+b),e=Math.floor(e/this.averageTimeStretchFps.length));a=1;if(57>e||b)a*=e/60,0>=a&&(a=.01);this.audioBuffer=this.audioContext.createBuffer(2,c,48E3);this.audioBuffer.copyToChannel?(this.audioBuffer.copyToChannel(new Float32Array(d),0,0),this.audioBuffer.copyToChannel(new Float32Array(f),1,0)):(this.audioBuffer.getChannelData(0).set(new Float32Array(d)),this.audioBuffer.getChannelData(1).set(new Float32Array(f)));
b=this.audioContext.createBufferSource();b.buffer=this.audioBuffer;b.playbackRate.setValueAtTime(a,this.audioContext.currentTime);d=b;this.updateAudioCallback&&(f=this.updateAudioCallback(this.audioContext,b))&&(d=f);d.connect(this.audioContext.destination);d=this.audioContext.currentTime;f=d+.1;this.audioPlaytime=this.audioPlaytime||f;this.audioPlaytime<d&&(this.cancelAllAudio(),this.audioPlaytime=f);b.start(this.audioPlaytime);for(this.audioPlaytime+=c/(48E3*a);this.audioSources[this.audioSources.length-
1]&&this.audioSources[this.audioSources.length-1].playtime<=this.audioPlaytime;)this.audioSources[this.audioSources.length-1].source.stop(),this.audioSources.pop();this.audioSources.push({source:b,playTime:this.audioPlaytime,fps:e});setTimeout(()=>{this.audioSources.shift()},this.audioPlaytime-this.audioContext.currentTime+500)}cancelAllAudio(a){if(this.audioContext){for(let b=0;b<this.audioSources.length;b++)(a||this.audioSources[b].playTime>this.audioPlaytime)&&this.audioSources[b].source.stop();
this.audioPlaytime=this.audioContext.currentTime+.1}}_createAudioContextIfNone(){this.audioContext||(this.audioContext=new (window.AudioContext||window.webkitAudioContext))}}const G=new Ia;var ta="undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{},Ja=Z(function(a){(function(){function b(a){return new Promise(function(b,c){a.onsuccess=function(){b(a.result)};a.onerror=function(){c(a.error)}})}function c(a,c,d){var f,e=new Promise(function(e,g){f=
a[c].apply(a,d);b(f).then(e,g)});e.request=f;return e}function d(a,b,d){var f=c(a,b,d);return f.then(function(a){if(a)return new B(a,f.request)})}function f(a,b,c){c.forEach(function(c){Object.defineProperty(a.prototype,c,{get:function(){return this[b][c]},set:function(a){this[b][c]=a}})})}function e(a,b,d,f){f.forEach(function(f){f in d.prototype&&(a.prototype[f]=function(){return c(this[b],f,arguments)})})}function g(a,b,c,d){d.forEach(function(d){d in c.prototype&&(a.prototype[d]=function(){return this[b][d].apply(this[b],
arguments)})})}function l(a,b,c,f){f.forEach(function(f){f in c.prototype&&(a.prototype[f]=function(){return d(this[b],f,arguments)})})}function m(a){this._index=a}function B(a,b){this._cursor=a;this._request=b}function h(a){this._store=a}function p(a){this._tx=a;this.complete=new Promise(function(b,c){a.oncomplete=function(){b()};a.onerror=function(){c(a.error)};a.onabort=function(){c(a.error)}})}function x(a,b,c){this._db=a;this.oldVersion=b;this.transaction=new p(c)}function w(a){this._db=a}f(m,
"_index",["name","keyPath","multiEntry","unique"]);e(m,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]);l(m,"_index",IDBIndex,["openCursor","openKeyCursor"]);f(B,"_cursor",["direction","key","primaryKey","value"]);e(B,"_cursor",IDBCursor,["update","delete"]);["advance","continue","continuePrimaryKey"].forEach(function(a){a in IDBCursor.prototype&&(B.prototype[a]=function(){var c=this,d=arguments;return Promise.resolve().then(function(){c._cursor[a].apply(c._cursor,d);return b(c._request).then(function(a){if(a)return new B(a,
c._request)})})})});h.prototype.createIndex=function(){return new m(this._store.createIndex.apply(this._store,arguments))};h.prototype.index=function(){return new m(this._store.index.apply(this._store,arguments))};f(h,"_store",["name","keyPath","indexNames","autoIncrement"]);e(h,"_store",IDBObjectStore,"put add delete clear get getAll getKey getAllKeys count".split(" "));l(h,"_store",IDBObjectStore,["openCursor","openKeyCursor"]);g(h,"_store",IDBObjectStore,["deleteIndex"]);p.prototype.objectStore=
function(){return new h(this._tx.objectStore.apply(this._tx,arguments))};f(p,"_tx",["objectStoreNames","mode"]);g(p,"_tx",IDBTransaction,["abort"]);x.prototype.createObjectStore=function(){return new h(this._db.createObjectStore.apply(this._db,arguments))};f(x,"_db",["name","version","objectStoreNames"]);g(x,"_db",IDBDatabase,["deleteObjectStore","close"]);w.prototype.transaction=function(){return new p(this._db.transaction.apply(this._db,arguments))};f(w,"_db",["name","version","objectStoreNames"]);
g(w,"_db",IDBDatabase,["close"]);["openCursor","openKeyCursor"].forEach(function(a){[h,m].forEach(function(b){a in b.prototype&&(b.prototype[a.replace("open","iterate")]=function(){var b=Array.prototype.slice.call(arguments),c=b[b.length-1],d=this._store||this._index,f=d[a].apply(d,b.slice(0,-1));f.onsuccess=function(){c(f.result)}})})});[m,h].forEach(function(a){a.prototype.getAll||(a.prototype.getAll=function(a,b){var c=this,d=[];return new Promise(function(f){c.iterateCursor(a,function(a){a?(d.push(a.value),
void 0!==b&&d.length==b?f(d):a.continue()):f(d)})})})});a.exports={open:function(a,b,d){a=c(indexedDB,"open",[a,b]);var f=a.request;f&&(f.onupgradeneeded=function(a){d&&d(new x(f.result,a.oldVersion,f.transaction))});return a.then(function(a){return new w(a)})},delete:function(a){return c(indexedDB,"deleteDatabase",[a])}};a.exports.default=a.exports})()}),E=Z(function(a){a.exports="undefined"!=typeof indexedDB?Ja:{open:function(){return Promise.reject("IDB requires a browser environment")},delete:function(){return Promise.reject("IDB requires a browser environment")}}}),
F=!1;if("undefined"!==typeof window){const a=E.open("wasmboy",1,(a)=>{a.createObjectStore("keyval")});F={get(b){return a.then((a)=>a.transaction("keyval").objectStore("keyval").get(b))},set(b,c){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").put(c,b);return a.complete})},delete(b){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").delete(b);return a.complete})},clear(){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").clear();
return a.complete})},keys(){return a.then((a)=>{a=a.transaction("keyval");const b=[],d=a.objectStore("keyval");(d.iterateKeyCursor||d.iterateCursor).call(d,(a)=>{a&&(b.push(a.key),a.continue())});return a.complete.then(()=>b)})}}}const M=F,ya={wasmboyMemory:{wasmBoyInternalState:[],wasmBoyPaletteMemory:[],gameBoyMemory:[],cartridgeRam:[]},date:void 0,isAuto:void 0};class Ka{constructor(){this.saveStateCallback=this.worker=void 0;this.loadedCartridgeMemoryState={ROM:!1,RAM:!1};this.internalState=this.paletteMemory=
this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0;this.WASMBOY_UNLOAD_STORAGE="WASMBOY_UNLOAD_STORAGE";this.WASMBOY_PALETTE_MEMORY_LOCATION=this.WASMBOY_PALETTE_MEMORY_SIZE=this.WASMBOY_INTERNAL_MEMORY_LOCATION=this.WASMBOY_INTERNAL_MEMORY_SIZE=this.WASMBOY_INTERNAL_STATE_LOCATION=this.WASMBOY_INTERNAL_STATE_SIZE=this.WASMBOY_GAME_RAM_BANKS_LOCATION=this.WASMBOY_GAME_BYTES_LOCATION=0}initialize(a,b){return(async()=>{a?(this.saveStateCallback=b,await this._initializeConstants()):
(this.saveStateCallback=b,await this._initializeConstants(),await Aa.call(this))})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=A(a);switch(a.message.type){case u.UPDATED:{const b=Object.keys(a.message);delete b.type;b.includes("CARTRIDGE_ROM")&&(this.cartridgeRom=new Uint8Array(a.message.CARTRIDGE_ROM));b.includes("CARTRIDGE_RAM")&&(this.cartridgeRam=new Uint8Array(a.message.CARTRIDGE_RAM));b.includes("GAMEBOY_MEMORY")&&(this.gameboyMemory=new Uint8Array(a.message.GAMEBOY_MEMORY));
b.includes("PALETTE_MEMORY")&&(this.paletteMemory=new Uint8Array(a.message.PALETTE_MEMORY));b.includes("INTERNAL_STATE")&&(this.internalState=new Uint8Array(a.message.INTERNAL_STATE))}}})}getLoadedCartridgeMemoryState(){return this.loadedCartridgeMemoryState}clearMemory(){return this.worker.postMessage({type:u.CLEAR_MEMORY}).then((a)=>{this.loadedCartridgeMemoryState.ROM=!1;this.loadedCartridgeMemoryState.RAM=!1;this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=
this.cartridgeRom=void 0})}loadCartridgeRom(a){return(async()=>{const b={};b.CARTRIDGE_ROM=a.buffer;await this.worker.postMessage(ia({type:u.SET_MEMORY},b)).then((a)=>{this.loadedCartridgeMemoryState.ROM=!0});await this.worker.postMessage({type:u.GET_MEMORY,memoryTypes:["CARTRIDGE_ROM","CARTRIDGE_HEADER"]}).then((a)=>{a=A(a);this.cartridgeRom=new Uint8Array(a.message.CARTRIDGE_ROM);this.cartridgeHeader=new Uint8Array(a.message.CARTRIDGE_HEADER)})})()}saveCartridgeRam(a,b){return(async()=>{let c,d;
a&&b?(c=a,d=b):(c=this.cartridgeHeader,d=this.cartridgeRam);if(!c||!d)throw Error("Error parsing the cartridgeRam or cartridge header");let f=await M.get(c);f||(f={});f.cartridgeRam=d;await M.set(c,f)})()}loadCartridgeRam(){return(async()=>{var a=this.cartridgeHeader;if(!a)throw Error("Error parsing the cartridge header");const b=await M.get(a);b&&b.cartridgeRam&&(a={},a.CARTRIDGE_RAM=b.cartridgeRam.buffer,await this.worker.postMessage(ia({type:u.SET_MEMORY},a)).then((a)=>{this.loadedCartridgeMemoryState.RAM=
!0;this.cartridgeRam=b.cartridgeRam}))})()}saveState(a,b){return(async()=>{let c,d;a&&b?(c=b,d=a):(c=oa.call(this),d=this.cartridgeHeader);if(!d)throw Error("Error parsing the cartridge header");let f=await M.get(d);f||(f={});f.saveStates||(f.saveStates=[]);f.saveStates.push(c);await M.set(d,f);return c})()}loadState(a){return(async()=>{var b=this.cartridgeHeader;if(!b)throw Error("Error getting the cartridge header");if(!a){b=await M.get(b);if(!b||!b.saveStates)throw Error("No Save State passed, and no cartridge object found");
saverState=b.saveStates[0]}b={};b.CARTRIDGE_RAM=a.wasmboyMemory.cartridgeRam.buffer;b.GAMEBOY_MEMORY=a.wasmboyMemory.gameBoyMemory.buffer;b.PALETTE_MEMORY=a.wasmboyMemory.wasmBoyPaletteMemory.buffer;b.INTERNAL_STATE=a.wasmboyMemory.wasmBoyInternalState.buffer;await this.worker.postMessage(ia({type:u.SET_MEMORY},b),[b.CARTRIDGE_RAM,b.GAMEBOY_MEMORY,b.PALETTE_MEMORY,b.INTERNAL_STATE]);await this.worker.postMessage({type:u.GET_MEMORY,memoryTypes:["CARTRIDGE_RAM","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE"]}).then((a)=>
{a=A(a);this.cartridgeRam=a.message.CARTRIDGE_RAM;this.gameboyMemory=a.message.GAMEBOY_MEMORY;this.paletteMemory=a.message.PALETTE_MEMORY;this.internalState=a.message.INTERNAL_STATE})})()}getCartridgeObject(){return M.get(this.cartridgeHeader)}getCartridgeInfo(){return this.loadedCartridgeMemoryState.ROM?(async()=>{const a={};a.header=this.cartridgeHeader;a.ROM=this.cartridgeRom;a.RAM=this.cartridgeRam;a.nintendoLogo=a.ROM.slice(260,308);a.title=a.ROM.slice(308,324);a.titleAsString=String.fromCharCode.apply(null,
a.title);a.manufacturerCode=a.ROM.slice(319,323);a.CGBFlag=a.ROM[323];a.newLicenseeCode=a.ROM.slice(324,326);a.SGBFlag=a.ROM[326];a.cartridgeType=a.ROM[327];a.ROMSize=a.ROM[328];a.RAMSize=a.ROM[329];a.destinationCode=a.ROM[330];a.oldLicenseeCode=a.ROM[331];a.maskROMVersionNumber=a.ROM[332];a.headerChecksum=a.ROM[333];a.globalChecksum=a.ROM.slice(334,336);return a})():Promise.reject("No ROM has been loaded")}_initializeConstants(){return this.worker.postMessage({type:u.GET_CONSTANTS}).then((a)=>{const b=
A(a);Object.keys(this).forEach((a)=>{void 0!==b.message[a]&&(this[a]=b.message[a])})})}}const D=new Ka;let h={DPAD_UP:"DPAD_UP",DPAD_RIGHT:"DPAD_RIGHT",DPAD_DOWN:"DPAD_DOWN",DPAD_LEFT:"DPAD_LEFT",LEFT_ANALOG_HORIZONTAL_AXIS:"LEFT_ANALOG_HORIZONTAL_AXIS",LEFT_ANALOG_VERTICAL_AXIS:"LEFT_ANALOG_VERTICAL_AXIS",LEFT_ANALOG_UP:"LEFT_ANALOG_UP",LEFT_ANALOG_RIGHT:"LEFT_ANALOG_RIGHT",LEFT_ANALOG_DOWN:"LEFT_ANALOG_DOWN",LEFT_ANALOG_LEFT:"LEFT_ANALOG_LEFT",RIGHT_ANALOG_HORIZONTAL_AXIS:"RIGHT_ANALOG_HORIZONTAL_AXIS",
RIGHT_ANALOG_VERTICAL_AXIS:"RIGHT_ANALOG_VERTICAL_AXIS",RIGHT_ANALOG_UP:"RIGHT_ANALOG_UP",RIGHT_ANALOG_RIGHT:"RIGHT_ANALOG_RIGHT",RIGHT_ANALOG_DOWN:"RIGHT_ANALOG_DOWN",RIGHT_ANALOG_LEFT:"RIGHT_ANALOG_LEFT",A:"A",B:"B",X:"X",Y:"Y",LEFT_TRIGGER:"LEFT_TRIGGER",LEFT_BUMPER:"LEFT_BUMPER",RIGHT_TRIGGER:"RIGHT_TRIGGER",RIGHT_BUMPER:"RIGHT_BUMPER",SELECT:"SELECT",START:"START",SPECIAL:"SPECIAL"};class ka{constructor(){}enable(){throw Error("enable() must be overridden");}disable(){throw Error("disable() must be overridden");
}getState(){throw Error("getState() must be overridden");}}let La="input textarea button select option optgroup label datalist".split(" "),Ma=["Alt","Control","Meta","OS"];class Na extends ka{constructor(){super();this.keymap={};Object.keys(h).forEach((a)=>{this.keymap[a]={keys:[],value:void 0}});this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");
window.addEventListener("keyup",this._boundUpdateKeymapValues);window.addEventListener("keydown",this._boundUpdateKeymapValues)}disable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");window.removeEventListener("keyup",this._boundUpdateKeymapValues);window.removeEventListener("keydown",this._boundUpdateKeymapValues)}getState(){let a=V({},h);Object.keys(this.keymap).forEach((b)=>{a[b]=this.keymap[b].value});Object.keys(a).forEach((b)=>{"string"===
typeof a[b]&&delete a[b]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=!1}setKeysToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error("Could not set the specificed keyboard keys to input");"string"===typeof a&&(a=[a]);this.keymap[b].keys=a}_isFocusedOnInputElement(){return La.some((a)=>
document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return Ma.some((b)=>a.getModifierState(b)||a.code===b)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some((b)=>this.keymap[b].keys.some((c)=>c===a.code?(this.keymap[b].value="keydown"===a.type?!0:!1,!0):!1)))}}class Oa extends ka{constructor(){super();
this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let b=this._getGamepads();a||(a=0);let c=b[a];if(!c)return!1;Object.keys(this.keymap).forEach((a)=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some((a)=>this._isButtonPressed(c,a));else if(this.keymap[a].axis){let b=this._getAnalogStickAxis(c,this.keymap[a].axis);this.keymap[a].value=b}});let d=V({},h);Object.keys(this.keymap).forEach((a)=>{d[a]=this.keymap[a].value});d[h.LEFT_ANALOG_DOWN]=
d.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_UP]=d.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_RIGHT]=d.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.LEFT_ANALOG_LEFT]=d.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_DOWN]=d.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_UP]=d.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_RIGHT]=
d.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[h.RIGHT_ANALOG_LEFT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(d).forEach((a)=>{"string"===typeof d[a]&&delete d[a]});return d}setGamepadButtonsToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error("Could not set the specificed buttons to input");"number"===typeof a&&(a=[a]);this.keymap[b]={};this.keymap[b].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,b){if(void 0===a||!b)throw Error("Could not set the specificed buttons to input");
if("number"===typeof axes)throw Error("Must pass in an axis id");this.keymap[b]={};this.keymap[b].axis=a}_isButtonPressed(a,b){return a.buttons[b]?a.buttons[b].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,b){return a?a.axes[b]||0:0}}let ua="touchstart touchmove touchend mousedown mousemove mouseup mouseleave".split(" ");class la{constructor(a){if(!a)throw Error("Touch inputs require an element.");this.listeners=[];this.element=a;this._addTouchStyles();
this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error("You must supply an element first with add()");window.addEventListener("resize",this.boundUpdateElementRect);ua.forEach((a)=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error("You must supply an element first with add()");
window.removeEventListener("resize",this.boundUpdateElementRect);ua.forEach((a)=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes("touch")||a.touches)){a.preventDefault();var b="touchstart"===a.type||"touchmove"===a.type||"mousedown"===a.type,c="mousemove"===a.type,d=!b&&!c;this._updateActiveStatus(b,d);this._updateTouchStyles(b,c,d);if(this.onTouchEvent)this.onTouchEvent(a,b,c,d)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect=
"none"}_removeTouchStyles(){this.element.style.userSelect=""}_updateTouchStyles(a,b){b||(a?this.element.classList.add("active"):this.element.classList.remove("active"))}_updateActiveStatus(a,b){this.active&&b?this.active=!1:!this.active&&a&&(this.active=!0)}}class Pa extends la{constructor(a,b){super(a);this.config=b?b:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,
touchX:c,touchY:d}=pa(a,this.boundingClientRect);if(!(c>a+this.boundingClientRect.width/2+50)){this._resetState();var f=this.boundingClientRect.width/20,e=this.boundingClientRect.height/20;this.config.allowMultipleDirections?(this.setHorizontalState(c,f),this.setVerticalState(d,e)):Math.abs(a-c)+this.boundingClientRect.width/8>Math.abs(b-d)?this.setHorizontalState(c,f):this.setVerticalState(d)}}else this._resetState()}setHorizontalState(a,b){b&&Math.abs(this.boundingClientRect.width/2-a)<=b||(a<this.boundingClientRect.width/
2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,b){b&&Math.abs(this.boundingClientRect.height/2-a)<b||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=!0)}}class Qa extends la{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform="translate(0px, 0px)";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,
touchY:d}=pa(a,this.boundingClientRect);c=(c-a)/a;1<c?c=1:-1>c&&(c=-1);d=(d-b)/b;1<d?d=1:-1>d&&(d=-1);this.element.style.transform=`translate(${a*c/2}px, ${b*d/2}px)`;this.state.HORIZONTAL_AXIS=c;this.state.VERTICAL_AXIS=d;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(c)>this.deadzone&&(0<c?this.state.RIGHT=!0:0>c&&(this.state.LEFT=!0));Math.abs(d)>this.deadzone&&(0<d?this.state.DOWN=!0:0>d&&(this.state.UP=!0))}else this._resetState()}}class Ra extends la{constructor(a,
b){super(a);this.input=b}}class Sa extends ka{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");this.enabled=!0;this.dpads.forEach((a)=>a.listen());this.leftAnalogs.forEach((a)=>a.listen());this.rightAnalogs.forEach((a)=>a.listen());this.buttons.forEach((a)=>a.listen())}disable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");
this.enabled=!1;this.dpads.forEach((a)=>a.stopListening());this.leftAnalogs.forEach((a)=>a.stopListening());this.rightAnalogs.forEach((a)=>a.stopListening());this.buttons.forEach((a)=>a.stopListening())}getState(){let a=V({},h);this.buttons.forEach((b)=>{a[b.input]=b.active});this.dpads.forEach((b)=>{Object.keys(b.state).forEach((c)=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,
a.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,
a.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach((b)=>{"string"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new Ra(a,b);this.enabled&&c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new Pa(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,"LEFT")}addRightAnalogInput(a){this.addAnalogInput(a,
"RIGHT")}addAnalogInput(a,b){let c=new Qa(a);this.enabled&&c.listen();if("LEFT"===b)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}class Ta{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=h;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new Na;this.Gamepad=new Oa;this.TouchInput=new Sa;this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowUp",
"Numpad8"],h.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyW"],h.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyI"],h.RIGHT_ANALOG_UP);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],h.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowRight","Numpad6"],h.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyD"],h.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyL"],h.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],
h.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowDown","Numpad5","Numpad2"],h.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyS"],h.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyK"],h.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],h.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowLeft","Numpad4"],h.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyA"],h.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyJ"],
h.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],h.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],h.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],h.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],h.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],h.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyX","Semicolon",
"Numpad7"],h.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],h.A);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyZ","Escape","Quote","Backspace","Numpad9"],h.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],h.B);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyC"],h.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],h.X);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyV"],h.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],h.Y);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyQ"],
h.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],h.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyE"],h.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],h.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyU"],h.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],h.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyO"],h.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],
h.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["Enter","Numpad3"],h.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],h.START);this.Keyboard.setKeysToResponsiveGamepadInput(["ShiftRight","ShiftLeft","Tab","Numpad1"],h.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],h.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput(["Space","Backslash","Backquote"],h.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],h.SPECIAL);this.plugins=
[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return"1.0.0"}enable(){this.Keyboard.enable();this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);
if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),1)}}getState(){if(!this._enabled)return{};let a=V({},h),b=this.Gamepad.getState(),c=this.TouchInput.getState(),d=this.Keyboard.getState();a=V({},h);Object.keys(a).forEach((f)=>{a[f]=b[f]||c[f]||d[f]});["LEFT","RIGHT"].forEach((b)=>{[h[`${b}_ANALOG_HORIZONTAL_AXIS`],h[`${b}_ANALOG_VERTICAL_AXIS`]].forEach((c,d)=>{if("number"!==typeof a[c]){if(0===d||2===d)a[c]=a[h[`${b}_ANALOG_RIGHT`]]?
1:a[h[`${b}_ANALOG_LEFT`]]?-1:0;if(1===d||3===d)a[c]=a[h[`${b}_ANALOG_UP`]]?-1:a[h[`${b}_ANALOG_DOWN`]]?1:0}})});a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach((b)=>{if(void 0===a[b]||"string"===typeof a[b])a[b]=!1});this.plugins.forEach((b)=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){"string"===typeof a&&(a=[a]);this.inputChangeMap[a]=
{codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach((c)=>{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach((c)=>{this.inputChangeMap[c].codes.some((a)=>b.includes(a))&&
this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}var W=new Ta;class Ua{constructor(){this.worker=void 0;this.isEnabled=!1;this.ResponsiveGamepad=W;W.addPlugin(Ba())}initialize(){this.isEnabled||this.enableDefaultJoypad();return Promise.resolve()}setWorker(a){this.worker=a}updateController(){if(!this.isEnabled)return{};const a=W.getState();this.setJoypadState(a);return a}setJoypadState(a){this.worker.postMessage({type:u.SET_JOYPAD_STATE,setJoypadStateParamsAsArray:[a.UP?1:0,a.RIGHT?
1:0,a.DOWN?1:0,a.LEFT?1:0,a.A?1:0,a.B?1:0,a.SELECT?1:0,a.START?1:0]})}enableDefaultJoypad(){this.isEnabled=!0;W.enable()}disableDefaultJoypad(){this.isEnabled=!1;W.disable()}}const I=new Ua;let ha=0;const ja=()=>{var a=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10);ha++;a=`${a}-${ha}`;1E5<ha&&(ha=0);return a};class X{constructor(a,b){this.id=ja();b&&(this.id=b);this.messageListeners=[];a=atob(a.split(",")[1]);let c;try{c=new Blob([a],{type:"application/javascript"})}catch(d){window.BlobBuilder=
window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,c=new BlobBuilder,c.append(a),c=c.getBlob()}this.worker=new Worker(URL.createObjectURL(c));this.worker.onmessage=this._onMessageHandler.bind(this)}postMessage(a,b){a=Ca(a,void 0,this.id);const c=a.messageId,d=new Promise((a)=>{this.addMessageListener((b,d)=>{b=A(b);b.messageId===c&&(this.removeMessageListener(d.id),a(b))})});this.worker.postMessage(a,b);return d}addMessageListener(a){this.messageListeners.push({id:ja(),callback:a})}removeMessageListener(a){let b;
this.messageListeners.some((c,d)=>c.id===a?(b=d,!0):!1);void 0!==b&&this.messageListeners.splice(b,1)}_onMessageHandler(a){this.messageListeners.forEach((b)=>{b.callback(a,b)})}}const Va=async()=>{const a=new X("data:application/javascript;base64,",
"LIB"),b=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6ZixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGs7Y29uc3QgbT0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6ZyhjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgZj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApLGQ9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KDMpO2ZvcihsZXQgYz0wOzE0ND5jO2MrKylmb3IobGV0IGU9MDsxNjA+ZTtlKyspe3ZhciBiPTMqKDE2MCpjK2UpO2ZvcihsZXQgYz0wOzM+YztjKyspZFtjXT1hW2IrY107Yj00KihlKzE2MCpjKTtmW2JdPWRbMF07ZltiKzFdPWRbMV07ZltiKzJdPWRbMl07ZltiKzNdPTI1NX1hPWZ9ZyhjKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bCgoYSk9PnthPWEuZGF0YT8KYS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjprPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sayk7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmsucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"GRAPHICS"),c=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtoP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGgpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoaClzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZCl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6ZCxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGg9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtofHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHI9KGEpPT57YT1hLmRhdGE/YS5kYXRhOmE7aWYoYS5tZXNzYWdlKXN3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e3ZhciBiPW5ldyBVaW50OEFycmF5KGEubWVzc2FnZS5hdWRpb0J1ZmZlcik7dmFyIGQ9YS5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBjPW5ldyBGbG9hdDMyQXJyYXkoZCk7dmFyIGY9bmV3IEZsb2F0MzJBcnJheShkKTtsZXQgZz0wO2QqPTI7Zm9yKHZhciBlPTA7ZTxkO2UrPTIpY1tnXT1xKGJbZV0pLGcrKztnPTA7Zm9yKGU9MTtlPGQ7ZSs9MilmW2ddPXEoYltlXSksZysrO2I9Yy5idWZmZXI7Zj1mLmJ1ZmZlcn1tKGMoe3R5cGU6IlVQREFURUQiLGxlZnRDaGFubmVsOmIscmlnaHRDaGFubmVsOmYsCm51bWJlck9mU2FtcGxlczphLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczphLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzphLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSksW2IsZl0pfX07cCgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9YS5tZXNzYWdlLnBvcnRzWzBdO3AocixsKTttKGModm9pZCAwLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UUyI6bC5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkFVRElPX0xBVEVOQ1kiOmwucG9zdE1lc3NhZ2UoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK",
"AUDIO"),d=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=",
"CONTROLLER"),f=new X("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"MEMORY"),e=[];[b,c,d,f].forEach((b)=>{const c=new MessageChannel,d=new Promise((d)=>{let f=0;a.postMessage({type:u.CONNECT,workerId:b.id,ports:[c.port1]},[c.port1]).then(()=>{f++;2<=f&&d()});b.postMessage({type:u.CONNECT,workerId:a.id,ports:[c.port2]},[c.port2]).then(()=>{f++;2<=f&&d()})});e.push(d)});await Promise.all(e);L.setWorker(b);G.setWorker(c);I.setWorker(d);D.setWorker(f);return a};let l={parse:function(a){let b=l.bin.readUshort,c=l.bin.readUint;var d;let f={};a=new Uint8Array(a);for(d=
a.length-4;101010256!=c(a,d);)d--;d=d+4+4;let e=b(a,d);d+=2;b(a,d);d+=2;c(a,d);d+=4;d=c(a,d);for(let g=0;g<e;g++){c(a,d);d+=4;d+=4;d+=4;d+=4;c(a,d);d+=4;let e=c(a,d);d+=4;let g=c(a,d);d+=4;let B=b(a,d),h=b(a,d+2),p=b(a,d+4);d+=6;d+=8;let x=c(a,d);d+=4;d+=B+h+p;l._readLocal(a,x,f,e,g)}return f},_readLocal:function(a,b,c,d,f){var e=l.bin.readUshort,g=l.bin.readUint;g(a,b);b+=4;e(a,b);b+=2;e(a,b);b+=2;let r=e(a,b);b+=2;g(a,b);b+=4;g(a,b);b=b+4+8;g=e(a,b);b+=2;let m=e(a,b);b+=2;e=l.bin.readUTF8(a,b,g);
b=b+g+m;a=new Uint8Array(a.buffer,b);if(0==r)c[e]=new Uint8Array(a.buffer.slice(b,b+d));else if(8==r)b=new Uint8Array(f),l.inflateRaw(a,b),c[e]=b;else throw"unknown compression method: "+r;},inflateRaw:function(a,b){return l.F.inflate(a,b)},inflate:function(a,b){return l.inflateRaw(new Uint8Array(a.buffer,a.byteOffset+2,a.length-6),b)},deflate:function(a,b){null==b&&(b={level:6});let c=0,d=new Uint8Array(50+Math.floor(1.1*a.length));d[c]=120;d[c+1]=156;c=l.F.deflateRaw(a,d,c+2,b.level);a=l.adler(a,
0,a.length);d[c+0]=a>>>24&255;d[c+1]=a>>>16&255;d[c+2]=a>>>8&255;d[c+3]=a>>>0&255;return new Uint8Array(d.buffer,0,c+4)},deflateRaw:function(a,b){null==b&&(b={level:6});let c=new Uint8Array(50+Math.floor(1.1*a.length)),d;d=l.F.deflateRaw(a,c,d,b.level);return new Uint8Array(c.buffer,0,d)},encode:function(a){var b=0;let c=l.bin.writeUint,d=l.bin.writeUshort;var f={};for(var e in a){var g=!l._noNeed(e),r=a[e];let b=l.crc.crc(r,0,r.length);f[e]={cpr:g,usize:r.length,crc:b,file:g?l.deflateRaw(r):r}}for(let a in f)b+=
f[a].file.length+30+46+2*l.bin.sizeUTF8(a);a=new Uint8Array(b+22);b=0;e=[];for(var m in f)g=f[m],e.push(b),b=l._writeHeader(a,b,m,g,0);m=0;g=b;for(let c in f)r=f[c],e.push(b),b=l._writeHeader(a,b,c,r,1,e[m++]);f=b-g;c(a,b,101010256);b=b+4+4;d(a,b,m);b+=2;d(a,b,m);b+=2;c(a,b,f);c(a,b+4,g);return a.buffer},_noNeed:function(a){a=a.split(".").pop().toLowerCase();return-1!="png,jpg,jpeg,zip".indexOf(a)},_writeHeader:function(a,b,c,d,f,e){let g=l.bin.writeUint,r=l.bin.writeUshort,m=d.file;g(a,b,0==f?67324752:
33639248);b+=4;1==f&&(b+=2);r(a,b,20);b+=2;r(a,b,0);b+=2;r(a,b,d.cpr?8:0);b+=2;g(a,b,0);b+=4;g(a,b,d.crc);b+=4;g(a,b,m.length);b+=4;g(a,b,d.usize);b+=4;r(a,b,l.bin.sizeUTF8(c));b+=2;r(a,b,0);b+=2;1==f&&(b=b+2+2+6,g(a,b,e),b+=4);c=l.bin.writeUTF8(a,b,c);b+=c;0==f&&(a.set(m,b),b+=m.length);return b}};l.crc={table:function(){let a=new Uint32Array(256);for(let b=0;256>b;b++){let c=b;for(let a=0;8>a;a++)c=c&1?3988292384^c>>>1:c>>>1;a[b]=c}return a}(),update:function(a,b,c,d){for(let f=0;f<d;f++)a=l.crc.table[(a^
b[c+f])&255]^a>>>8;return a},crc:function(a,b,c){return l.crc.update(4294967295,a,b,c)^4294967295}};l.adler=function(a,b,c){let d=1,f=0,e=b;for(b+=c;e<b;){for(c=Math.min(e+5552,b);e<c;)d+=a[e++],f+=d;d%=65521;f%=65521}return f<<16|d};l.bin={readUshort:function(a,b){return a[b]|a[b+1]<<8},writeUshort:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255},readUint:function(a,b){return 16777216*a[b+3]+(a[b+2]<<16|a[b+1]<<8|a[b])},writeUint:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255;a[b+2]=c>>16&255;a[b+3]=c>>24&
255},readASCII:function(a,b,c){let d="";for(let f=0;f<c;f++)d+=String.fromCharCode(a[b+f]);return d},writeASCII:function(a,b,c){for(let d=0;d<c.length;d++)a[b+d]=c.charCodeAt(d)},pad:function(a){return 2>a.length?"0"+a:a},readUTF8:function(a,b,c){let d="",f;for(let f=0;f<c;f++)d+="%"+l.bin.pad(a[b+f].toString(16));try{f=decodeURIComponent(d)}catch(e){return l.bin.readASCII(a,b,c)}return f},writeUTF8:function(a,b,c){let d=c.length,f=0;for(let e=0;e<d;e++){let d=c.charCodeAt(e);if(0==(d&4294967168))a[b+
f]=d,f++;else if(0==(d&4294965248))a[b+f]=192|d>>6,a[b+f+1]=128|d>>0&63,f+=2;else if(0==(d&4294901760))a[b+f]=224|d>>12,a[b+f+1]=128|d>>6&63,a[b+f+2]=128|d>>0&63,f+=3;else if(0==(d&4292870144))a[b+f]=240|d>>18,a[b+f+1]=128|d>>12&63,a[b+f+2]=128|d>>6&63,a[b+f+3]=128|d>>0&63,f+=4;else throw"e";}return f},sizeUTF8:function(a){let b=a.length,c=0;for(let d=0;d<b;d++){let b=a.charCodeAt(d);if(0==(b&4294967168))c++;else if(0==(b&4294965248))c+=2;else if(0==(b&4294901760))c+=3;else if(0==(b&4292870144))c+=
4;else throw"e";}return c}};l.F={};l.F.deflateRaw=function(a,b,c,d){var f=[[0,0,0,0,0],[4,4,8,4,0],[4,5,16,8,0],[4,6,16,16,0],[4,10,16,32,0],[8,16,32,32,0],[8,16,128,128,0],[8,32,128,256,0],[32,128,258,1024,1],[32,258,258,4096,1]][d];let e=l.F.U,g=l.F._goodIndex;var r=l.F._putsE;let m=0;c<<=3;let B=0,h=a.length;if(0==d){for(;m<h;)f=Math.min(65535,h-m),r(b,c,m+f==h?1:0),c=l.F._copyExact(a,m,f,b,c+8),m+=f;return c>>>3}r=e.lits;d=e.strt;let p=e.prev,x=0,w=0,q=0,u=0;let v=0;2<h&&(v=l.F._hash(a,0),d[v]=
0);for(m=0;m<h;m++){var z=v;if(m+1<h-2){v=l.F._hash(a,m+1);var t=m+1&32767;p[t]=d[v];d[v]=t}if(B<=m){if(14E3<x||26697<w)B<m&&(r[x]=m-B,x+=2,B=m),c=l.F._writeBlock(m==h-1||B==h?1:0,r,x,u,a,q,m-q,b,c),x=w=u=0,q=m;t=0;m<h-2&&(t=l.F._bestMatch(a,m,p,z,Math.min(f[2],h-m),f[3]));if(0!=t){z=t>>>16;t&=65535;let a=g(z,e.of0);e.lhst[257+a]++;let b=g(t,e.df0);e.dhst[b]++;u+=e.exb[a]+e.dxb[b];r[x]=z<<23|m-B;r[x+1]=t<<16|a<<8|b;x+=2;B=m+z}else e.lhst[a[m]]++;w++}}if(q!=m||0==a.length)B<m&&(r[x]=m-B,x+=2),c=l.F._writeBlock(1,
r,x,u,a,q,m-q,b,c);for(;0!=(c&7);)c++;return c>>>3};l.F._bestMatch=function(a,b,c,d,f,e){var g=b&32767;let r=c[g],m=g-r+32768&32767;if(r==g||d!=l.F._hash(a,b-m))return 0;let h=d=0,p=Math.min(32767,b);for(;m<=p&&0!=--e&&r!=g;){if(0==d||a[b+d]==a[b+d-m])if(g=l.F._howLong(a,b,m),g>d){d=g;h=m;if(d>=f)break;m+2<g&&(g=m+2);let a=0;for(let d=0;d<g-2;d++){let f=b-m+d+32768&32767,e=f-c[f]+32768&32767;e>a&&(a=e,r=f)}}g=r;r=c[g];m+=g-r+32768&32767}return d<<16|h};l.F._howLong=function(a,b,c){if(a[b]!=a[b-c]||
a[b+1]!=a[b+1-c]||a[b+2]!=a[b+2-c])return 0;let d=b,f=Math.min(a.length,b+258);for(b+=3;b<f&&a[b]==a[b-c];)b++;return b-d};l.F._hash=function(a,b){return(a[b]<<8|a[b+1])+(a[b+2]<<4)&65535};l.saved=0;l.F._writeBlock=function(a,b,c,d,f,e,g,r,m){let h=l.F.U,p=l.F._putsF,u=l.F._putsE;let x,w,q,C;h.lhst[256]++;var v=l.F.getTrees();var z=v[0];x=v[1];w=v[2];q=v[3];C=v[4];var t=v[5];var da=v[6];v=v[7];var A=(0==(m+3&7)?0:8-(m+3&7))+32+(g<<3);let D=d+l.F.contSize(h.fltree,h.lhst)+l.F.contSize(h.fdtree,h.dhst);
d=d+l.F.contSize(h.ltree,h.lhst)+l.F.contSize(h.dtree,h.dhst);d+=14+3*t+l.F.contSize(h.itree,h.ihst)+(2*h.ihst[16]+3*h.ihst[17]+7*h.ihst[18]);for(var H=0;286>H;H++)h.lhst[H]=0;for(H=0;30>H;H++)h.dhst[H]=0;for(H=0;19>H;H++)h.ihst[H]=0;A=A<D&&A<d?0:D<d?1:2;p(r,m,a);p(r,m+1,A);m+=3;if(0==A){for(;0!=(m&7);)m++;m=l.F._copyExact(f,e,g,r,m)}else{let d,B;1==A&&(d=h.fltree,B=h.fdtree);if(2==A){l.F.makeCodes(h.ltree,z);l.F.revCodes(h.ltree,z);l.F.makeCodes(h.dtree,x);l.F.revCodes(h.dtree,x);l.F.makeCodes(h.itree,
w);l.F.revCodes(h.itree,w);d=h.ltree;B=h.dtree;u(r,m,q-257);m+=5;u(r,m,C-1);m+=5;u(r,m,t-4);m+=4;for(a=0;a<t;a++)u(r,m+3*a,h.itree[(h.ordr[a]<<1)+1]);m=l.F._codeTiny(da,h.itree,r,m+3*t);m=l.F._codeTiny(v,h.itree,r,m)}for(t=0;t<c;t+=2){a=b[t];da=a>>>23;for(a=e+(a&8388607);e<a;)m=l.F._writeLit(f[e++],d,r,m);0!=da&&(z=b[t+1],a=z>>16,g=z>>8&255,z&=255,m=l.F._writeLit(257+g,d,r,m),u(r,m,da-h.of0[g]),m+=h.exb[g],m=l.F._writeLit(z,B,r,m),p(r,m,a-h.df0[z]),m+=h.dxb[z],e+=da)}m=l.F._writeLit(256,d,r,m)}return m};
l.F._copyExact=function(a,b,c,d,f){let e=f>>>3;d[e]=c;d[e+1]=c>>>8;d[e+2]=255-d[e];d[e+3]=255-d[e+1];e+=4;d.set(new Uint8Array(a.buffer,b,c),e);return f+(c+4<<3)};l.F.getTrees=function(){let a=l.F.U,b=l.F._hufTree(a.lhst,a.ltree,15),c=l.F._hufTree(a.dhst,a.dtree,15),d=[],f=l.F._lenCodes(a.ltree,d),e=[],g=l.F._lenCodes(a.dtree,e);for(var h=0;h<d.length;h+=2)a.ihst[d[h]]++;for(h=0;h<e.length;h+=2)a.ihst[e[h]]++;h=l.F._hufTree(a.ihst,a.itree,7);let m=19;for(;4<m&&0==a.itree[(a.ordr[m-1]<<1)+1];)m--;
return[b,c,h,f,g,m,d,e]};l.F.getSecond=function(a){let b=[];for(let c=0;c<a.length;c+=2)b.push(a[c+1]);return b};l.F.nonZero=function(a){let b="";for(let c=0;c<a.length;c+=2)0!=a[c+1]&&(b+=(c>>1)+",");return b};l.F.contSize=function(a,b){let c=0;for(let d=0;d<b.length;d++)c+=b[d]*a[(d<<1)+1];return c};l.F._codeTiny=function(a,b,c,d){for(let f=0;f<a.length;f+=2){let e=a[f],g=a[f+1];d=l.F._writeLit(e,b,c,d);let h=16==e?2:17==e?3:7;15<e&&(l.F._putsE(c,d,g,h),d+=h)}return d};l.F._lenCodes=function(a,
b){let c=a.length;for(;2!=c&&0==a[c-1];)c-=2;for(let e=0;e<c;e+=2){var d=a[e+1],f=e+3<c?a[e+3]:-1;let g=e+5<c?a[e+5]:-1,h=0==e?-1:a[e-1];if(0==d&&f==d&&g==d){for(f=e+5;f+2<c&&a[f+2]==d;)f+=2;d=Math.min(f+1-e>>>1,138);11>d?b.push(17,d-3):b.push(18,d-11);e+=2*d-2}else if(d==h&&f==d&&g==d){for(f=e+5;f+2<c&&a[f+2]==d;)f+=2;d=Math.min(f+1-e>>>1,6);b.push(16,d-3);e+=2*d-2}else b.push(d,0)}return c>>>1};l.F._hufTree=function(a,b,c){var d=[],f=a.length,e=b.length,g=0;for(g=0;g<e;g+=2)b[g]=0,b[g+1]=0;for(g=
0;g<f;g++)0!=a[g]&&d.push({lit:g,f:a[g]});a=d.length;f=d.slice(0);if(0==a)return 0;if(1==a)return c=d[0].lit,d=0==c?1:0,b[(c<<1)+1]=1,b[(d<<1)+1]=1;d.sort(function(a,b){return a.f-b.f});g=d[0];e=d[1];let h=0,m=1,p=2;for(d[0]={lit:-1,f:g.f+e.f,l:g,r:e,d:0};m!=a-1;)g=h!=m&&(p==a||d[h].f<d[p].f)?d[h++]:d[p++],e=h!=m&&(p==a||d[h].f<d[p].f)?d[h++]:d[p++],d[m++]={lit:-1,f:g.f+e.f,l:g,r:e};d=l.F.setDepth(d[m-1],0);d>c&&(l.F.restrictDepth(f,c,d),d=c);for(g=0;g<a;g++)b[(f[g].lit<<1)+1]=f[g].d;return d};l.F.setDepth=
function(a,b){return-1!=a.lit?a.d=b:Math.max(l.F.setDepth(a.l,b+1),l.F.setDepth(a.r,b+1))};l.F.restrictDepth=function(a,b,c){let d=0,f=1<<c-b,e=0;a.sort(function(a,b){return b.d==a.d?a.f-b.f:b.d-a.d});for(d=0;d<a.length;d++)if(a[d].d>b){let g=a[d].d;a[d].d=b;e+=f-(1<<c-g)}else break;for(e>>>=c-b;0<e;)c=a[d].d,c<b?(a[d].d++,e-=1<<b-c-1):d++;for(;0<=d;d--)a[d].d==b&&0>e&&(a[d].d--,e++);0!=e&&console.log("debt left")};l.F._goodIndex=function(a,b){let c=0;b[c|16]<=a&&(c|=16);b[c|8]<=a&&(c|=8);b[c|4]<=
a&&(c|=4);b[c|2]<=a&&(c|=2);b[c|1]<=a&&(c|=1);return c};l.F._writeLit=function(a,b,c,d){l.F._putsF(c,d,b[a<<1]);return d+b[(a<<1)+1]};l.F.inflate=function(a,b){if(3==a[0]&&0==a[1])return b?b:new Uint8Array(0);var c=l.F;let d=c._bitsF,f=c._bitsE,e=c._decodeTiny,g=c.makeCodes,h=c.codes2map,m=c._get17;c=c.U;let p=null==b;p&&(b=new Uint8Array(a.length>>2<<3));let u=0;var A,x;let w=x=A=0;for(var q=0,C;0==u;){u=d(a,q,1);var v=d(a,q+1,2);q+=3;if(0==v)0!=(q&7)&&(q+=8-(q&7)),q=(q>>>3)+4,v=a[q-4]|a[q-3]<<8,
p&&(b=l.F._check(b,w+v)),b.set(new Uint8Array(a.buffer,a.byteOffset+q,v),w),q=q+v<<3,w+=v;else{p&&(b=l.F._check(b,w+131072));if(1==v){var z=c.flmap;C=c.fdmap;A=511;x=31}if(2==v){A=f(a,q,5)+257;x=f(a,q+5,5)+1;z=f(a,q+10,4)+4;q+=14;for(C=0;38>C;C+=2)c.itree[C]=0,c.itree[C+1]=0;v=1;for(C=0;C<z;C++){var t=f(a,q+3*C,3);c.itree[(c.ordr[C]<<1)+1]=t;t>v&&(v=t)}q+=3*z;g(c.itree,v);h(c.itree,v,c.imap);z=c.lmap;C=c.dmap;t=e(c.imap,(1<<v)-1,A,a,q,c.ltree);A=(1<<(t>>>24))-1;q+=t&16777215;g(c.ltree,t>>>24);h(c.ltree,
t>>>24,z);v=e(c.imap,(1<<v)-1,x,a,q,c.dtree);x=(1<<(v>>>24))-1;q+=v&16777215;g(c.dtree,v>>>24);h(c.dtree,v>>>24,C)}for(;;)if(v=z[m(a,q)&A],q+=v&15,t=v>>>4,0==t>>>8)b[w++]=t;else if(256==t)break;else{v=w+t-254;264<t&&(t=c.ldef[t-257],v=w+(t>>>3)+f(a,q,t&7),q+=t&7);t=C[m(a,q)&x];q+=t&15;t=c.ddef[t>>>4];let e=(t>>>4)+d(a,q,t&15);for(q+=t&15;w<v;)b[w]=b[w++-e],b[w]=b[w++-e],b[w]=b[w++-e],b[w]=b[w++-e];w=v}}}return b.length==w?b:b.slice(0,w)};l.F._check=function(a,b){let c=a.length;if(b<=c)return a;b=
new Uint8Array(c<<1);for(let d=0;d<c;d+=4)b[d]=a[d],b[d+1]=a[d+1],b[d+2]=a[d+2],b[d+3]=a[d+3];return b};l.F._decodeTiny=function(a,b,c,d,f,e){let g=f,h=l.F._bitsE,m=l.F._get17,p=c<<1,u=c=0;for(;c<p;){var A=a[m(d,f)&b];f+=A&15;var x=A>>>4;if(15>=x)e[c]=0,e[c+1]=x,x>u&&(u=x),c+=2;else{let a=A=0;16==x?(a=3+h(d,f,2)<<1,f+=2,A=e[c-1]):17==x?(a=3+h(d,f,3)<<1,f+=3):18==x&&(a=11+h(d,f,7)<<1,f+=7);for(x=c+a;c<x;)e[c]=0,e[c+1]=A,c+=2}}for(a=e.length;c<a;)e[c+1]=0,c+=2;return u<<24|f-g};l.F.makeCodes=function(a,
b){var c=l.F.U;let d=a.length;var f;let e;var g=c.bl_count;for(f=0;f<=b;f++)g[f]=0;for(f=1;f<d;f+=2)g[a[f]]++;c=c.next_code;f=0;g[0]=0;for(e=1;e<=b;e++)f=f+g[e-1]<<1,c[e]=f;for(b=0;b<d;b+=2)g=a[b+1],0!=g&&(a[b]=c[g],c[g]++)};l.F.codes2map=function(a,b,c){let d=a.length,f=l.F.U.rev15;for(let h=0;h<d;h+=2)if(0!=a[h+1]){var e=a[h+1];let d=h>>1<<4|e;var g=b-e;e=a[h]<<g;for(g=e+(1<<g);e!=g;)c[f[e]>>>15-b]=d,e++}};l.F.revCodes=function(a,b){let c=l.F.U.rev15,d=15-b;for(let f=0;f<a.length;f+=2)a[f]=c[a[f]<<
b-a[f+1]]>>>d};l.F._putsE=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8};l.F._putsF=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8;a[b+2]|=c>>>16};l.F._bitsE=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8)>>>(b&7)&(1<<c)-1};l.F._bitsF=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)&(1<<c)-1};l.F._get17=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)};l.F._get25=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16|a[(b>>>3)+
3]<<24)>>>(b&7)};l.F.U={next_code:new Uint16Array(16),bl_count:new Uint16Array(16),ordr:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],of0:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],exb:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],ldef:new Uint16Array(32),df0:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],dxb:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,
6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],ddef:new Uint32Array(32),flmap:new Uint16Array(512),fltree:[],fdmap:new Uint16Array(32),fdtree:[],lmap:new Uint16Array(32768),ltree:[],dmap:new Uint16Array(32768),dtree:[],imap:new Uint16Array(512),itree:[],rev15:new Uint16Array(32768),lhst:new Uint32Array(286),dhst:new Uint32Array(30),ihst:new Uint32Array(19),lits:new Uint32Array(15E3),strt:new Uint16Array(65536),prev:new Uint16Array(32768)};(function(){let a=l.F.U;for(var b=0;32768>b;b++){let c=b;c=(c&
2863311530)>>>1|(c&1431655765)<<1;c=(c&3435973836)>>>2|(c&858993459)<<2;c=(c&4042322160)>>>4|(c&252645135)<<4;c=(c&4278255360)>>>8|(c&16711935)<<8;a.rev15[b]=(c>>>16|c<<16)>>>17}for(b=0;32>b;b++)a.ldef[b]=a.of0[b]<<3|a.exb[b],a.ddef[b]=a.df0[b]<<4|a.dxb[b];for(b=0;143>=b;b++)a.fltree.push(0,8);for(;255>=b;b++)a.fltree.push(0,9);for(;279>=b;b++)a.fltree.push(0,7);for(;287>=b;b++)a.fltree.push(0,8);l.F.makeCodes(a.fltree,9);l.F.codes2map(a.fltree,9,a.flmap);l.F.revCodes(a.fltree,9);for(b=0;32>b;b++)a.fdtree.push(0,
5);l.F.makeCodes(a.fdtree,5);l.F.codes2map(a.fdtree,5,a.fdmap);l.F.revCodes(a.fdtree,5);for(b=0;19>b;b++)a.itree.push(0,0);for(b=0;286>b;b++)a.ltree.push(0,0);for(b=0;30>b;b++)a.dtree.push(0,0)})();const Ea=(a,b)=>(async()=>{if(ArrayBuffer.isView(a)&&a.constructor===Uint8Array)return a;if("object"===typeof a&&a.size){var c=await Wa(a);return a.name.toLowerCase().endsWith(".zip")?await va(c):c}c={};b&&b.headers&&(c.headers=b.headers);var d=await fetch(a,c).then((a)=>a.ok?a.arrayBuffer():Promise.reject(a));
c=a;b&&b.fileName&&(c=b.fileName);d=new Uint8Array(d);return c.toLowerCase().endsWith(".zip")?await va(d):d})(),Wa=async(a)=>await new Promise((b,c)=>{const d=new FileReader;d.onload=()=>{const a=new Uint8Array(d.result);b(a)};d.readAsArrayBuffer(a)}),va=async(a)=>{const b=await l.parse(a);let c=!1;Object.keys(b).some((a)=>{const d=a.toLowerCase();return d.includes(".gb")||d.includes(".gbc")?(c=b[a],!0):!1});if(!c)throw Error("Could not find a ROM in zip...");return c};var Xa=Z(function(a){(function(){if("undefined"!==
typeof performance&&null!==performance&&performance.now)a.exports=function(){return performance.now()};else if("undefined"!==typeof process&&null!==process&&process.hrtime){a.exports=function(){return(c()-e)/1E6};var b=process.hrtime;var c=function(){var a=b();return 1E9*a[0]+a[1]};var d=c();var f=1E9*process.uptime();var e=d-f}else if(Date.now){a.exports=function(){return Date.now()-g};var g=Date.now()}else a.exports=function(){return(new Date).getTime()-g},g=(new Date).getTime()}).call(ta)}),K=
"undefined"===typeof window?ta:window;E=["moz","webkit"];var S=K.requestAnimationFrame,N=K.cancelAnimationFrame||K.cancelRequestAnimationFrame;for(F=0;!S&&F<E.length;F++)S=K[E[F]+"RequestAnimationFrame"],N=K[E[F]+"CancelAnimationFrame"]||K[E[F]+"CancelRequestAnimationFrame"];if(!S||!N){var ma=0,wa=0,O=[],Ya=1E3/60;S=function(a){if(0===O.length){var b=Xa(),c=Math.max(0,Ya-(b-ma));ma=c+b;setTimeout(function(){for(var a=O.slice(0),b=O.length=0;b<a.length;b++)if(!a[b].cancelled)try{a[b].callback(ma)}catch(e){setTimeout(function(){throw e;
},0)}},Math.round(c))}O.push({handle:++wa,callback:a,cancelled:!1});return wa};N=function(a){for(var b=0;b<O.length;b++)O[b].handle===a&&(O[b].cancelled=!0)}}var P=function(a){return S.call(K,a)};P.cancel=function(){N.apply(K,arguments)};P.polyfill=function(a){a||(a=K);a.requestAnimationFrame=S;a.cancelAnimationFrame=N};var xa=Z(function(a){var b=function(a){function d(a,b,c,e){if("undefined"===typeof a)return d[0];if("undefined"!==typeof b){if(10!==+b||c){var k=c||"0123456789abcdefghijklmnopqrstuvwxyz";
a=String(a);e||(a=a.toLowerCase(),k=k.toLowerCase());var n=a.length,Q=Math.abs(b);c={};for(e=0;e<k.length;e++)c[k[e]]=e;for(e=0;e<n;e++)if(k=a[e],"-"!==k&&k in c&&c[k]>=Q&&("1"!==k||1!==Q))throw Error(k+" is not a valid digit in base "+b+".");b=y(b);n=[];for(e=(Q="-"===a[0])?1:0;e<a.length;e++)if(k=a[e],k in c)n.push(y(c[k]));else if("<"===k){k=e;do e++;while(">"!==a[e]&&e<a.length);n.push(y(a.slice(k+1,e)))}else throw Error(k+" is not a valid character");b=X(n,b,Q)}else b=y(a);return b}return y(a)}
function c(a,b){this.value=a;this.sign=b;this.isSmall=!1}function e(a){this.value=a;this.sign=0>a;this.isSmall=!0}function g(a){this.value=a}function h(a){return-9007199254740992<a&&9007199254740992>a}function l(a){return 1E7>a?[a]:1E14>a?[a%1E7,Math.floor(a/1E7)]:[a%1E7,Math.floor(a/1E7)%1E7,Math.floor(a/1E14)]}function p(a){u(a);var b=a.length;if(4>b&&0>F(a,U))switch(b){case 0:return 0;case 1:return a[0];case 2:return a[0]+1E7*a[1];default:return a[0]+1E7*(a[1]+1E7*a[2])}return a}function u(a){for(var b=
a.length;0===a[--b];);a.length=b+1}function A(a){for(var b=Array(a),c=-1;++c<a;)b[c]=0;return b}function x(a){return 0<a?Math.floor(a):Math.ceil(a)}function w(a,b){var c=a.length,k=b.length,d=Array(c),n=0,e;for(e=0;e<k;e++){var f=a[e]+b[e]+n;n=1E7<=f?1:0;d[e]=f-1E7*n}for(;e<c;)f=a[e]+n,n=1E7===f?1:0,d[e++]=f-1E7*n;0<n&&d.push(n);return d}function q(a,b){return a.length>=b.length?w(a,b):w(b,a)}function C(a,b){var c=a.length,k=Array(c),d;for(d=0;d<c;d++){var n=a[d]-1E7+b;b=Math.floor(n/1E7);k[d]=n-
1E7*b;b+=1}for(;0<b;)k[d++]=b%1E7,b=Math.floor(b/1E7);return k}function v(a,b){var c=a.length,k=b.length,d=Array(c),n=0,e;for(e=0;e<k;e++){var f=a[e]-n-b[e];0>f?(f+=1E7,n=1):n=0;d[e]=f}for(e=k;e<c;e++){f=a[e]-n;if(0>f)f+=1E7;else{d[e++]=f;break}d[e]=f}for(;e<c;e++)d[e]=a[e];u(d);return d}function z(a,b,d){var k=a.length,n=Array(k);b=-b;var f;for(f=0;f<k;f++){var Q=a[f]+b;b=Math.floor(Q/1E7);Q%=1E7;n[f]=0>Q?Q+1E7:Q}n=p(n);return"number"===typeof n?(d&&(n=-n),new e(n)):new c(n,d)}function t(a,b){var c=
a.length,d=b.length,k=A(c+d),e;for(e=0;e<c;++e){var n=a[e];for(var f=0;f<d;++f){var g=b[f];g=n*g+k[e+f];var h=Math.floor(g/1E7);k[e+f]=g-1E7*h;k[e+f+1]+=h}}u(k);return k}function D(a,b){var c=a.length,k=Array(c),d=0,e;for(e=0;e<c;e++){var n=a[e]*b+d;d=Math.floor(n/1E7);k[e]=n-1E7*d}for(;0<d;)k[e++]=d%1E7,d=Math.floor(d/1E7);return k}function I(a,b){for(var c=[];0<b--;)c.push(0);return c.concat(a)}function G(a,b){var c=Math.max(a.length,b.length);if(30>=c)return t(a,b);c=Math.ceil(c/2);var d=a.slice(c);
a=a.slice(0,c);var k=b.slice(c),e=b.slice(0,c);b=G(a,e);var n=G(d,k);d=G(q(a,d),q(e,k));c=q(q(b,I(v(v(d,b),n),c)),I(n,2*c));u(c);return c}function H(a,b,d){return 1E7>a?new c(D(b,a),d):new c(t(b,l(a)),d)}function J(a){var b=a.length,c=A(b+b),d;for(d=0;d<b;d++){var k=a[d];var e=-(k*k);for(var f=d;f<b;f++){var g=a[f];g=2*k*g+c[d+f]+e;e=Math.floor(g/1E7);c[d+f]=g-1E7*e}c[d+b]=e}u(c);return c}function K(a,b){var c=a.length,d=A(c);var k=0;for(--c;0<=c;--c){k=1E7*k+a[c];var e=x(k/b);k-=e*b;d[c]=e|0}return[d,
k|0]}function E(a,b){b=y(b);if(ea)return[new g(a.value/b.value),new g(a.value%b.value)];var k=a.value;var n=b.value;if(0===n)throw Error("Cannot divide by zero");if(a.isSmall)return b.isSmall?[new e(x(k/n)),new e(k%n)]:[d[0],a];if(b.isSmall){if(1===n)return[a,d[0]];if(-1==n)return[a.negate(),d[0]];n=Math.abs(n);if(1E7>n)return n=K(k,n),k=p(n[0]),n=n[1],a.sign&&(n=-n),"number"===typeof k?(a.sign!==b.sign&&(k=-k),[new e(k),new e(n)]):[new c(k,a.sign!==b.sign),new e(n)];n=l(n)}var f=F(k,n);if(-1===f)return[d[0],
a];if(0===f)return[d[a.sign===b.sign?1:-1],d[0]];if(200>=k.length+n.length){var h=n,m=k.length;n=h.length;f=A(h.length);var r=h[n-1],t=Math.ceil(1E7/(2*r));k=D(k,t);h=D(h,t);var q,w,z;k.length<=m&&k.push(0);h.push(0);r=h[n-1];for(q=m-n;0<=q;q--){m=9999999;k[q+n]!==r&&(m=Math.floor((1E7*k[q+n]+k[q+n-1])/r));var B=w=0;var C=h.length;for(z=0;z<C;z++){w+=m*h[z];var E=Math.floor(w/1E7);B+=k[q+z]-(w-1E7*E);w=E;0>B?(k[q+z]=B+1E7,B=-1):(k[q+z]=B,B=0)}for(;0!==B;){--m;for(z=w=0;z<C;z++)w+=k[q+z]-1E7+h[z],
0>w?(k[q+z]=w+1E7,w=0):(k[q+z]=w,w=1);B+=w}f[q]=m}k=K(k,t)[0];n=[p(f),p(k)]}else{f=k.length;r=n.length;t=[];for(h=[];f;)if(h.unshift(k[--f]),u(h),0>F(h,n))t.push(0);else{m=h.length;q=1E7*h[m-1]+h[m-2];w=1E7*n[r-1]+n[r-2];m>r&&(q=1E7*(q+1));m=Math.ceil(q/w);do{q=D(n,m);if(0>=F(q,h))break;m--}while(m);t.push(m);h=v(h,q)}t.reverse();n=[p(t),p(h)]}k=n[0];b=a.sign!==b.sign;n=n[1];a=a.sign;"number"===typeof k?(b&&(k=-k),k=new e(k)):k=new c(k,b);"number"===typeof n?(a&&(n=-n),n=new e(n)):n=new c(n,a);return[k,
n]}function F(a,b){if(a.length!==b.length)return a.length>b.length?1:-1;for(var c=a.length-1;0<=c;c--)if(a[c]!==b[c])return a[c]>b[c]?1:-1;return 0}function P(a){a=a.abs();if(a.isUnit())return!1;if(a.equals(2)||a.equals(3)||a.equals(5))return!0;if(a.isEven()||a.isDivisibleBy(3)||a.isDivisibleBy(5))return!1;if(a.lesser(49))return!0}function M(a,c){for(var d=a.prev(),k=d,e=0,n,f,g;k.isEven();)k=k.divide(2),e++;f=0;a:for(;f<c.length;f++)if(!a.lesser(c[f])&&(g=b(c[f]).modPow(k,a),!g.isUnit()&&!g.equals(d))){for(n=
e-1;0!=n;n--){g=g.square().mod(a);if(g.isUnit())break;if(g.equals(d))continue a}return!1}return!0}function O(a,c,d){c=y(c);var k=a.isNegative(),e=c.isNegative();a=k?a.not():a;var n=e?c.not():c;for(c=[];!a.isZero()||!n.isZero();){a=E(a,ba);var f=a[1].toJSNumber();k&&(f=ba-1-f);n=E(n,ba);var g=n[1].toJSNumber();e&&(g=ba-1-g);a=a[0];n=n[0];c.push(d(f,g))}d=0!==d(k?1:0,e?1:0)?b(-1):b(0);for(k=c.length-1;0<=k;--k)d=d.multiply(ba).add(b(c[k]));return d}function L(a){a=a.value;a="number"===typeof a?a|1073741824:
"bigint"===typeof a?a|BigInt(1073741824):a[0]+1E7*a[1]|1073758208;return a&-a}function S(a,c){if(0>=c.compareTo(a)){var d=S(a,c.square(c)),k=d.p;d=d.e;c=k.multiply(c);return 0>=c.compareTo(a)?{p:c,e:2*d+1}:{p:k,e:2*d}}return{p:b(1),e:0}}function V(a,b){a=y(a);b=y(b);return a.greater(b)?a:b}function R(a,b){a=y(a);b=y(b);return a.lesser(b)?a:b}function W(a,b){a=y(a).abs();b=y(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var c=d[1],k;a.isEven()&&b.isEven();)k=R(L(a),
L(b)),a=a.divide(k),b=b.divide(k),c=c.multiply(k);for(;a.isEven();)a=a.divide(L(a));do{for(;b.isEven();)b=b.divide(L(b));a.greater(b)&&(k=b,b=a,a=k);b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function X(a,b,c){var k=d[0],e=d[1],f;for(f=a.length-1;0<=f;f--)k=k.add(a[f].times(e)),e=e.times(b);return c?k.negate():k}function N(a,c){c=b(c);if(c.isZero()){if(a.isZero())return{value:[0],isNegative:!1};throw Error("Cannot convert nonzero numbers to base 0.");}if(c.equals(-1)){if(a.isZero())return{value:[0],
isNegative:!1};if(a.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-a.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};c=Array.apply(null,Array(a.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);c.unshift([1]);return{value:[].concat.apply([],c),isNegative:!1}}var d=!1;a.isNegative()&&c.isPositive()&&(d=!0,a=a.abs());if(c.isUnit())return a.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(a.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:d};
for(var k=[],e;a.isNegative()||0<=a.compareAbs(c);)e=a.divmod(c),a=e.quotient,e=e.remainder,e.isNegative()&&(e=c.minus(e).abs(),a=a.next()),k.push(e.toJSNumber());k.push(a.toJSNumber());return{value:k.reverse(),isNegative:d}}function Y(a,b,c){a=N(a,b);return(a.isNegative?"-":"")+a.value.map(function(a){var b=c;b=b||"0123456789abcdefghijklmnopqrstuvwxyz";a=a<b.length?b[a]:"<"+a+">";return a}).join("")}function Z(a){if(h(+a)){var b=+a;if(b===x(b))return ea?new g(BigInt(b)):new e(b);throw Error("Invalid integer: "+
a);}(b="-"===a[0])&&(a=a.slice(1));var d=a.split(/e/i);if(2<d.length)throw Error("Invalid integer: "+d.join("e"));if(2===d.length){a=d[1];"+"===a[0]&&(a=a.slice(1));a=+a;if(a!==x(a)||!h(a))throw Error("Invalid integer: "+a+" is not a valid exponent.");d=d[0];var k=d.indexOf(".");0<=k&&(a-=d.length-k-1,d=d.slice(0,k)+d.slice(k+1));if(0>a)throw Error("Cannot include negative exponent part for integers");a=d+=Array(a+1).join("0")}if(!/^([0-9][0-9]*)$/.test(a))throw Error("Invalid integer: "+a);if(ea)return new g(BigInt(b?
"-"+a:a));d=[];k=a.length;for(var f=k-7;0<k;)d.push(+a.slice(f,k)),f-=7,0>f&&(f=0),k-=7;u(d);return new c(d,b)}function y(a){if("number"===typeof a){if(ea)a=new g(BigInt(a));else if(h(a)){if(a!==x(a))throw Error(a+" is not an integer.");a=new e(a)}else a=Z(a.toString());return a}return"string"===typeof a?Z(a):"bigint"===typeof a?new g(a):a}var U=l(9007199254740992),ea="function"===typeof BigInt;c.prototype=Object.create(d.prototype);e.prototype=Object.create(d.prototype);g.prototype=Object.create(d.prototype);
c.prototype.add=function(a){a=y(a);if(this.sign!==a.sign)return this.subtract(a.negate());var b=this.value,d=a.value;return a.isSmall?new c(C(b,Math.abs(d)),this.sign):new c(q(b,d),this.sign)};c.prototype.plus=c.prototype.add;e.prototype.add=function(a){a=y(a);var b=this.value;if(0>b!==a.sign)return this.subtract(a.negate());var d=a.value;if(a.isSmall){if(h(b+d))return new e(b+d);d=l(Math.abs(d))}return new c(C(d,Math.abs(b)),0>b)};e.prototype.plus=e.prototype.add;g.prototype.add=function(a){return new g(this.value+
y(a).value)};g.prototype.plus=g.prototype.add;c.prototype.subtract=function(a){var b=y(a);if(this.sign!==b.sign)return this.add(b.negate());a=this.value;var d=b.value;if(b.isSmall)return z(a,Math.abs(d),this.sign);b=this.sign;0<=F(a,d)?a=v(a,d):(a=v(d,a),b=!b);a=p(a);"number"===typeof a?(b&&(a=-a),a=new e(a)):a=new c(a,b);return a};c.prototype.minus=c.prototype.subtract;e.prototype.subtract=function(a){a=y(a);var b=this.value;if(0>b!==a.sign)return this.add(a.negate());var c=a.value;return a.isSmall?
new e(b-c):z(c,Math.abs(b),0<=b)};e.prototype.minus=e.prototype.subtract;g.prototype.subtract=function(a){return new g(this.value-y(a).value)};g.prototype.minus=g.prototype.subtract;c.prototype.negate=function(){return new c(this.value,!this.sign)};e.prototype.negate=function(){var a=this.sign,b=new e(-this.value);b.sign=!a;return b};g.prototype.negate=function(){return new g(-this.value)};c.prototype.abs=function(){return new c(this.value,!1)};e.prototype.abs=function(){return new e(Math.abs(this.value))};
g.prototype.abs=function(){return new g(0<=this.value?this.value:-this.value)};c.prototype.multiply=function(a){var b=y(a);a=this.value;var e=b.value,k=this.sign!==b.sign;if(b.isSmall){if(0===e)return d[0];if(1===e)return this;if(-1===e)return this.negate();e=Math.abs(e);if(1E7>e)return new c(D(a,e),k);e=l(e)}b=a.length;var f=e.length;return 0<-.012*b-.012*f+1.5E-5*b*f?new c(G(a,e),k):new c(t(a,e),k)};c.prototype.times=c.prototype.multiply;e.prototype._multiplyBySmall=function(a){return h(a.value*
this.value)?new e(a.value*this.value):H(Math.abs(a.value),l(Math.abs(this.value)),this.sign!==a.sign)};c.prototype._multiplyBySmall=function(a){return 0===a.value?d[0]:1===a.value?this:-1===a.value?this.negate():H(Math.abs(a.value),this.value,this.sign!==a.sign)};e.prototype.multiply=function(a){return y(a)._multiplyBySmall(this)};e.prototype.times=e.prototype.multiply;g.prototype.multiply=function(a){return new g(this.value*y(a).value)};g.prototype.times=g.prototype.multiply;c.prototype.square=function(){return new c(J(this.value),
!1)};e.prototype.square=function(){var a=this.value*this.value;return h(a)?new e(a):new c(J(l(Math.abs(this.value))),!1)};g.prototype.square=function(a){return new g(this.value*this.value)};c.prototype.divmod=function(a){a=E(this,a);return{quotient:a[0],remainder:a[1]}};g.prototype.divmod=e.prototype.divmod=c.prototype.divmod;c.prototype.divide=function(a){return E(this,a)[0]};g.prototype.over=g.prototype.divide=e.prototype.over=e.prototype.divide=c.prototype.over=c.prototype.divide;c.prototype.mod=
function(a){return E(this,a)[1]};g.prototype.mod=g.prototype.remainder=e.prototype.remainder=e.prototype.mod=c.prototype.remainder=c.prototype.mod;c.prototype.pow=function(a){var b=y(a),c=this.value;a=b.value;var k;if(0===a)return d[1];if(0===c)return d[0];if(1===c)return d[1];if(-1===c)return b.isEven()?d[1]:d[-1];if(b.sign)return d[0];if(!b.isSmall)throw Error("The exponent "+b.toString()+" is too large.");if(this.isSmall&&h(k=Math.pow(c,a)))return new e(x(k));k=this;for(b=d[1];;){a&1&&(b=b.times(k),
--a);if(0===a)break;a/=2;k=k.square()}return b};e.prototype.pow=c.prototype.pow;var aa;ea&&(aa=eval("(a,b)=>a**b"));g.prototype.pow=function(a){a=y(a);var b=this.value,c=a.value;return c===BigInt(0)?d[1]:b===BigInt(0)?d[0]:b===BigInt(1)?d[1]:b===BigInt(-1)?a.isEven()?d[1]:d[-1]:a.isNegative()?new g(BigInt(0)):new g(aa(b,c))};c.prototype.modPow=function(a,b){a=y(a);b=y(b);if(b.isZero())throw Error("Cannot take modPow with modulus 0");for(var c=d[1],e=this.mod(b);a.isPositive();){if(e.isZero())return d[0];
a.isOdd()&&(c=c.multiply(e).mod(b));a=a.divide(2);e=e.square().mod(b)}return c};g.prototype.modPow=e.prototype.modPow=c.prototype.modPow;c.prototype.compareAbs=function(a){a=y(a);return a.isSmall?1:F(this.value,a.value)};e.prototype.compareAbs=function(a){a=y(a);var b=Math.abs(this.value),c=a.value;return a.isSmall?(c=Math.abs(c),b===c?0:b>c?1:-1):-1};g.prototype.compareAbs=function(a){var b=this.value;a=y(a).value;b=0<=b?b:-b;a=0<=a?a:-a;return b===a?0:b>a?1:-1};c.prototype.compare=function(a){if(Infinity===
a)return-1;if(-Infinity===a)return 1;a=y(a);return this.sign!==a.sign?a.sign?1:-1:a.isSmall?this.sign?-1:1:F(this.value,a.value)*(this.sign?-1:1)};c.prototype.compareTo=c.prototype.compare;e.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=y(a);var b=this.value,c=a.value;return a.isSmall?b==c?0:b>c?1:-1:0>b!==a.sign?0>b?-1:1:0>b?1:-1};e.prototype.compareTo=e.prototype.compare;g.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;var b=
this.value;a=y(a).value;return b===a?0:b>a?1:-1};g.prototype.compareTo=g.prototype.compare;c.prototype.equals=function(a){return 0===this.compare(a)};g.prototype.eq=g.prototype.equals=e.prototype.eq=e.prototype.equals=c.prototype.eq=c.prototype.equals;c.prototype.notEquals=function(a){return 0!==this.compare(a)};g.prototype.neq=g.prototype.notEquals=e.prototype.neq=e.prototype.notEquals=c.prototype.neq=c.prototype.notEquals;c.prototype.greater=function(a){return 0<this.compare(a)};g.prototype.gt=
g.prototype.greater=e.prototype.gt=e.prototype.greater=c.prototype.gt=c.prototype.greater;c.prototype.lesser=function(a){return 0>this.compare(a)};g.prototype.lt=g.prototype.lesser=e.prototype.lt=e.prototype.lesser=c.prototype.lt=c.prototype.lesser;c.prototype.greaterOrEquals=function(a){return 0<=this.compare(a)};g.prototype.geq=g.prototype.greaterOrEquals=e.prototype.geq=e.prototype.greaterOrEquals=c.prototype.geq=c.prototype.greaterOrEquals;c.prototype.lesserOrEquals=function(a){return 0>=this.compare(a)};
g.prototype.leq=g.prototype.lesserOrEquals=e.prototype.leq=e.prototype.lesserOrEquals=c.prototype.leq=c.prototype.lesserOrEquals;c.prototype.isEven=function(){return 0===(this.value[0]&1)};e.prototype.isEven=function(){return 0===(this.value&1)};g.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};c.prototype.isOdd=function(){return 1===(this.value[0]&1)};e.prototype.isOdd=function(){return 1===(this.value&1)};g.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};
c.prototype.isPositive=function(){return!this.sign};e.prototype.isPositive=function(){return 0<this.value};g.prototype.isPositive=e.prototype.isPositive;c.prototype.isNegative=function(){return this.sign};e.prototype.isNegative=function(){return 0>this.value};g.prototype.isNegative=e.prototype.isNegative;c.prototype.isUnit=function(){return!1};e.prototype.isUnit=function(){return 1===Math.abs(this.value)};g.prototype.isUnit=function(){return this.abs().value===BigInt(1)};c.prototype.isZero=function(){return!1};
e.prototype.isZero=function(){return 0===this.value};g.prototype.isZero=function(){return this.value===BigInt(0)};c.prototype.isDivisibleBy=function(a){a=y(a);return a.isZero()?!1:a.isUnit()?!0:0===a.compareAbs(2)?this.isEven():this.mod(a).isZero()};g.prototype.isDivisibleBy=e.prototype.isDivisibleBy=c.prototype.isDivisibleBy;c.prototype.isPrime=function(c){var d=P(this);if(d!==a)return d;d=this.abs();var e=d.bitLength();if(64>=e)return M(d,[2,3,5,7,11,13,17,19,23,29,31,37]);e=Math.log(2)*e.toJSNumber();
c=Math.ceil(!0===c?2*Math.pow(e,2):e);e=[];for(var f=0;f<c;f++)e.push(b(f+2));return M(d,e)};g.prototype.isPrime=e.prototype.isPrime=c.prototype.isPrime;c.prototype.isProbablePrime=function(c){var d=P(this);if(d!==a)return d;d=this.abs();c=c===a?5:c;for(var e=[],f=0;f<c;f++)e.push(b.randBetween(2,d.minus(2)));return M(d,e)};g.prototype.isProbablePrime=e.prototype.isProbablePrime=c.prototype.isProbablePrime;c.prototype.modInv=function(a){for(var c=b.zero,d=b.one,e=y(a),f=this.abs(),g,k,h;!f.isZero();)g=
e.divide(f),k=c,h=e,c=d,e=f,d=k.subtract(g.multiply(d)),f=h.subtract(g.multiply(f));if(!e.isUnit())throw Error(this.toString()+" and "+a.toString()+" are not co-prime");-1===c.compare(0)&&(c=c.add(a));return this.isNegative()?c.negate():c};g.prototype.modInv=e.prototype.modInv=c.prototype.modInv;c.prototype.next=function(){var a=this.value;return this.sign?z(a,1,this.sign):new c(C(a,1),this.sign)};e.prototype.next=function(){var a=this.value;return 9007199254740992>a+1?new e(a+1):new c(U,!1)};g.prototype.next=
function(){return new g(this.value+BigInt(1))};c.prototype.prev=function(){var a=this.value;return this.sign?new c(C(a,1),!0):z(a,1,this.sign)};e.prototype.prev=function(){var a=this.value;return-9007199254740992<a-1?new e(a-1):new c(U,!0)};g.prototype.prev=function(){return new g(this.value-BigInt(1))};for(var T=[1];1E7>=2*T[T.length-1];)T.push(2*T[T.length-1]);var fa=T.length,ba=T[fa-1];c.prototype.shiftLeft=function(a){a=y(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");
if(0>a)return this.shiftRight(-a);var b=this;if(b.isZero())return b;for(;a>=fa;)b=b.multiply(ba),a-=fa-1;return b.multiply(T[a])};g.prototype.shiftLeft=e.prototype.shiftLeft=c.prototype.shiftLeft;c.prototype.shiftRight=function(a){var b;a=y(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");if(0>a)return this.shiftLeft(-a);for(b=this;a>=fa;){if(b.isZero()||b.isNegative()&&b.isUnit())return b;b=E(b,ba);b=b[1].isNegative()?b[0].prev():b[0];a-=fa-1}b=E(b,T[a]);
return b[1].isNegative()?b[0].prev():b[0]};g.prototype.shiftRight=e.prototype.shiftRight=c.prototype.shiftRight;c.prototype.not=function(){return this.negate().prev()};g.prototype.not=e.prototype.not=c.prototype.not;c.prototype.and=function(a){return O(this,a,function(a,b){return a&b})};g.prototype.and=e.prototype.and=c.prototype.and;c.prototype.or=function(a){return O(this,a,function(a,b){return a|b})};g.prototype.or=e.prototype.or=c.prototype.or;c.prototype.xor=function(a){return O(this,a,function(a,
b){return a^b})};g.prototype.xor=e.prototype.xor=c.prototype.xor;c.prototype.bitLength=function(){var a=this;0>a.compareTo(b(0))&&(a=a.negate().subtract(b(1)));return 0===a.compareTo(b(0))?b(0):b(S(a,b(2)).e).add(b(1))};g.prototype.bitLength=e.prototype.bitLength=c.prototype.bitLength;c.prototype.toArray=function(a){return N(this,a)};e.prototype.toArray=function(a){return N(this,a)};g.prototype.toArray=function(a){return N(this,a)};c.prototype.toString=function(b,c){b===a&&(b=10);if(10!==b)return Y(this,
b,c);b=this.value;c=b.length;for(var d=String(b[--c]),e;0<=--c;)e=String(b[c]),d+="0000000".slice(e.length)+e;return(this.sign?"-":"")+d};e.prototype.toString=function(b,c){b===a&&(b=10);return 10!=b?Y(this,b,c):String(this.value)};g.prototype.toString=e.prototype.toString;g.prototype.toJSON=c.prototype.toJSON=e.prototype.toJSON=function(){return this.toString()};c.prototype.valueOf=function(){return parseInt(this.toString(),10)};c.prototype.toJSNumber=c.prototype.valueOf;e.prototype.valueOf=function(){return this.value};
e.prototype.toJSNumber=e.prototype.valueOf;g.prototype.valueOf=g.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var ca=0;1E3>ca;ca++)d[ca]=y(ca),0<ca&&(d[-ca]=y(-ca));d.one=d[1];d.zero=d[0];d.minusOne=d[-1];d.max=V;d.min=R;d.gcd=W;d.lcm=function(a,b){a=y(a).abs();b=y(b).abs();return a.divide(W(a,b)).multiply(b)};d.isInstance=function(a){return a instanceof c||a instanceof e||a instanceof g};d.randBetween=function(a,b){a=y(a);b=y(b);var c=R(a,b);a=V(a,b).subtract(c).add(1);
if(a.isSmall)return c.add(Math.floor(Math.random()*a));a=N(a,1E7).value;b=[];for(var e=!0,f=0;f<a.length;f++){var g=e?a[f]:1E7,h=x(Math.random()*g);b.push(h);h<g&&(e=!1)}return c.add(d.fromArray(b,1E7,!1))};d.fromArray=function(a,b,c){return X(a.map(y),y(b||10),c)};return d}();a.hasOwnProperty("exports")&&(a.exports=b)});let na=void 0;const J=async(a,b)=>{if(p.worker)return a=await p.worker.postMessage({type:u.RUN_WASM_EXPORT,export:a,parameters:b}),A(a).message.response},sa=async(a,b)=>{if(p.worker)return a=
await p.worker.postMessage({type:u.GET_WASM_MEMORY_SECTION,start:a,end:b}),a=A(a),new Uint8Array(a.message.response)},ra=async(a)=>{if(p.worker)return a=await p.worker.postMessage({type:u.GET_WASM_CONSTANT,constant:a}),A(a).message.response},R={};class Za{constructor(){this.canvasElement=this.coreType=this.worker=void 0;this.loadedROM=this.renderId=this.loadedAndStarted=this.ready=this.paused=!1;this.fps=0;this._resetConfig();"undefined"!==typeof window&&window.document.addEventListener("visibilitychange",
()=>{"hidden"!==document.visibilityState||this.options&&this.options.disablePauseOnHidden||this.pause()})}config(a,b){return(async()=>{await this.pause();await this.setCanvas(b);!a&&this.options||this._resetConfig();if(a&&(Object.keys(a).forEach((b)=>{void 0!==this.options[b]&&(this.options[b]=a[b])}),a.gameboySpeed)){let b=Math.floor(60*a.gameboySpeed);0>=b&&(b=1);this.options.gameboyFrameRate=b}})()}getConfig(){return this.options}setCanvas(a){return a?(async()=>{await this.pause();this.canvasElement=
a;await L.initialize(this.canvasElement,this.options.updateGraphicsCallback)})():Promise.resolve()}getCanvas(){return this.canvasElement}loadROM(a,b){return Da.bind(this)(a,b)}play(a){return(async()=>{if(this.ready){if(!this.loadedAndStarted&&(this.loadedAndStarted=!0,this.options.onLoadedAndStarted))this.options.onLoadedAndStarted();if(this.options.onPlay)this.options.onPlay();this.options.headless||(G.resumeAudioContext(),G.resetTimeStretch());await this.worker.postMessage({type:u.RESET_AUDIO_QUEUE});
this.paused=!1;this.updateId||(a?await this.worker.postMessage({type:u.PLAY_UNTIL_BREAKPOINT,breakpoint:a}):await this.worker.postMessage({type:u.PLAY}));this.renderId||this.options.headless||(this.renderId=P(()=>{qa.call(this)}))}})()}pause(){return(async()=>{this.paused=!0;if(this.ready&&this.options.onPause)this.options.onPause();P.cancel(this.renderId);this.renderId=!1;this.options.headless||G.cancelAllAudio(!0);this.worker&&await this.worker.postMessage({type:u.PAUSE});await new Promise((a)=>
{P(()=>{a()})})})()}reset(a){return(async()=>{this.config(a,this.canvasElement);if(this.loadedROM)return this.loadROM(this.loadedROM)})()}saveState(){return(async()=>{await this.pause();return await D.saveState()})()}getSaveStates(){return(async()=>{let a=await D.getCartridgeObject();return a?a.saveStates:[]})()}loadState(a){return(async()=>{await this.pause();await D.loadState(a)})()}getFPS(){return this.fps}getCoreType(){return this.coreType}_resetConfig(){this.fpsTimeStamps=[];this.frameSkipCounter=
0;this.options={headless:!1,disablePauseOnHidden:!1,isAudioEnabled:!0,gameboyFrameRate:60,frameSkip:0,includeBootROM:!1,isGbcEnabled:!0,audioBatchProcessing:!1,graphicsBatchProcessing:!1,timersBatchProcessing:!1,graphicsDisableScanlineRendering:!1,audioAccumulateSamples:!1,tileRendering:!1,tileCaching:!1,updateGraphicsCallback:null,updateAudioCallback:null,saveStateCallback:null,onReady:null,onPlay:null,onPause:null,onLoadedAndStarted:null}}_instantiateWorkers(){return(async()=>{this.worker||(this.worker=
await Va(),this.worker.addMessageListener(Ga.bind(this)))})()}}const p=new Za;E={config:p.config.bind(p),getCoreType:p.getCoreType.bind(p),getConfig:p.getConfig.bind(p),setCanvas:p.setCanvas.bind(p),getCanvas:p.getCanvas.bind(p),loadROM:p.loadROM.bind(p),play:p.play.bind(p),pause:p.pause.bind(p),reset:p.reset.bind(p),isPlaying:()=>!p.paused,isPaused:()=>p.paused,isReady:()=>p.ready,isLoadedAndStarted:()=>p.loadedAndStarted,getVersion:()=>"0.3.4",saveState:p.saveState.bind(p),getSaveStates:p.getSaveStates.bind(p),
loadState:p.loadState.bind(p),getFPS:p.getFPS.bind(p),ResponsiveGamepad:I.ResponsiveGamepad,enableDefaultJoypad:I.enableDefaultJoypad.bind(I),disableDefaultJoypad:I.disableDefaultJoypad.bind(I),setJoypadState:I.setJoypadState.bind(I),resumeAudioContext:G.resumeAudioContext.bind(G),_getCartridgeInfo:D.getCartridgeInfo.bind(D),_playUntilBreakpoint:async(a)=>{await p.play(a);await Fa(u.BREAKPOINT);await p.pause()},_runNumberOfFrames:async(a)=>{await p.pause();const b=()=>{na=P(()=>{na&&(p.worker.postMessage({type:u.FORCE_OUTPUT_FRAME}),
L.renderFrame(),b())})};b();for(let b=0;b<a;b++)await J("executeFrame",[]);na=void 0;p.worker.postMessage({type:u.FORCE_OUTPUT_FRAME});L.renderFrame()},_saveCurrentAudioBufferToWav:()=>{if(G.audioBuffer){var a=G.audioBuffer;var b={};var c=a.numberOfChannels,d=a.sampleRate;b=b.float32?3:1;var f=3===b?32:16;if(2===c){var e=a.getChannelData(0);a=a.getChannelData(1);for(var g=e.length+a.length,h=new Float32Array(g),l=0,p=0;l<g;)h[l++]=e[p],h[l++]=a[p],p++;e=h}else e=a.getChannelData(0);h=f/8;l=c*h;a=
new ArrayBuffer(44+e.length*h);g=new DataView(a);aa(g,0,"RIFF");g.setUint32(4,36+e.length*h,!0);aa(g,8,"WAVE");aa(g,12,"fmt ");g.setUint32(16,16,!0);g.setUint16(20,b,!0);g.setUint16(22,c,!0);g.setUint32(24,d,!0);g.setUint32(28,d*l,!0);g.setUint16(32,l,!0);g.setUint16(34,f,!0);aa(g,36,"data");g.setUint32(40,e.length*h,!0);if(1===b)for(c=44,d=0;d<e.length;d++,c+=2)b=Math.max(-1,Math.min(1,e[d])),g.setInt16(c,0>b?32768*b:32767*b,!0);else for(c=44,d=0;d<e.length;d++,c+=4)g.setFloat32(c,e[d],!0);c=new window.Blob([new DataView(a)],
{type:"audio/wav"});c=window.URL.createObjectURL(c);d=document.createElement("a");document.body.appendChild(d);d.style="display: none";d.href=c;d.download="audio.wav";d.click();window.URL.revokeObjectURL(c)}},_runWasmExport:J,_getWasmMemorySection:sa,_getWasmConstant:ra,_getStepsAsString:async(a)=>{var b=await J("getStepsPerStepSet");const c=await J("getStepSets"),d=await J("getSteps");b=xa(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)},_getCyclesAsString:async(a)=>{var b=await J("getCyclesPerCycleSet");
const c=await J("getCycleSets"),d=await J("getCycles");b=xa(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)}};Y.WasmBoy=E;Object.defineProperty(Y,"__esModule",{value:!0})});
//# sourceMappingURL=wasmboy.wasm.umd.js.map
