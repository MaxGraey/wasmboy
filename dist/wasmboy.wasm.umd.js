'use strict';(function(V,A){"object"===typeof exports&&"undefined"!==typeof module?A(exports):"function"===typeof define&&define.amd?define(["exports"],A):A(V.WasmBoy={})})(this,function(V){function A(a){return a.data?a.data:a}function W(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(b){return Object.getOwnPropertyDescriptor(c,b).enumerable})));
d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}return a}function X(a,b){return b={exports:{}},a(b,b.exports),b.exports}function ja(){let a=Object.assign({},ua);a.wasmboyMemory.wasmBoyInternalState=this.internalState;a.wasmboyMemory.wasmBoyPaletteMemory=this.paletteMemory;a.wasmboyMemory.gameBoyMemory=this.gameboyMemory;a.wasmboyMemory.cartridgeRam=this.cartridgeRam;a.date=Date.now();a.isAuto=!1;this.saveStateCallback&&
this.saveStateCallback(a);return a}function ca(){if(!this.internalState)return null;const a=ja.bind(this)(),b=Object.keys(a.wasmboyMemory);for(let c=0;c<b.length;c++)a.wasmboyMemory[b[c]]=Array.prototype.slice.call(a.wasmboyMemory[b[c]]);a.isAuto=!0;localStorage.setItem(this.WASMBOY_UNLOAD_STORAGE,JSON.stringify({header:Array.prototype.slice.call(this.cartridgeHeader),cartridgeRam:Array.prototype.slice.call(this.cartridgeRam),saveState:a}));return null}function va(){return(async()=>{var a=localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);
if(a){var b=JSON.parse(a);localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);a=new Uint8Array(b.header);const c=new Uint8Array(b.cartridgeRam);if(b=b.saveState){const a=Object.keys(b.wasmboyMemory);for(let c=0;c<a.length;c++)b.wasmboyMemory[a[c]]=new Uint8Array(b.wasmboyMemory[a[c]])}await this.saveCartridgeRam(a,c);await this.saveState(a,b)}})()}function wa(){window.addEventListener("beforeunload",()=>{ca.bind(this)()},!1);window.addEventListener("unload",()=>{ca.bind(this)()},!1);window.addEventListener("pagehide",
()=>{ca.bind(this)()},!1);document.addEventListener("visibilitychange",()=>{"hidden"===document.visibilityState&&ca.bind(this)()});return va.bind(this)()}function da(){var a=function(){return Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10)};return(""+a()+a()).slice()}function w(a){var b=Object.assign({},xa);b.ID=da();b.KEY_CODE=a;return b}function z(a,b,c){var d=Object.assign({},ka);d.ID=da();d.JOYSTICK=Object.assign({},ka.JOYSTICK);a||0===a?d.BUTTON_ID=a:void 0!==b&&void 0!==c&&(d.JOYSTICK.AXIS_ID=
b,d.JOYSTICK.IS_POSITIVE=c);return d}function ya(a,b,c,d){var e=Object.assign({},za);e.ID=da();e.ELEMENT=a;e.TYPE=b;e.DIRECTION=c;e.EVENT_HANDLER=d;a=e.ELEMENT.getBoundingClientRect();e.BOUNDING_RECT=a;a=function(b){e.EVENT_HANDLER&&e.EVENT_HANDLER(b)};e.ELEMENT.addEventListener("touchstart",a);e.ELEMENT.addEventListener("touchmove",a);e.ELEMENT.addEventListener("touchend",a);e.ELEMENT.addEventListener("mousedown",a);e.ELEMENT.addEventListener("mouseup",a);return e}function Aa(a,b,c){b||(b=ha());
return{workerId:c,messageId:b,message:a}}function Ba(a,b){this.loadedAndStarted=this.ready=!1;const c=async()=>{const c=[Ca(a,b),this._instantiateWorkers()];!this.options.headless&&E.getLoadedCartridgeMemoryState().RAM&&c.push(E.saveCartridgeRam());let d;await Promise.all(c).then((b)=>{d=b[0]});this.coreType=(await this.worker.postMessage({type:r.INSTANTIATE_WASM})).message.type;return d},d=async(b)=>{await E.clearMemory();await E.loadCartridgeRom(b);this.loadedROM=b;await this.worker.postMessage({type:r.CONFIG,
config:[0,this.options.isGbcEnabled?1:0,this.options.audioBatchProcessing?1:0,this.options.graphicsBatchProcessing?1:0,this.options.timersBatchProcessing?1:0,this.options.graphicsDisableScanlineRendering?1:0,this.options.audioAccumulateSamples?1:0,this.options.tileRendering?1:0,this.options.tileCaching?1:0],options:{gameboyFrameRate:this.options.gameboyFrameRate,headless:this.options.headless,isAudioEnabled:this.options.isAudioEnabled,frameSkip:this.options.frameSkip}})};return(async()=>{await this.pause();
let b=await c();this.options.headless?(await E.initialize(this.options.headless,this.options.saveStateCallback),await d(b)):(await Promise.all([R.initialize(this.canvasElement,this.options.updateGraphicsCallback),J.initialize(this.options.updateAudioCallback),F.initialize(),E.initialize(this.options.headless,this.options.saveStateCallback)]),await d(b),await E.loadCartridgeRam());this.ready=!0;if(this.options.onReady)this.options.onReady()})()}function la(){if(this.paused)return!0;let a=!1;this.frameSkip&&
0<this.frameSkip&&(this.frameSkipCounter++,this.frameSkipCounter<this.frameSkip?a=!0:this.frameSkipCounter=0);a||R.renderFrame();F.updateController();this.renderId=O(()=>{la.call(this)})}function Y(a,b,c){for(var d=0;d<c.length;d++)a.setUint8(b+d,c.charCodeAt(d))}function Da(a){a=A(a);if(a.message)switch(a.message.type){case r.UPDATED:this.fps=a.message.fps;break;case r.CRASHED:(async()=>{await this.pause();console.log("Wasmboy Crashed!");let b=await G("getProgramCounter");var a=await ma("GAMEBOY_INTERNAL_MEMORY_LOCATION");
a=await na(a+b,a+b+1);console.log(`Program Counter: 0x${b.toString(16)}`);console.log(`Opcode: 0x${a[0].toString(16)}`)})()}}const r={CONNECT:"CONNECT",INSTANTIATE_WASM:"INSTANTIATE_WASM",CLEAR_MEMORY:"CLEAR_MEMORY",CLEAR_MEMORY_DONE:"CLEAR_MEMORY_DONE",GET_MEMORY:"GET_MEMORY",SET_MEMORY:"SET_MEMORY",SET_MEMORY_DONE:"SET_MEMORY_DONE",GET_CONSTANTS:"GET_CONSTANTS",GET_CONSTANTS_DONE:"GET_CONSTANTS_DONE",CONFIG:"CONFIG",RESET_AUDIO_QUEUE:"RESET_AUDIO_QUEUE",PLAY:"PLAY",PAUSE:"PAUSE",UPDATED:"UPDATED",
CRASHED:"CRASHED",SET_JOYPAD_STATE:"SET_JOYPAD_STATE",AUDIO_LATENCY:"AUDIO_LATENCY",RUN_WASM_EXPORT:"RUN_WASM_EXPORT",GET_WASM_MEMORY_SECTION:"GET_WASM_MEMORY_SECTION",GET_WASM_CONSTANT:"GET_WASM_CONSTANT"};class Ea{constructor(){this.imageDataArray=this.canvasImageData=this.canvasContext=this.canvasElement=this.frameQueueRenderPromise=this.frameQueue=this.updateGraphicsCallback=this.worker=void 0;this.imageDataArrayChanged=!1}initialize(a,b){this.updateGraphicsCallback=b;this.frameQueue=[];return(async()=>
{this.canvasElement=a;this.canvasContext=this.canvasElement.getContext("2d");this.canvasElement.width=160;this.canvasElement.height=144;this.canvasImageData=this.canvasContext.createImageData(160,144);this.canvasElement.style="\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      ";
this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);this.worker&&await this.worker.postMessage({type:r.GET_CONSTANTS})})()}setWorker(a){this.worker=a;this.worker.addMessageListener((b)=>{b=A(b);switch(b.message.type){case r.UPDATED:this.imageDataArray=new Uint8ClampedArray(b.message.imageDataArrayBuffer),this.imageDataArrayChanged=!0}})}renderFrame(){if(this.imageDataArrayChanged){this.imageDataArrayChanged=!1;this.updateGraphicsCallback&&this.updateGraphicsCallback(this.imageDataArray);
for(let a=0;a<this.imageDataArray.length;a++)this.canvasImageData.data[a]=this.imageDataArray[a];this.canvasContext.clearRect(0,0,160,144);this.canvasContext.putImageData(this.canvasImageData,0,0)}}}const R=new Ea;class Fa{constructor(){this.audioPlaytime=this.audioBuffer=this.audioContext=this.updateAudioCallback=this.worker=void 0;this.audioSources=[];this.averageTimeStretchFps=[];this.WASMBOY_SOUND_OUTPUT_LOCATION=0}initialize(a){return(async()=>{this.updateAudioCallback=a;this.averageTimeStretchFps=
[];0<this.audioSources.length&&this.cancelAllAudio();this.audioSources=[];this._createAudioContextIfNone();return this.worker.postMessage({type:r.GET_CONSTANTS})})()}resumeAudioContext(){this._createAudioContextIfNone();"suspended"===this.audioContext.state&&(this.audioContext.resume(),this.audioPlaytime=this.audioContext.currentTime)}resetTimeStretch(){this.averageTimeStretchFps=[]}setWorker(a){this.worker=a;this.worker.addMessageListener((b)=>{b=A(b);switch(b.message.type){case r.UPDATED:this.playAudio(b.message.fps,
b.message.allowFastSpeedStretching,b.message.numberOfSamples,b.message.leftChannel,b.message.rightChannel),b=0,this.audioContext.currentTime&&0<this.audioContext.currentTime&&(b=this.audioPlaytime-this.audioContext.currentTime),this.worker.postMessage({type:r.AUDIO_LATENCY,latency:b})}})}playAudio(a,b,c,d,e){let f=a||60;const g=Math.abs(a-this.averageTimeStretchFps[this.averageTimeStretchFps.length-1]);g&&15<=g&&this.resetTimeStretch();this.averageTimeStretchFps.push(a);171<this.averageTimeStretchFps.length&&
this.averageTimeStretchFps.shift();57<=this.averageTimeStretchFps.length&&(f=this.averageTimeStretchFps.reduce((b,a)=>b+a),f=Math.floor(f/this.averageTimeStretchFps.length));a=1;if(57>f||b)a*=f/60,0>=a&&(a=.01);this.audioBuffer=this.audioContext.createBuffer(2,c,48E3);this.audioBuffer.copyToChannel?(this.audioBuffer.copyToChannel(new Float32Array(d),0,0),this.audioBuffer.copyToChannel(new Float32Array(e),1,0)):(this.audioBuffer.getChannelData(0).set(new Float32Array(d)),this.audioBuffer.getChannelData(1).set(new Float32Array(e)));
b=this.audioContext.createBufferSource();b.buffer=this.audioBuffer;b.playbackRate.setValueAtTime(a,this.audioContext.currentTime);d=b;this.updateAudioCallback&&(e=this.updateAudioCallback(this.audioContext,b))&&(d=e);d.connect(this.audioContext.destination);d=this.audioContext.currentTime;e=d+.1;this.audioPlaytime=this.audioPlaytime||e;this.audioPlaytime<d&&(this.cancelAllAudio(),this.audioPlaytime=e);b.start(this.audioPlaytime);for(this.audioPlaytime+=c/(48E3*a);this.audioSources[this.audioSources.length-
1]&&this.audioSources[this.audioSources.length-1].playtime<=this.audioPlaytime;)this.audioSources[this.audioSources.length-1].source.stop(),this.audioSources.pop();this.audioSources.push({source:b,playTime:this.audioPlaytime,fps:f});setTimeout(()=>{this.audioSources.shift()},this.audioPlaytime-this.audioContext.currentTime+500)}cancelAllAudio(a){if(this.audioContext){for(let b=0;b<this.audioSources.length;b++)(a||this.audioSources[b].playTime>this.audioPlaytime)&&this.audioSources[b].source.stop();
this.audioPlaytime=this.audioContext.currentTime+.1}}_createAudioContextIfNone(){this.audioContext||(this.audioContext=new (window.AudioContext||window.webkitAudioContext))}}const J=new Fa;var oa="undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{},Ga=X(function(a){(function(){function b(b){return new Promise(function(a,c){b.onsuccess=function(){a(b.result)};b.onerror=function(){c(b.error)}})}function c(a,c,d){var e,f=new Promise(function(f,g){e=
a[c].apply(a,d);b(e).then(f,g)});f.request=e;return f}function d(b,a,d){var e=c(b,a,d);return e.then(function(b){if(b)return new h(b,e.request)})}function e(b,a,c){c.forEach(function(c){Object.defineProperty(b.prototype,c,{get:function(){return this[a][c]},set:function(b){this[a][c]=b}})})}function f(b,a,d,e){e.forEach(function(e){e in d.prototype&&(b.prototype[e]=function(){return c(this[a],e,arguments)})})}function g(b,a,c,d){d.forEach(function(d){d in c.prototype&&(b.prototype[d]=function(){return this[a][d].apply(this[a],
arguments)})})}function n(b,a,c,e){e.forEach(function(e){e in c.prototype&&(b.prototype[e]=function(){return d(this[a],e,arguments)})})}function m(b){this._index=b}function h(b,a){this._cursor=b;this._request=a}function k(b){this._store=b}function C(b){this._tx=b;this.complete=new Promise(function(a,c){b.oncomplete=function(){a()};b.onerror=function(){c(b.error)};b.onabort=function(){c(b.error)}})}function u(b,a,c){this._db=b;this.oldVersion=a;this.transaction=new C(c)}function x(b){this._db=b}e(m,
"_index",["name","keyPath","multiEntry","unique"]);f(m,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]);n(m,"_index",IDBIndex,["openCursor","openKeyCursor"]);e(h,"_cursor",["direction","key","primaryKey","value"]);f(h,"_cursor",IDBCursor,["update","delete"]);["advance","continue","continuePrimaryKey"].forEach(function(a){a in IDBCursor.prototype&&(h.prototype[a]=function(){var c=this,d=arguments;return Promise.resolve().then(function(){c._cursor[a].apply(c._cursor,d);return b(c._request).then(function(b){if(b)return new h(b,
c._request)})})})});k.prototype.createIndex=function(){return new m(this._store.createIndex.apply(this._store,arguments))};k.prototype.index=function(){return new m(this._store.index.apply(this._store,arguments))};e(k,"_store",["name","keyPath","indexNames","autoIncrement"]);f(k,"_store",IDBObjectStore,"put add delete clear get getAll getKey getAllKeys count".split(" "));n(k,"_store",IDBObjectStore,["openCursor","openKeyCursor"]);g(k,"_store",IDBObjectStore,["deleteIndex"]);C.prototype.objectStore=
function(){return new k(this._tx.objectStore.apply(this._tx,arguments))};e(C,"_tx",["objectStoreNames","mode"]);g(C,"_tx",IDBTransaction,["abort"]);u.prototype.createObjectStore=function(){return new k(this._db.createObjectStore.apply(this._db,arguments))};e(u,"_db",["name","version","objectStoreNames"]);g(u,"_db",IDBDatabase,["deleteObjectStore","close"]);x.prototype.transaction=function(){return new C(this._db.transaction.apply(this._db,arguments))};e(x,"_db",["name","version","objectStoreNames"]);
g(x,"_db",IDBDatabase,["close"]);["openCursor","openKeyCursor"].forEach(function(b){[k,m].forEach(function(a){b in a.prototype&&(a.prototype[b.replace("open","iterate")]=function(){var a=Array.prototype.slice.call(arguments),c=a[a.length-1],d=this._store||this._index,e=d[b].apply(d,a.slice(0,-1));e.onsuccess=function(){c(e.result)}})})});[m,k].forEach(function(b){b.prototype.getAll||(b.prototype.getAll=function(b,a){var c=this,d=[];return new Promise(function(e){c.iterateCursor(b,function(b){b?(d.push(b.value),
void 0!==a&&d.length==a?e(d):b.continue()):e(d)})})})});a.exports={open:function(b,a,d){b=c(indexedDB,"open",[b,a]);var e=b.request;e&&(e.onupgradeneeded=function(b){d&&d(new u(e.result,b.oldVersion,e.transaction))});return b.then(function(b){return new x(b)})},delete:function(b){return c(indexedDB,"deleteDatabase",[b])}};a.exports.default=a.exports})()}),H=X(function(a){a.exports="undefined"!=typeof indexedDB?Ga:{open:function(){return Promise.reject("IDB requires a browser environment")},delete:function(){return Promise.reject("IDB requires a browser environment")}}}),
L=!1;if("undefined"!==typeof window){const a=H.open("wasmboy",1,(b)=>{b.createObjectStore("keyval")});L={get(b){return a.then((a)=>a.transaction("keyval").objectStore("keyval").get(b))},set(b,c){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").put(c,b);return a.complete})},delete(b){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").delete(b);return a.complete})},clear(){return a.then((b)=>{b=b.transaction("keyval","readwrite");b.objectStore("keyval").clear();
return b.complete})},keys(){return a.then((b)=>{b=b.transaction("keyval");const a=[],d=b.objectStore("keyval");(d.iterateKeyCursor||d.iterateCursor).call(d,(b)=>{b&&(a.push(b.key),b.continue())});return b.complete.then(()=>a)})}}}const M=L,ua={wasmboyMemory:{wasmBoyInternalState:[],wasmBoyPaletteMemory:[],gameBoyMemory:[],cartridgeRam:[]},date:void 0,isAuto:void 0};class Ha{constructor(){this.saveStateCallback=this.worker=void 0;this.loadedCartridgeMemoryState={ROM:!1,RAM:!1};this.internalState=this.paletteMemory=
this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0;this.WASMBOY_UNLOAD_STORAGE="WASMBOY_UNLOAD_STORAGE";this.WASMBOY_PALETTE_MEMORY_LOCATION=this.WASMBOY_PALETTE_MEMORY_SIZE=this.WASMBOY_INTERNAL_MEMORY_LOCATION=this.WASMBOY_INTERNAL_MEMORY_SIZE=this.WASMBOY_INTERNAL_STATE_LOCATION=this.WASMBOY_INTERNAL_STATE_SIZE=this.WASMBOY_GAME_RAM_BANKS_LOCATION=this.WASMBOY_GAME_BYTES_LOCATION=0}initialize(a,b){return(async()=>{a?(this.saveStateCallback=b,await this._initializeConstants()):
(this.saveStateCallback=b,await this._initializeConstants(),await wa.call(this))})()}setWorker(a){this.worker=a;this.worker.addMessageListener((b)=>{b=A(b);switch(b.message.type){case r.UPDATED:{const a=Object.keys(b.message);delete a.type;a.includes("CARTRIDGE_ROM")&&(this.cartridgeRom=new Uint8Array(b.message.CARTRIDGE_ROM));a.includes("CARTRIDGE_RAM")&&(this.cartridgeRam=new Uint8Array(b.message.CARTRIDGE_RAM));a.includes("GAMEBOY_MEMORY")&&(this.gameboyMemory=new Uint8Array(b.message.GAMEBOY_MEMORY));
a.includes("PALETTE_MEMORY")&&(this.paletteMemory=new Uint8Array(b.message.PALETTE_MEMORY));a.includes("INTERNAL_STATE")&&(this.internalState=new Uint8Array(b.message.INTERNAL_STATE))}}})}getLoadedCartridgeMemoryState(){return this.loadedCartridgeMemoryState}clearMemory(){return this.worker.postMessage({type:r.CLEAR_MEMORY}).then((a)=>{this.loadedCartridgeMemoryState.ROM=!1;this.loadedCartridgeMemoryState.RAM=!1;this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=
this.cartridgeRom=void 0})}loadCartridgeRom(a){return(async()=>{const b={};b.CARTRIDGE_ROM=a.buffer;await this.worker.postMessage(W({type:r.SET_MEMORY},b)).then((b)=>{this.loadedCartridgeMemoryState.ROM=!0});await this.worker.postMessage({type:r.GET_MEMORY,memoryTypes:["CARTRIDGE_ROM","CARTRIDGE_HEADER"]}).then((b)=>{b=A(b);this.cartridgeRom=new Uint8Array(b.message.CARTRIDGE_ROM);this.cartridgeHeader=new Uint8Array(b.message.CARTRIDGE_HEADER)})})()}saveCartridgeRam(a,b){return(async()=>{let c,d;
a&&b?(c=a,d=b):(c=this.cartridgeHeader,d=this.cartridgeRam);if(!c||!d)throw Error("Error parsing the cartridgeRam or cartridge header");let e=await M.get(c);e||(e={});e.cartridgeRam=d;await M.set(c,e)})()}loadCartridgeRam(){return(async()=>{var a=this.cartridgeHeader;if(!a)throw Error("Error parsing the cartridge header");const b=await M.get(a);b&&b.cartridgeRam&&(a={},a.CARTRIDGE_RAM=b.cartridgeRam.buffer,await this.worker.postMessage(W({type:r.SET_MEMORY},a)).then((a)=>{this.loadedCartridgeMemoryState.RAM=
!0;this.cartridgeRam=b.cartridgeRam}))})()}saveState(a,b){return(async()=>{let c,d;a&&b?(c=b,d=a):(c=ja.call(this),d=this.cartridgeHeader);if(!d)throw Error("Error parsing the cartridge header");let e=await M.get(d);e||(e={});e.saveStates||(e.saveStates=[]);e.saveStates.push(c);await M.set(d,e);return c})()}loadState(a){return(async()=>{var b=this.cartridgeHeader;if(!b)throw Error("Error getting the cartridge header");if(!a){b=await M.get(b);if(!b||!b.saveStates)throw Error("No Save State passed, and no cartridge object found");
saverState=b.saveStates[0]}b={};b.CARTRIDGE_RAM=a.wasmboyMemory.cartridgeRam.buffer;b.GAMEBOY_MEMORY=a.wasmboyMemory.gameBoyMemory.buffer;b.PALETTE_MEMORY=a.wasmboyMemory.wasmBoyPaletteMemory.buffer;b.INTERNAL_STATE=a.wasmboyMemory.wasmBoyInternalState.buffer;await this.worker.postMessage(W({type:r.SET_MEMORY},b),[b.CARTRIDGE_RAM,b.GAMEBOY_MEMORY,b.PALETTE_MEMORY,b.INTERNAL_STATE]);await this.worker.postMessage({type:r.GET_MEMORY,memoryTypes:["CARTRIDGE_RAM","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE"]}).then((b)=>
{b=A(b);this.cartridgeRam=b.message.CARTRIDGE_RAM;this.gameboyMemory=b.message.GAMEBOY_MEMORY;this.paletteMemory=b.message.PALETTE_MEMORY;this.internalState=b.message.INTERNAL_STATE})})()}getCartridgeObject(){return M.get(this.cartridgeHeader)}getCartridgeInfo(){return this.loadedCartridgeMemoryState.ROM?(async()=>{const a={};a.header=this.cartridgeHeader;a.ROM=this.cartridgeRom;a.RAM=this.cartridgeRam;a.nintendoLogo=a.ROM.slice(260,308);a.title=a.ROM.slice(308,324);a.titleAsString=String.fromCharCode.apply(null,
a.title);a.manufacturerCode=a.ROM.slice(319,323);a.CGBFlag=a.ROM[323];a.newLicenseeCode=a.ROM.slice(324,326);a.SGBFlag=a.ROM[326];a.cartridgeType=a.ROM[327];a.ROMSize=a.ROM[328];a.RAMSize=a.ROM[329];a.destinationCode=a.ROM[330];a.oldLicenseeCode=a.ROM[331];a.maskROMVersionNumber=a.ROM[332];a.headerChecksum=a.ROM[333];a.globalChecksum=a.ROM.slice(334,336);return a})():Promise.reject("No ROM has been loaded")}_initializeConstants(){return this.worker.postMessage({type:r.GET_CONSTANTS}).then((a)=>{const b=
A(a);Object.keys(this).forEach((a)=>{void 0!==b.message[a]&&(this[a]=b.message[a])})})}}const E=new Ha;var xa={ID:void 0,ACTIVE:!1,KEY_CODE:void 0},ka={ID:void 0,ACTIVE:!1,BUTTON_ID:void 0,JOYSTICK:{AXIS_ID:void 0,IS_POSITIVE:void 0}},za={ID:void 0,ACTIVE:!1,ELEMENT:void 0,TYPE:void 0,DIRECTION:void 0,EVENT_HANDLER:void 0,BOUNDING_RECT:void 0},pa={UP:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},RIGHT:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},DOWN:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},LEFT:{KEYBOARD:[],GAMEPAD:[],
TOUCHPAD:[]},A:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},B:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},SELECT:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},START:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]}},k=Object.assign({},pa);k.UP.KEYBOARD.push(w(38));k.UP.KEYBOARD.push(w(87));k.UP.KEYBOARD.push(w(104));k.UP.GAMEPAD.push(z(12));k.UP.GAMEPAD.push(z(!1,1,!1));k.UP.GAMEPAD.push(z(!1,3,!1));k.RIGHT.KEYBOARD.push(w(39));k.RIGHT.KEYBOARD.push(w(68));k.RIGHT.KEYBOARD.push(w(102));k.RIGHT.GAMEPAD.push(z(15));k.RIGHT.GAMEPAD.push(z(!1,
0,!0));k.RIGHT.GAMEPAD.push(z(!1,2,!0));k.DOWN.KEYBOARD.push(w(40));k.DOWN.KEYBOARD.push(w(83));k.DOWN.KEYBOARD.push(w(101));k.DOWN.KEYBOARD.push(w(98));k.DOWN.GAMEPAD.push(z(13));k.DOWN.GAMEPAD.push(z(!1,1,!0));k.DOWN.GAMEPAD.push(z(!1,3,!0));k.LEFT.KEYBOARD.push(w(37));k.LEFT.KEYBOARD.push(w(65));k.LEFT.KEYBOARD.push(w(100));k.LEFT.GAMEPAD.push(z(14));k.LEFT.GAMEPAD.push(z(!1,0,!1));k.LEFT.GAMEPAD.push(z(!1,2,!1));k.A.KEYBOARD.push(w(88));k.A.KEYBOARD.push(w(186));k.A.KEYBOARD.push(w(103));k.A.GAMEPAD.push(z(0));
k.A.GAMEPAD.push(z(1));k.B.KEYBOARD.push(w(90));k.B.KEYBOARD.push(w(27));k.B.KEYBOARD.push(w(222));k.B.KEYBOARD.push(w(8));k.B.KEYBOARD.push(w(105));k.B.GAMEPAD.push(z(2));k.B.GAMEPAD.push(z(3));k.START.KEYBOARD.push(w(13));k.START.KEYBOARD.push(w(32));k.START.KEYBOARD.push(w(99));k.START.GAMEPAD.push(z(9));k.SELECT.KEYBOARD.push(w(16));k.SELECT.KEYBOARD.push(w(9));k.SELECT.KEYBOARD.push(w(220));k.SELECT.KEYBOARD.push(w(97));k.SELECT.GAMEPAD.push(z(8));var Ia=function(){function a(b,a){for(var c=
0;c<a.length;c++){var e=a[c];e.enumerable=e.enumerable||!1;e.configurable=!0;"value"in e&&(e.writable=!0);Object.defineProperty(b,e.key,e)}}return function(b,c,d){c&&a(b.prototype,c);d&&a(b,d);return b}}(),qa="input textarea button select option optgroup label datalist".split(" "),S=new (function(){function a(){if(!(this instanceof a))throw new TypeError("Cannot call a class as a function");this.gamepadAnalogStickDeadZone=.25;this.keyMapKeys=Object.keys(Object.assign({},pa));this.keyMap=JSON.parse(JSON.stringify(k));
this.addedEventListeners=this.enabled=!1}Ia(a,[{key:"enable",value:function(b){b&&(this.keyMap=b);this.addedEventListeners||"undefined"===typeof window||(window.addEventListener("keyup",this.updateKeyboard.bind(this)),window.addEventListener("keydown",this.updateKeyboard.bind(this)),window.addEventListener("resize",this.updateTouchpadRect.bind(this)),this.addedEventListeners=!0);this.enabled=!0}},{key:"disable",value:function(){this.keyMap=void 0;this.enabled=!1}},{key:"isEnabled",value:function(){return this.enabled}},
{key:"addTouchInput",value:function(b,a,d,e){var c=this,g=void 0;g=ya(a,d,e,function(a){c.updateTouchpad(b,g,a)});this.keyMap[b].TOUCHPAD.push(g);return g.ID}},{key:"removeTouchInput",value:function(b,a){var c=void 0;this.keyMap[b].TOUCHPAD.some(function(b,d){return b.ID===a?(c=d,!0):!1});return void 0!==c?(this.keyMap[b].TOUCHPAD.splice(c,1),!0):!1}},{key:"getState",value:function(){var b=this;if(!this.enabled)return{};this.updateGamepad();var a={};this.keyMapKeys.forEach(function(c){b.keyMap[c].KEYBOARD.some(function(b){return b.ACTIVE})?
a[c]=!0:b.keyMap[c].GAMEPAD.some(function(b){return b.ACTIVE})?a[c]=!0:b.keyMap[c].TOUCHPAD.some(function(b){return b.ACTIVE})?a[c]=!0:a[c]=!1});return a}},{key:"isIgnoringKeyEvents",value:function(){return"undefined"===typeof window?!0:qa.some(function(b){return document.activeElement&&document.activeElement.tagName.toLowerCase()===b.toLowerCase()?!0:!1})}},{key:"updateKeyboard",value:function(b){var a=this;if(this.enabled&&"undefined"!==typeof window&&!(b&&b.target&&b.target.tagName&&qa.some(function(a){return b&&
b.target.tagName.toLowerCase()===a.toLowerCase()?!0:!1}))){var d=!1;"keydown"===b.type&&(d=!0);this.keyMapKeys.forEach(function(c){a.keyMap[c].KEYBOARD.forEach(function(e,g){e.KEY_CODE===b.keyCode&&(a.keyMap[c].KEYBOARD[g].ACTIVE=d)})});b.preventDefault()}}},{key:"updateGamepad",value:function(){for(var b=this,a=navigator.getGamepads?navigator.getGamepads():[],d=function(c){var d=a[c];if(!d)return"continue";b.keyMapKeys.forEach(function(a){b.keyMap[a].GAMEPAD.forEach(function(c,e){if(b.keyMap[a].GAMEPAD[e].BUTTON_ID||
0===b.keyMap[a].GAMEPAD[e].BUTTON_ID)c=b.keyMap[a].GAMEPAD[e].BUTTON_ID,b.keyMap[a].GAMEPAD[e].ACTIVE=d.buttons[c]?d.buttons[c].pressed:!1;void 0!==b.keyMap[a].GAMEPAD[e].JOYSTICK.AXIS_ID&&void 0!==b.keyMap[a].GAMEPAD[e].JOYSTICK.IS_POSITIVE&&(b.keyMap[a].GAMEPAD[e].ACTIVE=b.keyMap[a].GAMEPAD[e].JOYSTICK.IS_POSITIVE?(d.axes[b.keyMap[a].GAMEPAD[e].JOYSTICK.AXIS_ID]||0)>+b.gamepadAnalogStickDeadZone:(d.axes[b.keyMap[a].GAMEPAD[e].JOYSTICK.AXIS_ID]||0)<-b.gamepadAnalogStickDeadZone)})})},e=0;e<a.length;e++)d(e)}},
{key:"updateTouchpadRect",value:function(){var a=this;this.keyMapKeys.forEach(function(b){a.keyMap[b].TOUCHPAD.forEach(function(c,e){c=a.keyMap[b].TOUCHPAD[e].ELEMENT.getBoundingClientRect();a.keyMap[b].TOUCHPAD[e].BOUNDING_RECT=c})})}},{key:"resetTouchDpad",value:function(){var a=this;["UP","RIGHT","DOWN","LEFT"].forEach(function(b){a.keyMap[b].TOUCHPAD.forEach(function(a){a.ACTIVE=!1})})}},{key:"updateTouchpad",value:function(a,c,d){if(this.enabled&&d&&(!d.type.includes("touch")||d.touches))if(d.preventDefault(),
"touchstart"===d.type||"touchmove"===d.type||"mousedown"===d.type){if("DPAD"===c.TYPE){a=void 0;d.type.includes("touch")?a=d.touches[0]:d.type.includes("mouse")&&(a=d);d=(c.BOUNDING_RECT.right-c.BOUNDING_RECT.left)/2;var b=a.clientX-c.BOUNDING_RECT.left;a=a.clientY-c.BOUNDING_RECT.top;if(b>d+c.BOUNDING_RECT.width/2+50)return;Math.abs(d-b)+c.BOUNDING_RECT.width/8>Math.abs((c.BOUNDING_RECT.bottom-c.BOUNDING_RECT.top)/2-a)?Math.abs(c.BOUNDING_RECT.width/2-b)>c.BOUNDING_RECT.width/20&&(a=b<c.BOUNDING_RECT.width/
2,c.ACTIVE=a&&"LEFT"===c.DIRECTION?!0:a||"RIGHT"!==c.DIRECTION?!1:!0):(a=a<c.BOUNDING_RECT.height/2,c.ACTIVE=a&&"UP"===c.DIRECTION?!0:a||"DOWN"!==c.DIRECTION?!1:!0)}"BUTTON"===c.TYPE&&(c.ACTIVE=!0)}else"DPAD"===c.TYPE&&this.resetTouchDpad(),"BUTTON"===c.TYPE&&(c.ACTIVE=!1)}}]);return a}());class Ja{constructor(){this.worker=void 0;this.isEnabled=!1;this.enableDefaultJoypad()}initialize(){return Promise.resolve()}setWorker(a){this.worker=a}updateController(){if(!this.isEnabled)return{};const a=S.getState();
this.setJoypadState(a);return a}setJoypadState(a){this.worker.postMessage({type:r.SET_JOYPAD_STATE,setJoypadStateParamsAsArray:[a.UP?1:0,a.RIGHT?1:0,a.DOWN?1:0,a.LEFT?1:0,a.A?1:0,a.B?1:0,a.SELECT?1:0,a.START?1:0]})}enableDefaultJoypad(){this.isEnabled=!0;S.enable(JSON.parse(JSON.stringify(k)))}disableDefaultJoypad(){this.isEnabled=!1;S.disable(JSON.parse(JSON.stringify(k)))}addTouchInput(a,b,c,d){return S.addTouchInput(a,b,c,d)}removeTouchInput(a,b){return S.removeTouchInput(a,b)}}const F=new Ja;
let Z=0;const ha=()=>{var a=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10);Z++;a=`${a}-${Z}`;1E5<Z&&(Z=0);return a};class T{constructor(a,b){this.id=ha();b&&(this.id=b);this.messageListeners=[];a=atob(a.split(",")[1]);let c;try{c=new Blob([a],{type:"application/javascript"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,c=new BlobBuilder,c.append(a),c=c.getBlob()}this.worker=new Worker(URL.createObjectURL(c));this.worker.onmessage=
this._onMessageHandler.bind(this)}postMessage(a,b){a=Aa(a,void 0,this.id);const c=a.messageId,d=new Promise((a)=>{this.addMessageListener((b,d)=>{b=A(b);b.messageId===c&&(this.removeMessageListener(d.id),a(b))})});this.worker.postMessage(a,b);return d}addMessageListener(a){this.messageListeners.push({id:ha(),callback:a})}removeMessageListener(a){let b;this.messageListeners.some((c,d)=>c.id===a?(b=d,!0):!1);void 0!==b&&this.messageListeners.splice(b,1)}_onMessageHandler(a){this.messageListeners.forEach((b)=>
{b.callback(a,b)})}}const Ka=async()=>{const a=new T("data:application/javascript;base64,",
"LIB"),b=new T("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6ZixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGs7Y29uc3QgbT0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6ZyhjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgZj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApLGQ9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KDMpO2ZvcihsZXQgYz0wOzE0ND5jO2MrKylmb3IobGV0IGU9MDsxNjA+ZTtlKyspe3ZhciBiPTMqKDE2MCpjK2UpO2ZvcihsZXQgYz0wOzM+YztjKyspZFtjXT1hW2IrY107Yj00KihlKzE2MCpjKTtmW2JdPWRbMF07ZltiKzFdPWRbMV07ZltiKzJdPWRbMl07ZltiKzNdPTI1NX1hPWZ9ZyhjKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bCgoYSk9PnthPWEuZGF0YT8KYS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjprPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sayk7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmsucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"GRAPHICS"),c=new T("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtoP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGgpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoaClzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZCl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6ZCxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGg9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtofHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHI9KGEpPT57YT1hLmRhdGE/YS5kYXRhOmE7aWYoYS5tZXNzYWdlKXN3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e3ZhciBiPW5ldyBVaW50OEFycmF5KGEubWVzc2FnZS5hdWRpb0J1ZmZlcik7dmFyIGQ9YS5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBjPW5ldyBGbG9hdDMyQXJyYXkoZCk7dmFyIGY9bmV3IEZsb2F0MzJBcnJheShkKTtsZXQgZz0wO2QqPTI7Zm9yKHZhciBlPTA7ZTxkO2UrPTIpY1tnXT1xKGJbZV0pLGcrKztnPTA7Zm9yKGU9MTtlPGQ7ZSs9MilmW2ddPXEoYltlXSksZysrO2I9Yy5idWZmZXI7Zj1mLmJ1ZmZlcn1tKGMoe3R5cGU6IlVQREFURUQiLGxlZnRDaGFubmVsOmIscmlnaHRDaGFubmVsOmYsCm51bWJlck9mU2FtcGxlczphLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczphLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzphLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSksW2IsZl0pfX07cCgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9YS5tZXNzYWdlLnBvcnRzWzBdO3AocixsKTttKGModm9pZCAwLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UUyI6bC5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkFVRElPX0xBVEVOQ1kiOmwucG9zdE1lc3NhZ2UoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK",
"AUDIO"),d=new T("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=",
"CONTROLLER"),e=new T("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"MEMORY"),f=[];[b,c,d,e].forEach((b)=>{const c=new MessageChannel,d=new Promise((d)=>{let e=0;a.postMessage({type:r.CONNECT,workerId:b.id,ports:[c.port1]},[c.port1]).then(()=>{e++;2<=e&&d()});b.postMessage({type:r.CONNECT,workerId:a.id,ports:[c.port2]},[c.port2]).then(()=>{e++;2<=e&&d()})});f.push(d)});await Promise.all(f);R.setWorker(b);J.setWorker(c);F.setWorker(d);E.setWorker(e);return a};let h={parse:function(a){let b=h.bin.readUshort,c=h.bin.readUint;var d;let e={};a=new Uint8Array(a);for(d=
a.length-4;101010256!=c(a,d);)d--;d=d+4+4;let f=b(a,d);d+=2;b(a,d);d+=2;c(a,d);d+=4;d=c(a,d);for(let g=0;g<f;g++){c(a,d);d+=4;d+=4;d+=4;d+=4;c(a,d);d+=4;let f=c(a,d);d+=4;let g=c(a,d);d+=4;let D=b(a,d),k=b(a,d+2),C=b(a,d+4);d+=6;d+=8;let u=c(a,d);d+=4;d+=D+k+C;h._readLocal(a,u,e,f,g)}return e},_readLocal:function(a,b,c,d,e){var f=h.bin.readUshort,g=h.bin.readUint;g(a,b);b+=4;f(a,b);b+=2;f(a,b);b+=2;let n=f(a,b);b+=2;g(a,b);b+=4;g(a,b);b=b+4+8;g=f(a,b);b+=2;let m=f(a,b);b+=2;f=h.bin.readUTF8(a,b,g);
b=b+g+m;a=new Uint8Array(a.buffer,b);if(0==n)c[f]=new Uint8Array(a.buffer.slice(b,b+d));else if(8==n)b=new Uint8Array(e),h.inflateRaw(a,b),c[f]=b;else throw"unknown compression method: "+n;},inflateRaw:function(a,b){return h.F.inflate(a,b)},inflate:function(a,b){return h.inflateRaw(new Uint8Array(a.buffer,a.byteOffset+2,a.length-6),b)},deflate:function(a,b){null==b&&(b={level:6});let c=0,d=new Uint8Array(50+Math.floor(1.1*a.length));d[c]=120;d[c+1]=156;c=h.F.deflateRaw(a,d,c+2,b.level);a=h.adler(a,
0,a.length);d[c+0]=a>>>24&255;d[c+1]=a>>>16&255;d[c+2]=a>>>8&255;d[c+3]=a>>>0&255;return new Uint8Array(d.buffer,0,c+4)},deflateRaw:function(a,b){null==b&&(b={level:6});let c=new Uint8Array(50+Math.floor(1.1*a.length)),d;d=h.F.deflateRaw(a,c,d,b.level);return new Uint8Array(c.buffer,0,d)},encode:function(a){var b=0;let c=h.bin.writeUint,d=h.bin.writeUshort;var e={};for(var f in a){var g=!h._noNeed(f),n=a[f];let b=h.crc.crc(n,0,n.length);e[f]={cpr:g,usize:n.length,crc:b,file:g?h.deflateRaw(n):n}}for(let a in e)b+=
e[a].file.length+30+46+2*h.bin.sizeUTF8(a);a=new Uint8Array(b+22);b=0;f=[];for(var m in e)g=e[m],f.push(b),b=h._writeHeader(a,b,m,g,0);m=0;g=b;for(let c in e)n=e[c],f.push(b),b=h._writeHeader(a,b,c,n,1,f[m++]);e=b-g;c(a,b,101010256);b=b+4+4;d(a,b,m);b+=2;d(a,b,m);b+=2;c(a,b,e);c(a,b+4,g);return a.buffer},_noNeed:function(a){a=a.split(".").pop().toLowerCase();return-1!="png,jpg,jpeg,zip".indexOf(a)},_writeHeader:function(a,b,c,d,e,f){let g=h.bin.writeUint,n=h.bin.writeUshort,m=d.file;g(a,b,0==e?67324752:
33639248);b+=4;1==e&&(b+=2);n(a,b,20);b+=2;n(a,b,0);b+=2;n(a,b,d.cpr?8:0);b+=2;g(a,b,0);b+=4;g(a,b,d.crc);b+=4;g(a,b,m.length);b+=4;g(a,b,d.usize);b+=4;n(a,b,h.bin.sizeUTF8(c));b+=2;n(a,b,0);b+=2;1==e&&(b=b+2+2+6,g(a,b,f),b+=4);c=h.bin.writeUTF8(a,b,c);b+=c;0==e&&(a.set(m,b),b+=m.length);return b}};h.crc={table:function(){let a=new Uint32Array(256);for(let b=0;256>b;b++){let c=b;for(let a=0;8>a;a++)c=c&1?3988292384^c>>>1:c>>>1;a[b]=c}return a}(),update:function(a,b,c,d){for(let e=0;e<d;e++)a=h.crc.table[(a^
b[c+e])&255]^a>>>8;return a},crc:function(a,b,c){return h.crc.update(4294967295,a,b,c)^4294967295}};h.adler=function(a,b,c){let d=1,e=0,f=b;for(b+=c;f<b;){for(c=Math.min(f+5552,b);f<c;)d+=a[f++],e+=d;d%=65521;e%=65521}return e<<16|d};h.bin={readUshort:function(a,b){return a[b]|a[b+1]<<8},writeUshort:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255},readUint:function(a,b){return 16777216*a[b+3]+(a[b+2]<<16|a[b+1]<<8|a[b])},writeUint:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255;a[b+2]=c>>16&255;a[b+3]=c>>24&
255},readASCII:function(a,b,c){let d="";for(let e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d},writeASCII:function(a,b,c){for(let d=0;d<c.length;d++)a[b+d]=c.charCodeAt(d)},pad:function(a){return 2>a.length?"0"+a:a},readUTF8:function(a,b,c){let d="",e;for(let e=0;e<c;e++)d+="%"+h.bin.pad(a[b+e].toString(16));try{e=decodeURIComponent(d)}catch(f){return h.bin.readASCII(a,b,c)}return e},writeUTF8:function(a,b,c){let d=c.length,e=0;for(let f=0;f<d;f++){let d=c.charCodeAt(f);if(0==(d&4294967168))a[b+
e]=d,e++;else if(0==(d&4294965248))a[b+e]=192|d>>6,a[b+e+1]=128|d>>0&63,e+=2;else if(0==(d&4294901760))a[b+e]=224|d>>12,a[b+e+1]=128|d>>6&63,a[b+e+2]=128|d>>0&63,e+=3;else if(0==(d&4292870144))a[b+e]=240|d>>18,a[b+e+1]=128|d>>12&63,a[b+e+2]=128|d>>6&63,a[b+e+3]=128|d>>0&63,e+=4;else throw"e";}return e},sizeUTF8:function(a){let b=a.length,c=0;for(let d=0;d<b;d++){let b=a.charCodeAt(d);if(0==(b&4294967168))c++;else if(0==(b&4294965248))c+=2;else if(0==(b&4294901760))c+=3;else if(0==(b&4292870144))c+=
4;else throw"e";}return c}};h.F={};h.F.deflateRaw=function(a,b,c,d){var e=[[0,0,0,0,0],[4,4,8,4,0],[4,5,16,8,0],[4,6,16,16,0],[4,10,16,32,0],[8,16,32,32,0],[8,16,128,128,0],[8,32,128,256,0],[32,128,258,1024,1],[32,258,258,4096,1]][d];let f=h.F.U,g=h.F._goodIndex;var n=h.F._putsE;let m=0;c<<=3;let D=0,k=a.length;if(0==d){for(;m<k;)e=Math.min(65535,k-m),n(b,c,m+e==k?1:0),c=h.F._copyExact(a,m,e,b,c+8),m+=e;return c>>>3}n=f.lits;d=f.strt;let C=f.prev,u=0,x=0,q=0,v=0;let t=0;2<k&&(t=h.F._hash(a,0),d[t]=
0);for(m=0;m<k;m++){var w=t;if(m+1<k-2){t=h.F._hash(a,m+1);var y=m+1&32767;C[y]=d[t];d[t]=y}if(D<=m){if(14E3<u||26697<x)D<m&&(n[u]=m-D,u+=2,D=m),c=h.F._writeBlock(m==k-1||D==k?1:0,n,u,v,a,q,m-q,b,c),u=x=v=0,q=m;y=0;m<k-2&&(y=h.F._bestMatch(a,m,C,w,Math.min(e[2],k-m),e[3]));if(0!=y){w=y>>>16;y&=65535;let a=g(w,f.of0);f.lhst[257+a]++;let b=g(y,f.df0);f.dhst[b]++;v+=f.exb[a]+f.dxb[b];n[u]=w<<23|m-D;n[u+1]=y<<16|a<<8|b;u+=2;D=m+w}else f.lhst[a[m]]++;x++}}if(q!=m||0==a.length)D<m&&(n[u]=m-D,u+=2),c=h.F._writeBlock(1,
n,u,v,a,q,m-q,b,c);for(;0!=(c&7);)c++;return c>>>3};h.F._bestMatch=function(a,b,c,d,e,f){var g=b&32767;let n=c[g],m=g-n+32768&32767;if(n==g||d!=h.F._hash(a,b-m))return 0;let D=d=0,k=Math.min(32767,b);for(;m<=k&&0!=--f&&n!=g;){if(0==d||a[b+d]==a[b+d-m])if(g=h.F._howLong(a,b,m),g>d){d=g;D=m;if(d>=e)break;m+2<g&&(g=m+2);let a=0;for(let d=0;d<g-2;d++){let e=b-m+d+32768&32767,f=e-c[e]+32768&32767;f>a&&(a=f,n=e)}}g=n;n=c[g];m+=g-n+32768&32767}return d<<16|D};h.F._howLong=function(a,b,c){if(a[b]!=a[b-c]||
a[b+1]!=a[b+1-c]||a[b+2]!=a[b+2-c])return 0;let d=b,e=Math.min(a.length,b+258);for(b+=3;b<e&&a[b]==a[b-c];)b++;return b-d};h.F._hash=function(a,b){return(a[b]<<8|a[b+1])+(a[b+2]<<4)&65535};h.saved=0;h.F._writeBlock=function(a,b,c,d,e,f,g,n,m){let k=h.F.U,v=h.F._putsF,C=h.F._putsE;let u,x,q,w;k.lhst[256]++;var t=h.F.getTrees();var r=t[0];u=t[1];x=t[2];q=t[3];w=t[4];var y=t[5];var z=t[6];t=t[7];var A=(0==(m+3&7)?0:8-(m+3&7))+32+(g<<3);let E=d+h.F.contSize(k.fltree,k.lhst)+h.F.contSize(k.fdtree,k.dhst);
d=d+h.F.contSize(k.ltree,k.lhst)+h.F.contSize(k.dtree,k.dhst);d+=14+3*y+h.F.contSize(k.itree,k.ihst)+(2*k.ihst[16]+3*k.ihst[17]+7*k.ihst[18]);for(var I=0;286>I;I++)k.lhst[I]=0;for(I=0;30>I;I++)k.dhst[I]=0;for(I=0;19>I;I++)k.ihst[I]=0;A=A<E&&A<d?0:E<d?1:2;v(n,m,a);v(n,m+1,A);m+=3;if(0==A){for(;0!=(m&7);)m++;m=h.F._copyExact(e,f,g,n,m)}else{let d,D;1==A&&(d=k.fltree,D=k.fdtree);if(2==A){h.F.makeCodes(k.ltree,r);h.F.revCodes(k.ltree,r);h.F.makeCodes(k.dtree,u);h.F.revCodes(k.dtree,u);h.F.makeCodes(k.itree,
x);h.F.revCodes(k.itree,x);d=k.ltree;D=k.dtree;C(n,m,q-257);m+=5;C(n,m,w-1);m+=5;C(n,m,y-4);m+=4;for(a=0;a<y;a++)C(n,m+3*a,k.itree[(k.ordr[a]<<1)+1]);m=h.F._codeTiny(z,k.itree,n,m+3*y);m=h.F._codeTiny(t,k.itree,n,m)}for(y=0;y<c;y+=2){a=b[y];z=a>>>23;for(a=f+(a&8388607);f<a;)m=h.F._writeLit(e[f++],d,n,m);0!=z&&(r=b[y+1],a=r>>16,g=r>>8&255,r&=255,m=h.F._writeLit(257+g,d,n,m),C(n,m,z-k.of0[g]),m+=k.exb[g],m=h.F._writeLit(r,D,n,m),v(n,m,a-k.df0[r]),m+=k.dxb[r],f+=z)}m=h.F._writeLit(256,d,n,m)}return m};
h.F._copyExact=function(a,b,c,d,e){let f=e>>>3;d[f]=c;d[f+1]=c>>>8;d[f+2]=255-d[f];d[f+3]=255-d[f+1];f+=4;d.set(new Uint8Array(a.buffer,b,c),f);return e+(c+4<<3)};h.F.getTrees=function(){let a=h.F.U,b=h.F._hufTree(a.lhst,a.ltree,15),c=h.F._hufTree(a.dhst,a.dtree,15),d=[],e=h.F._lenCodes(a.ltree,d),f=[],g=h.F._lenCodes(a.dtree,f);for(var n=0;n<d.length;n+=2)a.ihst[d[n]]++;for(n=0;n<f.length;n+=2)a.ihst[f[n]]++;n=h.F._hufTree(a.ihst,a.itree,7);let m=19;for(;4<m&&0==a.itree[(a.ordr[m-1]<<1)+1];)m--;
return[b,c,n,e,g,m,d,f]};h.F.getSecond=function(a){let b=[];for(let c=0;c<a.length;c+=2)b.push(a[c+1]);return b};h.F.nonZero=function(a){let b="";for(let c=0;c<a.length;c+=2)0!=a[c+1]&&(b+=(c>>1)+",");return b};h.F.contSize=function(a,b){let c=0;for(let d=0;d<b.length;d++)c+=b[d]*a[(d<<1)+1];return c};h.F._codeTiny=function(a,b,c,d){for(let e=0;e<a.length;e+=2){let f=a[e],g=a[e+1];d=h.F._writeLit(f,b,c,d);let n=16==f?2:17==f?3:7;15<f&&(h.F._putsE(c,d,g,n),d+=n)}return d};h.F._lenCodes=function(a,
b){let c=a.length;for(;2!=c&&0==a[c-1];)c-=2;for(let f=0;f<c;f+=2){var d=a[f+1],e=f+3<c?a[f+3]:-1;let g=f+5<c?a[f+5]:-1,h=0==f?-1:a[f-1];if(0==d&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,138);11>d?b.push(17,d-3):b.push(18,d-11);f+=2*d-2}else if(d==h&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,6);b.push(16,d-3);f+=2*d-2}else b.push(d,0)}return c>>>1};h.F._hufTree=function(a,b,c){var d=[],e=a.length,f=b.length,g=0;for(g=0;g<f;g+=2)b[g]=0,b[g+1]=0;for(g=
0;g<e;g++)0!=a[g]&&d.push({lit:g,f:a[g]});a=d.length;e=d.slice(0);if(0==a)return 0;if(1==a)return c=d[0].lit,d=0==c?1:0,b[(c<<1)+1]=1,b[(d<<1)+1]=1;d.sort(function(a,b){return a.f-b.f});g=d[0];f=d[1];let n=0,m=1,k=2;for(d[0]={lit:-1,f:g.f+f.f,l:g,r:f,d:0};m!=a-1;)g=n!=m&&(k==a||d[n].f<d[k].f)?d[n++]:d[k++],f=n!=m&&(k==a||d[n].f<d[k].f)?d[n++]:d[k++],d[m++]={lit:-1,f:g.f+f.f,l:g,r:f};d=h.F.setDepth(d[m-1],0);d>c&&(h.F.restrictDepth(e,c,d),d=c);for(g=0;g<a;g++)b[(e[g].lit<<1)+1]=e[g].d;return d};h.F.setDepth=
function(a,b){return-1!=a.lit?a.d=b:Math.max(h.F.setDepth(a.l,b+1),h.F.setDepth(a.r,b+1))};h.F.restrictDepth=function(a,b,c){let d=0,e=1<<c-b,f=0;a.sort(function(a,b){return b.d==a.d?a.f-b.f:b.d-a.d});for(d=0;d<a.length;d++)if(a[d].d>b){let g=a[d].d;a[d].d=b;f+=e-(1<<c-g)}else break;for(f>>>=c-b;0<f;)c=a[d].d,c<b?(a[d].d++,f-=1<<b-c-1):d++;for(;0<=d;d--)a[d].d==b&&0>f&&(a[d].d--,f++);0!=f&&console.log("debt left")};h.F._goodIndex=function(a,b){let c=0;b[c|16]<=a&&(c|=16);b[c|8]<=a&&(c|=8);b[c|4]<=
a&&(c|=4);b[c|2]<=a&&(c|=2);b[c|1]<=a&&(c|=1);return c};h.F._writeLit=function(a,b,c,d){h.F._putsF(c,d,b[a<<1]);return d+b[(a<<1)+1]};h.F.inflate=function(a,b){if(3==a[0]&&0==a[1])return b?b:new Uint8Array(0);var c=h.F;let d=c._bitsF,e=c._bitsE,f=c._decodeTiny,g=c.makeCodes,k=c.codes2map,m=c._get17;c=c.U;let v=null==b;v&&(b=new Uint8Array(a.length>>2<<3));let w=0;var C,u;let x=u=C=0;for(var q=0,r;0==w;){w=d(a,q,1);var t=d(a,q+1,2);q+=3;if(0==t)0!=(q&7)&&(q+=8-(q&7)),q=(q>>>3)+4,t=a[q-4]|a[q-3]<<8,
v&&(b=h.F._check(b,x+t)),b.set(new Uint8Array(a.buffer,a.byteOffset+q,t),x),q=q+t<<3,x+=t;else{v&&(b=h.F._check(b,x+131072));if(1==t){var z=c.flmap;r=c.fdmap;C=511;u=31}if(2==t){C=e(a,q,5)+257;u=e(a,q+5,5)+1;z=e(a,q+10,4)+4;q+=14;for(r=0;38>r;r+=2)c.itree[r]=0,c.itree[r+1]=0;t=1;for(r=0;r<z;r++){var y=e(a,q+3*r,3);c.itree[(c.ordr[r]<<1)+1]=y;y>t&&(t=y)}q+=3*z;g(c.itree,t);k(c.itree,t,c.imap);z=c.lmap;r=c.dmap;y=f(c.imap,(1<<t)-1,C,a,q,c.ltree);C=(1<<(y>>>24))-1;q+=y&16777215;g(c.ltree,y>>>24);k(c.ltree,
y>>>24,z);t=f(c.imap,(1<<t)-1,u,a,q,c.dtree);u=(1<<(t>>>24))-1;q+=t&16777215;g(c.dtree,t>>>24);k(c.dtree,t>>>24,r)}for(;;)if(t=z[m(a,q)&C],q+=t&15,y=t>>>4,0==y>>>8)b[x++]=y;else if(256==y)break;else{t=x+y-254;264<y&&(y=c.ldef[y-257],t=x+(y>>>3)+e(a,q,y&7),q+=y&7);y=r[m(a,q)&u];q+=y&15;y=c.ddef[y>>>4];let f=(y>>>4)+d(a,q,y&15);for(q+=y&15;x<t;)b[x]=b[x++-f],b[x]=b[x++-f],b[x]=b[x++-f],b[x]=b[x++-f];x=t}}}return b.length==x?b:b.slice(0,x)};h.F._check=function(a,b){let c=a.length;if(b<=c)return a;b=
new Uint8Array(c<<1);for(let d=0;d<c;d+=4)b[d]=a[d],b[d+1]=a[d+1],b[d+2]=a[d+2],b[d+3]=a[d+3];return b};h.F._decodeTiny=function(a,b,c,d,e,f){let g=e,k=h.F._bitsE,m=h.F._get17,r=c<<1,v=c=0;for(;c<r;){var w=a[m(d,e)&b];e+=w&15;var u=w>>>4;if(15>=u)f[c]=0,f[c+1]=u,u>v&&(v=u),c+=2;else{let a=w=0;16==u?(a=3+k(d,e,2)<<1,e+=2,w=f[c-1]):17==u?(a=3+k(d,e,3)<<1,e+=3):18==u&&(a=11+k(d,e,7)<<1,e+=7);for(u=c+a;c<u;)f[c]=0,f[c+1]=w,c+=2}}for(a=f.length;c<a;)f[c+1]=0,c+=2;return v<<24|e-g};h.F.makeCodes=function(a,
b){var c=h.F.U;let d=a.length;var e;let f;var g=c.bl_count;for(e=0;e<=b;e++)g[e]=0;for(e=1;e<d;e+=2)g[a[e]]++;c=c.next_code;e=0;g[0]=0;for(f=1;f<=b;f++)e=e+g[f-1]<<1,c[f]=e;for(b=0;b<d;b+=2)g=a[b+1],0!=g&&(a[b]=c[g],c[g]++)};h.F.codes2map=function(a,b,c){let d=a.length,e=h.F.U.rev15;for(let h=0;h<d;h+=2)if(0!=a[h+1]){var f=a[h+1];let d=h>>1<<4|f;var g=b-f;f=a[h]<<g;for(g=f+(1<<g);f!=g;)c[e[f]>>>15-b]=d,f++}};h.F.revCodes=function(a,b){let c=h.F.U.rev15,d=15-b;for(let e=0;e<a.length;e+=2)a[e]=c[a[e]<<
b-a[e+1]]>>>d};h.F._putsE=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8};h.F._putsF=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8;a[b+2]|=c>>>16};h.F._bitsE=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8)>>>(b&7)&(1<<c)-1};h.F._bitsF=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)&(1<<c)-1};h.F._get17=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)};h.F._get25=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16|a[(b>>>3)+
3]<<24)>>>(b&7)};h.F.U={next_code:new Uint16Array(16),bl_count:new Uint16Array(16),ordr:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],of0:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],exb:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],ldef:new Uint16Array(32),df0:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],dxb:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,
6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],ddef:new Uint32Array(32),flmap:new Uint16Array(512),fltree:[],fdmap:new Uint16Array(32),fdtree:[],lmap:new Uint16Array(32768),ltree:[],dmap:new Uint16Array(32768),dtree:[],imap:new Uint16Array(512),itree:[],rev15:new Uint16Array(32768),lhst:new Uint32Array(286),dhst:new Uint32Array(30),ihst:new Uint32Array(19),lits:new Uint32Array(15E3),strt:new Uint16Array(65536),prev:new Uint16Array(32768)};(function(){let a=h.F.U;for(var b=0;32768>b;b++){let c=b;c=(c&
2863311530)>>>1|(c&1431655765)<<1;c=(c&3435973836)>>>2|(c&858993459)<<2;c=(c&4042322160)>>>4|(c&252645135)<<4;c=(c&4278255360)>>>8|(c&16711935)<<8;a.rev15[b]=(c>>>16|c<<16)>>>17}for(b=0;32>b;b++)a.ldef[b]=a.of0[b]<<3|a.exb[b],a.ddef[b]=a.df0[b]<<4|a.dxb[b];for(b=0;143>=b;b++)a.fltree.push(0,8);for(;255>=b;b++)a.fltree.push(0,9);for(;279>=b;b++)a.fltree.push(0,7);for(;287>=b;b++)a.fltree.push(0,8);h.F.makeCodes(a.fltree,9);h.F.codes2map(a.fltree,9,a.flmap);h.F.revCodes(a.fltree,9);for(b=0;32>b;b++)a.fdtree.push(0,
5);h.F.makeCodes(a.fdtree,5);h.F.codes2map(a.fdtree,5,a.fdmap);h.F.revCodes(a.fdtree,5);for(b=0;19>b;b++)a.itree.push(0,0);for(b=0;286>b;b++)a.ltree.push(0,0);for(b=0;30>b;b++)a.dtree.push(0,0)})();const Ca=(a,b)=>(async()=>{if(ArrayBuffer.isView(a)&&a.constructor===Uint8Array)return a;if("object"===typeof a&&a.size){var c=await La(a);return a.name.toLowerCase().endsWith(".zip")?await ra(c):c}c={};b&&b.headers&&(c.headers=b.headers);var d=await fetch(a,c).then((a)=>a.ok?a.arrayBuffer():Promise.reject(a));
c=a;b&&b.fileName&&(c=b.fileName);d=new Uint8Array(d);return c.toLowerCase().endsWith(".zip")?await ra(d):d})(),La=async(a)=>await new Promise((b,c)=>{const d=new FileReader;d.onload=()=>{const a=new Uint8Array(d.result);b(a)};d.readAsArrayBuffer(a)}),ra=async(a)=>{const b=await h.parse(a);let c=!1;Object.keys(b).some((a)=>{const d=a.toLowerCase();return d.includes(".gb")||d.includes(".gbc")?(c=b[a],!0):!1});if(!c)throw Error("Could not find a ROM in zip...");return c};var Ma=X(function(a){(function(){if("undefined"!==
typeof performance&&null!==performance&&performance.now)a.exports=function(){return performance.now()};else if("undefined"!==typeof process&&null!==process&&process.hrtime){a.exports=function(){return(c()-f)/1E6};var b=process.hrtime;var c=function(){var a=b();return 1E9*a[0]+a[1]};var d=c();var e=1E9*process.uptime();var f=d-e}else if(Date.now){a.exports=function(){return Date.now()-g};var g=Date.now()}else a.exports=function(){return(new Date).getTime()-g},g=(new Date).getTime()}).call(oa)}),K=
"undefined"===typeof window?oa:window;H=["moz","webkit"];var N=K.requestAnimationFrame,U=K.cancelAnimationFrame||K.cancelRequestAnimationFrame;for(L=0;!N&&L<H.length;L++)N=K[H[L]+"RequestAnimationFrame"],U=K[H[L]+"CancelAnimationFrame"]||K[H[L]+"CancelRequestAnimationFrame"];if(!N||!U){var ia=0,sa=0,P=[],Na=1E3/60;N=function(a){if(0===P.length){var b=Ma(),c=Math.max(0,Na-(b-ia));ia=c+b;setTimeout(function(){for(var a=P.slice(0),b=P.length=0;b<a.length;b++)if(!a[b].cancelled)try{a[b].callback(ia)}catch(f){setTimeout(function(){throw f;
},0)}},Math.round(c))}P.push({handle:++sa,callback:a,cancelled:!1});return sa};U=function(a){for(var b=0;b<P.length;b++)P[b].handle===a&&(P[b].cancelled=!0)}}var O=function(a){return N.call(K,a)};O.cancel=function(){U.apply(K,arguments)};O.polyfill=function(a){a||(a=K);a.requestAnimationFrame=N;a.cancelAnimationFrame=U};var ta=X(function(a){var b=function(a){function c(a,b){if("undefined"===typeof a)return c[0];if("undefined"!==typeof b){if(10===+b)a=B(a);else{var l=a.length,d,e=Math.abs(b);for(d=
0;d<l;d++){var p=a[d].toLowerCase();if("-"!==p&&/[a-z0-9]/.test(p)){if(/[0-9]/.test(p)&&+p>=e){if("1"===p&&1===e)continue;throw Error(p+" is not a valid digit in base "+b+".");}if(p.charCodeAt(0)-87>=e)throw Error(p+" is not a valid digit in base "+b+".");}}if(2<=b&&36>=b&&l<=da/Math.log(b)){d=parseInt(a,b);if(isNaN(d))throw Error(p+" is not a valid digit in base "+b+".");a=new f(parseInt(a,b))}else{b=B(b);l=[];for(d=(e="-"===a[0])?1:0;d<a.length;d++){p=a[d].toLowerCase();var g=p.charCodeAt(0);if(48<=
g&&57>=g)l.push(B(p));else if(97<=g&&122>=g)l.push(B(p.charCodeAt(0)-87));else if("<"===p){p=d;do d++;while(">"!==a[d]);l.push(B(a.slice(p+1,d)))}else throw Error(p+" is not a valid character");}a=X(l,b,e)}}return a}return B(a)}function e(a,b){this.value=a;this.sign=b;this.isSmall=!1}function f(a){this.value=a;this.sign=0>a;this.isSmall=!0}function g(a){return-9007199254740992<a&&9007199254740992>a}function h(a){return 1E7>a?[a]:1E14>a?[a%1E7,Math.floor(a/1E7)]:[a%1E7,Math.floor(a/1E7)%1E7,Math.floor(a/
1E14)]}function k(a){r(a);var b=a.length;if(4>b&&0>H(a,W))switch(b){case 0:return 0;case 1:return a[0];case 2:return a[0]+1E7*a[1];default:return a[0]+1E7*(a[1]+1E7*a[2])}return a}function r(a){for(var b=a.length;0===a[--b];);a.length=b+1}function v(a){for(var b=Array(a),c=-1;++c<a;)b[c]=0;return b}function w(a){return 0<a?Math.floor(a):Math.ceil(a)}function u(a,b){var c=a.length,l=b.length,d=Array(c),e=0,p;for(p=0;p<l;p++){var f=a[p]+b[p]+e;e=1E7<=f?1:0;d[p]=f-1E7*e}for(;p<c;)f=a[p]+e,e=1E7===f?
1:0,d[p++]=f-1E7*e;0<e&&d.push(e);return d}function x(a,b){return a.length>=b.length?u(a,b):u(b,a)}function q(a,b){var c=a.length,l=Array(c),d;for(d=0;d<c;d++){var e=a[d]-1E7+b;b=Math.floor(e/1E7);l[d]=e-1E7*b;b+=1}for(;0<b;)l[d++]=b%1E7,b=Math.floor(b/1E7);return l}function z(a,b){var c=a.length,l=b.length,d=Array(c),e=0,p;for(p=0;p<l;p++){var f=a[p]-e-b[p];0>f?(f+=1E7,e=1):e=0;d[p]=f}for(p=l;p<c;p++){f=a[p]-e;if(0>f)f+=1E7;else{d[p++]=f;break}d[p]=f}for(;p<c;p++)d[p]=a[p];r(d);return d}function t(a,
b,c){var l=a.length,d=Array(l);b=-b;var p;for(p=0;p<l;p++){var ea=a[p]+b;b=Math.floor(ea/1E7);ea%=1E7;d[p]=0>ea?ea+1E7:ea}d=k(d);return"number"===typeof d?(c&&(d=-d),new f(d)):new e(d,c)}function A(a,b){var c=a.length,d=b.length,l=v(c+d),e;for(e=0;e<c;++e){var p=a[e];for(var f=0;f<d;++f){var g=b[f];g=p*g+l[e+f];var h=Math.floor(g/1E7);l[e+f]=g-1E7*h;l[e+f+1]+=h}}r(l);return l}function y(a,b){var c=a.length,d=Array(c),l=0,e;for(e=0;e<c;e++){var p=a[e]*b+l;l=Math.floor(p/1E7);d[e]=p-1E7*l}for(;0<l;)d[e++]=
l%1E7,l=Math.floor(l/1E7);return d}function E(a,b){for(var c=[];0<b--;)c.push(0);return c.concat(a)}function F(a,b){var c=Math.max(a.length,b.length);if(30>=c)return A(a,b);c=Math.ceil(c/2);var d=a.slice(c);a=a.slice(0,c);var l=b.slice(c),e=b.slice(0,c);b=F(a,e);var p=F(d,l);d=F(x(a,d),x(e,l));c=x(x(b,E(z(z(d,b),p),c)),E(p,2*c));r(c);return c}function J(a,b,c){return 1E7>a?new e(y(b,a),c):new e(A(b,h(a)),c)}function I(a){var b=a.length,c=v(b+b),d;for(d=0;d<b;d++){var l=a[d];var e=-(l*l);for(var f=
d;f<b;f++){var g=a[f];g=2*l*g+c[d+f]+e;e=Math.floor(g/1E7);c[d+f]=g-1E7*e}c[d+b]=e}r(c);return c}function K(a,b){var c=a.length,d=v(c);var l=0;for(--c;0<=c;--c){l=1E7*l+a[c];var e=w(l/b);l-=e*b;d[c]=e|0}return[d,l|0]}function G(a,b){b=B(b);var d=a.value;var l=b.value;if(0===l)throw Error("Cannot divide by zero");if(a.isSmall)return b.isSmall?[new f(w(d/l)),new f(d%l)]:[c[0],a];if(b.isSmall){if(1===l)return[a,c[0]];if(-1==l)return[a.negate(),c[0]];l=Math.abs(l);if(1E7>l)return l=K(d,l),d=k(l[0]),l=
l[1],a.sign&&(l=-l),"number"===typeof d?(a.sign!==b.sign&&(d=-d),[new f(d),new f(l)]):[new e(d,a.sign!==b.sign),new f(l)];l=h(l)}var p=H(d,l);if(-1===p)return[c[0],a];if(0===p)return[c[a.sign===b.sign?1:-1],c[0]];if(200>=d.length+l.length){var g=l,m=d.length;l=g.length;p=v(g.length);var n=g[l-1],t=Math.ceil(1E7/(2*n));d=y(d,t);g=y(g,t);var q,u,x;d.length<=m&&d.push(0);g.push(0);n=g[l-1];for(q=m-l;0<=q;q--){m=9999999;d[q+l]!==n&&(m=Math.floor((1E7*d[q+l]+d[q+l-1])/n));var A=u=0;var C=g.length;for(x=
0;x<C;x++){u+=m*g[x];var D=Math.floor(u/1E7);A+=d[q+x]-(u-1E7*D);u=D;0>A?(d[q+x]=A+1E7,A=-1):(d[q+x]=A,A=0)}for(;0!==A;){--m;for(x=u=0;x<C;x++)u+=d[q+x]-1E7+g[x],0>u?(d[q+x]=u+1E7,u=0):(d[q+x]=u,u=1);A+=u}p[q]=m}d=K(d,t)[0];l=[k(p),k(d)]}else{p=d.length;n=l.length;t=[];for(g=[];p;)if(g.unshift(d[--p]),r(g),0>H(g,l))t.push(0);else{m=g.length;q=1E7*g[m-1]+g[m-2];u=1E7*l[n-1]+l[n-2];m>n&&(q=1E7*(q+1));m=Math.ceil(q/u);do{q=y(l,m);if(0>=H(q,g))break;m--}while(m);t.push(m);g=z(g,q)}t.reverse();l=[k(t),
k(g)]}d=l[0];b=a.sign!==b.sign;l=l[1];a=a.sign;"number"===typeof d?(b&&(d=-d),d=new f(d)):d=new e(d,b);"number"===typeof l?(a&&(l=-l),l=new f(l)):l=new e(l,a);return[d,l]}function H(a,b){if(a.length!==b.length)return a.length>b.length?1:-1;for(var c=a.length-1;0<=c;c--)if(a[c]!==b[c])return a[c]>b[c]?1:-1;return 0}function L(a){a=a.abs();if(a.isUnit())return!1;if(a.equals(2)||a.equals(3)||a.equals(5))return!0;if(a.isEven()||a.isDivisibleBy(3)||a.isDivisibleBy(5))return!1;if(a.lesser(49))return!0}
function M(a,d){for(var l=a.prev(),e=l,f=0,p,g,h;e.isEven();)e=e.divide(2),f++;g=0;a:for(;g<d.length;g++)if(!a.lesser(d[g])&&(h=b(d[g]).modPow(e,a),!h.equals(c[1])&&!h.equals(l))){for(p=f-1;0!=p;p--){h=h.square().mod(a);if(h.isUnit())break;if(h.equals(l))continue a}return!1}return!0}function P(a){return("number"===typeof a||"string"===typeof a)&&1E7>=+Math.abs(a)||a instanceof e&&1>=a.value.length}function O(a,c,d){c=B(c);var l=a.isNegative(),e=c.isNegative();a=l?a.not():a;var f=e?c.not():c;for(c=
[];!a.isZero()||!f.isZero();){a=G(a,aa);var p=a[1].toJSNumber();l&&(p=aa-1-p);f=G(f,aa);var g=f[1].toJSNumber();e&&(g=aa-1-g);a=a[0];f=f[0];c.push(d(p,g))}d=0!==d(l?1:0,e?1:0)?b(-1):b(0);for(l=c.length-1;0<=l;--l)d=d.multiply(aa).add(b(c[l]));return d}function N(a){a=a.value;a="number"===typeof a?a|1073741824:a[0]+1E7*a[1]|1073758208;return a&-a}function S(a,c){if(0>=c.compareTo(a)){var d=S(a,c.square(c)),l=d.p;d=d.e;c=l.multiply(c);return 0>=c.compareTo(a)?{p:c,e:2*d+1}:{p:l,e:2*d}}return{p:b(1),
e:0}}function T(a,b){a=B(a);b=B(b);return a.greater(b)?a:b}function U(a,b){a=B(a);b=B(b);return a.lesser(b)?a:b}function V(a,b){a=B(a).abs();b=B(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var d=c[1],e;a.isEven()&&b.isEven();)e=Math.min(N(a),N(b)),a=a.divide(e),b=b.divide(e),d=d.multiply(e);for(;a.isEven();)a=a.divide(N(a));do{for(;b.isEven();)b=b.divide(N(b));a.greater(b)&&(e=b,b=a,a=e);b=b.subtract(a)}while(!b.isZero());return d.isUnit()?a:a.multiply(d)}function X(a,
b,d){var e=c[0],l=c[1],f;for(f=a.length-1;0<=f;f--)e=e.add(a[f].times(l)),l=l.times(b);return d?e.negate():e}function ca(a){return 35>=a?"0123456789abcdefghijklmnopqrstuvwxyz".charAt(a):"<"+a+">"}function R(a,c){c=b(c);if(c.isZero()){if(a.isZero())return{value:[0],isNegative:!1};throw Error("Cannot convert nonzero numbers to base 0.");}if(c.equals(-1)){if(a.isZero())return{value:[0],isNegative:!1};if(a.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-a)).map(Array.prototype.valueOf,
[1,0])),isNegative:!1};c=Array.apply(null,Array(+a-1)).map(Array.prototype.valueOf,[0,1]);c.unshift([1]);return{value:[].concat.apply([],c),isNegative:!1}}var d=!1;a.isNegative()&&c.isPositive()&&(d=!0,a=a.abs());if(c.equals(1))return a.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+a)).map(Number.prototype.valueOf,1),isNegative:d};for(var e=[],l;a.isNegative()||0<=a.compareAbs(c);)l=a.divmod(c),a=l.quotient,l=l.remainder,l.isNegative()&&(l=c.minus(l).abs(),a=a.next()),e.push(l.toJSNumber());
e.push(a.toJSNumber());return{value:e.reverse(),isNegative:d}}function Y(a,b){a=R(a,b);return(a.isNegative?"-":"")+a.value.map(ca).join("")}function Z(a){if(g(+a)){var b=+a;if(b===w(b))return new f(b);throw Error("Invalid integer: "+a);}(b="-"===a[0])&&(a=a.slice(1));var c=a.split(/e/i);if(2<c.length)throw Error("Invalid integer: "+c.join("e"));if(2===c.length){a=c[1];"+"===a[0]&&(a=a.slice(1));a=+a;if(a!==w(a)||!g(a))throw Error("Invalid integer: "+a+" is not a valid exponent.");c=c[0];var d=c.indexOf(".");
0<=d&&(a-=c.length-d-1,c=c.slice(0,d)+c.slice(d+1));if(0>a)throw Error("Cannot include negative exponent part for integers");a=c+=Array(a+1).join("0")}if(!/^([0-9][0-9]*)$/.test(a))throw Error("Invalid integer: "+a);c=[];d=a.length;for(var l=d-7;0<d;)c.push(+a.slice(l,d)),l-=7,0>l&&(l=0),d-=7;r(c);return new e(c,b)}function B(a){if("number"===typeof a){if(g(a)){if(a!==w(a))throw Error(a+" is not an integer.");a=new f(a)}else a=Z(a.toString());return a}return"string"===typeof a?Z(a):a}var W=h(9007199254740992),
da=Math.log(9007199254740992);e.prototype=Object.create(c.prototype);f.prototype=Object.create(c.prototype);e.prototype.add=function(a){a=B(a);if(this.sign!==a.sign)return this.subtract(a.negate());var b=this.value,c=a.value;return a.isSmall?new e(q(b,Math.abs(c)),this.sign):new e(x(b,c),this.sign)};e.prototype.plus=e.prototype.add;f.prototype.add=function(a){a=B(a);var b=this.value;if(0>b!==a.sign)return this.subtract(a.negate());var c=a.value;if(a.isSmall){if(g(b+c))return new f(b+c);c=h(Math.abs(c))}return new e(q(c,
Math.abs(b)),0>b)};f.prototype.plus=f.prototype.add;e.prototype.subtract=function(a){var b=B(a);if(this.sign!==b.sign)return this.add(b.negate());a=this.value;var c=b.value;if(b.isSmall)return t(a,Math.abs(c),this.sign);b=this.sign;0<=H(a,c)?a=z(a,c):(a=z(c,a),b=!b);a=k(a);"number"===typeof a?(b&&(a=-a),a=new f(a)):a=new e(a,b);return a};e.prototype.minus=e.prototype.subtract;f.prototype.subtract=function(a){a=B(a);var b=this.value;if(0>b!==a.sign)return this.add(a.negate());var c=a.value;return a.isSmall?
new f(b-c):t(c,Math.abs(b),0<=b)};f.prototype.minus=f.prototype.subtract;e.prototype.negate=function(){return new e(this.value,!this.sign)};f.prototype.negate=function(){var a=this.sign,b=new f(-this.value);b.sign=!a;return b};e.prototype.abs=function(){return new e(this.value,!1)};f.prototype.abs=function(){return new f(Math.abs(this.value))};e.prototype.multiply=function(a){var b=B(a);a=this.value;var d=b.value,l=this.sign!==b.sign;if(b.isSmall){if(0===d)return c[0];if(1===d)return this;if(-1===
d)return this.negate();d=Math.abs(d);if(1E7>d)return new e(y(a,d),l);d=h(d)}b=a.length;var f=d.length;return 0<-.012*b-.012*f+1.5E-5*b*f?new e(F(a,d),l):new e(A(a,d),l)};e.prototype.times=e.prototype.multiply;f.prototype._multiplyBySmall=function(a){return g(a.value*this.value)?new f(a.value*this.value):J(Math.abs(a.value),h(Math.abs(this.value)),this.sign!==a.sign)};e.prototype._multiplyBySmall=function(a){return 0===a.value?c[0]:1===a.value?this:-1===a.value?this.negate():J(Math.abs(a.value),this.value,
this.sign!==a.sign)};f.prototype.multiply=function(a){return B(a)._multiplyBySmall(this)};f.prototype.times=f.prototype.multiply;e.prototype.square=function(){return new e(I(this.value),!1)};f.prototype.square=function(){var a=this.value*this.value;return g(a)?new f(a):new e(I(h(Math.abs(this.value))),!1)};e.prototype.divmod=function(a){a=G(this,a);return{quotient:a[0],remainder:a[1]}};f.prototype.divmod=e.prototype.divmod;e.prototype.divide=function(a){return G(this,a)[0]};f.prototype.over=f.prototype.divide=
e.prototype.over=e.prototype.divide;e.prototype.mod=function(a){return G(this,a)[1]};f.prototype.remainder=f.prototype.mod=e.prototype.remainder=e.prototype.mod;e.prototype.pow=function(a){var b=B(a),d=this.value;a=b.value;var e;if(0===a)return c[1];if(0===d)return c[0];if(1===d)return c[1];if(-1===d)return b.isEven()?c[1]:c[-1];if(b.sign)return c[0];if(!b.isSmall)throw Error("The exponent "+b.toString()+" is too large.");if(this.isSmall&&g(e=Math.pow(d,a)))return new f(w(e));e=this;for(b=c[1];;){a&
1&&(b=b.times(e),--a);if(0===a)break;a/=2;e=e.square()}return b};f.prototype.pow=e.prototype.pow;e.prototype.modPow=function(a,b){a=B(a);b=B(b);if(b.isZero())throw Error("Cannot take modPow with modulus 0");for(var d=c[1],e=this.mod(b);a.isPositive();){if(e.isZero())return c[0];a.isOdd()&&(d=d.multiply(e).mod(b));a=a.divide(2);e=e.square().mod(b)}return d};f.prototype.modPow=e.prototype.modPow;e.prototype.compareAbs=function(a){a=B(a);return a.isSmall?1:H(this.value,a.value)};f.prototype.compareAbs=
function(a){a=B(a);var b=Math.abs(this.value),c=a.value;return a.isSmall?(c=Math.abs(c),b===c?0:b>c?1:-1):-1};e.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=B(a);return this.sign!==a.sign?a.sign?1:-1:a.isSmall?this.sign?-1:1:H(this.value,a.value)*(this.sign?-1:1)};e.prototype.compareTo=e.prototype.compare;f.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=B(a);var b=this.value,c=a.value;return a.isSmall?b==c?0:b>c?1:-1:0>b!==
a.sign?0>b?-1:1:0>b?1:-1};f.prototype.compareTo=f.prototype.compare;e.prototype.equals=function(a){return 0===this.compare(a)};f.prototype.eq=f.prototype.equals=e.prototype.eq=e.prototype.equals;e.prototype.notEquals=function(a){return 0!==this.compare(a)};f.prototype.neq=f.prototype.notEquals=e.prototype.neq=e.prototype.notEquals;e.prototype.greater=function(a){return 0<this.compare(a)};f.prototype.gt=f.prototype.greater=e.prototype.gt=e.prototype.greater;e.prototype.lesser=function(a){return 0>
this.compare(a)};f.prototype.lt=f.prototype.lesser=e.prototype.lt=e.prototype.lesser;e.prototype.greaterOrEquals=function(a){return 0<=this.compare(a)};f.prototype.geq=f.prototype.greaterOrEquals=e.prototype.geq=e.prototype.greaterOrEquals;e.prototype.lesserOrEquals=function(a){return 0>=this.compare(a)};f.prototype.leq=f.prototype.lesserOrEquals=e.prototype.leq=e.prototype.lesserOrEquals;e.prototype.isEven=function(){return 0===(this.value[0]&1)};f.prototype.isEven=function(){return 0===(this.value&
1)};e.prototype.isOdd=function(){return 1===(this.value[0]&1)};f.prototype.isOdd=function(){return 1===(this.value&1)};e.prototype.isPositive=function(){return!this.sign};f.prototype.isPositive=function(){return 0<this.value};e.prototype.isNegative=function(){return this.sign};f.prototype.isNegative=function(){return 0>this.value};e.prototype.isUnit=function(){return!1};f.prototype.isUnit=function(){return 1===Math.abs(this.value)};e.prototype.isZero=function(){return!1};f.prototype.isZero=function(){return 0===
this.value};e.prototype.isDivisibleBy=function(a){a=B(a);var b=a.value;return 0===b?!1:1===b?!0:2===b?this.isEven():this.mod(a).equals(c[0])};f.prototype.isDivisibleBy=e.prototype.isDivisibleBy;e.prototype.isPrime=function(c){var d=L(this);if(d!==a)return d;d=this.abs();var e=d.bitLength();if(64>=e)return M(d,[2,325,9375,28178,450775,9780504,1795265022]);e*=Math.log(2);c=Math.ceil(!0===c?2*Math.pow(e,2):e);e=[];for(var f=0;f<c;f++)e.push(b(f+2));return M(d,e)};f.prototype.isPrime=e.prototype.isPrime;
e.prototype.isProbablePrime=function(c){var d=L(this);if(d!==a)return d;d=this.abs();c=c===a?5:c;for(var e=[],f=0;f<c;f++)e.push(b.randBetween(2,d.minus(2)));return M(d,e)};f.prototype.isProbablePrime=e.prototype.isProbablePrime;e.prototype.modInv=function(a){for(var c=b.zero,d=b.one,e=B(a),f=this.abs(),l,g,h;!f.equals(b.zero);)l=e.divide(f),g=c,h=e,c=d,e=f,d=g.subtract(l.multiply(d)),f=h.subtract(l.multiply(f));if(!e.equals(1))throw Error(this.toString()+" and "+a.toString()+" are not co-prime");
-1===c.compare(0)&&(c=c.add(a));return this.isNegative()?c.negate():c};f.prototype.modInv=e.prototype.modInv;e.prototype.next=function(){var a=this.value;return this.sign?t(a,1,this.sign):new e(q(a,1),this.sign)};f.prototype.next=function(){var a=this.value;return 9007199254740992>a+1?new f(a+1):new e(W,!1)};e.prototype.prev=function(){var a=this.value;return this.sign?new e(q(a,1),!0):t(a,1,this.sign)};f.prototype.prev=function(){var a=this.value;return-9007199254740992<a-1?new f(a-1):new e(W,!0)};
for(var Q=[1];1E7>=2*Q[Q.length-1];)Q.push(2*Q[Q.length-1]);var fa=Q.length,aa=Q[fa-1];e.prototype.shiftLeft=function(a){if(!P(a))throw Error(String(a)+" is too large for shifting.");a=+a;if(0>a)return this.shiftRight(-a);var b=this;if(b.isZero())return b;for(;a>=fa;)b=b.multiply(aa),a-=fa-1;return b.multiply(Q[a])};f.prototype.shiftLeft=e.prototype.shiftLeft;e.prototype.shiftRight=function(a){var b;if(!P(a))throw Error(String(a)+" is too large for shifting.");a=+a;if(0>a)return this.shiftLeft(-a);
for(b=this;a>=fa;){if(b.isZero()||b.isNegative()&&b.isUnit())return b;b=G(b,aa);b=b[1].isNegative()?b[0].prev():b[0];a-=fa-1}b=G(b,Q[a]);return b[1].isNegative()?b[0].prev():b[0]};f.prototype.shiftRight=e.prototype.shiftRight;e.prototype.not=function(){return this.negate().prev()};f.prototype.not=e.prototype.not;e.prototype.and=function(a){return O(this,a,function(a,b){return a&b})};f.prototype.and=e.prototype.and;e.prototype.or=function(a){return O(this,a,function(a,b){return a|b})};f.prototype.or=
e.prototype.or;e.prototype.xor=function(a){return O(this,a,function(a,b){return a^b})};f.prototype.xor=e.prototype.xor;e.prototype.bitLength=function(){var a=this;0>a.compareTo(b(0))&&(a=a.negate().subtract(b(1)));return 0===a.compareTo(b(0))?b(0):b(S(a,b(2)).e).add(b(1))};f.prototype.bitLength=e.prototype.bitLength;e.prototype.toArray=function(a){return R(this,a)};f.prototype.toArray=function(a){return R(this,a)};e.prototype.toString=function(b){b===a&&(b=10);if(10!==b)return Y(this,b);b=this.value;
for(var c=b.length,d=String(b[--c]),e;0<=--c;)e=String(b[c]),d+="0000000".slice(e.length)+e;return(this.sign?"-":"")+d};f.prototype.toString=function(b){b===a&&(b=10);return 10!=b?Y(this,b):String(this.value)};e.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()};e.prototype.valueOf=function(){return parseInt(this.toString(),10)};e.prototype.toJSNumber=e.prototype.valueOf;f.prototype.valueOf=function(){return this.value};f.prototype.toJSNumber=f.prototype.valueOf;for(var ba=0;1E3>
ba;ba++)c[ba]=new f(ba),0<ba&&(c[-ba]=new f(-ba));c.one=c[1];c.zero=c[0];c.minusOne=c[-1];c.max=T;c.min=U;c.gcd=V;c.lcm=function(a,b){a=B(a).abs();b=B(b).abs();return a.divide(V(a,b)).multiply(b)};c.isInstance=function(a){return a instanceof e||a instanceof f};c.randBetween=function(a,b){a=B(a);b=B(b);var c=U(a,b);a=T(a,b).subtract(c).add(1);if(a.isSmall)return c.add(Math.floor(Math.random()*a));b=[];for(var d=!0,g=a.value.length-1;0<=g;g--){var h=d?a.value[g]:1E7,l=w(Math.random()*h);b.unshift(l);
l<h&&(d=!1)}b=k(b);return c.add("number"===typeof b?new f(b):new e(b,!1))};c.fromArray=function(a,b,c){return X(a.map(B),B(b||10),c)};return c}();a.hasOwnProperty("exports")&&(a.exports=b)});const G=async(a,b)=>{if(v.worker)return a=await v.worker.postMessage({type:r.RUN_WASM_EXPORT,export:a,parameters:b}),A(a).message.response},na=async(a,b)=>{if(v.worker)return a=await v.worker.postMessage({type:r.GET_WASM_MEMORY_SECTION,start:a,end:b}),a=A(a),new Uint8Array(a.message.response)},ma=async(a)=>{if(v.worker)return a=
await v.worker.postMessage({type:r.GET_WASM_CONSTANT,constant:a}),A(a).message.response};class Oa{constructor(){this.canvasElement=this.coreType=this.worker=void 0;this.loadedROM=this.renderId=this.loadedAndStarted=this.ready=this.paused=!1;this.fps=0;this._resetConfig();"undefined"!==typeof window&&window.document.addEventListener("visibilitychange",()=>{"hidden"!==document.visibilityState||this.options&&this.options.disablePauseOnHidden||this.pause()})}config(a,b){return(async()=>{await this.pause();
await this.setCanvas(b);!a&&this.options||this._resetConfig();if(a&&(Object.keys(a).forEach((b)=>{void 0!==this.options[b]&&(this.options[b]=a[b])}),a.gameboySpeed)){let b=Math.floor(60*a.gameboySpeed);0>=b&&(b=1);this.options.gameboyFrameRate=b}})()}getConfig(){return this.options}setCanvas(a){return a?(async()=>{await this.pause();this.canvasElement=a;this.wasmInstance&&this.wasmByteMemory&&await R.initialize(this.canvasElement,this.wasmInstance,this.wasmByteMemory,this.options.updateGraphicsCallback)})():
Promise.resolve()}getCanvas(){return this.canvasElement}loadROM(a,b){return Ba.bind(this)(a,b)}play(){return(async()=>{if(this.ready){if(!this.loadedAndStarted&&(this.loadedAndStarted=!0,this.options.onLoadedAndStarted))this.options.onLoadedAndStarted();if(this.options.onPlay)this.options.onPlay();this.options.headless||(J.resumeAudioContext(),J.resetTimeStretch());await this.worker.postMessage({type:r.RESET_AUDIO_QUEUE});this.paused=!1;this.updateId||await this.worker.postMessage({type:r.PLAY});
this.renderId||this.options.headless||(this.renderId=O(()=>{la.call(this)}))}})()}pause(){return(async()=>{this.paused=!0;if(this.ready&&this.options.onPause)this.options.onPause();O.cancel(this.renderId);this.renderId=!1;this.options.headless||J.cancelAllAudio(!0);this.worker&&await this.worker.postMessage({type:r.PAUSE});await new Promise((a)=>{O(()=>{a()})})})()}reset(a){return(async()=>{this.config(a,this.canvasElement);if(this.loadedROM)return this.loadROM(this.loadedROM)})()}saveState(){return(async()=>
{await this.pause();return await E.saveState()})()}getSaveStates(){return(async()=>{let a=await E.getCartridgeObject();return a?a.saveStates:[]})()}loadState(a){return(async()=>{await this.pause();await E.loadState(a)})()}getFPS(){return this.fps}getCoreType(){return this.coreType}_resetConfig(){this.fpsTimeStamps=[];this.frameSkipCounter=0;this.options={headless:!1,disablePauseOnHidden:!1,isAudioEnabled:!0,gameboyFrameRate:60,frameSkip:0,includeBootROM:!1,isGbcEnabled:!0,audioBatchProcessing:!1,
graphicsBatchProcessing:!1,timersBatchProcessing:!1,graphicsDisableScanlineRendering:!1,audioAccumulateSamples:!1,tileRendering:!1,tileCaching:!1,updateGraphicsCallback:null,updateAudioCallback:null,saveStateCallback:null,onReady:null,onPlay:null,onPause:null,onLoadedAndStarted:null}}_instantiateWorkers(){return(async()=>{this.worker||(this.worker=await Ka(),this.worker.addMessageListener(Da.bind(this)))})()}}const v=new Oa;H={config:v.config.bind(v),getCoreType:v.getCoreType.bind(v),getConfig:v.getConfig.bind(v),
setCanvas:v.setCanvas.bind(v),getCanvas:v.getCanvas.bind(v),loadROM:v.loadROM.bind(v),play:v.play.bind(v),pause:v.pause.bind(v),reset:v.reset.bind(v),isPlaying:()=>!v.paused,isPaused:()=>v.paused,isReady:()=>v.ready,isLoadedAndStarted:()=>v.loadedAndStarted,getVersion:()=>"0.3.2",saveState:v.saveState.bind(v),getSaveStates:v.getSaveStates.bind(v),loadState:v.loadState.bind(v),getFPS:v.getFPS.bind(v),enableDefaultJoypad:F.enableDefaultJoypad.bind(F),disableDefaultJoypad:F.disableDefaultJoypad.bind(F),
setJoypadState:F.setJoypadState.bind(F),addTouchInput:F.addTouchInput.bind(F),removeTouchInput:F.removeTouchInput.bind(F),resumeAudioContext:J.resumeAudioContext.bind(J),_getCartridgeInfo:E.getCartridgeInfo.bind(E),_saveCurrentAudioBufferToWav:()=>{if(J.audioBuffer){var a=J.audioBuffer;var b={};var c=a.numberOfChannels,d=a.sampleRate;b=b.float32?3:1;var e=3===b?32:16;if(2===c){var f=a.getChannelData(0);a=a.getChannelData(1);for(var g=f.length+a.length,h=new Float32Array(g),k=0,r=0;k<g;)h[k++]=f[r],
h[k++]=a[r],r++;f=h}else f=a.getChannelData(0);h=e/8;k=c*h;a=new ArrayBuffer(44+f.length*h);g=new DataView(a);Y(g,0,"RIFF");g.setUint32(4,36+f.length*h,!0);Y(g,8,"WAVE");Y(g,12,"fmt ");g.setUint32(16,16,!0);g.setUint16(20,b,!0);g.setUint16(22,c,!0);g.setUint32(24,d,!0);g.setUint32(28,d*k,!0);g.setUint16(32,k,!0);g.setUint16(34,e,!0);Y(g,36,"data");g.setUint32(40,f.length*h,!0);if(1===b)for(c=44,d=0;d<f.length;d++,c+=2)b=Math.max(-1,Math.min(1,f[d])),g.setInt16(c,0>b?32768*b:32767*b,!0);else for(c=
44,d=0;d<f.length;d++,c+=4)g.setFloat32(c,f[d],!0);c=new window.Blob([new DataView(a)],{type:"audio/wav"});c=window.URL.createObjectURL(c);d=document.createElement("a");document.body.appendChild(d);d.style="display: none";d.href=c;d.download="audio.wav";d.click();window.URL.revokeObjectURL(c)}},_runWasmExport:G,_getWasmMemorySection:na,_getWasmConstant:ma,_getStepsAsString:async(a)=>{var b=await G("getStepsPerStepSet");const c=await G("getStepSets"),d=await G("getSteps");b=ta(b).multiply(c).add(d);
return a?b.toString(a):b.toString(10)},_getCyclesAsString:async(a)=>{var b=await G("getCyclesPerCycleSet");const c=await G("getCycleSets"),d=await G("getCycles");b=ta(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)}};V.WasmBoy=H;Object.defineProperty(V,"__esModule",{value:!0})});
//# sourceMappingURL=wasmboy.wasm.umd.js.map
