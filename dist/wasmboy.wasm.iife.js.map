{"version":3,"file":"wasmboy.wasm.iife.js","sources":["../lib/worker/util.js","../lib/memory/state.js","../lib/memory/autosave.js","../node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","../lib/worker/smartworker.js","../lib/wasmboy/loadrom.js","../lib/wasmboy/render.js","../node_modules/audiobuffer-to-wav/dist/index.esm.js","../lib/wasmboy/onmessage.js","../lib/worker/constants.js","../lib/graphics/graphics.js","../lib/graphics/constants.js","../lib/audio/audio.js","../node_modules/idb/lib/idb.js","../node_modules/idb/lib/node.js","../lib/memory/idb.js","../lib/memory/memory.js","../lib/controller/controller.js","../lib/worker/instantiate.js","worker/wasmboy.wasm.worker.js","worker/graphics.worker.js","worker/audio.worker.js","worker/controller.worker.js","worker/memory.worker.js","../lib/3p/UZIP.js","../lib/wasmboy/fetchrom.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/raf/index.js","../node_modules/big-integer/BigInteger.js","../lib/debug/debug.js","../lib/wasmboy/wasmboy.js","../lib/index.js"],"sourcesContent":["export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n//  Will save the state in parts, to easy memory map changes:\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_SAVE_STATE_SCHEMA = {\n  wasmboyMemory: {\n    wasmBoyInternalState: [],\n    wasmBoyPaletteMemory: [],\n    gameBoyMemory: [],\n    cartridgeRam: []\n  },\n  date: undefined,\n  isAuto: undefined\n};\n\n// Function to return a save state of the current memory\nexport function getSaveState() {\n  // Save our internal wasmboy state to memory\n  // Should be done whenever we send back memory\n  // this.wasmInstance.exports.saveState();\n\n  let saveState = Object.assign({}, WASMBOY_SAVE_STATE_SCHEMA);\n\n  saveState.wasmboyMemory.wasmBoyInternalState = this.internalState;\n  saveState.wasmboyMemory.wasmBoyPaletteMemory = this.paletteMemory;\n  saveState.wasmboyMemory.gameBoyMemory = this.gameboyMemory;\n  saveState.wasmboyMemory.cartridgeRam = this.cartridgeRam;\n  saveState.date = Date.now();\n  saveState.isAuto = false;\n\n  if (this.saveStateCallback) {\n    this.saveStateCallback(saveState);\n  }\n\n  return saveState;\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Need to add a return value, and force all code in the block to be sync\n// https://stackoverflow.com/questions/7255649/window-onbeforeunload-not-working\n// http://vaughnroyko.com/idbonbeforeunload/\n// https://bugzilla.mozilla.org/show_bug.cgi?id=870645\n\n// Solution:\n// ~~Try to force sync: https://www.npmjs.com/package/deasync~~ Didn't work, requires fs\n// Save to local storage, and pick it back up in init: https://bugs.chromium.org/p/chromium/issues/detail?id=144862\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\n\n// Function to create a save state, and store it as a localstorage token\nfunction _prepareAndStoreAutoSave() {\n  // Check if the game is currently playing\n  if (!this.internalState) {\n    return null;\n  }\n\n  // Get our cartridge ram and header\n  // Use this.cartridgeHeader and this.cartridgeRam\n  //const header = getCartridgeHeader.bind(this)();\n  //const cartridgeRam = getCartridgeRam.bind(this)();\n\n  // Get our save state, and un type our arrays\n  const saveState = getSaveState.bind(this)();\n  const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n  for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n    saveState.wasmboyMemory[saveStateMemoryKeys[i]] = Array.prototype.slice.call(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n  }\n\n  // Set isAuto\n  saveState.isAuto = true;\n\n  // Need to conert types arrays, and back, or selse wll get indexed JSON\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n\n  localStorage.setItem(\n    this.WASMBOY_UNLOAD_STORAGE,\n    JSON.stringify({\n      header: Array.prototype.slice.call(this.cartridgeHeader),\n      cartridgeRam: Array.prototype.slice.call(this.cartridgeRam),\n      saveState: saveState\n    })\n  );\n\n  return null;\n}\n\n// Function to find any autosaves in localstorage, and commit them to our idb\nfunction _findAndCommitAutoSave() {\n  const findAndCommitAutoSaveTask = async () => {\n    // Load any unloaded storage in our localStorage\n    const unloadStorage = localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);\n    if (unloadStorage) {\n      const unloadStorageObject = JSON.parse(unloadStorage);\n      localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);\n\n      const header = new Uint8Array(unloadStorageObject.header);\n      const cartridgeRam = new Uint8Array(unloadStorageObject.cartridgeRam);\n\n      // Get our save state, and re-type our array\n      const saveState = unloadStorageObject.saveState;\n      if (saveState) {\n        const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n        for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n          saveState.wasmboyMemory[saveStateMemoryKeys[i]] = new Uint8Array(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n        }\n      }\n\n      await this.saveCartridgeRam(header, cartridgeRam);\n      await this.saveState(header, saveState);\n    }\n  };\n\n  return findAndCommitAutoSaveTask();\n}\n\n// Function to set event listeners to run our unload handler\nexport function initializeAutoSave() {\n  // Set listeners to ensure we save our cartridge ram before closing\n  window.addEventListener(\n    'beforeunload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'unload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'pagehide',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  // Mobile Page visibility, for pressing home, closing tabs, task switcher, etc...\n  // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n  document.addEventListener('visibilitychange', () => {\n    // fires when user switches tabs, apps, goes to homescreen, etc.\n    // NOTE: This will not create a new save state in desktop browser,\n    // Because the localstorage string is only picked up on refresh :)\n    // Unless you force kill the browser or something, which is what we want\n    // Anyways\n    if (document.visibilityState === 'hidden') {\n      _prepareAndStoreAutoSave.bind(this)();\n    }\n  });\n\n  // Restore any autosave lingering to be committed\n  return _findAndCommitAutoSave.bind(this)();\n}\n","// Define a keyboard key schema\nvar keyInputSchema = {\n  ID: undefined,\n  ACTIVE: false,\n  KEY_CODE: undefined\n\n  // Define a gamepad button schema\n  // https://w3c.github.io/gamepad/#remapping\n};var gamepadInputSchema = {\n  ID: undefined,\n  ACTIVE: false,\n  BUTTON_ID: undefined,\n  JOYSTICK: {\n    AXIS_ID: undefined,\n    IS_POSITIVE: undefined\n  }\n};\n\nvar touchInputSchema = {\n  ID: undefined,\n  ACTIVE: false,\n  ELEMENT: undefined,\n  TYPE: undefined,\n  DIRECTION: undefined,\n  EVENT_HANDLER: undefined,\n  BOUNDING_RECT: undefined\n\n  // Define our finaly kerboard schema here\n};var keyMapSchema = {\n  UP: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  RIGHT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  DOWN: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  LEFT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  A: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  B: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  SELECT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  START: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  }\n\n  // Function to return an ID for our input\n  // https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id\n};function getInputId() {\n\n  var idGenerator = function idGenerator() {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  };\n\n  var stringId = \"\" + idGenerator() + idGenerator();\n  return stringId.slice();\n}\n\nfunction getKeyInput(keyCode) {\n  var input = Object.assign({}, keyInputSchema);\n  input.ID = getInputId();\n  input.KEY_CODE = keyCode;\n  return input;\n}\n\nfunction getGamepadInput(gamepadButtonId, axisId, axisIsPositive) {\n  var input = Object.assign({}, gamepadInputSchema);\n  input.ID = getInputId();\n  input.JOYSTICK = Object.assign({}, gamepadInputSchema.JOYSTICK);\n  if (gamepadButtonId || gamepadButtonId === 0) {\n    input.BUTTON_ID = gamepadButtonId;\n  } else if (axisId !== undefined && axisIsPositive !== undefined) {\n    input.JOYSTICK.AXIS_ID = axisId;\n    input.JOYSTICK.IS_POSITIVE = axisIsPositive;\n  }\n  return input;\n}\n\nfunction getTouchInput(element, type, direction, eventHandler) {\n  var input = Object.assign({}, touchInputSchema);\n\n  input.ID = getInputId();\n\n  // TODO: Check the type for a valid type\n\n  // Add our passed parameters\n  input.ELEMENT = element;\n  input.TYPE = type;\n  input.DIRECTION = direction;\n  input.EVENT_HANDLER = eventHandler;\n\n  // Add our bounding rect\n  var boundingRect = input.ELEMENT.getBoundingClientRect();\n  input.BOUNDING_RECT = boundingRect;\n\n  // Define our eventListener functions\n  var eventListenerCallback = function eventListenerCallback(event) {\n    if (input.EVENT_HANDLER) {\n      input.EVENT_HANDLER(event);\n    }\n  };\n\n  // Add event listeners to the element\n  input.ELEMENT.addEventListener(\"touchstart\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"touchmove\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"touchend\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"mousedown\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"mouseup\", eventListenerCallback);\n\n  return input;\n}\n\nfunction KeyMapSchema() {\n  return Object.assign({}, keyMapSchema);\n}\n\nvar Key = {\n\n  BACKSPACE: 8,\n  TAB: 9,\n  RETURN: 13,\n  SHIFT: 16,\n  CTRL: 17,\n  ALT: 18,\n  ESCAPE: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n\n  W: 87,\n  A: 65,\n  S: 83,\n  D: 68,\n  Q: 81,\n  E: 69,\n  X: 88,\n  Z: 90,\n\n  SEMI_COLON: 186,\n  SINGLE_QUOTE: 222,\n  BACK_SLASH: 220,\n\n  NUMPAD_0: 96,\n  NUMPAD_1: 97,\n  NUMPAD_2: 98,\n  NUMPAD_3: 99,\n  NUMPAD_4: 100,\n  NUMPAD_5: 101,\n  NUMPAD_6: 102,\n  NUMPAD_7: 103,\n  NUMPAD_8: 104,\n  NUMPAD_9: 105\n};\n\nvar keymap = KeyMapSchema();\n\n// Up\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.ARROW_UP));\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.W));\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.NUMPAD_8));\nkeymap.UP.GAMEPAD.push(getGamepadInput(12));\nkeymap.UP.GAMEPAD.push(getGamepadInput(false, 1, false));\nkeymap.UP.GAMEPAD.push(getGamepadInput(false, 3, false));\n\n// Right\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.ARROW_RIGHT));\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.D));\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.NUMPAD_6));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(15));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(false, 0, true));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(false, 2, true));\n\n// Down\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.ARROW_DOWN));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.S));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.NUMPAD_5));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.NUMPAD_2));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(13));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(false, 1, true));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(false, 3, true));\n\n// Left\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.ARROW_LEFT));\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.A));\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.NUMPAD_4));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(14));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(false, 0, false));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(false, 2, false));\n\n// A\nkeymap.A.KEYBOARD.push(getKeyInput(Key.X));\nkeymap.A.KEYBOARD.push(getKeyInput(Key.SEMI_COLON));\nkeymap.A.KEYBOARD.push(getKeyInput(Key.NUMPAD_7));\nkeymap.A.GAMEPAD.push(getGamepadInput(0));\nkeymap.A.GAMEPAD.push(getGamepadInput(1));\n\n// B\nkeymap.B.KEYBOARD.push(getKeyInput(Key.Z));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.ESCAPE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.SINGLE_QUOTE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.BACKSPACE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.NUMPAD_9));\nkeymap.B.GAMEPAD.push(getGamepadInput(2));\nkeymap.B.GAMEPAD.push(getGamepadInput(3));\n\n// Start\nkeymap.START.KEYBOARD.push(getKeyInput(Key.RETURN));\nkeymap.START.KEYBOARD.push(getKeyInput(Key.SPACE));\nkeymap.START.KEYBOARD.push(getKeyInput(Key.NUMPAD_3));\nkeymap.START.GAMEPAD.push(getGamepadInput(9));\n\n// Select\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.SHIFT));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.TAB));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.BACK_SLASH));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.NUMPAD_1));\nkeymap.SELECT.GAMEPAD.push(getGamepadInput(8));\n\nvar KEYMAP = function KEYMAP() {\n  return JSON.parse(JSON.stringify(keymap));\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n// HTML Tags that can be focused on, where the library should be disabled\n// https://www.w3schools.com/tags/ref_byfunc.asp\nvar INPUT_HTML_TAGS = ['input', 'textarea', 'button', 'select', 'option', 'optgroup', 'label', 'datalist'];\n\n// Helpers for accessing gamepad\n// Similar to: https://github.com/torch2424/picoDeploy/blob/master/src/assets/3pLibs/pico8gamepad/pico8gamepad.js\nfunction getAnalogStickAxis(gamepad, axisId) {\n  return gamepad.axes[axisId] || 0.0;\n}\n\nfunction isButtonPressed(gamepad, buttonId) {\n  return gamepad.buttons[buttonId] ? gamepad.buttons[buttonId].pressed : false;\n}\n\nvar ResponsiveGamepadService = function () {\n  function ResponsiveGamepadService() {\n    classCallCheck(this, ResponsiveGamepadService);\n\n    // Our settings\n    this.gamepadAnalogStickDeadZone = 0.25;\n    this.keyMapKeys = Object.keys(KeyMapSchema());\n    this.keyMap = KEYMAP();\n    this.enabled = false;\n    this.addedEventListeners = false;\n  }\n\n  createClass(ResponsiveGamepadService, [{\n    key: 'enable',\n    value: function enable(keyMap) {\n\n      // TODO: Verify it is a valid keymap passed\n      if (keyMap) {\n        this.keyMap = keyMap;\n      }\n\n      // Add our key event listeners\n      // Wrapping in this for preact prerender\n      if (!this.addedEventListeners && typeof window !== \"undefined\") {\n        window.addEventListener('keyup', this.updateKeyboard.bind(this));\n        window.addEventListener('keydown', this.updateKeyboard.bind(this));\n        // Add a resize listen to update the gamepad rect on resize\n        window.addEventListener(\"resize\", this.updateTouchpadRect.bind(this));\n\n        this.addedEventListeners = true;\n      }\n\n      this.enabled = true;\n    }\n\n    // Disable responsive gamepad, and remove all the listeners\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.keyMap = undefined;\n\n      this.enabled = false;\n    }\n  }, {\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: 'addTouchInput',\n    value: function addTouchInput(keyMapKey, element, type, direction) {\n      var _this = this;\n\n      // Declare our touch input\n      // TODO: May have to add the event handler after getting the input\n      var touchInput = void 0;\n      touchInput = getTouchInput(element, type, direction, function (event) {\n        _this.updateTouchpad(keyMapKey, touchInput, event);\n      });\n\n      // Add the input to our keymap\n      this.keyMap[keyMapKey].TOUCHPAD.push(touchInput);\n\n      // Return the touchInput ID so that is may be removed later\n      return touchInput.ID;\n    }\n  }, {\n    key: 'removeTouchInput',\n    value: function removeTouchInput(keyMapKey, touchInputId) {\n      // Search for the input in our touch pad for every key\n      var touchInputIndex = undefined;\n\n      this.keyMap[keyMapKey].TOUCHPAD.some(function (input, index) {\n        if (input.ID === touchInputId) {\n          touchInputIndex = index;\n          return true;\n        }\n\n        return false;\n      });\n\n      // If we found the key and index, remove the touch input\n      if (touchInputIndex !== undefined) {\n        this.keyMap[keyMapKey].TOUCHPAD.splice(touchInputIndex, 1);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'getState',\n    value: function getState() {\n      var _this2 = this;\n\n      if (!this.enabled) {\n        return {};\n      }\n\n      // Keyboard handled by listeners on window\n\n      // Update the gamepad state\n      this.updateGamepad();\n\n      // Touch Handled by listeners on touchInputs\n\n      // Create an abstracted controller state\n      var controllerState = {};\n\n      // Loop through our Keys, and quickly build our controller state\n      this.keyMapKeys.forEach(function (key) {\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var keyboardState = _this2.keyMap[key].KEYBOARD.some(function (keyInput) {\n          return keyInput.ACTIVE;\n        });\n\n        if (keyboardState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var gamepadState = _this2.keyMap[key].GAMEPAD.some(function (gamepadInput) {\n          return gamepadInput.ACTIVE;\n        });\n\n        if (gamepadState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var touchState = _this2.keyMap[key].TOUCHPAD.some(function (touchInput) {\n          return touchInput.ACTIVE;\n        });\n\n        if (touchState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        controllerState[key] = false;\n      });\n\n      // Return the controller state in case we need something from it\n      return controllerState;\n    }\n\n    // Function to return if we are ignoring input for key events\n\n  }, {\n    key: 'isIgnoringKeyEvents',\n    value: function isIgnoringKeyEvents() {\n\n      // Checking for window for preact prerender\n      if (typeof window === \"undefined\") {\n        return true;\n      }\n\n      return INPUT_HTML_TAGS.some(function (htmlTag) {\n        if (document.activeElement && document.activeElement.tagName.toLowerCase() === htmlTag.toLowerCase()) {\n          return true;\n        }\n        return false;\n      });\n    }\n\n    // Function to handle keyboard update events\n\n  }, {\n    key: 'updateKeyboard',\n    value: function updateKeyboard(keyEvent) {\n      var _this3 = this;\n\n      if (!this.enabled) {\n        return;\n      }\n\n      // Checking for window for preact prerender\n      if (typeof window === \"undefined\") {\n        return;\n      }\n\n      // Ignore the event if focus on a input-table field\n      // https://www.w3schools.com/tags/ref_byfunc.asp\n      if (keyEvent && keyEvent.target && keyEvent.target.tagName) {\n        var isTargetInputField = INPUT_HTML_TAGS.some(function (htmlTag) {\n          if (keyEvent && keyEvent.target.tagName.toLowerCase() === htmlTag.toLowerCase()) {\n            return true;\n          }\n          return false;\n        });\n\n        if (isTargetInputField) {\n          return;\n        }\n      }\n\n      // Get the new state of the key\n      var isPressed = false;\n      if (keyEvent.type === 'keydown') {\n        isPressed = true;\n      }\n\n      // Loop through our keys\n      this.keyMapKeys.forEach(function (key) {\n        _this3.keyMap[key].KEYBOARD.forEach(function (keyInput, index) {\n          if (keyInput.KEY_CODE === keyEvent.keyCode) {\n            _this3.keyMap[key].KEYBOARD[index].ACTIVE = isPressed;\n          }\n        });\n      });\n\n      // If we found a key, prevent default so page wont scroll and things\n      keyEvent.preventDefault();\n    }\n\n    // Function to check the gamepad API for the gamepad state\n\n  }, {\n    key: 'updateGamepad',\n    value: function updateGamepad() {\n      var _this4 = this;\n\n      // Similar to: https://github.com/torch2424/picoDeploy/blob/master/src/assets/3pLibs/pico8gamepad/pico8gamepad.js\n      // Gampad Diagram: https://www.html5rocks.com/en/tutorials/doodles/gamepad/#toc-gamepadinfo\n      var gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n\n      var _loop = function _loop(i) {\n\n        // Get our current gamepad\n        var gamepad = gamepads[i];\n\n        if (!gamepad) {\n          return 'continue';\n        }\n\n        // Loop through our keys\n        _this4.keyMapKeys.forEach(function (key) {\n          _this4.keyMap[key].GAMEPAD.forEach(function (gamepadInput, index) {\n\n            // Check if we are a gamepad button\n            if (_this4.keyMap[key].GAMEPAD[index].BUTTON_ID || _this4.keyMap[key].GAMEPAD[index].BUTTON_ID === 0) {\n              _this4.keyMap[key].GAMEPAD[index].ACTIVE = isButtonPressed(gamepad, _this4.keyMap[key].GAMEPAD[index].BUTTON_ID);\n            }\n\n            // Check if we are an axis\n            if (_this4.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID !== undefined && _this4.keyMap[key].GAMEPAD[index].JOYSTICK.IS_POSITIVE !== undefined) {\n              if (_this4.keyMap[key].GAMEPAD[index].JOYSTICK.IS_POSITIVE) {\n                _this4.keyMap[key].GAMEPAD[index].ACTIVE = getAnalogStickAxis(gamepad, _this4.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID) > +_this4.gamepadAnalogStickDeadZone;\n              } else {\n                _this4.keyMap[key].GAMEPAD[index].ACTIVE = getAnalogStickAxis(gamepad, _this4.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID) < -_this4.gamepadAnalogStickDeadZone;\n              }\n            }\n          });\n        });\n      };\n\n      for (var i = 0; i < gamepads.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === 'continue') continue;\n      }\n    }\n\n    // Function to update button position and size\n\n  }, {\n    key: 'updateTouchpadRect',\n    value: function updateTouchpadRect() {\n      var _this5 = this;\n\n      // Read from the DOM, and get each of our elements position, doing this here, as it is best to read from the dom in sequence\n      // use element.getBoundingRect() top, bottom, left, right to get clientX and clientY in touch events :)\n      // https://stackoverflow.com/questions/442404/retrieve-the-position-x-y-of-an-html-element\n      //console.log(\"GamepadComponent: Updating Rect()...\");\n      this.keyMapKeys.forEach(function (key) {\n        _this5.keyMap[key].TOUCHPAD.forEach(function (touchInput, index) {\n          var boundingRect = _this5.keyMap[key].TOUCHPAD[index].ELEMENT.getBoundingClientRect();\n          _this5.keyMap[key].TOUCHPAD[index].BOUNDING_RECT = boundingRect;\n        });\n      });\n    }\n\n    // Reset all Diretion keys for a DPAD for touch Inputs\n\n  }, {\n    key: 'resetTouchDpad',\n    value: function resetTouchDpad() {\n      var _this6 = this;\n\n      var dpadKeys = ['UP', 'RIGHT', 'DOWN', 'LEFT'];\n\n      dpadKeys.forEach(function (dpadKey) {\n        _this6.keyMap[dpadKey].TOUCHPAD.forEach(function (touchInput) {\n          touchInput.ACTIVE = false;\n        });\n      });\n    }\n\n    // Function called on an event of a touchInput SVG Element\n\n  }, {\n    key: 'updateTouchpad',\n    value: function updateTouchpad(keyMapKey, touchInput, event) {\n\n      if (!this.enabled) {\n        return;\n      }\n\n      if (!event || event.type.includes('touch') && !event.touches) return;\n\n      //event.stopPropagation();\n      event.preventDefault();\n\n      //this.debugCurrentTouch(event);\n\n      // Check for active event types\n      if (event.type === \"touchstart\" || event.type === \"touchmove\" || event.type === \"mousedown\") {\n        // Active\n\n        if (touchInput.TYPE === 'DPAD') {\n\n          // Calculate for the correct key\n          // Only using the first touch, since we shouldn't be having two fingers on the dpad\n          var touch = void 0;\n          if (event.type.includes('touch')) {\n            touch = event.touches[0];\n          } else if (event.type.includes('mouse')) {\n            touch = event;\n          }\n\n          // Find if the horizontal or vertical influence is greater\n          // Find our centers of our rectangles, and our unbiased X Y values on the rect\n          var rectCenterX = (touchInput.BOUNDING_RECT.right - touchInput.BOUNDING_RECT.left) / 2;\n          var rectCenterY = (touchInput.BOUNDING_RECT.bottom - touchInput.BOUNDING_RECT.top) / 2;\n          var touchX = touch.clientX - touchInput.BOUNDING_RECT.left;\n          var touchY = touch.clientY - touchInput.BOUNDING_RECT.top;\n\n          // Lesson From: picoDeploy\n          // Fix for shoot button causing the character to move right on multi touch error\n          // + 50 for some buffer\n          if (touchX > rectCenterX + touchInput.BOUNDING_RECT.width / 2 + 50) {\n            // Ignore the event\n            return;\n          }\n\n          // Create an additonal influece for horizontal, to make it feel better\n          var horizontalInfluence = touchInput.BOUNDING_RECT.width / 8;\n\n          // Determine if we are horizontal or vertical\n          var isHorizontal = Math.abs(rectCenterX - touchX) + horizontalInfluence > Math.abs(rectCenterY - touchY);\n\n          // Find if left or right from width, vice versa for height\n          if (isHorizontal) {\n            // Add a horizontal dead zone\n            var deadzoneSize = touchInput.BOUNDING_RECT.width / 20;\n            if (Math.abs(touchInput.BOUNDING_RECT.width / 2 - touchX) > deadzoneSize) {\n\n              var isLeft = touchX < touchInput.BOUNDING_RECT.width / 2;\n\n              if (isLeft && touchInput.DIRECTION === 'LEFT') {\n                touchInput.ACTIVE = true;\n              } else if (!isLeft && touchInput.DIRECTION === 'RIGHT') {\n                touchInput.ACTIVE = true;\n              } else {\n                touchInput.ACTIVE = false;\n              }\n            }\n          } else {\n            var isUp = touchY < touchInput.BOUNDING_RECT.height / 2;\n            if (isUp && touchInput.DIRECTION === 'UP') {\n              touchInput.ACTIVE = true;\n            } else if (!isUp && touchInput.DIRECTION === 'DOWN') {\n              touchInput.ACTIVE = true;\n            } else {\n              touchInput.ACTIVE = false;\n            }\n          }\n        }\n\n        // Button Type\n        if (touchInput.TYPE === 'BUTTON') {\n          touchInput.ACTIVE = true;\n        }\n      } else {\n        // Not active\n\n        // Handle Dpad Type\n        if (touchInput.TYPE === 'DPAD') {\n          this.resetTouchDpad();\n        }\n\n        // Button Type\n        if (touchInput.TYPE === 'BUTTON') {\n          touchInput.ACTIVE = false;\n        }\n      }\n    }\n  }]);\n  return ResponsiveGamepadService;\n}();\n\n// Exports\n\n\nvar ResponsiveGamepad = new ResponsiveGamepadService();\n\nexport { ResponsiveGamepad, KEYMAP as KEYMAP_DEFAULT, KEYMAP as KEYMAP_GAMEBOY };\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise(resolve => {\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Fetch our rom\nimport { fetchROMAsByteArray } from './fetchrom';\n\n// Get our worker message types\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\n\n// Finish request for wasm module, and fetch game\n// NOTE: **Should bind the wasmboy this here**\nexport function loadROMToWasmBoy(ROM, fetchHeaders) {\n  // Getting started with wasm\n  // http://webassembly.org/getting-started/js-api/\n  this.ready = false;\n  this.loadedAndStarted = false;\n\n  const initializeTask = async () => {\n    // Get our promises\n    const initPromises = [fetchROMAsByteArray(ROM, fetchHeaders), this._instantiateWorkers()];\n\n    if (!this.options.headless && WasmBoyMemory.getLoadedCartridgeMemoryState().RAM) {\n      initPromises.push(WasmBoyMemory.saveCartridgeRam());\n    }\n\n    let ROMAsByteArray;\n    await Promise.all(initPromises).then(responses => {\n      ROMAsByteArray = responses[0];\n    });\n\n    // Now tell the wasm module to instantiate wasm\n    const response = await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.INSTANTIATE_WASM\n    });\n\n    this.coreType = response.message.type;\n\n    return ROMAsByteArray;\n  };\n\n  const loadROMAndConfigTask = async ROM => {\n    // Clear what is currently in memory, then load the cartridge memory\n    await WasmBoyMemory.clearMemory();\n\n    // TODO: Handle passing a boot rom\n    await WasmBoyMemory.loadCartridgeRom(ROM);\n\n    // Save the game that we loaded if we need to reload the game\n    this.loadedROM = ROM;\n\n    // Run our initialization on the core\n    await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.CONFIG,\n      config: [\n        0, // TODO: Include Boot Rom\n        this.options.isGbcEnabled ? 1 : 0,\n        this.options.audioBatchProcessing ? 1 : 0,\n        this.options.graphicsBatchProcessing ? 1 : 0,\n        this.options.timersBatchProcessing ? 1 : 0,\n        this.options.graphicsDisableScanlineRendering ? 1 : 0,\n        this.options.audioAccumulateSamples ? 1 : 0,\n        this.options.tileRendering ? 1 : 0,\n        this.options.tileCaching ? 1 : 0\n      ],\n      options: {\n        gameboyFrameRate: this.options.gameboyFrameRate,\n        headless: this.options.headless,\n        isAudioEnabled: this.options.isAudioEnabled,\n        frameSkip: this.options.frameSkip\n      }\n    });\n  };\n\n  const loadROMTask = async () => {\n    // Pause wasmBoy\n    await this.pause();\n\n    // Initialize any needed parts of wasmboy\n    let ROM = await initializeTask();\n\n    // Check if we are running headless\n    if (this.options.headless) {\n      await WasmBoyMemory.initialize(this.options.headless, this.options.saveStateCallback);\n\n      await loadROMAndConfigTask(ROM);\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    } else {\n      // Finally intialize all of our services\n      // Initialize our services\n      await Promise.all([\n        WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback),\n        WasmBoyAudio.initialize(this.options.updateAudioCallback),\n        WasmBoyController.initialize(),\n        WasmBoyMemory.initialize(this.options.headless, this.options.saveStateCallback)\n      ]);\n\n      await loadROMAndConfigTask(ROM);\n\n      // Load the game's cartridge ram\n      await WasmBoyMemory.loadCartridgeRam();\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    }\n  };\n\n  return loadROMTask();\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Imports\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\n\n// Function to render our emulator output\nexport function render() {\n  // Don't run if paused\n  if (this.paused) {\n    return true;\n  }\n\n  // Check if we have frameskip\n  let shouldSkipRenderingFrame = false;\n  if (this.frameSkip && this.frameSkip > 0) {\n    this.frameSkipCounter++;\n\n    if (this.frameSkipCounter < this.frameSkip) {\n      shouldSkipRenderingFrame = true;\n    } else {\n      this.frameSkipCounter = 0;\n    }\n  }\n\n  // Render the display\n  if (!shouldSkipRenderingFrame) {\n    WasmBoyGraphics.renderFrame();\n  }\n\n  // Update our controller\n  WasmBoyController.updateController();\n\n  this.renderId = raf(() => {\n    render.call(this);\n  });\n}\n","function index(buffer, opt) {\n  opt = opt || {};\n\n  var numChannels = buffer.numberOfChannels;\n  var sampleRate = buffer.sampleRate;\n  var format = opt.float32 ? 3 : 1;\n  var bitDepth = format === 3 ? 32 : 16;\n\n  var result;\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n  } else {\n    result = buffer.getChannelData(0);\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8;\n  var blockAlign = numChannels * bytesPerSample;\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n  var view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, format, true);\n  /* channel count */\n  view.setUint16(22, numChannels, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true);\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true);\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples);\n  } else {\n    writeFloat32(view, 44, samples);\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length;\n  var result = new Float32Array(length);\n\n  var index = 0;\n  var inputIndex = 0;\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true);\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nexport default index;\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { runWasmExport, getWasmMemorySection, getWasmConstant } from '../debug/debug';\n\n// Functions to handle the lib worker messages\nexport function libWorkerOnMessage(event) {\n  const eventData = getEventData(event);\n\n  if (!eventData.message) {\n    return;\n  }\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.UPDATED: {\n      this.fps = eventData.message.fps;\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.CRASHED: {\n      const crashedTask = async () => {\n        await this.pause();\n\n        console.log('Wasmboy Crashed!');\n\n        let programCounter = await runWasmExport('getProgramCounter');\n        let gameboyMemoryConstant = await getWasmConstant('GAMEBOY_INTERNAL_MEMORY_LOCATION');\n        let opcode = await getWasmMemorySection(gameboyMemoryConstant + programCounter, gameboyMemoryConstant + programCounter + 1);\n\n        console.log(`Program Counter: 0x${programCounter.toString(16)}`);\n        console.log(`Opcode: 0x${opcode[0].toString(16)}`);\n      };\n      crashedTask();\n      return;\n    }\n\n    default: {\n      // Do nothing. This catches all messages so yeah\n    }\n  }\n}\n","export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","import { GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT } from './constants';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Performance tips with canvas:\n// https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n\nclass WasmBoyGraphicsService {\n  constructor() {\n    this.worker = undefined;\n    this.updateGraphicsCallback = undefined;\n\n    this.frameQueue = undefined;\n    this.frameQueueRenderPromise = undefined;\n\n    this.canvasElement = undefined;\n    this.canvasContext = undefined;\n    this.canvasImageData = undefined;\n    this.imageDataArray = undefined;\n    this.imageDataArrayChanged = false;\n  }\n\n  initialize(canvasElement, updateGraphicsCallback) {\n    this.updateGraphicsCallback = updateGraphicsCallback;\n\n    // Initialiuze our cached wasm constants\n    // WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = this.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf();\n\n    // Reset our frame queue and render promises\n    this.frameQueue = [];\n\n    const initializeTask = async () => {\n      // Prepare our canvas\n      this.canvasElement = canvasElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n      this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;\n      this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;\n      this.canvasImageData = this.canvasContext.createImageData(GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n\n      // Add some css for smooth 8-bit canvas scaling\n      // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n      // https://caniuse.com/#feat=css-crisp-edges\n      this.canvasElement.style = `\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      `;\n\n      // Fill the canvas with a blank screen\n      // using client width since we are not requiring a width and height oin the canvas\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n      // TODO: Mention respopnsive canvas scaling in the docs\n      this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n      // Finally make sure we set our constants for our worker\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n        });\n      }\n    };\n\n    return initializeTask();\n  }\n\n  // Function to set our worker\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          this.imageDataArray = new Uint8ClampedArray(eventData.message.imageDataArrayBuffer);\n          this.imageDataArrayChanged = true;\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to render a frame\n  // Will add the frame to the frame queue to be rendered\n  // Returns the promise from this.drawFrameQueue\n  // Which resolves once all frames are rendered\n  renderFrame() {\n    // Check if we have new graphics to show\n    if (!this.imageDataArrayChanged) {\n      return;\n    }\n    this.imageDataArrayChanged = false;\n\n    // Check for a callback for accessing image data\n    if (this.updateGraphicsCallback) {\n      this.updateGraphicsCallback(this.imageDataArray);\n    }\n\n    // Add our new imageData\n    for (let i = 0; i < this.imageDataArray.length; i++) {\n      this.canvasImageData.data[i] = this.imageDataArray[i];\n    }\n\n    this.canvasContext.clearRect(0, 0, GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n    this.canvasContext.putImageData(this.canvasImageData, 0, 0);\n  }\n}\n\nexport const WasmBoyGraphics = new WasmBoyGraphicsService();\n","// Some shared constants by the graphics lib and worker\n\nexport const GAMEBOY_CAMERA_WIDTH = 160;\nexport const GAMEBOY_CAMERA_HEIGHT = 144;\n","// Tons of help from:\n// https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html\n// https://github.com/binji/binjgb/blob/master/demo/demo.js\n// Web Audio API is tricky!\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Define our performance constants\n// Both of these make it sound off\n// Latency controls how much delay audio has, larger = more delay, goal is to be as small as possible\n// Time remaining controls how far ahead we can be., larger = more frames rendered before playing a new set of samples. goal is to be as small as possible. May want to adjust this number according to performance of device\n// These magic numbers just come from preference, can be set as options\nconst DEFAULT_AUDIO_LATENCY_IN_MILLI = 100;\nconst WASMBOY_SAMPLE_RATE = 48000;\n\n// Some canstants that use the ones above that will allow for faster performance\nconst DEFAULT_AUDIO_LATENCY_IN_SECONDS = DEFAULT_AUDIO_LATENCY_IN_MILLI / 1000;\n\n// The minimum fps we can have, before we start time stretching for slowness\nconst SLOW_TIME_STRETCH_MIN_FPS = 57;\n\nclass WasmBoyAudioService {\n  constructor() {\n    // Wasmboy instance and memory\n    this.worker = undefined;\n    this.updateAudioCallback = undefined;\n\n    this.audioContext = undefined;\n    this.audioBuffer = undefined;\n    // The play time for our audio samples\n    this.audioPlaytime = undefined;\n    this.audioSources = [];\n\n    // Average fps for time stretching\n    this.averageTimeStretchFps = [];\n\n    // Our sound output Location, we will initialize this in init\n    this.WASMBOY_SOUND_OUTPUT_LOCATION = 0;\n  }\n\n  initialize(updateAudioCallback) {\n    const initializeTask = async () => {\n      this.updateAudioCallback = updateAudioCallback;\n\n      this.averageTimeStretchFps = [];\n      if (this.audioSources.length > 0) {\n        this.cancelAllAudio();\n      }\n      this.audioSources = [];\n\n      this._createAudioContextIfNone();\n\n      // Lastly get our audio constants\n      return this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      });\n    };\n    return initializeTask();\n  }\n\n  // Ensure that Audio is blessed.\n  // Meaning, the audioContext won't be\n  // affected by any autoplay issues.\n  // https://www.chromium.org/audio-video/autoplay\n  resumeAudioContext() {\n    this._createAudioContextIfNone();\n    if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n      this.audioPlaytime = this.audioContext.currentTime;\n    }\n  }\n\n  resetTimeStretch() {\n    // Simply reset our average FPS counter array\n    this.averageTimeStretchFps = [];\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Dont wait for raf.\n          // Audio being shown is not dependent on the browser drawing a frame :)\n          this.playAudio(\n            eventData.message.fps,\n            eventData.message.allowFastSpeedStretching,\n            eventData.message.numberOfSamples,\n            eventData.message.leftChannel,\n            eventData.message.rightChannel\n          );\n\n          // Next, send back how much forward latency\n          // we have\n          let latency = 0;\n          if (this.audioContext.currentTime && this.audioContext.currentTime > 0) {\n            latency = this.audioPlaytime - this.audioContext.currentTime;\n          }\n          this.worker.postMessage({\n            type: WORKER_MESSAGE_TYPE.AUDIO_LATENCY,\n            latency\n          });\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to queue up and audio buyffer to be played\n  // Returns a promise so that we may \"sync by audio\"\n  // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/dau8e2w/\n  playAudio(currentFps, allowFastSpeedStretching, numberOfSamples, leftChannelBuffer, rightChannelBuffer) {\n    // Find our averageFps\n    let fps = currentFps || 60;\n\n    // Check if we got a huge fps outlier.\n    // If so, let's just reset our average.\n    // This will fix the slow gradual ramp down\n    const fpsDifference = Math.abs(currentFps - this.averageTimeStretchFps[this.averageTimeStretchFps.length - 1]);\n    if (fpsDifference && fpsDifference >= 15) {\n      this.resetTimeStretch();\n    }\n\n    // Find our average fps for time stretching\n    this.averageTimeStretchFps.push(currentFps);\n    // TODO Make the multiplier Const the timeshift speed\n    if (this.averageTimeStretchFps.length > Math.floor(SLOW_TIME_STRETCH_MIN_FPS * 3)) {\n      this.averageTimeStretchFps.shift();\n    }\n\n    // Make sure we have a minimum number of time stretch fps timestamps to judge the average time\n    if (this.averageTimeStretchFps.length >= SLOW_TIME_STRETCH_MIN_FPS) {\n      fps = this.averageTimeStretchFps.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue;\n      });\n      fps = Math.floor(fps / this.averageTimeStretchFps.length);\n    }\n\n    // Find if we should time stretch this sample or not from our current fps\n    let playbackRate = 1.0;\n    if (fps < SLOW_TIME_STRETCH_MIN_FPS || allowFastSpeedStretching) {\n      // Has to be 60 to get accurent playback regarless of fps cap\n      playbackRate = playbackRate * (fps / 60);\n      if (playbackRate <= 0) {\n        playbackRate = 0.01;\n      }\n    }\n\n    // Create an audio buffer, with a left and right channel\n    this.audioBuffer = this.audioContext.createBuffer(2, numberOfSamples, WASMBOY_SAMPLE_RATE);\n    if (this.audioBuffer.copyToChannel) {\n      this.audioBuffer.copyToChannel(new Float32Array(leftChannelBuffer), 0, 0);\n      this.audioBuffer.copyToChannel(new Float32Array(rightChannelBuffer), 1, 0);\n    } else {\n      // Safari fallback\n      this.audioBuffer.getChannelData(0).set(new Float32Array(leftChannelBuffer));\n      this.audioBuffer.getChannelData(1).set(new Float32Array(rightChannelBuffer));\n    }\n\n    // Get an AudioBufferSourceNode.\n    // This is the AudioNode to use when we want to play an AudioBuffer\n    let source = this.audioContext.createBufferSource();\n\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = this.audioBuffer;\n\n    // Set our playback rate for time resetretching\n    source.playbackRate.setValueAtTime(playbackRate, this.audioContext.currentTime);\n\n    // Call our callback, if we have one\n    let finalNode = source;\n    if (this.updateAudioCallback) {\n      const responseNode = this.updateAudioCallback(this.audioContext, source);\n      if (responseNode) {\n        finalNode = responseNode;\n      }\n    }\n\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    finalNode.connect(this.audioContext.destination);\n\n    // Check if we made it in time\n    // Idea from: https://github.com/binji/binjgb/blob/master/demo/demo.js\n    let audioContextCurrentTime = this.audioContext.currentTime;\n    let audioContextCurrentTimeWithLatency = audioContextCurrentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n    this.audioPlaytime = this.audioPlaytime || audioContextCurrentTimeWithLatency;\n    if (this.audioPlaytime < audioContextCurrentTime) {\n      // We took too long, or something happen and hiccup'd the emulator, reset audio playback times\n      this.cancelAllAudio();\n      this.audioPlaytime = audioContextCurrentTimeWithLatency;\n    }\n\n    // start the source playing\n    source.start(this.audioPlaytime);\n\n    // Set our new audio playtime goal\n    const sourcePlaybackLength = numberOfSamples / (WASMBOY_SAMPLE_RATE * playbackRate);\n    this.audioPlaytime = this.audioPlaytime + sourcePlaybackLength;\n\n    // Cancel all audio sources on the tail that play before us\n    while (\n      this.audioSources[this.audioSources.length - 1] &&\n      this.audioSources[this.audioSources.length - 1].playtime <= this.audioPlaytime\n    ) {\n      this.audioSources[this.audioSources.length - 1].source.stop();\n      this.audioSources.pop();\n    }\n\n    // Add the source so we can stop this if needed\n    this.audioSources.push({\n      source: source,\n      playTime: this.audioPlaytime,\n      fps: fps\n    });\n\n    // Shift ourselves out when finished\n    const timeUntilSourceEnds = this.audioPlaytime - this.audioContext.currentTime + 500;\n    setTimeout(() => {\n      this.audioSources.shift();\n    }, timeUntilSourceEnds);\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    if (!this.audioContext) {\n      return;\n    }\n\n    // Cancel all audio That was queued to play\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (stopCurrentAudio || this.audioSources[i].playTime > this.audioPlaytime) {\n        this.audioSources[i].source.stop();\n      }\n    }\n\n    // Reset our audioPlaytime\n    this.audioPlaytime = this.audioContext.currentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n  }\n\n  _createAudioContextIfNone() {\n    if (!this.audioContext) {\n      // Get our Audio context\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    }\n  }\n}\n\nexport const WasmBoyAudio = new WasmBoyAudioService();\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","if (typeof indexedDB != 'undefined') {\n  module.exports = require('./idb.js');\n}\nelse {\n  module.exports = {\n    open: function () {\n      return Promise.reject('IDB requires a browser environment');\n    },\n    delete: function () {\n      return Promise.reject('IDB requires a browser environment');\n    }\n  };\n}\n","// Get our idb instance, and initialize to asn idb-keyval\n// This is so we don't get the default keyval DB name. And will allow\n// Parent projects to use the slimmer idb keyval\n// https://www.npmjs.com/package/idb\n\n// Need to wrap in rollup replace to stop\n// node commonjs from breaking\n/*ROLLUP_REPLACE_BROWSER\nimport idb from 'idb';\nROLLUP_REPLACE_BROWSER*/\n\nlet keyval = false;\n\n// Get our idb dPromise\nif (typeof window !== 'undefined') {\n  const dbPromise = idb.open('wasmboy', 1, upgradeDB => {\n    upgradeDB.createObjectStore('keyval');\n  });\n\n  // Get our idb-keyval instance\n  keyval = {\n    get(key) {\n      return dbPromise.then(db => {\n        return db\n          .transaction('keyval')\n          .objectStore('keyval')\n          .get(key);\n      });\n    },\n    set(key, val) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').put(val, key);\n        return tx.complete;\n      });\n    },\n    delete(key) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').delete(key);\n        return tx.complete;\n      });\n    },\n    clear() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').clear();\n        return tx.complete;\n      });\n    },\n    keys() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval');\n        const keys = [];\n        const store = tx.objectStore('keyval');\n\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // openKeyCursor isn't supported by Safari, so we fall back\n        (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n          if (!cursor) return;\n          keys.push(cursor.key);\n          cursor.continue();\n        });\n\n        return tx.complete.then(() => keys);\n      });\n    }\n  };\n}\n\nexport const idbKeyval = keyval;\n","import { idbKeyval } from './idb';\n\n// Import worker stuff\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\nimport { initializeAutoSave } from './autosave.js';\n\nclass WasmBoyMemoryService {\n  constructor() {\n    this.worker = undefined;\n    this.saveStateCallback = undefined;\n    this.loadedCartridgeMemoryState = {\n      ROM: false,\n      RAM: false\n    };\n\n    // Our different types of memory\n    this.cartridgeRom = undefined;\n    this.cartridgeHeader = undefined;\n    this.cartridgeRam = undefined;\n    this.gameboyMemory = undefined;\n    this.paletteMemory = undefined;\n    this.internalState = undefined;\n\n    // Going to set the key for idbKeyval as the cartridge header.\n    // Then, for each cartridge, it will return an object.\n    // there will be a cartridgeRam Key, settings Key, and a saveState key\n    // Not going to make one giant object, as we want to keep idb transactions light and fast\n    this.WASMBOY_UNLOAD_STORAGE = 'WASMBOY_UNLOAD_STORAGE';\n\n    // Define some constants since calls to wasm are expensive\n    this.WASMBOY_GAME_BYTES_LOCATION = 0;\n    this.WASMBOY_GAME_RAM_BANKS_LOCATION = 0;\n    this.WASMBOY_INTERNAL_STATE_SIZE = 0;\n    this.WASMBOY_INTERNAL_STATE_LOCATION = 0;\n    this.WASMBOY_INTERNAL_MEMORY_SIZE = 0;\n    this.WASMBOY_INTERNAL_MEMORY_LOCATION = 0;\n    this.WASMBOY_PALETTE_MEMORY_SIZE = 0;\n    this.WASMBOY_PALETTE_MEMORY_LOCATION = 0;\n  }\n\n  initialize(headless, saveStateCallback) {\n    const initializeTask = async () => {\n      if (headless) {\n        this.saveStateCallback = saveStateCallback;\n\n        await this._initializeConstants();\n      } else {\n        this.saveStateCallback = saveStateCallback;\n\n        await this._initializeConstants();\n\n        // initialize the autosave feature\n        await initializeAutoSave.call(this);\n      }\n    };\n\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n\n    // Also set our handler\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Simply set our memory\n          const memoryTypes = Object.keys(eventData.message);\n          delete memoryTypes.type;\n\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n            this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n            this.cartridgeRam = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n            this.gameboyMemory = new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n            this.paletteMemory = new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n            this.internalState = new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]);\n          }\n\n          return;\n        }\n      }\n    });\n  }\n\n  getLoadedCartridgeMemoryState() {\n    return this.loadedCartridgeMemoryState;\n  }\n\n  clearMemory() {\n    // Clear Wasm memory\n    // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY\n      })\n      .then(event => {\n        this.loadedCartridgeMemoryState.ROM = false;\n        this.loadedCartridgeMemoryState.RAM = false;\n\n        // Reset everything\n        this.cartridgeRom = undefined;\n        this.cartridgeHeader = undefined;\n        this.cartridgeRam = undefined;\n        this.gameboyMemory = undefined;\n        this.paletteMemory = undefined;\n        this.internalState = undefined;\n      });\n  }\n\n  loadCartridgeRom(ROM) {\n    const loadTask = async () => {\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_ROM] = ROM.buffer;\n\n      // Don't pass the rom as a transferrable, since,\n      // We want to keep a copy of it for reset\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.ROM = true;\n        });\n\n      // Also get our cartridge header\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_ROM, MEMORY_TYPE.CARTRIDGE_HEADER]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          this.cartridgeHeader = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_HEADER]);\n        });\n    };\n\n    return loadTask();\n  }\n\n  // Function to save the cartridge ram\n  // This emulates the cartridge having a battery to\n  // Keep things like Pokemon Save data in memory\n  // Also allows passing in a a Uint8Array header and ram to be set manually\n  saveCartridgeRam(passedHeader, passedCartridgeRam) {\n    const saveCartridgeRamTask = async () => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      let header;\n      let cartridgeRam;\n      if (passedHeader && passedCartridgeRam) {\n        header = passedHeader;\n        cartridgeRam = passedCartridgeRam;\n      } else {\n        header = this.cartridgeHeader;\n        cartridgeRam = this.cartridgeRam;\n      }\n\n      if (!header || !cartridgeRam) {\n        throw new Error('Error parsing the cartridgeRam or cartridge header');\n      }\n\n      // Get our cartridge object\n      let cartridgeObject = await idbKeyval.get(header);\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      // Set the cartridgeRam to our cartridgeObject\n      cartridgeObject.cartridgeRam = cartridgeRam;\n\n      await idbKeyval.set(header, cartridgeObject);\n    };\n\n    return saveCartridgeRamTask();\n  }\n\n  // function to load the cartridge ram\n  // opposite of above\n  loadCartridgeRam() {\n    const loadCartridgeRamTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      const cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.cartridgeRam) {\n        return;\n      }\n\n      // Set the cartridgeRam\n      // Don't transfer, because we want to keep a reference to it\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeObject.cartridgeRam.buffer;\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.RAM = true;\n          this.cartridgeRam = cartridgeObject.cartridgeRam;\n        });\n    };\n    return loadCartridgeRamTask();\n  }\n\n  // Function to save the state to the indexeddb\n  saveState(passedHeader, passedSaveState) {\n    const saveStateTask = async () => {\n      // Get our save state\n      let saveState;\n      let header;\n      if (passedHeader && passedSaveState) {\n        saveState = passedSaveState;\n        header = passedHeader;\n      } else {\n        saveState = getSaveState.call(this);\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n      if (!cartridgeObject.saveStates) {\n        cartridgeObject.saveStates = [];\n      }\n\n      cartridgeObject.saveStates.push(saveState);\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error getting the cartridge header');\n      }\n\n      if (!saveState) {\n        const cartridgeObject = await idbKeyval.get(header);\n        if (!cartridgeObject || !cartridgeObject.saveStates) {\n          throw new Error('No Save State passed, and no cartridge object found');\n          return;\n        }\n        saverState = cartridgeObject.saveStates[0];\n      }\n\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = saveState.wasmboyMemory.cartridgeRam.buffer;\n      workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = saveState.wasmboyMemory.gameBoyMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY] = saveState.wasmboyMemory.wasmBoyPaletteMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE] = saveState.wasmboyMemory.wasmBoyInternalState.buffer;\n\n      await this.worker.postMessage(\n        {\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        },\n        [\n          workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n          workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE]\n        ]\n      );\n\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_RAM, MEMORY_TYPE.GAMEBOY_MEMORY, MEMORY_TYPE.PALETTE_MEMORY, MEMORY_TYPE.INTERNAL_STATE]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRam = eventData.message[MEMORY_TYPE.CARTRIDGE_RAM];\n          this.gameboyMemory = eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY];\n          this.paletteMemory = eventData.message[MEMORY_TYPE.PALETTE_MEMORY];\n          this.internalState = eventData.message[MEMORY_TYPE.INTERNAL_STATE];\n        });\n    };\n\n    return loadStateTask();\n  }\n\n  // Function to return the current cartridge object\n  getCartridgeObject() {\n    return idbKeyval.get(this.cartridgeHeader);\n  }\n\n  // Function to return all informationh aboyut the currently loaded cart.\n  // This will include, the ROM, the RAM, the header, and the indivudal pieces of the header\n  // See: http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  getCartridgeInfo() {\n    if (!this.loadedCartridgeMemoryState.ROM) {\n      return Promise.reject('No ROM has been loaded');\n    }\n\n    let getCartridgeInfoTask = async () => {\n      const cartridgeInfo = {};\n\n      cartridgeInfo.header = this.cartridgeHeader;\n      cartridgeInfo.ROM = this.cartridgeRom;\n      cartridgeInfo.RAM = this.cartridgeRam;\n\n      // Now parse our header for additional information\n      cartridgeInfo.nintendoLogo = cartridgeInfo.ROM.slice(0x104, 0x134);\n\n      cartridgeInfo.title = cartridgeInfo.ROM.slice(0x134, 0x144);\n      cartridgeInfo.titleAsString = String.fromCharCode.apply(null, cartridgeInfo.title);\n\n      cartridgeInfo.manufacturerCode = cartridgeInfo.ROM.slice(0x13f, 0x143);\n\n      cartridgeInfo.CGBFlag = cartridgeInfo.ROM[0x143];\n\n      cartridgeInfo.newLicenseeCode = cartridgeInfo.ROM.slice(0x144, 0x146);\n\n      cartridgeInfo.SGBFlag = cartridgeInfo.ROM[0x146];\n\n      cartridgeInfo.cartridgeType = cartridgeInfo.ROM[0x147];\n\n      cartridgeInfo.ROMSize = cartridgeInfo.ROM[0x148];\n\n      cartridgeInfo.RAMSize = cartridgeInfo.ROM[0x149];\n\n      cartridgeInfo.destinationCode = cartridgeInfo.ROM[0x14a];\n\n      cartridgeInfo.oldLicenseeCode = cartridgeInfo.ROM[0x14b];\n\n      cartridgeInfo.maskROMVersionNumber = cartridgeInfo.ROM[0x14c];\n\n      cartridgeInfo.headerChecksum = cartridgeInfo.ROM[0x14d];\n\n      cartridgeInfo.globalChecksum = cartridgeInfo.ROM.slice(0x14e, 0x150);\n\n      return cartridgeInfo;\n    };\n\n    return getCartridgeInfoTask();\n  }\n\n  _initializeConstants() {\n    // Initialize our cached wasm constants\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      })\n      .then(event => {\n        const eventData = getEventData(event);\n        Object.keys(this).forEach(key => {\n          if (eventData.message[key] !== undefined) {\n            this[key] = eventData.message[key];\n          }\n        });\n      });\n  }\n}\n\n// Create a singleton to export\nexport const WasmBoyMemory = new WasmBoyMemoryService();\n","// https://github.com/torch2424/responsive-gamepad\nimport { ResponsiveGamepad, KEYMAP_GAMEBOY } from 'responsive-gamepad';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nclass WasmBoyControllerService {\n  constructor() {\n    // Our wasm instance\n    this.worker = undefined;\n    this.isEnabled = false;\n    this.enableDefaultJoypad();\n  }\n\n  initialize() {\n    return Promise.resolve();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n  }\n\n  updateController() {\n    if (!this.isEnabled) {\n      return {};\n    }\n\n    // Create an abstracted controller state\n    const controllerState = ResponsiveGamepad.getState();\n\n    // Set the new controller state on the instance\n    this.setJoypadState(controllerState);\n\n    // Return the controller state in case we need something from it\n    return controllerState;\n  }\n\n  setJoypadState(controllerState) {\n    const setJoypadStateParamsAsArray = [\n      controllerState.UP ? 1 : 0,\n      controllerState.RIGHT ? 1 : 0,\n      controllerState.DOWN ? 1 : 0,\n      controllerState.LEFT ? 1 : 0,\n      controllerState.A ? 1 : 0,\n      controllerState.B ? 1 : 0,\n      controllerState.SELECT ? 1 : 0,\n      controllerState.START ? 1 : 0\n    ];\n\n    this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE,\n      setJoypadStateParamsAsArray\n    });\n  }\n\n  enableDefaultJoypad() {\n    this.isEnabled = true;\n\n    ResponsiveGamepad.enable(KEYMAP_GAMEBOY());\n  }\n\n  disableDefaultJoypad() {\n    this.isEnabled = false;\n\n    ResponsiveGamepad.disable(KEYMAP_GAMEBOY());\n  }\n\n  addTouchInput(keyMapKey, element, type, direction) {\n    return ResponsiveGamepad.addTouchInput(keyMapKey, element, type, direction);\n  }\n\n  removeTouchInput(keyMapKey, touchInputId) {\n    return ResponsiveGamepad.removeTouchInput(keyMapKey, touchInputId);\n  }\n}\n\nexport const WasmBoyController = new WasmBoyControllerService();\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Import our worker urls\n// Only one of the wasmboylib imports will be used. Rollup/Babel handles which one\nimport wasmboyLibWasmWorkerUrl from '../../dist/worker/wasmboy.wasm.worker.js';\nimport wasmboyLibTsWorkerUrl from '../../dist/worker/wasmboy.ts.worker.js';\nimport wasmboyGraphicsWorkerUrl from '../../dist/worker/graphics.worker.js';\nimport wasmboyAudioWorkerUrl from '../../dist/worker/audio.worker.js';\nimport wasmboyControllerWorkerUrl from '../../dist/worker/controller.worker.js';\nimport wasmboyMemoryWorkerUrl from '../../dist/worker/memory.worker.js';\n\n// Import our Smart Worker Interface\nimport { SmartWorker } from './smartworker';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from './constants';\n\n/*ROLLUP_REPLACE_NODE\nconst { MessageChannel } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nexport const instantiateWorkers = async () => {\n  // Create our workers\n  let libWorkerUrl;\n  libWorkerUrl = wasmboyLibWasmWorkerUrl;\n  libWorkerUrl = wasmboyLibTsWorkerUrl;\n\n  const libWorker = new SmartWorker(libWorkerUrl, WORKER_ID.LIB);\n  const graphicsWorker = new SmartWorker(wasmboyGraphicsWorkerUrl, WORKER_ID.GRAPHICS);\n  const audioWorker = new SmartWorker(wasmboyAudioWorkerUrl, WORKER_ID.AUDIO);\n  const controllerWorker = new SmartWorker(wasmboyControllerWorkerUrl, WORKER_ID.CONTROLLER);\n  const memoryWorker = new SmartWorker(wasmboyMemoryWorkerUrl, WORKER_ID.MEMORY);\n  // Create an array of promises for when each worker is ready\n  const workerReadyPromises = [];\n\n  // Add our workers to an array,\n  const childWorkers = [graphicsWorker, audioWorker, controllerWorker, memoryWorker];\n\n  // Create a messaging channel between our main lib worker,\n  // And all of the children workers\n  childWorkers.forEach(childWorker => {\n    // Create our message channel\n    // https://stackoverflow.com/questions/14191394/web-workers-communication-using-messagechannel-html5\n    const messageChannel = new MessageChannel();\n\n    const workerReadyPromise = new Promise(resolve => {\n      // Our resolve function\n      let messagesReceived = 0;\n      const tryResolveWorkerReady = () => {\n        messagesReceived++;\n        if (messagesReceived >= 2) {\n          resolve();\n        }\n      };\n\n      // Post our connect messages\n      libWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: childWorker.id,\n            ports: [messageChannel.port1]\n          },\n          [messageChannel.port1]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n      childWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: libWorker.id,\n            ports: [messageChannel.port2]\n          },\n          [messageChannel.port2]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n    });\n\n    workerReadyPromises.push(workerReadyPromise);\n  });\n\n  // Wait for all workers to be ready\n  await Promise.all(workerReadyPromises);\n\n  // Finally, pass the ready workers to all of our children lib\n  WasmBoyGraphics.setWorker(graphicsWorker);\n  WasmBoyAudio.setWorker(audioWorker);\n  WasmBoyController.setWorker(controllerWorker);\n  WasmBoyMemory.setWorker(memoryWorker);\n\n  // Return the main worker for the main lib\n  return libWorker;\n};\n","export default \"data:application/javascript;base64,\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6ZixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGs7Y29uc3QgbT0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6ZyhjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgZj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApLGQ9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KDMpO2ZvcihsZXQgYz0wOzE0ND5jO2MrKylmb3IobGV0IGU9MDsxNjA+ZTtlKyspe3ZhciBiPTMqKDE2MCpjK2UpO2ZvcihsZXQgYz0wOzM+YztjKyspZFtjXT1hW2IrY107Yj00KihlKzE2MCpjKTtmW2JdPWRbMF07ZltiKzFdPWRbMV07ZltiKzJdPWRbMl07ZltiKzNdPTI1NX1hPWZ9ZyhjKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bCgoYSk9PnthPWEuZGF0YT8KYS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjprPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sayk7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmsucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtoP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGgpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoaClzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZCl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6ZCxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGg9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtofHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHI9KGEpPT57YT1hLmRhdGE/YS5kYXRhOmE7aWYoYS5tZXNzYWdlKXN3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e3ZhciBiPW5ldyBVaW50OEFycmF5KGEubWVzc2FnZS5hdWRpb0J1ZmZlcik7dmFyIGQ9YS5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBjPW5ldyBGbG9hdDMyQXJyYXkoZCk7dmFyIGY9bmV3IEZsb2F0MzJBcnJheShkKTtsZXQgZz0wO2QqPTI7Zm9yKHZhciBlPTA7ZTxkO2UrPTIpY1tnXT1xKGJbZV0pLGcrKztnPTA7Zm9yKGU9MTtlPGQ7ZSs9MilmW2ddPXEoYltlXSksZysrO2I9Yy5idWZmZXI7Zj1mLmJ1ZmZlcn1tKGMoe3R5cGU6IlVQREFURUQiLGxlZnRDaGFubmVsOmIscmlnaHRDaGFubmVsOmYsCm51bWJlck9mU2FtcGxlczphLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczphLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzphLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSksW2IsZl0pfX07cCgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9YS5tZXNzYWdlLnBvcnRzWzBdO3AocixsKTttKGModm9pZCAwLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UUyI6bC5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkFVRElPX0xBVEVOQ1kiOmwucG9zdE1lc3NhZ2UoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","// Taken/Modified From: https://github.com/photopea/UZIP.js\n\nlet UZIP = {};\n\n// Make it a hacky es module\nconst uzip = UZIP;\nexport default uzip;\n\nUZIP['parse'] = function(\n  buf // ArrayBuffer\n) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint,\n    o = 0,\n    out = {};\n  let data = new Uint8Array(buf);\n  let eocd = data.length - 4;\n\n  while (rUi(data, eocd) != 0x06054b50) eocd--;\n\n  o = eocd;\n  o += 4; // sign  = 0x06054b50\n  o += 4; // disks = 0;\n  let cnu = rUs(data, o);\n  o += 2;\n  let cnt = rUs(data, o);\n  o += 2;\n\n  let csize = rUi(data, o);\n  o += 4;\n  let coffs = rUi(data, o);\n  o += 4;\n\n  o = coffs;\n  for (let i = 0; i < cnu; i++) {\n    let sign = rUi(data, o);\n    o += 4;\n    o += 4; // versions;\n    o += 4; // flag + compr\n    o += 4; // time\n\n    let crc32 = rUi(data, o);\n    o += 4;\n    let csize = rUi(data, o);\n    o += 4;\n    let usize = rUi(data, o);\n    o += 4;\n\n    let nl = rUs(data, o),\n      el = rUs(data, o + 2),\n      cl = rUs(data, o + 4);\n    o += 6; // name, extra, comment\n    o += 8; // disk, attribs\n\n    let roff = rUi(data, o);\n    o += 4;\n    o += nl + el + cl;\n\n    UZIP._readLocal(data, roff, out, csize, usize);\n  }\n  //console.log(out);\n  return out;\n};\n\nUZIP._readLocal = function(data, o, out, csize, usize) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint;\n  let sign = rUi(data, o);\n  o += 4;\n  let ver = rUs(data, o);\n  o += 2;\n  let gpflg = rUs(data, o);\n  o += 2;\n  //if((gpflg&8)!=0) throw \"unknown sizes\";\n  let cmpr = rUs(data, o);\n  o += 2;\n\n  let time = rUi(data, o);\n  o += 4;\n\n  let crc32 = rUi(data, o);\n  o += 4;\n  //let csize = rUi(data, o);  o+=4;\n  //let usize = rUi(data, o);  o+=4;\n  o += 8;\n\n  let nlen = rUs(data, o);\n  o += 2;\n  let elen = rUs(data, o);\n  o += 2;\n\n  let name = UZIP.bin.readUTF8(data, o, nlen);\n  o += nlen;\n  o += elen;\n\n  //console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), \"csize, usize\", csize, usize, nlen, elen, name, o);\n\n  let file = new Uint8Array(data.buffer, o);\n  if (false) {\n  } else if (cmpr == 0) out[name] = new Uint8Array(file.buffer.slice(o, o + csize));\n  else if (cmpr == 8) {\n    let buf = new Uint8Array(usize);\n    UZIP.inflateRaw(file, buf);\n    //let nbuf = pako[\"inflateRaw\"](file);\n    //for(let i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw \"e\";  }\n    out[name] = buf;\n  } else throw 'unknown compression method: ' + cmpr;\n};\n\nUZIP.inflateRaw = function(file, buf) {\n  return UZIP.F.inflate(file, buf);\n};\nUZIP.inflate = function(file, buf) {\n  let CMF = file[0],\n    FLG = file[1];\n  let CM = CMF & 15,\n    CINFO = CMF >>> 4;\n  //console.log(CM, CINFO,CMF,FLG);\n  return UZIP.inflateRaw(new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);\n};\nUZIP.deflate = function(data, opts /*, buf, off*/) {\n  if (opts == null) opts = { level: 6 };\n  let off = 0,\n    buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  buf[off] = 120;\n  buf[off + 1] = 156;\n  off += 2;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  let crc = UZIP.adler(data, 0, data.length);\n  buf[off + 0] = (crc >>> 24) & 255;\n  buf[off + 1] = (crc >>> 16) & 255;\n  buf[off + 2] = (crc >>> 8) & 255;\n  buf[off + 3] = (crc >>> 0) & 255;\n  return new Uint8Array(buf.buffer, 0, off + 4);\n};\nUZIP.deflateRaw = function(data, opts) {\n  if (opts == null) opts = { level: 6 };\n  let buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  let off;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  return new Uint8Array(buf.buffer, 0, off);\n};\n\nUZIP.encode = function(obj) {\n  let tot = 0,\n    wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let zpd = {};\n  for (let p in obj) {\n    let cpr = !UZIP._noNeed(p),\n      buf = obj[p],\n      crc = UZIP.crc.crc(buf, 0, buf.length);\n    zpd[p] = { cpr: cpr, usize: buf.length, crc: crc, file: cpr ? UZIP.deflateRaw(buf) : buf };\n  }\n\n  for (let p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * UZIP.bin.sizeUTF8(p);\n  tot += 22;\n\n  let data = new Uint8Array(tot),\n    o = 0;\n  let fof = [];\n\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 0);\n  }\n  let i = 0,\n    ioff = o;\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 1, fof[i++]);\n  }\n  let csize = o - ioff;\n\n  wUi(data, o, 0x06054b50);\n  o += 4;\n  o += 4; // disks\n  wUs(data, o, i);\n  o += 2;\n  wUs(data, o, i);\n  o += 2; // number of c d records\n  wUi(data, o, csize);\n  o += 4;\n  wUi(data, o, ioff);\n  o += 4;\n  o += 2;\n  return data.buffer;\n};\n// no need to compress .PNG, .ZIP, .JPEG ....\nUZIP._noNeed = function(fn) {\n  let ext = fn\n    .split('.')\n    .pop()\n    .toLowerCase();\n  return 'png,jpg,jpeg,zip'.indexOf(ext) != -1;\n};\n\nUZIP._writeHeader = function(data, o, p, obj, t, roff) {\n  let wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let file = obj.file;\n\n  wUi(data, o, t == 0 ? 0x04034b50 : 0x02014b50);\n  o += 4; // sign\n  if (t == 1) o += 2; // ver made by\n  wUs(data, o, 20);\n  o += 2; // ver\n  wUs(data, o, 0);\n  o += 2; // gflip\n  wUs(data, o, obj.cpr ? 8 : 0);\n  o += 2; // cmpr\n\n  wUi(data, o, 0);\n  o += 4; // time\n  wUi(data, o, obj.crc);\n  o += 4; // crc32\n  wUi(data, o, file.length);\n  o += 4; // csize\n  wUi(data, o, obj.usize);\n  o += 4; // usize\n\n  wUs(data, o, UZIP.bin.sizeUTF8(p));\n  o += 2; // nlen\n  wUs(data, o, 0);\n  o += 2; // elen\n\n  if (t == 1) {\n    o += 2; // comment length\n    o += 2; // disk number\n    o += 6; // attributes\n    wUi(data, o, roff);\n    o += 4; // usize\n  }\n  let nlen = UZIP.bin.writeUTF8(data, o, p);\n  o += nlen;\n  if (t == 0) {\n    data.set(file, o);\n    o += file.length;\n  }\n  return o;\n};\n\nUZIP.crc = {\n  table: (function() {\n    let tab = new Uint32Array(256);\n    for (let n = 0; n < 256; n++) {\n      let c = n;\n      for (let k = 0; k < 8; k++) {\n        if (c & 1) c = 0xedb88320 ^ (c >>> 1);\n        else c = c >>> 1;\n      }\n      tab[n] = c;\n    }\n    return tab;\n  })(),\n  update: function(c, buf, off, len) {\n    for (let i = 0; i < len; i++) c = UZIP.crc.table[(c ^ buf[off + i]) & 0xff] ^ (c >>> 8);\n    return c;\n  },\n  crc: function(b, o, l) {\n    return UZIP.crc.update(0xffffffff, b, o, l) ^ 0xffffffff;\n  }\n};\nUZIP.adler = function(data, o, len) {\n  let a = 1,\n    b = 0;\n  let off = o,\n    end = o + len;\n  while (off < end) {\n    let eend = Math.min(off + 5552, end);\n    while (off < eend) {\n      a += data[off++];\n      b += a;\n    }\n    a = a % 65521;\n    b = b % 65521;\n  }\n  return (b << 16) | a;\n};\n\nUZIP.bin = {\n  readUshort: function(buff, p) {\n    return buff[p] | (buff[p + 1] << 8);\n  },\n  writeUshort: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n  },\n  readUint: function(buff, p) {\n    return buff[p + 3] * (256 * 256 * 256) + ((buff[p + 2] << 16) | (buff[p + 1] << 8) | buff[p]);\n  },\n  writeUint: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n    buff[p + 2] = (n >> 16) & 255;\n    buff[p + 3] = (n >> 24) & 255;\n  },\n  readASCII: function(buff, p, l) {\n    let s = '';\n    for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function(data, p, s) {\n    for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  pad: function(n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function(buff, p, l) {\n    let s = '',\n      ns;\n    for (let i = 0; i < l; i++) s += '%' + UZIP.bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UZIP.bin.readASCII(buff, p, l);\n    }\n    return ns;\n  },\n  writeUTF8: function(buff, p, str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        buff[p + i] = code;\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        buff[p + i] = 192 | (code >> 6);\n        buff[p + i + 1] = 128 | ((code >> 0) & 63);\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        buff[p + i] = 224 | (code >> 12);\n        buff[p + i + 1] = 128 | ((code >> 6) & 63);\n        buff[p + i + 2] = 128 | ((code >> 0) & 63);\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        buff[p + i] = 240 | (code >> 18);\n        buff[p + i + 1] = 128 | ((code >> 12) & 63);\n        buff[p + i + 2] = 128 | ((code >> 6) & 63);\n        buff[p + i + 3] = 128 | ((code >> 0) & 63);\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  },\n  sizeUTF8: function(str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  }\n};\n\nUZIP.F = {};\n\nUZIP.F.deflateRaw = function(data, out, opos, lvl) {\n  let opts = [\n    /*\n\t\t ush good_length; /* reduce lazy search above this match length \n\t\t ush max_lazy;    /* do not perform lazy search above this match length \n         ush nice_length; /* quit search above this match length \n\t*/\n    /*      good lazy nice chain */\n    /* 0 */ [0, 0, 0, 0, 0] /* store only */,\n    /* 1 */ [4, 4, 8, 4, 0] /* max speed, no lazy matches */,\n    /* 2 */ [4, 5, 16, 8, 0],\n    /* 3 */ [4, 6, 16, 16, 0],\n\n    /* 4 */ [4, 10, 16, 32, 0] /* lazy matches */,\n    /* 5 */ [8, 16, 32, 32, 0],\n    /* 6 */ [8, 16, 128, 128, 0],\n    /* 7 */ [8, 32, 128, 256, 0],\n    /* 8 */ [32, 128, 258, 1024, 1],\n    /* 9 */ [32, 258, 258, 4096, 1]\n  ]; /* max compression */\n\n  let opt = opts[lvl];\n\n  let U = UZIP.F.U,\n    goodIndex = UZIP.F._goodIndex,\n    hash = UZIP.F._hash,\n    putsE = UZIP.F._putsE;\n  let i = 0,\n    pos = opos << 3,\n    cvrd = 0,\n    dlen = data.length;\n\n  if (lvl == 0) {\n    while (i < dlen) {\n      let len = Math.min(0xffff, dlen - i);\n      putsE(out, pos, i + len == dlen ? 1 : 0);\n      pos = UZIP.F._copyExact(data, i, len, out, pos + 8);\n      i += len;\n    }\n    return pos >>> 3;\n  }\n\n  let lits = U.lits,\n    strt = U.strt,\n    prev = U.prev,\n    li = 0,\n    lc = 0,\n    bs = 0,\n    ebits = 0,\n    c = 0,\n    nc = 0; // last_item, literal_count, block_start\n  if (dlen > 2) {\n    nc = UZIP.F._hash(data, 0);\n    strt[nc] = 0;\n  }\n  let nmch = 0,\n    nmci = 0;\n\n  for (i = 0; i < dlen; i++) {\n    c = nc;\n    //*\n    if (i + 1 < dlen - 2) {\n      nc = UZIP.F._hash(data, i + 1);\n      let ii = (i + 1) & 0x7fff;\n      prev[ii] = strt[nc];\n      strt[nc] = ii;\n    } //*/\n    if (cvrd <= i) {\n      if (li > 14000 || lc > 26697) {\n        if (cvrd < i) {\n          lits[li] = i - cvrd;\n          li += 2;\n          cvrd = i;\n        }\n        pos = UZIP.F._writeBlock(i == dlen - 1 || cvrd == dlen ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);\n        li = lc = ebits = 0;\n        bs = i;\n      }\n\n      let mch = 0;\n      //if(nmci==i) mch= nmch;  else\n      if (i < dlen - 2) mch = UZIP.F._bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);\n      /*\n\t\t\tif(mch!=0 && opt[4]==1 && (mch>>>16)<opt[1] && i+1<dlen-2) {\n\t\t\t\tnmch = UZIP.F._bestMatch(data, i+1, prev, nc, opt[2], opt[3]);  nmci=i+1;\n\t\t\t\t//let mch2 = UZIP.F._bestMatch(data, i+2, prev, nnc);  //nmci=i+1;\n\t\t\t\tif((nmch>>>16)>(mch>>>16)) mch=0;\n\t\t\t}//*/\n      let len = mch >>> 16,\n        dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n      if (mch != 0) {\n        let len = mch >>> 16,\n          dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n        let lgi = goodIndex(len, U.of0);\n        U.lhst[257 + lgi]++;\n        let dgi = goodIndex(dst, U.df0);\n        U.dhst[dgi]++;\n        ebits += U.exb[lgi] + U.dxb[dgi];\n        lits[li] = (len << 23) | (i - cvrd);\n        lits[li + 1] = (dst << 16) | (lgi << 8) | dgi;\n        li += 2;\n        cvrd = i + len;\n      } else {\n        U.lhst[data[i]]++;\n      }\n      lc++;\n    }\n  }\n  if (bs != i || data.length == 0) {\n    if (cvrd < i) {\n      lits[li] = i - cvrd;\n      li += 2;\n      cvrd = i;\n    }\n    pos = UZIP.F._writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);\n    li = 0;\n    lc = 0;\n    li = lc = ebits = 0;\n    bs = i;\n  }\n  while ((pos & 7) != 0) pos++;\n  return pos >>> 3;\n};\nUZIP.F._bestMatch = function(data, i, prev, c, nice, chain) {\n  let ci = i & 0x7fff,\n    pi = prev[ci];\n  //console.log(\"----\", i);\n  let dif = (ci - pi + (1 << 15)) & 0x7fff;\n  if (pi == ci || c != UZIP.F._hash(data, i - dif)) return 0;\n  let tl = 0,\n    td = 0; // top length, top distance\n  let dlim = Math.min(0x7fff, i);\n  while (dif <= dlim && --chain != 0 && pi != ci /*&& c==UZIP.F._hash(data,i-dif)*/) {\n    if (tl == 0 || data[i + tl] == data[i + tl - dif]) {\n      let cl = UZIP.F._howLong(data, i, dif);\n      if (cl > tl) {\n        tl = cl;\n        td = dif;\n        if (tl >= nice) break; //*\n        if (dif + 2 < cl) cl = dif + 2;\n        let maxd = 0; // pi does not point to the start of the word\n        for (let j = 0; j < cl - 2; j++) {\n          let ei = (i - dif + j + (1 << 15)) & 0x7fff;\n          let li = prev[ei];\n          let curd = (ei - li + (1 << 15)) & 0x7fff;\n          if (curd > maxd) {\n            maxd = curd;\n            pi = ei;\n          }\n        } //*/\n      }\n    }\n\n    ci = pi;\n    pi = prev[ci];\n    dif += (ci - pi + (1 << 15)) & 0x7fff;\n  }\n  return (tl << 16) | td;\n};\nUZIP.F._howLong = function(data, i, dif) {\n  if (data[i] != data[i - dif] || data[i + 1] != data[i + 1 - dif] || data[i + 2] != data[i + 2 - dif]) return 0;\n  let oi = i,\n    l = Math.min(data.length, i + 258);\n  i += 3;\n  //while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;\n  while (i < l && data[i] == data[i - dif]) i++;\n  return i - oi;\n};\nUZIP.F._hash = function(data, i) {\n  return (((data[i] << 8) | data[i + 1]) + (data[i + 2] << 4)) & 0xffff;\n  //let hash_shift = 0, hash_mask = 255;\n  //let h = data[i+1] % 251;\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = ((h<<hash_shift) ^ (c) ) & hash_mask;\n  //return h | (data[i]<<8);\n  //return (data[i] | (data[i+1]<<8));\n};\n//UZIP.___toth = 0;\nUZIP.saved = 0;\nUZIP.F._writeBlock = function(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {\n  let U = UZIP.F.U,\n    putsF = UZIP.F._putsF,\n    putsE = UZIP.F._putsE;\n\n  //*\n  let T, ML, MD, MH, numl, numd, numh, lset, dset;\n  U.lhst[256]++;\n  T = UZIP.F.getTrees();\n  ML = T[0];\n  MD = T[1];\n  MH = T[2];\n  numl = T[3];\n  numd = T[4];\n  numh = T[5];\n  lset = T[6];\n  dset = T[7];\n\n  let cstSize = (((pos + 3) & 7) == 0 ? 0 : 8 - ((pos + 3) & 7)) + 32 + (l0 << 3);\n  let fxdSize = ebits + UZIP.F.contSize(U.fltree, U.lhst) + UZIP.F.contSize(U.fdtree, U.dhst);\n  let dynSize = ebits + UZIP.F.contSize(U.ltree, U.lhst) + UZIP.F.contSize(U.dtree, U.dhst);\n  dynSize += 14 + 3 * numh + UZIP.F.contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);\n\n  for (let j = 0; j < 286; j++) U.lhst[j] = 0;\n  for (let j = 0; j < 30; j++) U.dhst[j] = 0;\n  for (let j = 0; j < 19; j++) U.ihst[j] = 0;\n  //*/\n  let BTYPE = cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;\n  putsF(out, pos, BFINAL);\n  putsF(out, pos + 1, BTYPE);\n  pos += 3;\n\n  let opos = pos;\n  if (BTYPE == 0) {\n    while ((pos & 7) != 0) pos++;\n    pos = UZIP.F._copyExact(data, o0, l0, out, pos);\n  } else {\n    let ltree, dtree;\n    if (BTYPE == 1) {\n      ltree = U.fltree;\n      dtree = U.fdtree;\n    }\n    if (BTYPE == 2) {\n      UZIP.F.makeCodes(U.ltree, ML);\n      UZIP.F.revCodes(U.ltree, ML);\n      UZIP.F.makeCodes(U.dtree, MD);\n      UZIP.F.revCodes(U.dtree, MD);\n      UZIP.F.makeCodes(U.itree, MH);\n      UZIP.F.revCodes(U.itree, MH);\n\n      ltree = U.ltree;\n      dtree = U.dtree;\n\n      putsE(out, pos, numl - 257);\n      pos += 5; // 286\n      putsE(out, pos, numd - 1);\n      pos += 5; // 30\n      putsE(out, pos, numh - 4);\n      pos += 4; // 19\n\n      for (let i = 0; i < numh; i++) putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);\n      pos += 3 * numh;\n      pos = UZIP.F._codeTiny(lset, U.itree, out, pos);\n      pos = UZIP.F._codeTiny(dset, U.itree, out, pos);\n    }\n\n    let off = o0;\n    for (let si = 0; si < li; si += 2) {\n      let qb = lits[si],\n        len = qb >>> 23,\n        end = off + (qb & ((1 << 23) - 1));\n      while (off < end) pos = UZIP.F._writeLit(data[off++], ltree, out, pos);\n\n      if (len != 0) {\n        let qc = lits[si + 1],\n          dst = qc >> 16,\n          lgi = (qc >> 8) & 255,\n          dgi = qc & 255;\n        pos = UZIP.F._writeLit(257 + lgi, ltree, out, pos);\n        putsE(out, pos, len - U.of0[lgi]);\n        pos += U.exb[lgi];\n\n        pos = UZIP.F._writeLit(dgi, dtree, out, pos);\n        putsF(out, pos, dst - U.df0[dgi]);\n        pos += U.dxb[dgi];\n        off += len;\n      }\n    }\n    pos = UZIP.F._writeLit(256, ltree, out, pos);\n  }\n  //console.log(pos-opos, fxdSize, dynSize, cstSize);\n  return pos;\n};\nUZIP.F._copyExact = function(data, off, len, out, pos) {\n  let p8 = pos >>> 3;\n  out[p8] = len;\n  out[p8 + 1] = len >>> 8;\n  out[p8 + 2] = 255 - out[p8];\n  out[p8 + 3] = 255 - out[p8 + 1];\n  p8 += 4;\n  out.set(new Uint8Array(data.buffer, off, len), p8);\n  //for(let i=0; i<len; i++) out[p8+i]=data[off+i];\n  return pos + ((len + 4) << 3);\n};\n/*\n\tInteresting facts:\n\t- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)\n*/\n\nUZIP.F.getTrees = function() {\n  let U = UZIP.F.U;\n  let ML = UZIP.F._hufTree(U.lhst, U.ltree, 15);\n  let MD = UZIP.F._hufTree(U.dhst, U.dtree, 15);\n  let lset = [],\n    numl = UZIP.F._lenCodes(U.ltree, lset);\n  let dset = [],\n    numd = UZIP.F._lenCodes(U.dtree, dset);\n  for (let i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;\n  for (let i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;\n  let MH = UZIP.F._hufTree(U.ihst, U.itree, 7);\n  let numh = 19;\n  while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] == 0) numh--;\n  return [ML, MD, MH, numl, numd, numh, lset, dset];\n};\nUZIP.F.getSecond = function(a) {\n  let b = [];\n  for (let i = 0; i < a.length; i += 2) b.push(a[i + 1]);\n  return b;\n};\nUZIP.F.nonZero = function(a) {\n  let b = '';\n  for (let i = 0; i < a.length; i += 2) if (a[i + 1] != 0) b += (i >> 1) + ',';\n  return b;\n};\nUZIP.F.contSize = function(tree, hst) {\n  let s = 0;\n  for (let i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];\n  return s;\n};\nUZIP.F._codeTiny = function(set, tree, out, pos) {\n  for (let i = 0; i < set.length; i += 2) {\n    let l = set[i],\n      rst = set[i + 1]; //console.log(l, pos, tree[(l<<1)+1]);\n    pos = UZIP.F._writeLit(l, tree, out, pos);\n    let rsl = l == 16 ? 2 : l == 17 ? 3 : 7;\n    if (l > 15) {\n      UZIP.F._putsE(out, pos, rst, rsl);\n      pos += rsl;\n    }\n  }\n  return pos;\n};\nUZIP.F._lenCodes = function(tree, set) {\n  let len = tree.length;\n  while (len != 2 && tree[len - 1] == 0) len -= 2; // when no distances, keep one code with length 0\n  for (let i = 0; i < len; i += 2) {\n    let l = tree[i + 1],\n      nxt = i + 3 < len ? tree[i + 3] : -1,\n      nnxt = i + 5 < len ? tree[i + 5] : -1,\n      prv = i == 0 ? -1 : tree[i - 1];\n    if (l == 0 && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 138);\n      if (zc < 11) set.push(17, zc - 3);\n      else set.push(18, zc - 11);\n      i += zc * 2 - 2;\n    } else if (l == prv && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 6);\n      set.push(16, zc - 3);\n      i += zc * 2 - 2;\n    } else set.push(l, 0);\n  }\n  return len >>> 1;\n};\nUZIP.F._hufTree = function(hst, tree, MAXL) {\n  let list = [],\n    hl = hst.length,\n    tl = tree.length,\n    i = 0;\n  for (i = 0; i < tl; i += 2) {\n    tree[i] = 0;\n    tree[i + 1] = 0;\n  }\n  for (i = 0; i < hl; i++) if (hst[i] != 0) list.push({ lit: i, f: hst[i] });\n  let end = list.length,\n    l2 = list.slice(0);\n  if (end == 0) return 0; // empty histogram (usually for dist)\n  if (end == 1) {\n    let lit = list[0].lit,\n      l2 = lit == 0 ? 1 : 0;\n    tree[(lit << 1) + 1] = 1;\n    tree[(l2 << 1) + 1] = 1;\n    return 1;\n  }\n  list.sort(function(a, b) {\n    return a.f - b.f;\n  });\n  let a = list[0],\n    b = list[1],\n    i0 = 0,\n    i1 = 1,\n    i2 = 2;\n  list[0] = { lit: -1, f: a.f + b.f, l: a, r: b, d: 0 };\n  while (i1 != end - 1) {\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      a = list[i0++];\n    } else {\n      a = list[i2++];\n    }\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      b = list[i0++];\n    } else {\n      b = list[i2++];\n    }\n    list[i1++] = { lit: -1, f: a.f + b.f, l: a, r: b };\n  }\n  let maxl = UZIP.F.setDepth(list[i1 - 1], 0);\n  if (maxl > MAXL) {\n    UZIP.F.restrictDepth(l2, MAXL, maxl);\n    maxl = MAXL;\n  }\n  for (i = 0; i < end; i++) tree[(l2[i].lit << 1) + 1] = l2[i].d;\n  return maxl;\n};\n\nUZIP.F.setDepth = function(t, d) {\n  if (t.lit != -1) {\n    t.d = d;\n    return d;\n  }\n  return Math.max(UZIP.F.setDepth(t.l, d + 1), UZIP.F.setDepth(t.r, d + 1));\n};\n\nUZIP.F.restrictDepth = function(dps, MD, maxl) {\n  let i = 0,\n    bCost = 1 << (maxl - MD),\n    dbt = 0;\n  dps.sort(function(a, b) {\n    return b.d == a.d ? a.f - b.f : b.d - a.d;\n  });\n\n  for (i = 0; i < dps.length; i++)\n    if (dps[i].d > MD) {\n      let od = dps[i].d;\n      dps[i].d = MD;\n      dbt += bCost - (1 << (maxl - od));\n    } else break;\n  dbt = dbt >>> (maxl - MD);\n  while (dbt > 0) {\n    let od = dps[i].d;\n    if (od < MD) {\n      dps[i].d++;\n      dbt -= 1 << (MD - od - 1);\n    } else i++;\n  }\n  for (; i >= 0; i--)\n    if (dps[i].d == MD && dbt < 0) {\n      dps[i].d--;\n      dbt++;\n    }\n  if (dbt != 0) console.log('debt left');\n};\n\nUZIP.F._goodIndex = function(v, arr) {\n  let i = 0;\n  if (arr[i | 16] <= v) i |= 16;\n  if (arr[i | 8] <= v) i |= 8;\n  if (arr[i | 4] <= v) i |= 4;\n  if (arr[i | 2] <= v) i |= 2;\n  if (arr[i | 1] <= v) i |= 1;\n  return i;\n};\nUZIP.F._writeLit = function(ch, ltree, out, pos) {\n  UZIP.F._putsF(out, pos, ltree[ch << 1]);\n  return pos + ltree[(ch << 1) + 1];\n};\n\nUZIP.F.inflate = function(data, buf) {\n  if (data[0] == 3 && data[1] == 0) return buf ? buf : new Uint8Array(0);\n  let F = UZIP.F,\n    bitsF = F._bitsF,\n    bitsE = F._bitsE,\n    decodeTiny = F._decodeTiny,\n    makeCodes = F.makeCodes,\n    codes2map = F.codes2map,\n    get17 = F._get17;\n  let U = F.U;\n\n  let noBuf = buf == null;\n  if (noBuf) buf = new Uint8Array((data.length >> 2) << 3);\n\n  let BFINAL = 0,\n    BTYPE = 0,\n    HLIT = 0,\n    HDIST = 0,\n    HCLEN = 0,\n    ML = 0,\n    MD = 0;\n  let off = 0,\n    pos = 0;\n  let lmap, dmap;\n\n  while (BFINAL == 0) {\n    BFINAL = bitsF(data, pos, 1);\n    BTYPE = bitsF(data, pos + 1, 2);\n    pos += 3;\n    //console.log(BFINAL, BTYPE);\n\n    if (BTYPE == 0) {\n      if ((pos & 7) != 0) pos += 8 - (pos & 7);\n      let p8 = (pos >>> 3) + 4,\n        len = data[p8 - 4] | (data[p8 - 3] << 8); //console.log(len);//bitsF(data, pos, 16),\n      if (noBuf) buf = UZIP.F._check(buf, off + len);\n      buf.set(new Uint8Array(data.buffer, data.byteOffset + p8, len), off);\n      //for(let i=0; i<len; i++) buf[off+i] = data[p8+i];\n      //for(let i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw \"e\";\n      pos = (p8 + len) << 3;\n      off += len;\n      continue;\n    }\n    if (noBuf) buf = UZIP.F._check(buf, off + (1 << 17));\n    if (BTYPE == 1) {\n      lmap = U.flmap;\n      dmap = U.fdmap;\n      ML = (1 << 9) - 1;\n      MD = (1 << 5) - 1;\n    }\n    if (BTYPE == 2) {\n      HLIT = bitsE(data, pos, 5) + 257;\n      HDIST = bitsE(data, pos + 5, 5) + 1;\n      HCLEN = bitsE(data, pos + 10, 4) + 4;\n      pos += 14;\n\n      let ppos = pos;\n      for (let i = 0; i < 38; i += 2) {\n        U.itree[i] = 0;\n        U.itree[i + 1] = 0;\n      }\n      let tl = 1;\n      for (let i = 0; i < HCLEN; i++) {\n        let l = bitsE(data, pos + i * 3, 3);\n        U.itree[(U.ordr[i] << 1) + 1] = l;\n        if (l > tl) tl = l;\n      }\n      pos += 3 * HCLEN; //console.log(itree);\n      makeCodes(U.itree, tl);\n      codes2map(U.itree, tl, U.imap);\n\n      lmap = U.lmap;\n      dmap = U.dmap;\n\n      let ml = decodeTiny(U.imap, (1 << tl) - 1, HLIT, data, pos, U.ltree);\n      ML = (1 << (ml >>> 24)) - 1;\n      pos += ml & 0xffffff;\n      makeCodes(U.ltree, ml >>> 24);\n      codes2map(U.ltree, ml >>> 24, lmap);\n\n      let md = decodeTiny(U.imap, (1 << tl) - 1, HDIST, data, pos, U.dtree);\n      MD = (1 << (md >>> 24)) - 1;\n      pos += md & 0xffffff;\n      makeCodes(U.dtree, md >>> 24);\n      codes2map(U.dtree, md >>> 24, dmap);\n    }\n    //let ooff=off, opos=pos;\n    while (true) {\n      let code = lmap[get17(data, pos) & ML];\n      pos += code & 15;\n      let lit = code >>> 4; //U.lhst[lit]++;\n      if (lit >>> 8 == 0) {\n        buf[off++] = lit;\n      } else if (lit == 256) {\n        break;\n      } else {\n        let end = off + lit - 254;\n        if (lit > 264) {\n          let ebs = U.ldef[lit - 257];\n          end = off + (ebs >>> 3) + bitsE(data, pos, ebs & 7);\n          pos += ebs & 7;\n        }\n        //UZIP.F.dst[end-off]++;\n\n        let dcode = dmap[get17(data, pos) & MD];\n        pos += dcode & 15;\n        let dlit = dcode >>> 4;\n        let dbs = U.ddef[dlit],\n          dst = (dbs >>> 4) + bitsF(data, pos, dbs & 15);\n        pos += dbs & 15;\n\n        //let o0 = off-dst, stp = Math.min(end-off, dst);\n        //if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else\n        //if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else\n        //if(dst==1) buf.fill(buf[off-1], off, end);  else\n        while (off < end) {\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n        }\n        off = end;\n        //while(off!=end) {  buf[off]=buf[off++-dst];  }\n      }\n    }\n    //console.log(off-ooff, (pos-opos)>>>3);\n  }\n  //console.log(UZIP.F.dst);\n  //console.log(tlen, dlen, off-tlen+tcnt);\n  return buf.length == off ? buf : buf.slice(0, off);\n};\nUZIP.F._check = function(buf, len) {\n  let bl = buf.length;\n  if (len <= bl) return buf;\n  let nbuf = new Uint8Array(bl << 1);\n  for (let i = 0; i < bl; i += 4) {\n    nbuf[i] = buf[i];\n    nbuf[i + 1] = buf[i + 1];\n    nbuf[i + 2] = buf[i + 2];\n    nbuf[i + 3] = buf[i + 3];\n  }\n  return nbuf;\n};\n\nUZIP.F._decodeTiny = function(lmap, LL, len, data, pos, tree) {\n  let opos = pos;\n  let bitsE = UZIP.F._bitsE,\n    get17 = UZIP.F._get17;\n  let dlen = len << 1,\n    i = 0,\n    mx = 0;\n  //if(pos<1000) console.log(\"--------\");\n  //console.log(\"----\", pos, \":\",  data[7],data[8], data[9], data[10], data[11]);\n  while (i < dlen) {\n    let code = lmap[get17(data, pos) & LL];\n    pos += code & 15;\n    let lit = code >>> 4; //if(pos<1000) console.log(lit, i>>>1);\n    //if(i<20)console.log(lit, code>>>9, pos);\n    if (lit <= 15) {\n      tree[i] = 0;\n      tree[i + 1] = lit;\n      if (lit > mx) mx = lit;\n      i += 2;\n    } else {\n      let ll = 0,\n        n = 0;\n      if (lit == 16) {\n        n = (3 + bitsE(data, pos, 2)) << 1;\n        pos += 2;\n        ll = tree[i - 1];\n      } else if (lit == 17) {\n        n = (3 + bitsE(data, pos, 3)) << 1;\n        pos += 3;\n      } else if (lit == 18) {\n        n = (11 + bitsE(data, pos, 7)) << 1;\n        pos += 7;\n      }\n      let ni = i + n;\n      while (i < ni) {\n        tree[i] = 0;\n        tree[i + 1] = ll;\n        i += 2;\n      }\n    }\n  }\n  let tl = tree.length;\n  while (i < tl) {\n    tree[i + 1] = 0;\n    i += 2;\n  }\n  return (mx << 24) | (pos - opos);\n};\n\nUZIP.F.makeCodes = function(tree, MAX_BITS) {\n  // code, length\n  let U = UZIP.F.U;\n  let max_code = tree.length;\n  let code, bits, n, i, len;\n\n  let bl_count = U.bl_count;\n  for (let i = 0; i <= MAX_BITS; i++) bl_count[i] = 0;\n  for (i = 1; i < max_code; i += 2) bl_count[tree[i]]++;\n\n  let next_code = U.next_code; // smallest code for each length\n\n  code = 0;\n  bl_count[0] = 0;\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n\n  for (n = 0; n < max_code; n += 2) {\n    len = tree[n + 1];\n    if (len != 0) {\n      tree[n] = next_code[len];\n      next_code[len]++;\n    }\n  }\n};\nUZIP.F.codes2map = function(tree, MAX_BITS, map) {\n  let max_code = tree.length;\n  let U = UZIP.F.U,\n    r15 = U.rev15;\n  for (let i = 0; i < max_code; i += 2)\n    if (tree[i + 1] != 0) {\n      let lit = i >> 1;\n      let cl = tree[i + 1],\n        val = (lit << 4) | cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);\n      let rest = MAX_BITS - cl,\n        i0 = tree[i] << rest,\n        i1 = i0 + (1 << rest);\n      //tree[i]=r15[i0]>>>(15-MAX_BITS);\n      while (i0 != i1) {\n        let p0 = r15[i0] >>> (15 - MAX_BITS);\n        map[p0] = val;\n        i0++;\n      }\n    }\n};\nUZIP.F.revCodes = function(tree, MAX_BITS) {\n  let r15 = UZIP.F.U.rev15,\n    imb = 15 - MAX_BITS;\n  for (let i = 0; i < tree.length; i += 2) {\n    let i0 = tree[i] << (MAX_BITS - tree[i + 1]);\n    tree[i] = r15[i0] >>> imb;\n  }\n};\n\nUZIP.F._putsE = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n};\nUZIP.F._putsF = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n  dt[o + 2] |= val >>> 16;\n};\n\nUZIP.F._bitsE = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8)) >>> (pos & 7)) & ((1 << length) - 1);\n};\nUZIP.F._bitsF = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7)) & ((1 << length) - 1);\n};\n/*\nUZIP.F._get9 = function(dt, pos) {\n\treturn ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;\n} */\nUZIP.F._get17 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7);\n};\nUZIP.F._get25 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16) | (dt[(pos >>> 3) + 3] << 24)) >>> (pos & 7);\n};\n\nUZIP.F.U = {\n  next_code: new Uint16Array(16),\n  bl_count: new Uint16Array(16),\n  ordr: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n  of0: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n  exb: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n  ldef: new Uint16Array(32),\n  df0: [\n    1,\n    2,\n    3,\n    4,\n    5,\n    7,\n    9,\n    13,\n    17,\n    25,\n    33,\n    49,\n    65,\n    97,\n    129,\n    193,\n    257,\n    385,\n    513,\n    769,\n    1025,\n    1537,\n    2049,\n    3073,\n    4097,\n    6145,\n    8193,\n    12289,\n    16385,\n    24577,\n    65535,\n    65535\n  ],\n  dxb: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n  ddef: new Uint32Array(32),\n  flmap: new Uint16Array(512),\n  fltree: [],\n  fdmap: new Uint16Array(32),\n  fdtree: [],\n  lmap: new Uint16Array(32768),\n  ltree: [],\n  dmap: new Uint16Array(32768),\n  dtree: [],\n  imap: new Uint16Array(512),\n  itree: [],\n  //rev9 : new Uint16Array(  512)\n  rev15: new Uint16Array(1 << 15),\n  lhst: new Uint32Array(286),\n  dhst: new Uint32Array(30),\n  ihst: new Uint32Array(19),\n  lits: new Uint32Array(15000),\n  strt: new Uint16Array(1 << 16),\n  prev: new Uint16Array(1 << 15)\n};\n\n(function() {\n  let U = UZIP.F.U;\n  let len = 1 << 15;\n  for (let i = 0; i < len; i++) {\n    let x = i;\n    x = ((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1);\n    x = ((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2);\n    x = ((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4);\n    x = ((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8);\n    U.rev15[i] = ((x >>> 16) | (x << 16)) >>> 17;\n  }\n\n  for (let i = 0; i < 32; i++) {\n    U.ldef[i] = (U.of0[i] << 3) | U.exb[i];\n    U.ddef[i] = (U.df0[i] << 4) | U.dxb[i];\n  }\n\n  let i = 0;\n  for (; i <= 143; i++) U.fltree.push(0, 8);\n  for (; i <= 255; i++) U.fltree.push(0, 9);\n  for (; i <= 279; i++) U.fltree.push(0, 7);\n  for (; i <= 287; i++) U.fltree.push(0, 8);\n  UZIP.F.makeCodes(U.fltree, 9);\n  UZIP.F.codes2map(U.fltree, 9, U.flmap);\n  UZIP.F.revCodes(U.fltree, 9);\n\n  for (i = 0; i < 32; i++) U.fdtree.push(0, 5);\n  UZIP.F.makeCodes(U.fdtree, 5);\n  UZIP.F.codes2map(U.fdtree, 5, U.fdmap);\n  UZIP.F.revCodes(U.fdtree, 5);\n\n  for (let i = 0; i < 19; i++) U.itree.push(0, 0);\n  for (let i = 0; i < 286; i++) U.ltree.push(0, 0);\n  for (let i = 0; i < 30; i++) U.dtree.push(0, 0);\n})();\n","// Modules\nimport uzip from '../3p/UZIP';\n\n// Collection of functions to parse roms\n// Private function to fetch a game\nexport const fetchROMAsByteArray = (ROM, loadOptions) => {\n  const fetchROMAsByteArrayTask = async () => {\n    // Check if we were passed straight bytes\n    if (ArrayBuffer.isView(ROM) && ROM.constructor === Uint8Array) {\n      return ROM;\n    } else if (typeof ROM === 'object' && ROM.size) {\n      // We were passed a file from HTML file input\n\n      // Read the file as a Uint8Array\n      const byteArray = await getROMFromFileReaderAsByteArray(ROM);\n\n      if (ROM.name.toLowerCase().endsWith('.zip')) {\n        return await parseByteArrayAsZip(byteArray);\n      }\n\n      return byteArray;\n    } else {\n      // We were passed a URL\n\n      // Fetch the file\n      // First check if we have headers\n      const fetchHeaders = {};\n      if (loadOptions && loadOptions.headers) {\n        fetchHeaders.headers = loadOptions.headers;\n      }\n\n      let bytes = await fetch(ROM, fetchHeaders).then(blob => {\n        if (!blob.ok) {\n          return Promise.reject(blob);\n        }\n        return blob.arrayBuffer();\n      });\n\n      let fileName = ROM;\n      if (loadOptions && loadOptions.fileName) {\n        fileName = loadOptions.fileName;\n      }\n\n      // Get our byteArray\n      const byteArray = new Uint8Array(bytes);\n\n      if (fileName.toLowerCase().endsWith('.zip')) {\n        return await parseByteArrayAsZip(byteArray);\n      }\n\n      return byteArray;\n    }\n  };\n\n  return fetchROMAsByteArrayTask();\n};\n\nconst getROMFromFileReaderAsByteArray = async ROM => {\n  const fileReaderByteArray = await new Promise((resolve, reject) => {\n    // Read the file object\n    // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const byteArray = new Uint8Array(fileReader.result);\n      resolve(byteArray);\n    };\n    fileReader.readAsArrayBuffer(ROM);\n  });\n  return fileReaderByteArray;\n};\n\n// Function to parse and find the gb files within an archive\nconst parseByteArrayAsZip = async byteArray => {\n  // Parse the zip using UZIP\n  const unzipObject = await uzip.parse(byteArray);\n\n  // Find the ROM in the output\n  let foundROM = false;\n  const unzipObjectKeys = Object.keys(unzipObject);\n  unzipObjectKeys.some(key => {\n    const lowercaseKey = key.toLowerCase();\n    if (lowercaseKey.includes('.gb') || lowercaseKey.includes('.gbc')) {\n      foundROM = unzipObject[key];\n      return true;\n    }\n    return false;\n  });\n\n  if (!foundROM) {\n    throw new Error('Could not find a ROM in zip...');\n  }\n\n  return foundROM;\n};\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    var pow;\r\n    if (supportsNativeBigInt) {\r\n        // forced to use eval because ** is a syntax error on pre-ECMAScript2017 environments.\r\n        pow = eval(\"(a,b)=>a**b\");\r\n    }\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        if (b === BigInt(0)) return Integer[1];\r\n        if (a === BigInt(0)) return Integer[0];\r\n        if (a === BigInt(1)) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(BigInt(0));\r\n        return new NativeBigInt(pow(a, b));\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","import { WasmBoyLib } from '../wasmboy/wasmboy';\nimport { WasmBoyAudio } from '../audio/audio';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// https://www.npmjs.com/package/audiobuffer-to-wav\n// https://github.com/Jam3/audiobuffer-to-wav/blob/master/demo/index.js\nimport toWav from 'audiobuffer-to-wav';\n\n// https://www.npmjs.com/package/big-integer\nimport bigInt from 'big-integer';\n\nexport const saveCurrentAudioBufferToWav = () => {\n  if (!WasmBoyAudio.audioBuffer) {\n    return;\n  }\n\n  const wav = toWav(WasmBoyAudio.audioBuffer);\n  const blob = new window.Blob([new DataView(wav)], {\n    type: 'audio/wav'\n  });\n\n  const url = window.URL.createObjectURL(blob);\n  const anchor = document.createElement('a');\n  document.body.appendChild(anchor);\n  anchor.style = 'display: none';\n  anchor.href = url;\n  anchor.download = 'audio.wav';\n  anchor.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const runWasmExport = async (exportKey, parameters) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n    export: exportKey,\n    parameters\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getWasmMemorySection = async (start, end) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION,\n    start,\n    end\n  });\n\n  const eventData = getEventData(event);\n  return new Uint8Array(eventData.message.response);\n};\n\nexport const getWasmConstant = async constantKey => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n    constant: constantKey\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getStepsAsString = async radix => {\n  const stepsPerStepSet = await runWasmExport('getStepsPerStepSet');\n  const stepSets = await runWasmExport('getStepSets');\n  const steps = await runWasmExport('getSteps');\n\n  const bigSteps = bigInt(stepsPerStepSet)\n    .multiply(stepSets)\n    .add(steps);\n\n  if (radix) {\n    return bigSteps.toString(radix);\n  }\n  return bigSteps.toString(10);\n};\n\nexport const getCyclesAsString = async radix => {\n  const cyclesPerCycleSet = await runWasmExport('getCyclesPerCycleSet');\n  const cycleSets = await runWasmExport('getCycleSets');\n  const cycles = await runWasmExport('getCycles');\n\n  const bigCycles = bigInt(cyclesPerCycleSet)\n    .multiply(cycleSets)\n    .add(cycles);\n\n  if (radix) {\n    return bigCycles.toString(radix);\n  }\n  return bigCycles.toString(10);\n};\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Other lib helpers\nimport { instantiateWorkers } from '../worker/instantiate';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { loadROMToWasmBoy } from './loadrom';\nimport { render } from './render';\nimport { libWorkerOnMessage } from './onmessage';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// Our Main Orchestrator of the WasmBoy lib\nclass WasmBoyLibService {\n  // Start the request to our wasm module\n  constructor() {\n    this.worker = undefined;\n    this.coreType = undefined;\n    this.canvasElement = undefined;\n    this.paused = false;\n    this.ready = false;\n    this.loadedAndStarted = false;\n    this.renderId = false;\n    this.loadedROM = false;\n\n    this.fps = 0;\n\n    // Reset our config and stateful elements that depend on it\n    // this.options is set here\n    this._resetConfig();\n\n    // Add some listeners for when we are put into the background\n    if (typeof window !== 'undefined') {\n      window.document.addEventListener('visibilitychange', () => {\n        // fires when user switches tabs, apps, goes to homescreen, etc.\n        if (document.visibilityState === 'hidden') {\n          if (this.options && this.options.disablePauseOnHidden) {\n            return;\n          }\n          this.pause();\n        }\n      });\n    }\n  }\n\n  // Function to initialize/configure Wasmboy\n  config(wasmBoyOptions, canvasElement) {\n    const configTask = async () => {\n      // Pause any currently running game\n      await this.pause();\n\n      // Get our canvas elements\n      await this.setCanvas(canvasElement);\n\n      // Reset our config and stateful elements that depend on it\n      // If we have a new config to take its place\n      if (wasmBoyOptions || !this.options) {\n        this._resetConfig();\n      }\n\n      // set our options\n      if (wasmBoyOptions) {\n        // Set all options\n        Object.keys(wasmBoyOptions).forEach(key => {\n          if (this.options[key] !== undefined) {\n            this.options[key] = wasmBoyOptions[key];\n          }\n        });\n\n        // Aliases\n        // Gameboy Speed / Framerate\n        if (wasmBoyOptions.gameboySpeed) {\n          let gameboyFrameRate = Math.floor(wasmBoyOptions.gameboySpeed * 60);\n          if (gameboyFrameRate <= 0) {\n            gameboyFrameRate = 1;\n          }\n          this.options.gameboyFrameRate = gameboyFrameRate;\n        }\n      }\n    };\n\n    return configTask();\n  }\n\n  // Function to return our current configuration as an object\n  getConfig() {\n    return this.options;\n  }\n\n  // Function to get/set our canvas element\n  // Useful for vaporboy\n  setCanvas(canvasElement) {\n    if (!canvasElement) {\n      return Promise.resolve();\n    }\n\n    const setCanvasTask = async () => {\n      await this.pause();\n\n      // Set our new canvas element, and re-run init on graphics to apply styles and things\n      this.canvasElement = canvasElement;\n\n      if (this.wasmInstance && this.wasmByteMemory) {\n        await WasmBoyGraphics.initialize(this.canvasElement, this.wasmInstance, this.wasmByteMemory, this.options.updateGraphicsCallback);\n      }\n    };\n\n    return setCanvasTask();\n  }\n\n  getCanvas() {\n    return this.canvasElement;\n  }\n\n  // Finish request for wasm module, and fetch game\n  loadROM(ROM, fetchHeaders) {\n    const boundLoadROM = loadROMToWasmBoy.bind(this);\n    return boundLoadROM(ROM, fetchHeaders);\n  }\n\n  // function to start/resume\n  play() {\n    const playTask = async () => {\n      if (!this.ready) {\n        return;\n      }\n      if (!this.loadedAndStarted) {\n        this.loadedAndStarted = true;\n        if (this.options.onLoadedAndStarted) {\n          this.options.onLoadedAndStarted();\n        }\n      }\n      if (this.options.onPlay) {\n        this.options.onPlay();\n      }\n\n      // Bless the audio, this is to fix any autoplay issues\n      if (!this.options.headless) {\n        WasmBoyAudio.resumeAudioContext();\n        WasmBoyAudio.resetTimeStretch();\n      }\n\n      // Reset the audio queue index to stop weird pauses when trying to load a game\n      await this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE\n      });\n\n      // Undo any pause\n      this.paused = false;\n\n      if (!this.updateId) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PLAY\n        });\n      }\n\n      if (!this.renderId && !this.options.headless) {\n        this.renderId = raf(() => {\n          render.call(this);\n        });\n      }\n    };\n\n    return playTask();\n  }\n\n  // Function to pause the game, returns a promise\n  // Will try to wait until the emulation sync is returned, and then will\n  // Allow any actions\n  pause() {\n    const pauseTask = async () => {\n      this.paused = true;\n      if (this.ready && this.options.onPause) {\n        this.options.onPause();\n      }\n\n      // Cancel our update and render loop\n      raf.cancel(this.renderId);\n      this.renderId = false;\n\n      // Cancel any playing audio\n      // Audio played with latency may be still going on here\n      if (!this.options.headless) {\n        WasmBoyAudio.cancelAllAudio(true);\n      }\n\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PAUSE\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n\n    return pauseTask();\n  }\n\n  // Function to reset wasmBoy, with an optional set of options\n  reset(wasmBoyOptions) {\n    const resetTask = async () => {\n      this.config(wasmBoyOptions, this.canvasElement);\n      // Reload the game if one was already loaded\n      if (this.loadedROM) {\n        return this.loadROM(this.loadedROM);\n      }\n    };\n\n    return resetTask();\n  }\n\n  saveState() {\n    const saveStateTask = async () => {\n      await this.pause();\n      const saveState = await WasmBoyMemory.saveState();\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  // Function to return the save states for the game\n  getSaveStates() {\n    const getSaveStatesTask = async () => {\n      let cartridgeObject = await WasmBoyMemory.getCartridgeObject();\n      if (!cartridgeObject) {\n        return [];\n      } else {\n        return cartridgeObject.saveStates;\n      }\n    };\n\n    return getSaveStatesTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      await this.pause();\n      await WasmBoyMemory.loadState(saveState);\n    };\n\n    return loadStateTask();\n  }\n\n  // Simply returns the FPS we get back from the lib worker\n  getFPS() {\n    return this.fps;\n  }\n\n  // Simply returns our current Core Type\n  getCoreType() {\n    return this.coreType;\n  }\n\n  // Private Function to reset options to default\n  _resetConfig() {\n    // Reset Fps Metering\n    this.fpsTimeStamps = [];\n    this.frameSkipCounter = 0;\n\n    // Configurable Options\n    // Set callbacks to null and not undefined,\n    // For when configs are passed, we will be sure to\n    // add them as keys\n    this.options = {\n      headless: false,\n      disablePauseOnHidden: false,\n      isAudioEnabled: true,\n      gameboyFrameRate: 60,\n      frameSkip: 0,\n      includeBootROM: false,\n      isGbcEnabled: true,\n      audioBatchProcessing: false,\n      graphicsBatchProcessing: false,\n      timersBatchProcessing: false,\n      graphicsDisableScanlineRendering: false,\n      audioAccumulateSamples: false,\n      tileRendering: false,\n      tileCaching: false,\n      updateGraphicsCallback: null,\n      updateAudioCallback: null,\n      saveStateCallback: null,\n      onReady: null,\n      onPlay: null,\n      onPause: null,\n      onLoadedAndStarted: null\n    };\n  }\n\n  // Function to instantiate and set up our workers\n  // This ensures we don't create workers twice\n  _instantiateWorkers() {\n    const instantiateWorkersTask = async () => {\n      if (this.worker) {\n        return;\n      } else {\n        this.worker = await instantiateWorkers();\n        this.worker.addMessageListener(libWorkerOnMessage.bind(this));\n      }\n    };\n\n    return instantiateWorkersTask();\n  }\n}\n\nexport const WasmBoyLib = new WasmBoyLibService();\n","// Build our public lib api\nimport { WasmBoyLib } from './wasmboy/wasmboy';\nimport { WasmBoyAudio } from './audio/audio';\nimport { WasmBoyController } from './controller/controller';\nimport { WasmBoyMemory } from './memory/memory';\nimport {\n  saveCurrentAudioBufferToWav,\n  runWasmExport,\n  getWasmMemorySection,\n  getWasmConstant,\n  getStepsAsString,\n  getCyclesAsString\n} from './debug/debug';\n\n// Get our package.json\nimport packageJson from '../package.json';\n\n// Debugging properties prepended with _\n\n// export an object that public exposes parts of the singleton\n// Need to bind to preserve this\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\nexport const WasmBoy = {\n  config: WasmBoyLib.config.bind(WasmBoyLib),\n  getCoreType: WasmBoyLib.getCoreType.bind(WasmBoyLib),\n  getConfig: WasmBoyLib.getConfig.bind(WasmBoyLib),\n  setCanvas: WasmBoyLib.setCanvas.bind(WasmBoyLib),\n  getCanvas: WasmBoyLib.getCanvas.bind(WasmBoyLib),\n  loadROM: WasmBoyLib.loadROM.bind(WasmBoyLib),\n  play: WasmBoyLib.play.bind(WasmBoyLib),\n  pause: WasmBoyLib.pause.bind(WasmBoyLib),\n  reset: WasmBoyLib.reset.bind(WasmBoyLib),\n  isPlaying: () => {\n    return !WasmBoyLib.paused;\n  },\n  isPaused: () => {\n    return WasmBoyLib.paused;\n  },\n  isReady: () => {\n    return WasmBoyLib.ready;\n  },\n  isLoadedAndStarted: () => {\n    return WasmBoyLib.loadedAndStarted;\n  },\n  getVersion: () => {\n    return packageJson.version;\n  },\n  saveState: WasmBoyLib.saveState.bind(WasmBoyLib),\n  getSaveStates: WasmBoyLib.getSaveStates.bind(WasmBoyLib),\n  loadState: WasmBoyLib.loadState.bind(WasmBoyLib),\n  getFPS: WasmBoyLib.getFPS.bind(WasmBoyLib),\n  enableDefaultJoypad: WasmBoyController.enableDefaultJoypad.bind(WasmBoyController),\n  disableDefaultJoypad: WasmBoyController.disableDefaultJoypad.bind(WasmBoyController),\n  setJoypadState: WasmBoyController.setJoypadState.bind(WasmBoyController),\n  addTouchInput: WasmBoyController.addTouchInput.bind(WasmBoyController),\n  removeTouchInput: WasmBoyController.removeTouchInput.bind(WasmBoyController),\n  resumeAudioContext: WasmBoyAudio.resumeAudioContext.bind(WasmBoyAudio),\n  _getCartridgeInfo: WasmBoyMemory.getCartridgeInfo.bind(WasmBoyMemory),\n  _saveCurrentAudioBufferToWav: saveCurrentAudioBufferToWav,\n  _runWasmExport: runWasmExport,\n  _getWasmMemorySection: getWasmMemorySection,\n  _getWasmConstant: getWasmConstant,\n  _getStepsAsString: getStepsAsString,\n  _getCyclesAsString: getCyclesAsString\n};\n"],"names":["getEventData","event","getSaveState","saveState","Object","WASMBOY_SAVE_STATE_SCHEMA","internalState","paletteMemory","gameboyMemory","cartridgeRam","Date","saveStateCallback","_prepareAndStoreAutoSave","saveStateMemoryKeys","i","Array","localStorage","WASMBOY_UNLOAD_STORAGE","JSON","header","cartridgeHeader","_findAndCommitAutoSave","findAndCommitAutoSaveTask","unloadStorage","unloadStorageObject","Uint8Array","saveCartridgeRam","initializeAutoSave","window","document","getInputId","idGenerator","Math","random","toString","replace","substr","slice","getKeyInput","keyCode","input","assign","keyInputSchema","ID","KEY_CODE","getGamepadInput","gamepadButtonId","axisId","axisIsPositive","gamepadInputSchema","JOYSTICK","BUTTON_ID","undefined","AXIS_ID","IS_POSITIVE","getTouchInput","element","type","direction","eventHandler","touchInputSchema","ELEMENT","TYPE","DIRECTION","EVENT_HANDLER","boundingRect","getBoundingClientRect","BOUNDING_RECT","eventListenerCallback","addEventListener","getSmartWorkerMessage","message","messageId","workerId","generateId","loadROMToWasmBoy","ROM","fetchHeaders","initializeTask","initPromises","fetchROMAsByteArray","_instantiateWorkers","options","headless","WasmBoyMemory","ROMAsByteArray","Promise","responses","response","worker","postMessage","WORKER_MESSAGE_TYPE","loadROMAndConfigTask","config","audioBatchProcessing","graphicsBatchProcessing","timersBatchProcessing","graphicsDisableScanlineRendering","audioAccumulateSamples","tileRendering","tileCaching","gameboyFrameRate","isAudioEnabled","frameSkip","loadROMTask","pause","WasmBoyGraphics","canvasElement","updateGraphicsCallback","WasmBoyAudio","updateAudioCallback","WasmBoyController","onReady","render","paused","shouldSkipRenderingFrame","frameSkipCounter","raf","writeString","view","offset","string","length","setUint8","charCodeAt","libWorkerOnMessage","eventData","crashedTask","console","programCounter","runWasmExport","gameboyMemoryConstant","getWasmConstant","opcode","getWasmMemorySection","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","WasmBoyGraphicsService","constructor","initialize","getContext","GAMEBOY_CAMERA_WIDTH","GAMEBOY_CAMERA_HEIGHT","canvasContext","createImageData","width","height","setWorker","Uint8ClampedArray","renderFrame","imageDataArrayChanged","imageDataArray","canvasImageData","WasmBoyAudioService","audioSources","resumeAudioContext","audioContext","state","currentTime","resetTimeStretch","latency","audioPlaytime","playAudio","currentFps","allowFastSpeedStretching","numberOfSamples","leftChannelBuffer","rightChannelBuffer","fps","fpsDifference","averageTimeStretchFps","SLOW_TIME_STRETCH_MIN_FPS","reduce","accumulator","currentValue","playbackRate","createBuffer","WASMBOY_SAMPLE_RATE","audioBuffer","copyToChannel","Float32Array","source","createBufferSource","finalNode","responseNode","destination","audioContextCurrentTime","audioContextCurrentTimeWithLatency","DEFAULT_AUDIO_LATENCY_IN_MILLI","playtime","playTime","setTimeout","cancelAllAudio","stopCurrentAudio","_createAudioContextIfNone","promisifyRequest","request","resolve","reject","onsuccess","request.onsuccess","result","onerror","request.onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","defineProperty","prototype","get","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","idbTransaction.oncomplete","idbTransaction.onerror","onabort","idbTransaction.onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","ObjectStore.prototype.createIndex","ObjectStore.prototype.index","IDBObjectStore","objectStore","Transaction.prototype.objectStore","IDBTransaction","createObjectStore","UpgradeDB.prototype.createObjectStore","IDBDatabase","DB.prototype.transaction","funcName","call","callback","nativeObject","getAll","Constructor.prototype.getAll","query","count","instance","items","iterateCursor","push","continue","module","exports","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","request.onupgradeneeded","delete","default","require$$0","keyval","dbPromise","idb","upgradeDB","key","tx","clear","keys","idbKeyval","wasmboyMemory","wasmBoyInternalState","wasmBoyPaletteMemory","gameBoyMemory","date","isAuto","WasmBoyMemoryService","RAM","_initializeConstants","memoryTypes","CARTRIDGE_ROM","CARTRIDGE_RAM","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","getLoadedCartridgeMemoryState","loadedCartridgeMemoryState","clearMemory","loadCartridgeRom","loadTask","workerMemoryObject","CARTRIDGE_HEADER","passedHeader","passedCartridgeRam","saveCartridgeRamTask","Error","cartridgeObject","loadCartridgeRam","loadCartridgeRamTask","passedSaveState","saveStateTask","loadState","loadStateTask","saverState","getCartridgeObject","getCartridgeInfo","getCartridgeInfoTask","cartridgeInfo","cartridgeRom","String","ACTIVE","keyMapSchema","UP","KEYBOARD","GAMEPAD","TOUCHPAD","RIGHT","DOWN","LEFT","A","B","SELECT","START","keymap","ARROW_UP","W","NUMPAD_8","ARROW_RIGHT","D","NUMPAD_6","ARROW_DOWN","S","NUMPAD_5","NUMPAD_2","ARROW_LEFT","NUMPAD_4","X","SEMI_COLON","NUMPAD_7","Z","ESCAPE","SINGLE_QUOTE","BACKSPACE","NUMPAD_9","RETURN","SPACE","NUMPAD_3","SHIFT","TAB","BACK_SLASH","NUMPAD_1","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","INPUT_HTML_TAGS","ResponsiveGamepad","ResponsiveGamepadService","TypeError","gamepadAnalogStickDeadZone","keyMapKeys","keyMap","parse","stringify","addedEventListeners","enabled","enable","updateKeyboard","bind","updateTouchpadRect","disable","isEnabled","addTouchInput","keyMapKey","_this","touchInput","updateTouchpad","removeTouchInput","touchInputId","touchInputIndex","some","splice","getState","_this2","updateGamepad","controllerState","keyboardState","keyInput","gamepadState","gamepadInput","touchState","isIgnoringKeyEvents","htmlTag","activeElement","tagName","toLowerCase","keyEvent","_this3","isTargetInputField","isPressed","preventDefault","_this4","gamepads","navigator","getGamepads","_loop","gamepad","buttons","buttonId","pressed","axes","_ret","_this5","resetTouchDpad","_this6","dpadKeys","dpadKey","includes","touches","touch","rectCenterX","right","left","touchX","clientX","touchY","clientY","top","abs","bottom","isLeft","isUp","WasmBoyControllerService","updateController","setJoypadState","setJoypadStateParamsAsArray","enableDefaultJoypad","disableDefaultJoypad","idCounter","randomId","id","SmartWorker","workerUrl","workerJs","atob","blob","Blob","e","BlobBuilder","Worker","URL","_onMessageHandler","transfer","messageObject","messageIdListener","responseMessage","messageListener","addMessageListener","removeMessageListener","messageListenerIndex","instantiateWorkers","libWorker","wasmboyLibWasmWorkerUrl","LIB","graphicsWorker","wasmboyGraphicsWorkerUrl","GRAPHICS","audioWorker","wasmboyAudioWorkerUrl","AUDIO","controllerWorker","wasmboyControllerWorkerUrl","CONTROLLER","memoryWorker","wasmboyMemoryWorkerUrl","MEMORY","workerReadyPromises","childWorkers","childWorker","messageChannel","MessageChannel","workerReadyPromise","messagesReceived","ports","UZIP","buf","rUs","rUi","o","out","data","eocd","cnu","csize","usize","nl","el","cl","roff","_readLocal","UZIP._readLocal","cmpr","nlen","elen","file","inflateRaw","UZIP.inflateRaw","inflate","UZIP.inflate","deflate","UZIP.deflate","opts","level","off","crc","deflateRaw","UZIP.deflateRaw","encode","UZIP.encode","tot","wUi","wUs","zpd","cpr","fof","ioff","_noNeed","UZIP._noNeed","fn","ext","indexOf","_writeHeader","UZIP._writeHeader","t","table","tab","Uint32Array","n","c","k","update","len","b","l","UZIP.adler","a","end","eend","readUshort","buff","writeUshort","readUint","writeUint","readASCII","s","writeASCII","pad","readUTF8","ns","decodeURIComponent","writeUTF8","str","strl","ci","code","sizeUTF8","UZIP.F.deflateRaw","opos","lvl","opt","U","goodIndex","putsE","pos","cvrd","dlen","lits","strt","prev","li","lc","bs","ebits","nc","ii","mch","dst","lgi","dgi","UZIP.F._bestMatch","nice","chain","pi","dif","td","tl","dlim","maxd","j","ei","curd","UZIP.F._howLong","oi","UZIP.F._hash","UZIP.F._writeBlock","BFINAL","o0","l0","putsF","MD","MH","numl","numd","T","ML","numh","lset","dset","cstSize","fxdSize","dynSize","BTYPE","ltree","dtree","si","qb","qc","UZIP.F._copyExact","p8","UZIP.F.getTrees","UZIP.F.getSecond","UZIP.F.nonZero","UZIP.F.contSize","tree","hst","UZIP.F._codeTiny","rst","rsl","UZIP.F._lenCodes","nxt","nnxt","prv","lz","zc","UZIP.F._hufTree","MAXL","list","hl","lit","f","l2","i0","i1","i2","r","d","maxl","UZIP.F.setDepth","UZIP.F.restrictDepth","dps","bCost","dbt","od","UZIP.F._goodIndex","v","arr","UZIP.F._writeLit","ch","UZIP.F.inflate","F","bitsF","bitsE","decodeTiny","makeCodes","codes2map","get17","noBuf","HLIT","HDIST","dmap","lmap","HCLEN","ml","md","ebs","dcode","dbs","UZIP.F._check","bl","nbuf","UZIP.F._decodeTiny","LL","mx","ll","ni","UZIP.F.makeCodes","MAX_BITS","max_code","bits","bl_count","next_code","UZIP.F.codes2map","map","r15","rest","UZIP.F.revCodes","imb","UZIP.F._putsE","dt","UZIP.F._putsF","UZIP.F._bitsE","UZIP.F._bitsF","UZIP.F._get17","UZIP.F._get25","Uint16Array","ordr","of0","exb","ldef","df0","dxb","ddef","flmap","fltree","fdmap","fdtree","imap","itree","rev15","lhst","dhst","ihst","x","loadOptions","fetchROMAsByteArrayTask","ArrayBuffer","byteArray","getROMFromFileReaderAsByteArray","parseByteArrayAsZip","bytes","fetch","fileName","fileReaderByteArray","fileReader","FileReader","fileReader.onload","unzipObject","uzip","foundROM","unzipObjectKeys","lowercaseKey","performance","now","module.exports","process","hrtime","getNanoSeconds","nodeLoadTime","hr","moduleLoadTime","upTime","uptime","loadTime","getTime","this","root","global","vendors","caf","suffix","last","queue","frameDuration","_now","next","max","cp","cancelled","round","handle","raf_1","cancel","polyfill","object","requestAnimationFrame","cancelAnimationFrame","bigInt","Integer","radix","alphabet","caseSensitive","DEFAULT_ALPHABET","text","absBase","base","alphabetValues","parseValue","digits","isNegative","start","parseBaseFromArray","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","MAX_INT","smallToArray","floor","arrayToSmall","trim","compareAbs","MAX_INT_ARR","BASE","createArray","truncate","ceil","add","l_a","l_b","carry","sum","addAny","addSmall","subtract","a_l","b_l","borrow","difference","subtractSmall","multiplyLong","a_i","b_j","product","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","ac","bd","abcd","multiplySmallAndArray","square","a_j","divModSmall","lambda","quotient","remainder","divisor","q","divModAny","self","supportsNativeBigInt","negate","comparison","divisorMostSignificantDigit","shift","quotientDigit","part","unshift","xlen","highx","highy","guess","check","reverse","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","divide","modPow","bitwise","xSign","ySign","xRem","not","yRem","isZero","xDivMod","highestPower2","xDigit","toJSNumber","yDivMod","yDigit","multiply","roughLOB","LOBMASK_I","BigInt","LOBMASK_BI","integerLogarithm","compareTo","tmp","greater","min","gcd","pow","times","toBase","valueOf","neg","isPositive","Number","divmod","digit","minus","toBaseString","join","parseStringValue","split","decimalPlace","test","isValid","LOG_BASE","create","BigInteger.prototype.add","plus","SmallInteger.prototype.add","NativeBigInt.prototype.add","BigInteger.prototype.subtract","SmallInteger.prototype.subtract","NativeBigInt.prototype.subtract","BigInteger.prototype.negate","SmallInteger.prototype.negate","small","NativeBigInt.prototype.negate","BigInteger.prototype.abs","SmallInteger.prototype.abs","NativeBigInt.prototype.abs","BigInteger.prototype.multiply","l1","_multiplyBySmall","SmallInteger.prototype._multiplyBySmall","BigInteger.prototype._multiplyBySmall","SmallInteger.prototype.multiply","NativeBigInt.prototype.multiply","BigInteger.prototype.square","SmallInteger.prototype.square","NativeBigInt.prototype.square","BigInteger.prototype.divmod","BigInteger.prototype.divide","over","BigInteger.prototype.mod","BigInteger.prototype.pow","eval","NativeBigInt.prototype.pow","BigInteger.prototype.modPow","isOdd","BigInteger.prototype.compareAbs","SmallInteger.prototype.compareAbs","NativeBigInt.prototype.compareAbs","compare","BigInteger.prototype.compare","Infinity","SmallInteger.prototype.compare","NativeBigInt.prototype.compare","BigInteger.prototype.equals","eq","notEquals","BigInteger.prototype.notEquals","neq","BigInteger.prototype.greater","gt","BigInteger.prototype.lesser","lt","greaterOrEquals","BigInteger.prototype.greaterOrEquals","geq","lesserOrEquals","BigInteger.prototype.lesserOrEquals","leq","BigInteger.prototype.isEven","SmallInteger.prototype.isEven","NativeBigInt.prototype.isEven","BigInteger.prototype.isOdd","SmallInteger.prototype.isOdd","NativeBigInt.prototype.isOdd","BigInteger.prototype.isPositive","SmallInteger.prototype.isPositive","BigInteger.prototype.isNegative","SmallInteger.prototype.isNegative","BigInteger.prototype.isUnit","SmallInteger.prototype.isUnit","NativeBigInt.prototype.isUnit","BigInteger.prototype.isZero","SmallInteger.prototype.isZero","NativeBigInt.prototype.isZero","BigInteger.prototype.isDivisibleBy","isPrime","BigInteger.prototype.isPrime","strict","bitLength","logN","log","isProbablePrime","BigInteger.prototype.isProbablePrime","iterations","randBetween","modInv","BigInteger.prototype.modInv","zero","newT","one","newR","lastT","lastR","BigInteger.prototype.next","SmallInteger.prototype.next","NativeBigInt.prototype.next","BigInteger.prototype.prev","SmallInteger.prototype.prev","NativeBigInt.prototype.prev","powersOfTwo","powers2Length","BigInteger.prototype.shiftLeft","shiftRight","BigInteger.prototype.shiftRight","remQuo","BigInteger.prototype.not","and","BigInteger.prototype.and","or","BigInteger.prototype.or","xor","BigInteger.prototype.xor","BigInteger.prototype.bitLength","toArray","BigInteger.prototype.toArray","SmallInteger.prototype.toArray","NativeBigInt.prototype.toArray","BigInteger.prototype.toString","zeros","SmallInteger.prototype.toString","toJSON","SmallInteger.prototype.toJSON","BigInteger.prototype.valueOf","parseInt","SmallInteger.prototype.valueOf","NativeBigInt.prototype.toJSNumber","minusOne","lcm","isInstance","Integer.isInstance","low","range","high","restricted","fromArray","Integer.fromArray","hasOwnProperty","exportKey","parameters","WasmBoyLib","export","constantKey","constant","WasmBoyLibService","disablePauseOnHidden","wasmBoyOptions","configTask","setCanvas","getConfig","setCanvasTask","wasmInstance","wasmByteMemory","getCanvas","loadROM","boundLoadROM","play","playTask","ready","loadedAndStarted","onLoadedAndStarted","onPlay","updateId","renderId","pauseTask","onPause","reset","resetTask","loadedROM","getSaveStates","getSaveStatesTask","getFPS","getCoreType","coreType","_resetConfig","includeBootROM","isGbcEnabled","instantiateWorkersTask","WasmBoy","isPlaying","isPaused","isReady","isLoadedAndStarted","getVersion","_getCartridgeInfo","_saveCurrentAudioBufferToWav","saveCurrentAudioBufferToWav","numChannels","buffer","numberOfChannels","sampleRate","format","float32","bitDepth","inputL","inputR","inputIndex","bytesPerSample","blockAlign","samples","DataView","setUint32","setUint16","setInt16","setFloat32","url","anchor","_runWasmExport","_getWasmMemorySection","_getWasmConstant","_getStepsAsString","getStepsAsString","stepsPerStepSet","stepSets","steps","bigSteps","_getCyclesAsString","getCyclesAsString","cyclesPerCycleSet","cycleSets","cycles","bigCycles"],"mappings":"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"}