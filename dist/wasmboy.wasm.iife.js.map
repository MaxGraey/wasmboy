{"version":3,"file":"wasmboy.wasm.iife.js","sources":["../lib/worker/util.js","../lib/memory/state.js","../lib/memory/autosave.js","../node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","../lib/controller/gbplugin.js","../lib/worker/smartworker.js","../lib/wasmboy/loadrom.js","../lib/wasmboy/render.js","../node_modules/audiobuffer-to-wav/dist/index.esm.js","../lib/wasmboy/onmessage.js","../lib/worker/constants.js","../lib/graphics/graphics.js","../lib/graphics/constants.js","../lib/audio/audio.js","../node_modules/idb/lib/idb.js","../node_modules/idb/lib/node.js","../lib/memory/idb.js","../lib/memory/memory.js","../lib/controller/controller.js","../lib/worker/instantiate.js","worker/wasmboy.wasm.worker.js","worker/graphics.worker.js","worker/audio.worker.js","worker/controller.worker.js","worker/memory.worker.js","../lib/3p/UZIP.js","../lib/wasmboy/fetchrom.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/raf/index.js","../node_modules/big-integer/BigInteger.js","../lib/debug/debug.js","../lib/wasmboy/wasmboy.js","../lib/index.js"],"sourcesContent":["export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n//  Will save the state in parts, to easy memory map changes:\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_SAVE_STATE_SCHEMA = {\n  wasmboyMemory: {\n    wasmBoyInternalState: [],\n    wasmBoyPaletteMemory: [],\n    gameBoyMemory: [],\n    cartridgeRam: []\n  },\n  date: undefined,\n  isAuto: undefined\n};\n\n// Function to return a save state of the current memory\nexport function getSaveState() {\n  // Save our internal wasmboy state to memory\n  // Should be done whenever we send back memory\n  // this.wasmInstance.exports.saveState();\n\n  let saveState = Object.assign({}, WASMBOY_SAVE_STATE_SCHEMA);\n\n  saveState.wasmboyMemory.wasmBoyInternalState = this.internalState;\n  saveState.wasmboyMemory.wasmBoyPaletteMemory = this.paletteMemory;\n  saveState.wasmboyMemory.gameBoyMemory = this.gameboyMemory;\n  saveState.wasmboyMemory.cartridgeRam = this.cartridgeRam;\n  saveState.date = Date.now();\n  saveState.isAuto = false;\n\n  if (this.saveStateCallback) {\n    this.saveStateCallback(saveState);\n  }\n\n  return saveState;\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Need to add a return value, and force all code in the block to be sync\n// https://stackoverflow.com/questions/7255649/window-onbeforeunload-not-working\n// http://vaughnroyko.com/idbonbeforeunload/\n// https://bugzilla.mozilla.org/show_bug.cgi?id=870645\n\n// Solution:\n// ~~Try to force sync: https://www.npmjs.com/package/deasync~~ Didn't work, requires fs\n// Save to local storage, and pick it back up in init: https://bugs.chromium.org/p/chromium/issues/detail?id=144862\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\n\n// Function to create a save state, and store it as a localstorage token\nfunction _prepareAndStoreAutoSave() {\n  // Check if the game is currently playing\n  if (!this.internalState) {\n    return null;\n  }\n\n  // Get our cartridge ram and header\n  // Use this.cartridgeHeader and this.cartridgeRam\n  //const header = getCartridgeHeader.bind(this)();\n  //const cartridgeRam = getCartridgeRam.bind(this)();\n\n  // Get our save state, and un type our arrays\n  const saveState = getSaveState.bind(this)();\n  const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n  for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n    saveState.wasmboyMemory[saveStateMemoryKeys[i]] = Array.prototype.slice.call(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n  }\n\n  // Set isAuto\n  saveState.isAuto = true;\n\n  // Need to conert types arrays, and back, or selse wll get indexed JSON\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n\n  localStorage.setItem(\n    this.WASMBOY_UNLOAD_STORAGE,\n    JSON.stringify({\n      header: Array.prototype.slice.call(this.cartridgeHeader),\n      cartridgeRam: Array.prototype.slice.call(this.cartridgeRam),\n      saveState: saveState\n    })\n  );\n\n  return null;\n}\n\n// Function to find any autosaves in localstorage, and commit them to our idb\nfunction _findAndCommitAutoSave() {\n  const findAndCommitAutoSaveTask = async () => {\n    // Load any unloaded storage in our localStorage\n    const unloadStorage = localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);\n    if (unloadStorage) {\n      const unloadStorageObject = JSON.parse(unloadStorage);\n      localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);\n\n      const header = new Uint8Array(unloadStorageObject.header);\n      const cartridgeRam = new Uint8Array(unloadStorageObject.cartridgeRam);\n\n      // Get our save state, and re-type our array\n      const saveState = unloadStorageObject.saveState;\n      if (saveState) {\n        const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n        for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n          saveState.wasmboyMemory[saveStateMemoryKeys[i]] = new Uint8Array(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n        }\n      }\n\n      await this.saveCartridgeRam(header, cartridgeRam);\n      await this.saveState(header, saveState);\n    }\n  };\n\n  return findAndCommitAutoSaveTask();\n}\n\n// Function to set event listeners to run our unload handler\nexport function initializeAutoSave() {\n  // Set listeners to ensure we save our cartridge ram before closing\n  window.addEventListener(\n    'beforeunload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'unload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'pagehide',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  // Mobile Page visibility, for pressing home, closing tabs, task switcher, etc...\n  // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n  document.addEventListener('visibilitychange', () => {\n    // fires when user switches tabs, apps, goes to homescreen, etc.\n    // NOTE: This will not create a new save state in desktop browser,\n    // Because the localstorage string is only picked up on refresh :)\n    // Unless you force kill the browser or something, which is what we want\n    // Anyways\n    if (document.visibilityState === 'hidden') {\n      _prepareAndStoreAutoSave.bind(this)();\n    }\n  });\n\n  // Restore any autosave lingering to be committed\n  return _findAndCommitAutoSave.bind(this)();\n}\n","function d(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},e=Object.keys(c);\"function\"===typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));e.forEach(function(b){var e=c[b];b in a?Object.defineProperty(a,b,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[b]=e})}return a}\nlet g={DPAD_UP:\"DPAD_UP\",DPAD_RIGHT:\"DPAD_RIGHT\",DPAD_DOWN:\"DPAD_DOWN\",DPAD_LEFT:\"DPAD_LEFT\",LEFT_ANALOG_HORIZONTAL_AXIS:\"LEFT_ANALOG_HORIZONTAL_AXIS\",LEFT_ANALOG_VERTICAL_AXIS:\"LEFT_ANALOG_VERTICAL_AXIS\",LEFT_ANALOG_UP:\"LEFT_ANALOG_UP\",LEFT_ANALOG_RIGHT:\"LEFT_ANALOG_RIGHT\",LEFT_ANALOG_DOWN:\"LEFT_ANALOG_DOWN\",LEFT_ANALOG_LEFT:\"LEFT_ANALOG_LEFT\",RIGHT_ANALOG_HORIZONTAL_AXIS:\"RIGHT_ANALOG_HORIZONTAL_AXIS\",RIGHT_ANALOG_VERTICAL_AXIS:\"RIGHT_ANALOG_VERTICAL_AXIS\",RIGHT_ANALOG_UP:\"RIGHT_ANALOG_UP\",RIGHT_ANALOG_RIGHT:\"RIGHT_ANALOG_RIGHT\",\nRIGHT_ANALOG_DOWN:\"RIGHT_ANALOG_DOWN\",RIGHT_ANALOG_LEFT:\"RIGHT_ANALOG_LEFT\",A:\"A\",B:\"B\",X:\"X\",Y:\"Y\",LEFT_TRIGGER:\"LEFT_TRIGGER\",LEFT_BUMPER:\"LEFT_BUMPER\",RIGHT_TRIGGER:\"RIGHT_TRIGGER\",RIGHT_BUMPER:\"RIGHT_BUMPER\",SELECT:\"SELECT\",START:\"START\",SPECIAL:\"SPECIAL\"};class h{constructor(){}enable(){throw Error(\"enable() must be overridden\");}disable(){throw Error(\"disable() must be overridden\");}getState(){throw Error(\"getState() must be overridden\");}}\nlet k=\"input textarea button select option optgroup label datalist\".split(\" \"),l=[\"Alt\",\"Control\",\"Meta\",\"OS\"];\nclass m extends h{constructor(){super();this.keymap={};Object.keys(g).forEach((a)=>{this.keymap[a]={keys:[],value:void 0}});this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if(\"undefined\"===typeof window)throw Error(\"Keyboard can only be used with a browser environment\");window.addEventListener(\"keyup\",this._boundUpdateKeymapValues);window.addEventListener(\"keydown\",this._boundUpdateKeymapValues)}disable(){if(\"undefined\"===\ntypeof window)throw Error(\"Keyboard can only be used with a browser environment\");window.removeEventListener(\"keyup\",this._boundUpdateKeymapValues);window.removeEventListener(\"keydown\",this._boundUpdateKeymapValues)}getState(){let a=d({},g);Object.keys(this.keymap).forEach((b)=>{a[b]=this.keymap[b].value});Object.keys(a).forEach((b)=>{\"string\"===typeof a[b]&&delete a[b]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=\n!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=!1}setKeysToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error(\"Could not set the specificed keyboard keys to input\");\"string\"===typeof a&&(a=[a]);this.keymap[b].keys=a}_isFocusedOnInputElement(){return k.some((a)=>document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return l.some((b)=>a.getModifierState(b)||\na.code===b)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some((b)=>this.keymap[b].keys.some((c)=>c===a.code?(this.keymap[b].value=\"keydown\"===a.type?!0:!1,!0):!1)))}}\nclass n extends h{constructor(){super();this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let b=this._getGamepads();a||(a=0);let c=b[a];if(!c)return!1;Object.keys(this.keymap).forEach((a)=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some((a)=>this._isButtonPressed(c,a));else if(this.keymap[a].axis){let b=this._getAnalogStickAxis(c,this.keymap[a].axis);this.keymap[a].value=b}});let e=d({},g);Object.keys(this.keymap).forEach((a)=>{e[a]=this.keymap[a].value});\ne[g.LEFT_ANALOG_DOWN]=e.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_UP]=e.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_RIGHT]=e.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.LEFT_ANALOG_LEFT]=e.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_DOWN]=e.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_UP]=e.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;\ne[g.RIGHT_ANALOG_RIGHT]=e.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;e[g.RIGHT_ANALOG_LEFT]=e.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(e).forEach((a)=>{\"string\"===typeof e[a]&&delete e[a]});return e}setGamepadButtonsToResponsiveGamepadInput(a,b){if(!a||!b||0===a.length)throw Error(\"Could not set the specificed buttons to input\");\"number\"===typeof a&&(a=[a]);this.keymap[b]={};this.keymap[b].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,b){if(void 0===\na||!b)throw Error(\"Could not set the specificed buttons to input\");if(\"number\"===typeof axes)throw Error(\"Must pass in an axis id\");this.keymap[b]={};this.keymap[b].axis=a}_isButtonPressed(a,b){return a.buttons[b]?a.buttons[b].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,b){return a?a.axes[b]||0:0}}let q=\"touchstart touchmove touchend mousedown mousemove mouseup mouseleave\".split(\" \");\nclass r{constructor(a){if(!a)throw Error(\"Touch inputs require an element.\");this.listeners=[];this.element=a;this._addTouchStyles();this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error(\"You must supply an element first with add()\");\nwindow.addEventListener(\"resize\",this.boundUpdateElementRect);q.forEach((a)=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error(\"You must supply an element first with add()\");window.removeEventListener(\"resize\",this.boundUpdateElementRect);q.forEach((a)=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes(\"touch\")||a.touches)){a.preventDefault();var b=\"touchstart\"===a.type||\"touchmove\"===a.type||\"mousedown\"===\na.type,c=\"mousemove\"===a.type,e=!b&&!c;this._updateActiveStatus(b,e);this._updateTouchStyles(b,c,e);if(this.onTouchEvent)this.onTouchEvent(a,b,c,e)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect=\"none\"}_removeTouchStyles(){this.element.style.userSelect=\"\"}_updateTouchStyles(a,b){b||(a?this.element.classList.add(\"active\"):this.element.classList.remove(\"active\"))}_updateActiveStatus(a,b){this.active&&b?\nthis.active=!1:!this.active&&a&&(this.active=!0)}}function t(a,b){let c;a.type.includes(\"touch\")?c=a.touches[0]:a.type.includes(\"mouse\")&&(c=a);return{rectCenterX:(b.right-b.left)/2,rectCenterY:(b.bottom-b.top)/2,touchX:c.clientX-b.left,touchY:c.clientY-b.top}}\nclass u extends r{constructor(a,b){super(a);this.config=b?b:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:e}=t(a,this.boundingClientRect);if(!(c>a+this.boundingClientRect.width/2+50)){this._resetState();var f=this.boundingClientRect.width/20,p=this.boundingClientRect.height/20;this.config.allowMultipleDirections?(this.setHorizontalState(c,\nf),this.setVerticalState(e,p)):Math.abs(a-c)+this.boundingClientRect.width/8>Math.abs(b-e)?this.setHorizontalState(c,f):this.setVerticalState(e)}}else this._resetState()}setHorizontalState(a,b){b&&Math.abs(this.boundingClientRect.width/2-a)<=b||(a<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,b){b&&Math.abs(this.boundingClientRect.height/2-a)<b||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=!0)}}\nclass v extends r{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform=\"translate(0px, 0px)\";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:b,touchX:c,touchY:e}=t(a,this.boundingClientRect);c=(c-a)/a;1<c?c=1:-1>c&&(c=-1);e=(e-b)/b;1<e?e=1:-1>e&&(e=-1);this.element.style.transform=`translate(${a*c/2}px, ${b*e/2}px)`;this.state.HORIZONTAL_AXIS=c;this.state.VERTICAL_AXIS=\ne;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(c)>this.deadzone&&(0<c?this.state.RIGHT=!0:0>c&&(this.state.LEFT=!0));Math.abs(e)>this.deadzone&&(0<e?this.state.DOWN=!0:0>e&&(this.state.UP=!0))}else this._resetState()}}class w extends r{constructor(a,b){super(a);this.input=b}}let x={LEFT:\"LEFT\",RIGHT:\"RIGHT\"};\nclass y extends h{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if(\"undefined\"===typeof window)throw Error(\"TouchInput can only be used with a browser environment\");this.enabled=!0;this.dpads.forEach((a)=>a.listen());this.leftAnalogs.forEach((a)=>a.listen());this.rightAnalogs.forEach((a)=>a.listen());this.buttons.forEach((a)=>a.listen())}disable(){if(\"undefined\"===typeof window)throw Error(\"TouchInput can only be used with a browser environment\");\nthis.enabled=!1;this.dpads.forEach((a)=>a.stopListening());this.leftAnalogs.forEach((a)=>a.stopListening());this.rightAnalogs.forEach((a)=>a.stopListening());this.buttons.forEach((a)=>a.stopListening())}getState(){let a=d({},g);this.buttons.forEach((b)=>{a[b.input]=b.active});this.dpads.forEach((b)=>{Object.keys(b.state).forEach((c)=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,\na.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,\na.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach((b)=>{\"string\"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new w(a,b);this.enabled&&c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new u(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,x.LEFT)}addRightAnalogInput(a){this.addAnalogInput(a,\nx.RIGHT)}addAnalogInput(a,b){let c=new v(a);this.enabled&&c.listen();if(b===x.LEFT)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}\nclass z{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=g;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new m;this.Gamepad=new n;this.TouchInput=new y;this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowUp\",\"Numpad8\"],g.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyW\"],g.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyI\"],g.RIGHT_ANALOG_UP);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],g.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowRight\",\n\"Numpad6\"],g.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyD\"],g.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyL\"],g.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],g.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowDown\",\"Numpad5\",\"Numpad2\"],g.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyS\"],g.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyK\"],g.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],\ng.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput([\"ArrowLeft\",\"Numpad4\"],g.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyA\"],g.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyJ\"],g.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],g.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],g.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],g.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],\ng.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],g.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyX\",\"Semicolon\",\"Numpad7\"],g.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],g.A);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyZ\",\"Escape\",\"Quote\",\"Backspace\",\"Numpad9\"],g.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],g.B);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyC\"],g.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],\ng.X);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyV\"],g.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],g.Y);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyQ\"],g.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],g.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyE\"],g.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],g.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyU\"],g.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],\ng.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput([\"KeyO\"],g.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],g.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput([\"Enter\",\"Numpad3\"],g.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],g.START);this.Keyboard.setKeysToResponsiveGamepadInput([\"ShiftRight\",\"ShiftLeft\",\"Tab\",\"Numpad1\"],g.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],g.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput([\"Space\",\n\"Backslash\",\"Backquote\"],g.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],g.SPECIAL);this.plugins=[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return\"1.0.0\"}enable(){this.Keyboard.enable();this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&\n(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),1)}}getState(){if(!this._enabled)return{};let a=d({},g),b=this.Gamepad.getState(),c=this.TouchInput.getState(),e=this.Keyboard.getState();a=d({},g);Object.keys(a).forEach((f)=>{a[f]=b[f]||c[f]||e[f]});[\"LEFT\",\"RIGHT\"].forEach((b)=>\n{[g[`${b}_ANALOG_HORIZONTAL_AXIS`],g[`${b}_ANALOG_VERTICAL_AXIS`]].forEach((c,e)=>{if(\"number\"!==typeof a[c]){if(0===e||2===e)a[c]=a[g[`${b}_ANALOG_RIGHT`]]?1:a[g[`${b}_ANALOG_LEFT`]]?-1:0;if(1===e||3===e)a[c]=a[g[`${b}_ANALOG_UP`]]?-1:a[g[`${b}_ANALOG_DOWN`]]?1:0}})});a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach((b)=>{if(void 0===a[b]||\"string\"===typeof a[b])a[b]=!1});\nthis.plugins.forEach((b)=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){\"string\"===typeof a&&(a=[a]);this.inputChangeMap[a]={codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach((c)=>\n{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach((c)=>{this.inputChangeMap[c].codes.some((a)=>b.includes(a))&&this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}let A=new z;var ResponsiveGamepad=A;export{ResponsiveGamepad};\n","// Responsive Gamepad plugin to simulate GB Inputs\n\nimport { ResponsiveGamepad } from 'responsive-gamepad';\n\nexport default function ResponsiveGamepadPluginGB() {\n  return {\n    onGetState: state => {\n      const gamepadA = state.A;\n      const gamepadB = state.B;\n\n      state.A = gamepadA || state.X;\n      state.B = gamepadB || state.Y;\n\n      return state;\n    }\n  };\n}\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_PROD_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n    \n    ROLLUP_REPLACE_PROD_BROWSER*/\n\n    /*ROLLUP_REPLACE_DEV_BROWSER\n\n    this.worker = new Worker(workerUrl);\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_DEV_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise(resolve => {\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Fetch our rom\nimport { fetchROMAsByteArray } from './fetchrom';\n\n// Get our worker message types\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\n\n// Finish request for wasm module, and fetch game\n// NOTE: **Should bind the wasmboy this here**\nexport function loadROMToWasmBoy(ROM, fetchHeaders) {\n  // Getting started with wasm\n  // http://webassembly.org/getting-started/js-api/\n  this.ready = false;\n  this.loadedAndStarted = false;\n\n  const initializeTask = async () => {\n    // Get our promises\n    const initPromises = [fetchROMAsByteArray(ROM, fetchHeaders), this._instantiateWorkers()];\n\n    if (!this.options.headless && WasmBoyMemory.getLoadedCartridgeMemoryState().RAM) {\n      initPromises.push(WasmBoyMemory.saveCartridgeRam());\n    }\n\n    let ROMAsByteArray;\n    await Promise.all(initPromises).then(responses => {\n      ROMAsByteArray = responses[0];\n    });\n\n    // Now tell the wasm module to instantiate wasm\n    const response = await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.INSTANTIATE_WASM\n    });\n\n    this.coreType = response.message.type;\n\n    return ROMAsByteArray;\n  };\n\n  const loadROMAndConfigTask = async ROM => {\n    // Clear what is currently in memory, then load the cartridge memory\n    await WasmBoyMemory.clearMemory();\n\n    // TODO: Handle passing a boot rom\n    await WasmBoyMemory.loadCartridgeRom(ROM);\n\n    // Save the game that we loaded if we need to reload the game\n    this.loadedROM = ROM;\n\n    // Run our initialization on the core\n    await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.CONFIG,\n      config: [\n        0, // TODO: Include Boot Rom\n        this.options.isGbcEnabled ? 1 : 0,\n        this.options.audioBatchProcessing ? 1 : 0,\n        this.options.graphicsBatchProcessing ? 1 : 0,\n        this.options.timersBatchProcessing ? 1 : 0,\n        this.options.graphicsDisableScanlineRendering ? 1 : 0,\n        this.options.audioAccumulateSamples ? 1 : 0,\n        this.options.tileRendering ? 1 : 0,\n        this.options.tileCaching ? 1 : 0\n      ],\n      options: {\n        gameboyFrameRate: this.options.gameboyFrameRate,\n        headless: this.options.headless,\n        isAudioEnabled: this.options.isAudioEnabled,\n        frameSkip: this.options.frameSkip\n      }\n    });\n  };\n\n  const loadROMTask = async () => {\n    // Pause wasmBoy\n    await this.pause();\n\n    // Initialize any needed parts of wasmboy\n    let ROM = await initializeTask();\n\n    // Check if we are running headless\n    if (this.options.headless) {\n      await WasmBoyMemory.initialize(this.options.headless, this.options.saveStateCallback);\n\n      await loadROMAndConfigTask(ROM);\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    } else {\n      // Finally intialize all of our services\n      // Initialize our services\n      await Promise.all([\n        WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback),\n        WasmBoyAudio.initialize(this.options.updateAudioCallback),\n        WasmBoyController.initialize(),\n        WasmBoyMemory.initialize(this.options.headless, this.options.saveStateCallback)\n      ]);\n\n      await loadROMAndConfigTask(ROM);\n\n      // Load the game's cartridge ram\n      await WasmBoyMemory.loadCartridgeRam();\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    }\n  };\n\n  return loadROMTask();\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Imports\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\n\n// Function to render our emulator output\nexport function render() {\n  // Don't run if paused\n  if (this.paused) {\n    return true;\n  }\n\n  // Check if we have frameskip\n  let shouldSkipRenderingFrame = false;\n  if (this.frameSkip && this.frameSkip > 0) {\n    this.frameSkipCounter++;\n\n    if (this.frameSkipCounter < this.frameSkip) {\n      shouldSkipRenderingFrame = true;\n    } else {\n      this.frameSkipCounter = 0;\n    }\n  }\n\n  // Render the display\n  if (!shouldSkipRenderingFrame) {\n    WasmBoyGraphics.renderFrame();\n  }\n\n  // Update our controller\n  WasmBoyController.updateController();\n\n  this.renderId = raf(() => {\n    render.call(this);\n  });\n}\n","function index(buffer, opt) {\n  opt = opt || {};\n\n  var numChannels = buffer.numberOfChannels;\n  var sampleRate = buffer.sampleRate;\n  var format = opt.float32 ? 3 : 1;\n  var bitDepth = format === 3 ? 32 : 16;\n\n  var result;\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n  } else {\n    result = buffer.getChannelData(0);\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8;\n  var blockAlign = numChannels * bytesPerSample;\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n  var view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, format, true);\n  /* channel count */\n  view.setUint16(22, numChannels, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true);\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true);\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples);\n  } else {\n    writeFloat32(view, 44, samples);\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length;\n  var result = new Float32Array(length);\n\n  var index = 0;\n  var inputIndex = 0;\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true);\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nexport default index;\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { runWasmExport, getWasmMemorySection, getWasmConstant } from '../debug/debug';\n\nconst messageRequests = {};\n\nexport function waitForLibWorkerMessageType(messageType) {\n  if (!messageRequests[messageType]) {\n    messageRequests[messageType] = [];\n  }\n  const promise = new Promise(resolve => {\n    messageRequests[messageType].push(resolve);\n  });\n\n  return promise;\n}\n\n// Functions to handle the lib worker messages\nexport function libWorkerOnMessage(event) {\n  const eventData = getEventData(event);\n\n  if (!eventData.message) {\n    return;\n  }\n\n  if (messageRequests[eventData.message.type]) {\n    messageRequests[eventData.message.type].forEach(request => request(eventData.message));\n  }\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.UPDATED: {\n      this.fps = eventData.message.fps;\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.CRASHED: {\n      const crashedTask = async () => {\n        await this.pause();\n\n        console.log('Wasmboy Crashed!');\n\n        let programCounter = await runWasmExport('getProgramCounter');\n        let gameboyMemoryConstant = await getWasmConstant('GAMEBOY_INTERNAL_MEMORY_LOCATION');\n        let opcode = await getWasmMemorySection(gameboyMemoryConstant + programCounter, gameboyMemoryConstant + programCounter + 1);\n\n        console.log(`Program Counter: 0x${programCounter.toString(16)}`);\n        console.log(`Opcode: 0x${opcode[0].toString(16)}`);\n      };\n      crashedTask();\n      return;\n    }\n\n    default: {\n      // Do nothing. This catches all messages so yeah\n    }\n  }\n}\n","export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  PLAY_UNTIL_BREAKPOINT: 'PLAY_UNTIL_BREAKPOINT',\n  BREAKPOINT: 'BREAKPOINT',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT',\n  FORCE_OUTPUT_FRAME: 'FORCE_OUTPUT_FRAME'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","import { GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT } from './constants';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Performance tips with canvas:\n// https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n\nclass WasmBoyGraphicsService {\n  constructor() {\n    this.worker = undefined;\n    this.updateGraphicsCallback = undefined;\n\n    this.frameQueue = undefined;\n    this.frameQueueRenderPromise = undefined;\n\n    this.canvasElement = undefined;\n    this.canvasContext = undefined;\n    this.canvasImageData = undefined;\n    this.imageDataArray = undefined;\n    this.imageDataArrayChanged = false;\n  }\n\n  initialize(canvasElement, updateGraphicsCallback) {\n    this.updateGraphicsCallback = updateGraphicsCallback;\n\n    // Initialiuze our cached wasm constants\n    // WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = this.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf();\n\n    // Reset our frame queue and render promises\n    this.frameQueue = [];\n\n    const initializeTask = async () => {\n      // Prepare our canvas\n      this.canvasElement = canvasElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n      this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;\n      this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;\n      this.canvasImageData = this.canvasContext.createImageData(GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n\n      // Add some css for smooth 8-bit canvas scaling\n      // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n      // https://caniuse.com/#feat=css-crisp-edges\n      this.canvasElement.style = `\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      `;\n\n      // Fill the canvas with a blank screen\n      // using client width since we are not requiring a width and height oin the canvas\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n      // TODO: Mention respopnsive canvas scaling in the docs\n      this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n      // Finally make sure we set our constants for our worker\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n        });\n      }\n    };\n\n    return initializeTask();\n  }\n\n  // Function to set our worker\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          this.imageDataArray = new Uint8ClampedArray(eventData.message.imageDataArrayBuffer);\n          this.imageDataArrayChanged = true;\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to render a frame\n  // Will add the frame to the frame queue to be rendered\n  // Returns the promise from this.drawFrameQueue\n  // Which resolves once all frames are rendered\n  renderFrame() {\n    // Check if we have new graphics to show\n    if (!this.imageDataArrayChanged) {\n      return;\n    }\n    this.imageDataArrayChanged = false;\n\n    // Check for a callback for accessing image data\n    if (this.updateGraphicsCallback) {\n      this.updateGraphicsCallback(this.imageDataArray);\n    }\n\n    // Add our new imageData\n    for (let i = 0; i < this.imageDataArray.length; i++) {\n      this.canvasImageData.data[i] = this.imageDataArray[i];\n    }\n\n    this.canvasContext.clearRect(0, 0, GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n    this.canvasContext.putImageData(this.canvasImageData, 0, 0);\n  }\n}\n\nexport const WasmBoyGraphics = new WasmBoyGraphicsService();\n","// Some shared constants by the graphics lib and worker\n\nexport const GAMEBOY_CAMERA_WIDTH = 160;\nexport const GAMEBOY_CAMERA_HEIGHT = 144;\n","// Tons of help from:\n// https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html\n// https://github.com/binji/binjgb/blob/master/demo/demo.js\n// Web Audio API is tricky!\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Define our performance constants\n// Both of these make it sound off\n// Latency controls how much delay audio has, larger = more delay, goal is to be as small as possible\n// Time remaining controls how far ahead we can be., larger = more frames rendered before playing a new set of samples. goal is to be as small as possible. May want to adjust this number according to performance of device\n// These magic numbers just come from preference, can be set as options\nconst DEFAULT_AUDIO_LATENCY_IN_MILLI = 100;\nconst WASMBOY_SAMPLE_RATE = 48000;\n\n// Some canstants that use the ones above that will allow for faster performance\nconst DEFAULT_AUDIO_LATENCY_IN_SECONDS = DEFAULT_AUDIO_LATENCY_IN_MILLI / 1000;\n\n// The minimum fps we can have, before we start time stretching for slowness\nconst SLOW_TIME_STRETCH_MIN_FPS = 57;\n\nclass WasmBoyAudioService {\n  constructor() {\n    // Wasmboy instance and memory\n    this.worker = undefined;\n    this.updateAudioCallback = undefined;\n\n    this.audioContext = undefined;\n    this.audioBuffer = undefined;\n    // The play time for our audio samples\n    this.audioPlaytime = undefined;\n    this.audioSources = [];\n\n    // Average fps for time stretching\n    this.averageTimeStretchFps = [];\n\n    // Our sound output Location, we will initialize this in init\n    this.WASMBOY_SOUND_OUTPUT_LOCATION = 0;\n  }\n\n  initialize(updateAudioCallback) {\n    const initializeTask = async () => {\n      this.updateAudioCallback = updateAudioCallback;\n\n      this.averageTimeStretchFps = [];\n      if (this.audioSources.length > 0) {\n        this.cancelAllAudio();\n      }\n      this.audioSources = [];\n\n      this._createAudioContextIfNone();\n\n      // Lastly get our audio constants\n      return this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      });\n    };\n    return initializeTask();\n  }\n\n  // Ensure that Audio is blessed.\n  // Meaning, the audioContext won't be\n  // affected by any autoplay issues.\n  // https://www.chromium.org/audio-video/autoplay\n  resumeAudioContext() {\n    this._createAudioContextIfNone();\n    if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n      this.audioPlaytime = this.audioContext.currentTime;\n    }\n  }\n\n  resetTimeStretch() {\n    // Simply reset our average FPS counter array\n    this.averageTimeStretchFps = [];\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Dont wait for raf.\n          // Audio being shown is not dependent on the browser drawing a frame :)\n          this.playAudio(\n            eventData.message.fps,\n            eventData.message.allowFastSpeedStretching,\n            eventData.message.numberOfSamples,\n            eventData.message.leftChannel,\n            eventData.message.rightChannel\n          );\n\n          // Next, send back how much forward latency\n          // we have\n          let latency = 0;\n          if (this.audioContext.currentTime && this.audioContext.currentTime > 0) {\n            latency = this.audioPlaytime - this.audioContext.currentTime;\n          }\n          this.worker.postMessage({\n            type: WORKER_MESSAGE_TYPE.AUDIO_LATENCY,\n            latency\n          });\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to queue up and audio buyffer to be played\n  // Returns a promise so that we may \"sync by audio\"\n  // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/dau8e2w/\n  playAudio(currentFps, allowFastSpeedStretching, numberOfSamples, leftChannelBuffer, rightChannelBuffer) {\n    // Find our averageFps\n    let fps = currentFps || 60;\n\n    // Check if we got a huge fps outlier.\n    // If so, let's just reset our average.\n    // This will fix the slow gradual ramp down\n    const fpsDifference = Math.abs(currentFps - this.averageTimeStretchFps[this.averageTimeStretchFps.length - 1]);\n    if (fpsDifference && fpsDifference >= 15) {\n      this.resetTimeStretch();\n    }\n\n    // Find our average fps for time stretching\n    this.averageTimeStretchFps.push(currentFps);\n    // TODO Make the multiplier Const the timeshift speed\n    if (this.averageTimeStretchFps.length > Math.floor(SLOW_TIME_STRETCH_MIN_FPS * 3)) {\n      this.averageTimeStretchFps.shift();\n    }\n\n    // Make sure we have a minimum number of time stretch fps timestamps to judge the average time\n    if (this.averageTimeStretchFps.length >= SLOW_TIME_STRETCH_MIN_FPS) {\n      fps = this.averageTimeStretchFps.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue;\n      });\n      fps = Math.floor(fps / this.averageTimeStretchFps.length);\n    }\n\n    // Find if we should time stretch this sample or not from our current fps\n    let playbackRate = 1.0;\n    if (fps < SLOW_TIME_STRETCH_MIN_FPS || allowFastSpeedStretching) {\n      // Has to be 60 to get accurent playback regarless of fps cap\n      playbackRate = playbackRate * (fps / 60);\n      if (playbackRate <= 0) {\n        playbackRate = 0.01;\n      }\n    }\n\n    // Create an audio buffer, with a left and right channel\n    this.audioBuffer = this.audioContext.createBuffer(2, numberOfSamples, WASMBOY_SAMPLE_RATE);\n    if (this.audioBuffer.copyToChannel) {\n      this.audioBuffer.copyToChannel(new Float32Array(leftChannelBuffer), 0, 0);\n      this.audioBuffer.copyToChannel(new Float32Array(rightChannelBuffer), 1, 0);\n    } else {\n      // Safari fallback\n      this.audioBuffer.getChannelData(0).set(new Float32Array(leftChannelBuffer));\n      this.audioBuffer.getChannelData(1).set(new Float32Array(rightChannelBuffer));\n    }\n\n    // Get an AudioBufferSourceNode.\n    // This is the AudioNode to use when we want to play an AudioBuffer\n    let source = this.audioContext.createBufferSource();\n\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = this.audioBuffer;\n\n    // Set our playback rate for time resetretching\n    source.playbackRate.setValueAtTime(playbackRate, this.audioContext.currentTime);\n\n    // Call our callback, if we have one\n    let finalNode = source;\n    if (this.updateAudioCallback) {\n      const responseNode = this.updateAudioCallback(this.audioContext, source);\n      if (responseNode) {\n        finalNode = responseNode;\n      }\n    }\n\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    finalNode.connect(this.audioContext.destination);\n\n    // Check if we made it in time\n    // Idea from: https://github.com/binji/binjgb/blob/master/demo/demo.js\n    let audioContextCurrentTime = this.audioContext.currentTime;\n    let audioContextCurrentTimeWithLatency = audioContextCurrentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n    this.audioPlaytime = this.audioPlaytime || audioContextCurrentTimeWithLatency;\n    if (this.audioPlaytime < audioContextCurrentTime) {\n      // We took too long, or something happen and hiccup'd the emulator, reset audio playback times\n      this.cancelAllAudio();\n      this.audioPlaytime = audioContextCurrentTimeWithLatency;\n    }\n\n    // start the source playing\n    source.start(this.audioPlaytime);\n\n    // Set our new audio playtime goal\n    const sourcePlaybackLength = numberOfSamples / (WASMBOY_SAMPLE_RATE * playbackRate);\n    this.audioPlaytime = this.audioPlaytime + sourcePlaybackLength;\n\n    // Cancel all audio sources on the tail that play before us\n    while (\n      this.audioSources[this.audioSources.length - 1] &&\n      this.audioSources[this.audioSources.length - 1].playtime <= this.audioPlaytime\n    ) {\n      this.audioSources[this.audioSources.length - 1].source.stop();\n      this.audioSources.pop();\n    }\n\n    // Add the source so we can stop this if needed\n    this.audioSources.push({\n      source: source,\n      playTime: this.audioPlaytime,\n      fps: fps\n    });\n\n    // Shift ourselves out when finished\n    const timeUntilSourceEnds = this.audioPlaytime - this.audioContext.currentTime + 500;\n    setTimeout(() => {\n      this.audioSources.shift();\n    }, timeUntilSourceEnds);\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    if (!this.audioContext) {\n      return;\n    }\n\n    // Cancel all audio That was queued to play\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (stopCurrentAudio || this.audioSources[i].playTime > this.audioPlaytime) {\n        this.audioSources[i].source.stop();\n      }\n    }\n\n    // Reset our audioPlaytime\n    this.audioPlaytime = this.audioContext.currentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n  }\n\n  _createAudioContextIfNone() {\n    if (!this.audioContext) {\n      // Get our Audio context\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    }\n  }\n}\n\nexport const WasmBoyAudio = new WasmBoyAudioService();\n","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","if (typeof indexedDB != 'undefined') {\n  module.exports = require('./idb.js');\n}\nelse {\n  module.exports = {\n    open: function () {\n      return Promise.reject('IDB requires a browser environment');\n    },\n    delete: function () {\n      return Promise.reject('IDB requires a browser environment');\n    }\n  };\n}\n","// Get our idb instance, and initialize to asn idb-keyval\n// This is so we don't get the default keyval DB name. And will allow\n// Parent projects to use the slimmer idb keyval\n// https://www.npmjs.com/package/idb\n\n// Need to wrap in rollup replace to stop\n// node commonjs from breaking\n/*ROLLUP_REPLACE_BROWSER\nimport idb from 'idb';\nROLLUP_REPLACE_BROWSER*/\n\nlet keyval = false;\n\n// Get our idb dPromise\nif (typeof window !== 'undefined') {\n  const dbPromise = idb.open('wasmboy', 1, upgradeDB => {\n    upgradeDB.createObjectStore('keyval');\n  });\n\n  // Get our idb-keyval instance\n  keyval = {\n    get(key) {\n      return dbPromise.then(db => {\n        return db\n          .transaction('keyval')\n          .objectStore('keyval')\n          .get(key);\n      });\n    },\n    set(key, val) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').put(val, key);\n        return tx.complete;\n      });\n    },\n    delete(key) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').delete(key);\n        return tx.complete;\n      });\n    },\n    clear() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').clear();\n        return tx.complete;\n      });\n    },\n    keys() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval');\n        const keys = [];\n        const store = tx.objectStore('keyval');\n\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // openKeyCursor isn't supported by Safari, so we fall back\n        (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n          if (!cursor) return;\n          keys.push(cursor.key);\n          cursor.continue();\n        });\n\n        return tx.complete.then(() => keys);\n      });\n    }\n  };\n}\n\nexport const idbKeyval = keyval;\n","import { idbKeyval } from './idb';\n\n// Import worker stuff\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\nimport { initializeAutoSave } from './autosave.js';\n\nclass WasmBoyMemoryService {\n  constructor() {\n    this.worker = undefined;\n    this.saveStateCallback = undefined;\n    this.loadedCartridgeMemoryState = {\n      ROM: false,\n      RAM: false\n    };\n\n    // Our different types of memory\n    this.cartridgeRom = undefined;\n    this.cartridgeHeader = undefined;\n    this.cartridgeRam = undefined;\n    this.gameboyMemory = undefined;\n    this.paletteMemory = undefined;\n    this.internalState = undefined;\n\n    // Going to set the key for idbKeyval as the cartridge header.\n    // Then, for each cartridge, it will return an object.\n    // there will be a cartridgeRam Key, settings Key, and a saveState key\n    // Not going to make one giant object, as we want to keep idb transactions light and fast\n    this.WASMBOY_UNLOAD_STORAGE = 'WASMBOY_UNLOAD_STORAGE';\n\n    // Define some constants since calls to wasm are expensive\n    this.WASMBOY_GAME_BYTES_LOCATION = 0;\n    this.WASMBOY_GAME_RAM_BANKS_LOCATION = 0;\n    this.WASMBOY_INTERNAL_STATE_SIZE = 0;\n    this.WASMBOY_INTERNAL_STATE_LOCATION = 0;\n    this.WASMBOY_INTERNAL_MEMORY_SIZE = 0;\n    this.WASMBOY_INTERNAL_MEMORY_LOCATION = 0;\n    this.WASMBOY_PALETTE_MEMORY_SIZE = 0;\n    this.WASMBOY_PALETTE_MEMORY_LOCATION = 0;\n  }\n\n  initialize(headless, saveStateCallback) {\n    const initializeTask = async () => {\n      if (headless) {\n        this.saveStateCallback = saveStateCallback;\n\n        await this._initializeConstants();\n      } else {\n        this.saveStateCallback = saveStateCallback;\n\n        await this._initializeConstants();\n\n        // initialize the autosave feature\n        await initializeAutoSave.call(this);\n      }\n    };\n\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n\n    // Also set our handler\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Simply set our memory\n          const memoryTypes = Object.keys(eventData.message);\n          delete memoryTypes.type;\n\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n            this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n            this.cartridgeRam = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n            this.gameboyMemory = new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n            this.paletteMemory = new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n            this.internalState = new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]);\n          }\n\n          return;\n        }\n      }\n    });\n  }\n\n  getLoadedCartridgeMemoryState() {\n    return this.loadedCartridgeMemoryState;\n  }\n\n  clearMemory() {\n    // Clear Wasm memory\n    // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY\n      })\n      .then(event => {\n        this.loadedCartridgeMemoryState.ROM = false;\n        this.loadedCartridgeMemoryState.RAM = false;\n\n        // Reset everything\n        this.cartridgeRom = undefined;\n        this.cartridgeHeader = undefined;\n        this.cartridgeRam = undefined;\n        this.gameboyMemory = undefined;\n        this.paletteMemory = undefined;\n        this.internalState = undefined;\n      });\n  }\n\n  loadCartridgeRom(ROM) {\n    const loadTask = async () => {\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_ROM] = ROM.buffer;\n\n      // Don't pass the rom as a transferrable, since,\n      // We want to keep a copy of it for reset\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.ROM = true;\n        });\n\n      // Also get our cartridge header\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_ROM, MEMORY_TYPE.CARTRIDGE_HEADER]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          this.cartridgeHeader = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_HEADER]);\n        });\n    };\n\n    return loadTask();\n  }\n\n  // Function to save the cartridge ram\n  // This emulates the cartridge having a battery to\n  // Keep things like Pokemon Save data in memory\n  // Also allows passing in a a Uint8Array header and ram to be set manually\n  saveCartridgeRam(passedHeader, passedCartridgeRam) {\n    const saveCartridgeRamTask = async () => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      let header;\n      let cartridgeRam;\n      if (passedHeader && passedCartridgeRam) {\n        header = passedHeader;\n        cartridgeRam = passedCartridgeRam;\n      } else {\n        header = this.cartridgeHeader;\n        cartridgeRam = this.cartridgeRam;\n      }\n\n      if (!header || !cartridgeRam) {\n        throw new Error('Error parsing the cartridgeRam or cartridge header');\n      }\n\n      // Get our cartridge object\n      let cartridgeObject = await idbKeyval.get(header);\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      // Set the cartridgeRam to our cartridgeObject\n      cartridgeObject.cartridgeRam = cartridgeRam;\n\n      await idbKeyval.set(header, cartridgeObject);\n    };\n\n    return saveCartridgeRamTask();\n  }\n\n  // function to load the cartridge ram\n  // opposite of above\n  loadCartridgeRam() {\n    const loadCartridgeRamTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      const cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.cartridgeRam) {\n        return;\n      }\n\n      // Set the cartridgeRam\n      // Don't transfer, because we want to keep a reference to it\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeObject.cartridgeRam.buffer;\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.RAM = true;\n          this.cartridgeRam = cartridgeObject.cartridgeRam;\n        });\n    };\n    return loadCartridgeRamTask();\n  }\n\n  // Function to save the state to the indexeddb\n  saveState(passedHeader, passedSaveState) {\n    const saveStateTask = async () => {\n      // Get our save state\n      let saveState;\n      let header;\n      if (passedHeader && passedSaveState) {\n        saveState = passedSaveState;\n        header = passedHeader;\n      } else {\n        saveState = getSaveState.call(this);\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n      if (!cartridgeObject.saveStates) {\n        cartridgeObject.saveStates = [];\n      }\n\n      cartridgeObject.saveStates.push(saveState);\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error getting the cartridge header');\n      }\n\n      if (!saveState) {\n        const cartridgeObject = await idbKeyval.get(header);\n        if (!cartridgeObject || !cartridgeObject.saveStates) {\n          throw new Error('No Save State passed, and no cartridge object found');\n          return;\n        }\n        saverState = cartridgeObject.saveStates[0];\n      }\n\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = saveState.wasmboyMemory.cartridgeRam.buffer;\n      workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = saveState.wasmboyMemory.gameBoyMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY] = saveState.wasmboyMemory.wasmBoyPaletteMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE] = saveState.wasmboyMemory.wasmBoyInternalState.buffer;\n\n      await this.worker.postMessage(\n        {\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        },\n        [\n          workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n          workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE]\n        ]\n      );\n\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_RAM, MEMORY_TYPE.GAMEBOY_MEMORY, MEMORY_TYPE.PALETTE_MEMORY, MEMORY_TYPE.INTERNAL_STATE]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRam = eventData.message[MEMORY_TYPE.CARTRIDGE_RAM];\n          this.gameboyMemory = eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY];\n          this.paletteMemory = eventData.message[MEMORY_TYPE.PALETTE_MEMORY];\n          this.internalState = eventData.message[MEMORY_TYPE.INTERNAL_STATE];\n        });\n    };\n\n    return loadStateTask();\n  }\n\n  // Function to return the current cartridge object\n  getCartridgeObject() {\n    return idbKeyval.get(this.cartridgeHeader);\n  }\n\n  // Function to return all informationh aboyut the currently loaded cart.\n  // This will include, the ROM, the RAM, the header, and the indivudal pieces of the header\n  // See: http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  getCartridgeInfo() {\n    if (!this.loadedCartridgeMemoryState.ROM) {\n      return Promise.reject('No ROM has been loaded');\n    }\n\n    let getCartridgeInfoTask = async () => {\n      const cartridgeInfo = {};\n\n      cartridgeInfo.header = this.cartridgeHeader;\n      cartridgeInfo.ROM = this.cartridgeRom;\n      cartridgeInfo.RAM = this.cartridgeRam;\n\n      // Now parse our header for additional information\n      cartridgeInfo.nintendoLogo = cartridgeInfo.ROM.slice(0x104, 0x134);\n\n      cartridgeInfo.title = cartridgeInfo.ROM.slice(0x134, 0x144);\n      cartridgeInfo.titleAsString = String.fromCharCode.apply(null, cartridgeInfo.title);\n\n      cartridgeInfo.manufacturerCode = cartridgeInfo.ROM.slice(0x13f, 0x143);\n\n      cartridgeInfo.CGBFlag = cartridgeInfo.ROM[0x143];\n\n      cartridgeInfo.newLicenseeCode = cartridgeInfo.ROM.slice(0x144, 0x146);\n\n      cartridgeInfo.SGBFlag = cartridgeInfo.ROM[0x146];\n\n      cartridgeInfo.cartridgeType = cartridgeInfo.ROM[0x147];\n\n      cartridgeInfo.ROMSize = cartridgeInfo.ROM[0x148];\n\n      cartridgeInfo.RAMSize = cartridgeInfo.ROM[0x149];\n\n      cartridgeInfo.destinationCode = cartridgeInfo.ROM[0x14a];\n\n      cartridgeInfo.oldLicenseeCode = cartridgeInfo.ROM[0x14b];\n\n      cartridgeInfo.maskROMVersionNumber = cartridgeInfo.ROM[0x14c];\n\n      cartridgeInfo.headerChecksum = cartridgeInfo.ROM[0x14d];\n\n      cartridgeInfo.globalChecksum = cartridgeInfo.ROM.slice(0x14e, 0x150);\n\n      return cartridgeInfo;\n    };\n\n    return getCartridgeInfoTask();\n  }\n\n  _initializeConstants() {\n    // Initialize our cached wasm constants\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      })\n      .then(event => {\n        const eventData = getEventData(event);\n        Object.keys(this).forEach(key => {\n          if (eventData.message[key] !== undefined) {\n            this[key] = eventData.message[key];\n          }\n        });\n      });\n  }\n}\n\n// Create a singleton to export\nexport const WasmBoyMemory = new WasmBoyMemoryService();\n","// https://github.com/torch2424/responsive-gamepad\nimport { ResponsiveGamepad } from 'responsive-gamepad';\n\nimport ResponsiveGamepadPluginGB from './gbplugin';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nclass WasmBoyControllerService {\n  constructor() {\n    // Our wasm instance\n    this.worker = undefined;\n    this.isEnabled = false;\n\n    // Bind Repsonsive Gamepad to this\n    this.ResponsiveGamepad = ResponsiveGamepad;\n\n    ResponsiveGamepad.addPlugin(ResponsiveGamepadPluginGB());\n  }\n\n  initialize() {\n    if (!this.isEnabled) {\n      this.enableDefaultJoypad();\n    }\n\n    return Promise.resolve();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n  }\n\n  updateController() {\n    if (!this.isEnabled) {\n      return {};\n    }\n\n    // Create an abstracted controller state\n    const controllerState = ResponsiveGamepad.getState();\n\n    // Set the new controller state on the instance\n    this.setJoypadState(controllerState);\n\n    // Return the controller state in case we need something from it\n    return controllerState;\n  }\n\n  setJoypadState(controllerState) {\n    const setJoypadStateParamsAsArray = [\n      controllerState.UP ? 1 : 0,\n      controllerState.RIGHT ? 1 : 0,\n      controllerState.DOWN ? 1 : 0,\n      controllerState.LEFT ? 1 : 0,\n      controllerState.A ? 1 : 0,\n      controllerState.B ? 1 : 0,\n      controllerState.SELECT ? 1 : 0,\n      controllerState.START ? 1 : 0\n    ];\n\n    this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE,\n      setJoypadStateParamsAsArray\n    });\n  }\n\n  enableDefaultJoypad() {\n    this.isEnabled = true;\n\n    ResponsiveGamepad.enable();\n  }\n\n  disableDefaultJoypad() {\n    this.isEnabled = false;\n\n    ResponsiveGamepad.disable();\n  }\n}\n\nexport const WasmBoyController = new WasmBoyControllerService();\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Import our worker urls\n// Only one of the wasmboylib imports will be used. Rollup/Babel handles which one\nimport wasmboyLibWasmWorkerUrl from '../../dist/worker/wasmboy.wasm.worker.js';\nimport wasmboyLibTsWorkerUrl from '../../dist/worker/wasmboy.ts.worker.js';\nimport wasmboyGraphicsWorkerUrl from '../../dist/worker/graphics.worker.js';\nimport wasmboyAudioWorkerUrl from '../../dist/worker/audio.worker.js';\nimport wasmboyControllerWorkerUrl from '../../dist/worker/controller.worker.js';\nimport wasmboyMemoryWorkerUrl from '../../dist/worker/memory.worker.js';\n\n// Import our Smart Worker Interface\nimport { SmartWorker } from './smartworker';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from './constants';\n\n/*ROLLUP_REPLACE_NODE\nconst { MessageChannel } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nexport const instantiateWorkers = async () => {\n  // Create our workers\n  let libWorkerUrl;\n  libWorkerUrl = wasmboyLibWasmWorkerUrl;\n  libWorkerUrl = wasmboyLibTsWorkerUrl;\n\n  const libWorker = new SmartWorker(libWorkerUrl, WORKER_ID.LIB);\n  const graphicsWorker = new SmartWorker(wasmboyGraphicsWorkerUrl, WORKER_ID.GRAPHICS);\n  const audioWorker = new SmartWorker(wasmboyAudioWorkerUrl, WORKER_ID.AUDIO);\n  const controllerWorker = new SmartWorker(wasmboyControllerWorkerUrl, WORKER_ID.CONTROLLER);\n  const memoryWorker = new SmartWorker(wasmboyMemoryWorkerUrl, WORKER_ID.MEMORY);\n  // Create an array of promises for when each worker is ready\n  const workerReadyPromises = [];\n\n  // Add our workers to an array,\n  const childWorkers = [graphicsWorker, audioWorker, controllerWorker, memoryWorker];\n\n  // Create a messaging channel between our main lib worker,\n  // And all of the children workers\n  childWorkers.forEach(childWorker => {\n    // Create our message channel\n    // https://stackoverflow.com/questions/14191394/web-workers-communication-using-messagechannel-html5\n    const messageChannel = new MessageChannel();\n\n    const workerReadyPromise = new Promise(resolve => {\n      // Our resolve function\n      let messagesReceived = 0;\n      const tryResolveWorkerReady = () => {\n        messagesReceived++;\n        if (messagesReceived >= 2) {\n          resolve();\n        }\n      };\n\n      // Post our connect messages\n      libWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: childWorker.id,\n            ports: [messageChannel.port1]\n          },\n          [messageChannel.port1]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n      childWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: libWorker.id,\n            ports: [messageChannel.port2]\n          },\n          [messageChannel.port2]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n    });\n\n    workerReadyPromises.push(workerReadyPromise);\n  });\n\n  // Wait for all workers to be ready\n  await Promise.all(workerReadyPromises);\n\n  // Finally, pass the ready workers to all of our children lib\n  WasmBoyGraphics.setWorker(graphicsWorker);\n  WasmBoyAudio.setWorker(audioWorker);\n  WasmBoyController.setWorker(controllerWorker);\n  WasmBoyMemory.setWorker(memoryWorker);\n\n  // Return the main worker for the main lib\n  return libWorker;\n};\n","export default \"data:application/javascript;base64,\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6ZixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGs7Y29uc3QgbT0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6ZyhjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgZj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApLGQ9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KDMpO2ZvcihsZXQgYz0wOzE0ND5jO2MrKylmb3IobGV0IGU9MDsxNjA+ZTtlKyspe3ZhciBiPTMqKDE2MCpjK2UpO2ZvcihsZXQgYz0wOzM+YztjKyspZFtjXT1hW2IrY107Yj00KihlKzE2MCpjKTtmW2JdPWRbMF07ZltiKzFdPWRbMV07ZltiKzJdPWRbMl07ZltiKzNdPTI1NX1hPWZ9ZyhjKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bCgoYSk9PnthPWEuZGF0YT8KYS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjprPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sayk7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmsucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtoP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGgpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoaClzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZCl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6ZCxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGg9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtofHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHI9KGEpPT57YT1hLmRhdGE/YS5kYXRhOmE7aWYoYS5tZXNzYWdlKXN3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e3ZhciBiPW5ldyBVaW50OEFycmF5KGEubWVzc2FnZS5hdWRpb0J1ZmZlcik7dmFyIGQ9YS5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBjPW5ldyBGbG9hdDMyQXJyYXkoZCk7dmFyIGY9bmV3IEZsb2F0MzJBcnJheShkKTtsZXQgZz0wO2QqPTI7Zm9yKHZhciBlPTA7ZTxkO2UrPTIpY1tnXT1xKGJbZV0pLGcrKztnPTA7Zm9yKGU9MTtlPGQ7ZSs9MilmW2ddPXEoYltlXSksZysrO2I9Yy5idWZmZXI7Zj1mLmJ1ZmZlcn1tKGMoe3R5cGU6IlVQREFURUQiLGxlZnRDaGFubmVsOmIscmlnaHRDaGFubmVsOmYsCm51bWJlck9mU2FtcGxlczphLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczphLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzphLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSksW2IsZl0pfX07cCgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9YS5tZXNzYWdlLnBvcnRzWzBdO3AocixsKTttKGModm9pZCAwLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UUyI6bC5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkFVRElPX0xBVEVOQ1kiOmwucG9zdE1lc3NhZ2UoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","// Taken/Modified From: https://github.com/photopea/UZIP.js\n\nlet UZIP = {};\n\n// Make it a hacky es module\nconst uzip = UZIP;\nexport default uzip;\n\nUZIP['parse'] = function(\n  buf // ArrayBuffer\n) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint,\n    o = 0,\n    out = {};\n  let data = new Uint8Array(buf);\n  let eocd = data.length - 4;\n\n  while (rUi(data, eocd) != 0x06054b50) eocd--;\n\n  o = eocd;\n  o += 4; // sign  = 0x06054b50\n  o += 4; // disks = 0;\n  let cnu = rUs(data, o);\n  o += 2;\n  let cnt = rUs(data, o);\n  o += 2;\n\n  let csize = rUi(data, o);\n  o += 4;\n  let coffs = rUi(data, o);\n  o += 4;\n\n  o = coffs;\n  for (let i = 0; i < cnu; i++) {\n    let sign = rUi(data, o);\n    o += 4;\n    o += 4; // versions;\n    o += 4; // flag + compr\n    o += 4; // time\n\n    let crc32 = rUi(data, o);\n    o += 4;\n    let csize = rUi(data, o);\n    o += 4;\n    let usize = rUi(data, o);\n    o += 4;\n\n    let nl = rUs(data, o),\n      el = rUs(data, o + 2),\n      cl = rUs(data, o + 4);\n    o += 6; // name, extra, comment\n    o += 8; // disk, attribs\n\n    let roff = rUi(data, o);\n    o += 4;\n    o += nl + el + cl;\n\n    UZIP._readLocal(data, roff, out, csize, usize);\n  }\n  //console.log(out);\n  return out;\n};\n\nUZIP._readLocal = function(data, o, out, csize, usize) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint;\n  let sign = rUi(data, o);\n  o += 4;\n  let ver = rUs(data, o);\n  o += 2;\n  let gpflg = rUs(data, o);\n  o += 2;\n  //if((gpflg&8)!=0) throw \"unknown sizes\";\n  let cmpr = rUs(data, o);\n  o += 2;\n\n  let time = rUi(data, o);\n  o += 4;\n\n  let crc32 = rUi(data, o);\n  o += 4;\n  //let csize = rUi(data, o);  o+=4;\n  //let usize = rUi(data, o);  o+=4;\n  o += 8;\n\n  let nlen = rUs(data, o);\n  o += 2;\n  let elen = rUs(data, o);\n  o += 2;\n\n  let name = UZIP.bin.readUTF8(data, o, nlen);\n  o += nlen;\n  o += elen;\n\n  //console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), \"csize, usize\", csize, usize, nlen, elen, name, o);\n\n  let file = new Uint8Array(data.buffer, o);\n  if (false) {\n  } else if (cmpr == 0) out[name] = new Uint8Array(file.buffer.slice(o, o + csize));\n  else if (cmpr == 8) {\n    let buf = new Uint8Array(usize);\n    UZIP.inflateRaw(file, buf);\n    //let nbuf = pako[\"inflateRaw\"](file);\n    //for(let i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw \"e\";  }\n    out[name] = buf;\n  } else throw 'unknown compression method: ' + cmpr;\n};\n\nUZIP.inflateRaw = function(file, buf) {\n  return UZIP.F.inflate(file, buf);\n};\nUZIP.inflate = function(file, buf) {\n  let CMF = file[0],\n    FLG = file[1];\n  let CM = CMF & 15,\n    CINFO = CMF >>> 4;\n  //console.log(CM, CINFO,CMF,FLG);\n  return UZIP.inflateRaw(new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);\n};\nUZIP.deflate = function(data, opts /*, buf, off*/) {\n  if (opts == null) opts = { level: 6 };\n  let off = 0,\n    buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  buf[off] = 120;\n  buf[off + 1] = 156;\n  off += 2;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  let crc = UZIP.adler(data, 0, data.length);\n  buf[off + 0] = (crc >>> 24) & 255;\n  buf[off + 1] = (crc >>> 16) & 255;\n  buf[off + 2] = (crc >>> 8) & 255;\n  buf[off + 3] = (crc >>> 0) & 255;\n  return new Uint8Array(buf.buffer, 0, off + 4);\n};\nUZIP.deflateRaw = function(data, opts) {\n  if (opts == null) opts = { level: 6 };\n  let buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  let off;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  return new Uint8Array(buf.buffer, 0, off);\n};\n\nUZIP.encode = function(obj) {\n  let tot = 0,\n    wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let zpd = {};\n  for (let p in obj) {\n    let cpr = !UZIP._noNeed(p),\n      buf = obj[p],\n      crc = UZIP.crc.crc(buf, 0, buf.length);\n    zpd[p] = { cpr: cpr, usize: buf.length, crc: crc, file: cpr ? UZIP.deflateRaw(buf) : buf };\n  }\n\n  for (let p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * UZIP.bin.sizeUTF8(p);\n  tot += 22;\n\n  let data = new Uint8Array(tot),\n    o = 0;\n  let fof = [];\n\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 0);\n  }\n  let i = 0,\n    ioff = o;\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 1, fof[i++]);\n  }\n  let csize = o - ioff;\n\n  wUi(data, o, 0x06054b50);\n  o += 4;\n  o += 4; // disks\n  wUs(data, o, i);\n  o += 2;\n  wUs(data, o, i);\n  o += 2; // number of c d records\n  wUi(data, o, csize);\n  o += 4;\n  wUi(data, o, ioff);\n  o += 4;\n  o += 2;\n  return data.buffer;\n};\n// no need to compress .PNG, .ZIP, .JPEG ....\nUZIP._noNeed = function(fn) {\n  let ext = fn\n    .split('.')\n    .pop()\n    .toLowerCase();\n  return 'png,jpg,jpeg,zip'.indexOf(ext) != -1;\n};\n\nUZIP._writeHeader = function(data, o, p, obj, t, roff) {\n  let wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let file = obj.file;\n\n  wUi(data, o, t == 0 ? 0x04034b50 : 0x02014b50);\n  o += 4; // sign\n  if (t == 1) o += 2; // ver made by\n  wUs(data, o, 20);\n  o += 2; // ver\n  wUs(data, o, 0);\n  o += 2; // gflip\n  wUs(data, o, obj.cpr ? 8 : 0);\n  o += 2; // cmpr\n\n  wUi(data, o, 0);\n  o += 4; // time\n  wUi(data, o, obj.crc);\n  o += 4; // crc32\n  wUi(data, o, file.length);\n  o += 4; // csize\n  wUi(data, o, obj.usize);\n  o += 4; // usize\n\n  wUs(data, o, UZIP.bin.sizeUTF8(p));\n  o += 2; // nlen\n  wUs(data, o, 0);\n  o += 2; // elen\n\n  if (t == 1) {\n    o += 2; // comment length\n    o += 2; // disk number\n    o += 6; // attributes\n    wUi(data, o, roff);\n    o += 4; // usize\n  }\n  let nlen = UZIP.bin.writeUTF8(data, o, p);\n  o += nlen;\n  if (t == 0) {\n    data.set(file, o);\n    o += file.length;\n  }\n  return o;\n};\n\nUZIP.crc = {\n  table: (function() {\n    let tab = new Uint32Array(256);\n    for (let n = 0; n < 256; n++) {\n      let c = n;\n      for (let k = 0; k < 8; k++) {\n        if (c & 1) c = 0xedb88320 ^ (c >>> 1);\n        else c = c >>> 1;\n      }\n      tab[n] = c;\n    }\n    return tab;\n  })(),\n  update: function(c, buf, off, len) {\n    for (let i = 0; i < len; i++) c = UZIP.crc.table[(c ^ buf[off + i]) & 0xff] ^ (c >>> 8);\n    return c;\n  },\n  crc: function(b, o, l) {\n    return UZIP.crc.update(0xffffffff, b, o, l) ^ 0xffffffff;\n  }\n};\nUZIP.adler = function(data, o, len) {\n  let a = 1,\n    b = 0;\n  let off = o,\n    end = o + len;\n  while (off < end) {\n    let eend = Math.min(off + 5552, end);\n    while (off < eend) {\n      a += data[off++];\n      b += a;\n    }\n    a = a % 65521;\n    b = b % 65521;\n  }\n  return (b << 16) | a;\n};\n\nUZIP.bin = {\n  readUshort: function(buff, p) {\n    return buff[p] | (buff[p + 1] << 8);\n  },\n  writeUshort: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n  },\n  readUint: function(buff, p) {\n    return buff[p + 3] * (256 * 256 * 256) + ((buff[p + 2] << 16) | (buff[p + 1] << 8) | buff[p]);\n  },\n  writeUint: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n    buff[p + 2] = (n >> 16) & 255;\n    buff[p + 3] = (n >> 24) & 255;\n  },\n  readASCII: function(buff, p, l) {\n    let s = '';\n    for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function(data, p, s) {\n    for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  pad: function(n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function(buff, p, l) {\n    let s = '',\n      ns;\n    for (let i = 0; i < l; i++) s += '%' + UZIP.bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UZIP.bin.readASCII(buff, p, l);\n    }\n    return ns;\n  },\n  writeUTF8: function(buff, p, str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        buff[p + i] = code;\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        buff[p + i] = 192 | (code >> 6);\n        buff[p + i + 1] = 128 | ((code >> 0) & 63);\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        buff[p + i] = 224 | (code >> 12);\n        buff[p + i + 1] = 128 | ((code >> 6) & 63);\n        buff[p + i + 2] = 128 | ((code >> 0) & 63);\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        buff[p + i] = 240 | (code >> 18);\n        buff[p + i + 1] = 128 | ((code >> 12) & 63);\n        buff[p + i + 2] = 128 | ((code >> 6) & 63);\n        buff[p + i + 3] = 128 | ((code >> 0) & 63);\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  },\n  sizeUTF8: function(str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  }\n};\n\nUZIP.F = {};\n\nUZIP.F.deflateRaw = function(data, out, opos, lvl) {\n  let opts = [\n    /*\n\t\t ush good_length; /* reduce lazy search above this match length \n\t\t ush max_lazy;    /* do not perform lazy search above this match length \n         ush nice_length; /* quit search above this match length \n\t*/\n    /*      good lazy nice chain */\n    /* 0 */ [0, 0, 0, 0, 0] /* store only */,\n    /* 1 */ [4, 4, 8, 4, 0] /* max speed, no lazy matches */,\n    /* 2 */ [4, 5, 16, 8, 0],\n    /* 3 */ [4, 6, 16, 16, 0],\n\n    /* 4 */ [4, 10, 16, 32, 0] /* lazy matches */,\n    /* 5 */ [8, 16, 32, 32, 0],\n    /* 6 */ [8, 16, 128, 128, 0],\n    /* 7 */ [8, 32, 128, 256, 0],\n    /* 8 */ [32, 128, 258, 1024, 1],\n    /* 9 */ [32, 258, 258, 4096, 1]\n  ]; /* max compression */\n\n  let opt = opts[lvl];\n\n  let U = UZIP.F.U,\n    goodIndex = UZIP.F._goodIndex,\n    hash = UZIP.F._hash,\n    putsE = UZIP.F._putsE;\n  let i = 0,\n    pos = opos << 3,\n    cvrd = 0,\n    dlen = data.length;\n\n  if (lvl == 0) {\n    while (i < dlen) {\n      let len = Math.min(0xffff, dlen - i);\n      putsE(out, pos, i + len == dlen ? 1 : 0);\n      pos = UZIP.F._copyExact(data, i, len, out, pos + 8);\n      i += len;\n    }\n    return pos >>> 3;\n  }\n\n  let lits = U.lits,\n    strt = U.strt,\n    prev = U.prev,\n    li = 0,\n    lc = 0,\n    bs = 0,\n    ebits = 0,\n    c = 0,\n    nc = 0; // last_item, literal_count, block_start\n  if (dlen > 2) {\n    nc = UZIP.F._hash(data, 0);\n    strt[nc] = 0;\n  }\n  let nmch = 0,\n    nmci = 0;\n\n  for (i = 0; i < dlen; i++) {\n    c = nc;\n    //*\n    if (i + 1 < dlen - 2) {\n      nc = UZIP.F._hash(data, i + 1);\n      let ii = (i + 1) & 0x7fff;\n      prev[ii] = strt[nc];\n      strt[nc] = ii;\n    } //*/\n    if (cvrd <= i) {\n      if (li > 14000 || lc > 26697) {\n        if (cvrd < i) {\n          lits[li] = i - cvrd;\n          li += 2;\n          cvrd = i;\n        }\n        pos = UZIP.F._writeBlock(i == dlen - 1 || cvrd == dlen ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);\n        li = lc = ebits = 0;\n        bs = i;\n      }\n\n      let mch = 0;\n      //if(nmci==i) mch= nmch;  else\n      if (i < dlen - 2) mch = UZIP.F._bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);\n      /*\n\t\t\tif(mch!=0 && opt[4]==1 && (mch>>>16)<opt[1] && i+1<dlen-2) {\n\t\t\t\tnmch = UZIP.F._bestMatch(data, i+1, prev, nc, opt[2], opt[3]);  nmci=i+1;\n\t\t\t\t//let mch2 = UZIP.F._bestMatch(data, i+2, prev, nnc);  //nmci=i+1;\n\t\t\t\tif((nmch>>>16)>(mch>>>16)) mch=0;\n\t\t\t}//*/\n      let len = mch >>> 16,\n        dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n      if (mch != 0) {\n        let len = mch >>> 16,\n          dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n        let lgi = goodIndex(len, U.of0);\n        U.lhst[257 + lgi]++;\n        let dgi = goodIndex(dst, U.df0);\n        U.dhst[dgi]++;\n        ebits += U.exb[lgi] + U.dxb[dgi];\n        lits[li] = (len << 23) | (i - cvrd);\n        lits[li + 1] = (dst << 16) | (lgi << 8) | dgi;\n        li += 2;\n        cvrd = i + len;\n      } else {\n        U.lhst[data[i]]++;\n      }\n      lc++;\n    }\n  }\n  if (bs != i || data.length == 0) {\n    if (cvrd < i) {\n      lits[li] = i - cvrd;\n      li += 2;\n      cvrd = i;\n    }\n    pos = UZIP.F._writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);\n    li = 0;\n    lc = 0;\n    li = lc = ebits = 0;\n    bs = i;\n  }\n  while ((pos & 7) != 0) pos++;\n  return pos >>> 3;\n};\nUZIP.F._bestMatch = function(data, i, prev, c, nice, chain) {\n  let ci = i & 0x7fff,\n    pi = prev[ci];\n  //console.log(\"----\", i);\n  let dif = (ci - pi + (1 << 15)) & 0x7fff;\n  if (pi == ci || c != UZIP.F._hash(data, i - dif)) return 0;\n  let tl = 0,\n    td = 0; // top length, top distance\n  let dlim = Math.min(0x7fff, i);\n  while (dif <= dlim && --chain != 0 && pi != ci /*&& c==UZIP.F._hash(data,i-dif)*/) {\n    if (tl == 0 || data[i + tl] == data[i + tl - dif]) {\n      let cl = UZIP.F._howLong(data, i, dif);\n      if (cl > tl) {\n        tl = cl;\n        td = dif;\n        if (tl >= nice) break; //*\n        if (dif + 2 < cl) cl = dif + 2;\n        let maxd = 0; // pi does not point to the start of the word\n        for (let j = 0; j < cl - 2; j++) {\n          let ei = (i - dif + j + (1 << 15)) & 0x7fff;\n          let li = prev[ei];\n          let curd = (ei - li + (1 << 15)) & 0x7fff;\n          if (curd > maxd) {\n            maxd = curd;\n            pi = ei;\n          }\n        } //*/\n      }\n    }\n\n    ci = pi;\n    pi = prev[ci];\n    dif += (ci - pi + (1 << 15)) & 0x7fff;\n  }\n  return (tl << 16) | td;\n};\nUZIP.F._howLong = function(data, i, dif) {\n  if (data[i] != data[i - dif] || data[i + 1] != data[i + 1 - dif] || data[i + 2] != data[i + 2 - dif]) return 0;\n  let oi = i,\n    l = Math.min(data.length, i + 258);\n  i += 3;\n  //while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;\n  while (i < l && data[i] == data[i - dif]) i++;\n  return i - oi;\n};\nUZIP.F._hash = function(data, i) {\n  return (((data[i] << 8) | data[i + 1]) + (data[i + 2] << 4)) & 0xffff;\n  //let hash_shift = 0, hash_mask = 255;\n  //let h = data[i+1] % 251;\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = ((h<<hash_shift) ^ (c) ) & hash_mask;\n  //return h | (data[i]<<8);\n  //return (data[i] | (data[i+1]<<8));\n};\n//UZIP.___toth = 0;\nUZIP.saved = 0;\nUZIP.F._writeBlock = function(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {\n  let U = UZIP.F.U,\n    putsF = UZIP.F._putsF,\n    putsE = UZIP.F._putsE;\n\n  //*\n  let T, ML, MD, MH, numl, numd, numh, lset, dset;\n  U.lhst[256]++;\n  T = UZIP.F.getTrees();\n  ML = T[0];\n  MD = T[1];\n  MH = T[2];\n  numl = T[3];\n  numd = T[4];\n  numh = T[5];\n  lset = T[6];\n  dset = T[7];\n\n  let cstSize = (((pos + 3) & 7) == 0 ? 0 : 8 - ((pos + 3) & 7)) + 32 + (l0 << 3);\n  let fxdSize = ebits + UZIP.F.contSize(U.fltree, U.lhst) + UZIP.F.contSize(U.fdtree, U.dhst);\n  let dynSize = ebits + UZIP.F.contSize(U.ltree, U.lhst) + UZIP.F.contSize(U.dtree, U.dhst);\n  dynSize += 14 + 3 * numh + UZIP.F.contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);\n\n  for (let j = 0; j < 286; j++) U.lhst[j] = 0;\n  for (let j = 0; j < 30; j++) U.dhst[j] = 0;\n  for (let j = 0; j < 19; j++) U.ihst[j] = 0;\n  //*/\n  let BTYPE = cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;\n  putsF(out, pos, BFINAL);\n  putsF(out, pos + 1, BTYPE);\n  pos += 3;\n\n  let opos = pos;\n  if (BTYPE == 0) {\n    while ((pos & 7) != 0) pos++;\n    pos = UZIP.F._copyExact(data, o0, l0, out, pos);\n  } else {\n    let ltree, dtree;\n    if (BTYPE == 1) {\n      ltree = U.fltree;\n      dtree = U.fdtree;\n    }\n    if (BTYPE == 2) {\n      UZIP.F.makeCodes(U.ltree, ML);\n      UZIP.F.revCodes(U.ltree, ML);\n      UZIP.F.makeCodes(U.dtree, MD);\n      UZIP.F.revCodes(U.dtree, MD);\n      UZIP.F.makeCodes(U.itree, MH);\n      UZIP.F.revCodes(U.itree, MH);\n\n      ltree = U.ltree;\n      dtree = U.dtree;\n\n      putsE(out, pos, numl - 257);\n      pos += 5; // 286\n      putsE(out, pos, numd - 1);\n      pos += 5; // 30\n      putsE(out, pos, numh - 4);\n      pos += 4; // 19\n\n      for (let i = 0; i < numh; i++) putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);\n      pos += 3 * numh;\n      pos = UZIP.F._codeTiny(lset, U.itree, out, pos);\n      pos = UZIP.F._codeTiny(dset, U.itree, out, pos);\n    }\n\n    let off = o0;\n    for (let si = 0; si < li; si += 2) {\n      let qb = lits[si],\n        len = qb >>> 23,\n        end = off + (qb & ((1 << 23) - 1));\n      while (off < end) pos = UZIP.F._writeLit(data[off++], ltree, out, pos);\n\n      if (len != 0) {\n        let qc = lits[si + 1],\n          dst = qc >> 16,\n          lgi = (qc >> 8) & 255,\n          dgi = qc & 255;\n        pos = UZIP.F._writeLit(257 + lgi, ltree, out, pos);\n        putsE(out, pos, len - U.of0[lgi]);\n        pos += U.exb[lgi];\n\n        pos = UZIP.F._writeLit(dgi, dtree, out, pos);\n        putsF(out, pos, dst - U.df0[dgi]);\n        pos += U.dxb[dgi];\n        off += len;\n      }\n    }\n    pos = UZIP.F._writeLit(256, ltree, out, pos);\n  }\n  //console.log(pos-opos, fxdSize, dynSize, cstSize);\n  return pos;\n};\nUZIP.F._copyExact = function(data, off, len, out, pos) {\n  let p8 = pos >>> 3;\n  out[p8] = len;\n  out[p8 + 1] = len >>> 8;\n  out[p8 + 2] = 255 - out[p8];\n  out[p8 + 3] = 255 - out[p8 + 1];\n  p8 += 4;\n  out.set(new Uint8Array(data.buffer, off, len), p8);\n  //for(let i=0; i<len; i++) out[p8+i]=data[off+i];\n  return pos + ((len + 4) << 3);\n};\n/*\n\tInteresting facts:\n\t- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)\n*/\n\nUZIP.F.getTrees = function() {\n  let U = UZIP.F.U;\n  let ML = UZIP.F._hufTree(U.lhst, U.ltree, 15);\n  let MD = UZIP.F._hufTree(U.dhst, U.dtree, 15);\n  let lset = [],\n    numl = UZIP.F._lenCodes(U.ltree, lset);\n  let dset = [],\n    numd = UZIP.F._lenCodes(U.dtree, dset);\n  for (let i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;\n  for (let i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;\n  let MH = UZIP.F._hufTree(U.ihst, U.itree, 7);\n  let numh = 19;\n  while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] == 0) numh--;\n  return [ML, MD, MH, numl, numd, numh, lset, dset];\n};\nUZIP.F.getSecond = function(a) {\n  let b = [];\n  for (let i = 0; i < a.length; i += 2) b.push(a[i + 1]);\n  return b;\n};\nUZIP.F.nonZero = function(a) {\n  let b = '';\n  for (let i = 0; i < a.length; i += 2) if (a[i + 1] != 0) b += (i >> 1) + ',';\n  return b;\n};\nUZIP.F.contSize = function(tree, hst) {\n  let s = 0;\n  for (let i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];\n  return s;\n};\nUZIP.F._codeTiny = function(set, tree, out, pos) {\n  for (let i = 0; i < set.length; i += 2) {\n    let l = set[i],\n      rst = set[i + 1]; //console.log(l, pos, tree[(l<<1)+1]);\n    pos = UZIP.F._writeLit(l, tree, out, pos);\n    let rsl = l == 16 ? 2 : l == 17 ? 3 : 7;\n    if (l > 15) {\n      UZIP.F._putsE(out, pos, rst, rsl);\n      pos += rsl;\n    }\n  }\n  return pos;\n};\nUZIP.F._lenCodes = function(tree, set) {\n  let len = tree.length;\n  while (len != 2 && tree[len - 1] == 0) len -= 2; // when no distances, keep one code with length 0\n  for (let i = 0; i < len; i += 2) {\n    let l = tree[i + 1],\n      nxt = i + 3 < len ? tree[i + 3] : -1,\n      nnxt = i + 5 < len ? tree[i + 5] : -1,\n      prv = i == 0 ? -1 : tree[i - 1];\n    if (l == 0 && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 138);\n      if (zc < 11) set.push(17, zc - 3);\n      else set.push(18, zc - 11);\n      i += zc * 2 - 2;\n    } else if (l == prv && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 6);\n      set.push(16, zc - 3);\n      i += zc * 2 - 2;\n    } else set.push(l, 0);\n  }\n  return len >>> 1;\n};\nUZIP.F._hufTree = function(hst, tree, MAXL) {\n  let list = [],\n    hl = hst.length,\n    tl = tree.length,\n    i = 0;\n  for (i = 0; i < tl; i += 2) {\n    tree[i] = 0;\n    tree[i + 1] = 0;\n  }\n  for (i = 0; i < hl; i++) if (hst[i] != 0) list.push({ lit: i, f: hst[i] });\n  let end = list.length,\n    l2 = list.slice(0);\n  if (end == 0) return 0; // empty histogram (usually for dist)\n  if (end == 1) {\n    let lit = list[0].lit,\n      l2 = lit == 0 ? 1 : 0;\n    tree[(lit << 1) + 1] = 1;\n    tree[(l2 << 1) + 1] = 1;\n    return 1;\n  }\n  list.sort(function(a, b) {\n    return a.f - b.f;\n  });\n  let a = list[0],\n    b = list[1],\n    i0 = 0,\n    i1 = 1,\n    i2 = 2;\n  list[0] = { lit: -1, f: a.f + b.f, l: a, r: b, d: 0 };\n  while (i1 != end - 1) {\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      a = list[i0++];\n    } else {\n      a = list[i2++];\n    }\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      b = list[i0++];\n    } else {\n      b = list[i2++];\n    }\n    list[i1++] = { lit: -1, f: a.f + b.f, l: a, r: b };\n  }\n  let maxl = UZIP.F.setDepth(list[i1 - 1], 0);\n  if (maxl > MAXL) {\n    UZIP.F.restrictDepth(l2, MAXL, maxl);\n    maxl = MAXL;\n  }\n  for (i = 0; i < end; i++) tree[(l2[i].lit << 1) + 1] = l2[i].d;\n  return maxl;\n};\n\nUZIP.F.setDepth = function(t, d) {\n  if (t.lit != -1) {\n    t.d = d;\n    return d;\n  }\n  return Math.max(UZIP.F.setDepth(t.l, d + 1), UZIP.F.setDepth(t.r, d + 1));\n};\n\nUZIP.F.restrictDepth = function(dps, MD, maxl) {\n  let i = 0,\n    bCost = 1 << (maxl - MD),\n    dbt = 0;\n  dps.sort(function(a, b) {\n    return b.d == a.d ? a.f - b.f : b.d - a.d;\n  });\n\n  for (i = 0; i < dps.length; i++)\n    if (dps[i].d > MD) {\n      let od = dps[i].d;\n      dps[i].d = MD;\n      dbt += bCost - (1 << (maxl - od));\n    } else break;\n  dbt = dbt >>> (maxl - MD);\n  while (dbt > 0) {\n    let od = dps[i].d;\n    if (od < MD) {\n      dps[i].d++;\n      dbt -= 1 << (MD - od - 1);\n    } else i++;\n  }\n  for (; i >= 0; i--)\n    if (dps[i].d == MD && dbt < 0) {\n      dps[i].d--;\n      dbt++;\n    }\n  if (dbt != 0) console.log('debt left');\n};\n\nUZIP.F._goodIndex = function(v, arr) {\n  let i = 0;\n  if (arr[i | 16] <= v) i |= 16;\n  if (arr[i | 8] <= v) i |= 8;\n  if (arr[i | 4] <= v) i |= 4;\n  if (arr[i | 2] <= v) i |= 2;\n  if (arr[i | 1] <= v) i |= 1;\n  return i;\n};\nUZIP.F._writeLit = function(ch, ltree, out, pos) {\n  UZIP.F._putsF(out, pos, ltree[ch << 1]);\n  return pos + ltree[(ch << 1) + 1];\n};\n\nUZIP.F.inflate = function(data, buf) {\n  if (data[0] == 3 && data[1] == 0) return buf ? buf : new Uint8Array(0);\n  let F = UZIP.F,\n    bitsF = F._bitsF,\n    bitsE = F._bitsE,\n    decodeTiny = F._decodeTiny,\n    makeCodes = F.makeCodes,\n    codes2map = F.codes2map,\n    get17 = F._get17;\n  let U = F.U;\n\n  let noBuf = buf == null;\n  if (noBuf) buf = new Uint8Array((data.length >> 2) << 3);\n\n  let BFINAL = 0,\n    BTYPE = 0,\n    HLIT = 0,\n    HDIST = 0,\n    HCLEN = 0,\n    ML = 0,\n    MD = 0;\n  let off = 0,\n    pos = 0;\n  let lmap, dmap;\n\n  while (BFINAL == 0) {\n    BFINAL = bitsF(data, pos, 1);\n    BTYPE = bitsF(data, pos + 1, 2);\n    pos += 3;\n    //console.log(BFINAL, BTYPE);\n\n    if (BTYPE == 0) {\n      if ((pos & 7) != 0) pos += 8 - (pos & 7);\n      let p8 = (pos >>> 3) + 4,\n        len = data[p8 - 4] | (data[p8 - 3] << 8); //console.log(len);//bitsF(data, pos, 16),\n      if (noBuf) buf = UZIP.F._check(buf, off + len);\n      buf.set(new Uint8Array(data.buffer, data.byteOffset + p8, len), off);\n      //for(let i=0; i<len; i++) buf[off+i] = data[p8+i];\n      //for(let i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw \"e\";\n      pos = (p8 + len) << 3;\n      off += len;\n      continue;\n    }\n    if (noBuf) buf = UZIP.F._check(buf, off + (1 << 17));\n    if (BTYPE == 1) {\n      lmap = U.flmap;\n      dmap = U.fdmap;\n      ML = (1 << 9) - 1;\n      MD = (1 << 5) - 1;\n    }\n    if (BTYPE == 2) {\n      HLIT = bitsE(data, pos, 5) + 257;\n      HDIST = bitsE(data, pos + 5, 5) + 1;\n      HCLEN = bitsE(data, pos + 10, 4) + 4;\n      pos += 14;\n\n      let ppos = pos;\n      for (let i = 0; i < 38; i += 2) {\n        U.itree[i] = 0;\n        U.itree[i + 1] = 0;\n      }\n      let tl = 1;\n      for (let i = 0; i < HCLEN; i++) {\n        let l = bitsE(data, pos + i * 3, 3);\n        U.itree[(U.ordr[i] << 1) + 1] = l;\n        if (l > tl) tl = l;\n      }\n      pos += 3 * HCLEN; //console.log(itree);\n      makeCodes(U.itree, tl);\n      codes2map(U.itree, tl, U.imap);\n\n      lmap = U.lmap;\n      dmap = U.dmap;\n\n      let ml = decodeTiny(U.imap, (1 << tl) - 1, HLIT, data, pos, U.ltree);\n      ML = (1 << (ml >>> 24)) - 1;\n      pos += ml & 0xffffff;\n      makeCodes(U.ltree, ml >>> 24);\n      codes2map(U.ltree, ml >>> 24, lmap);\n\n      let md = decodeTiny(U.imap, (1 << tl) - 1, HDIST, data, pos, U.dtree);\n      MD = (1 << (md >>> 24)) - 1;\n      pos += md & 0xffffff;\n      makeCodes(U.dtree, md >>> 24);\n      codes2map(U.dtree, md >>> 24, dmap);\n    }\n    //let ooff=off, opos=pos;\n    while (true) {\n      let code = lmap[get17(data, pos) & ML];\n      pos += code & 15;\n      let lit = code >>> 4; //U.lhst[lit]++;\n      if (lit >>> 8 == 0) {\n        buf[off++] = lit;\n      } else if (lit == 256) {\n        break;\n      } else {\n        let end = off + lit - 254;\n        if (lit > 264) {\n          let ebs = U.ldef[lit - 257];\n          end = off + (ebs >>> 3) + bitsE(data, pos, ebs & 7);\n          pos += ebs & 7;\n        }\n        //UZIP.F.dst[end-off]++;\n\n        let dcode = dmap[get17(data, pos) & MD];\n        pos += dcode & 15;\n        let dlit = dcode >>> 4;\n        let dbs = U.ddef[dlit],\n          dst = (dbs >>> 4) + bitsF(data, pos, dbs & 15);\n        pos += dbs & 15;\n\n        //let o0 = off-dst, stp = Math.min(end-off, dst);\n        //if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else\n        //if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else\n        //if(dst==1) buf.fill(buf[off-1], off, end);  else\n        while (off < end) {\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n        }\n        off = end;\n        //while(off!=end) {  buf[off]=buf[off++-dst];  }\n      }\n    }\n    //console.log(off-ooff, (pos-opos)>>>3);\n  }\n  //console.log(UZIP.F.dst);\n  //console.log(tlen, dlen, off-tlen+tcnt);\n  return buf.length == off ? buf : buf.slice(0, off);\n};\nUZIP.F._check = function(buf, len) {\n  let bl = buf.length;\n  if (len <= bl) return buf;\n  let nbuf = new Uint8Array(bl << 1);\n  for (let i = 0; i < bl; i += 4) {\n    nbuf[i] = buf[i];\n    nbuf[i + 1] = buf[i + 1];\n    nbuf[i + 2] = buf[i + 2];\n    nbuf[i + 3] = buf[i + 3];\n  }\n  return nbuf;\n};\n\nUZIP.F._decodeTiny = function(lmap, LL, len, data, pos, tree) {\n  let opos = pos;\n  let bitsE = UZIP.F._bitsE,\n    get17 = UZIP.F._get17;\n  let dlen = len << 1,\n    i = 0,\n    mx = 0;\n  //if(pos<1000) console.log(\"--------\");\n  //console.log(\"----\", pos, \":\",  data[7],data[8], data[9], data[10], data[11]);\n  while (i < dlen) {\n    let code = lmap[get17(data, pos) & LL];\n    pos += code & 15;\n    let lit = code >>> 4; //if(pos<1000) console.log(lit, i>>>1);\n    //if(i<20)console.log(lit, code>>>9, pos);\n    if (lit <= 15) {\n      tree[i] = 0;\n      tree[i + 1] = lit;\n      if (lit > mx) mx = lit;\n      i += 2;\n    } else {\n      let ll = 0,\n        n = 0;\n      if (lit == 16) {\n        n = (3 + bitsE(data, pos, 2)) << 1;\n        pos += 2;\n        ll = tree[i - 1];\n      } else if (lit == 17) {\n        n = (3 + bitsE(data, pos, 3)) << 1;\n        pos += 3;\n      } else if (lit == 18) {\n        n = (11 + bitsE(data, pos, 7)) << 1;\n        pos += 7;\n      }\n      let ni = i + n;\n      while (i < ni) {\n        tree[i] = 0;\n        tree[i + 1] = ll;\n        i += 2;\n      }\n    }\n  }\n  let tl = tree.length;\n  while (i < tl) {\n    tree[i + 1] = 0;\n    i += 2;\n  }\n  return (mx << 24) | (pos - opos);\n};\n\nUZIP.F.makeCodes = function(tree, MAX_BITS) {\n  // code, length\n  let U = UZIP.F.U;\n  let max_code = tree.length;\n  let code, bits, n, i, len;\n\n  let bl_count = U.bl_count;\n  for (let i = 0; i <= MAX_BITS; i++) bl_count[i] = 0;\n  for (i = 1; i < max_code; i += 2) bl_count[tree[i]]++;\n\n  let next_code = U.next_code; // smallest code for each length\n\n  code = 0;\n  bl_count[0] = 0;\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n\n  for (n = 0; n < max_code; n += 2) {\n    len = tree[n + 1];\n    if (len != 0) {\n      tree[n] = next_code[len];\n      next_code[len]++;\n    }\n  }\n};\nUZIP.F.codes2map = function(tree, MAX_BITS, map) {\n  let max_code = tree.length;\n  let U = UZIP.F.U,\n    r15 = U.rev15;\n  for (let i = 0; i < max_code; i += 2)\n    if (tree[i + 1] != 0) {\n      let lit = i >> 1;\n      let cl = tree[i + 1],\n        val = (lit << 4) | cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);\n      let rest = MAX_BITS - cl,\n        i0 = tree[i] << rest,\n        i1 = i0 + (1 << rest);\n      //tree[i]=r15[i0]>>>(15-MAX_BITS);\n      while (i0 != i1) {\n        let p0 = r15[i0] >>> (15 - MAX_BITS);\n        map[p0] = val;\n        i0++;\n      }\n    }\n};\nUZIP.F.revCodes = function(tree, MAX_BITS) {\n  let r15 = UZIP.F.U.rev15,\n    imb = 15 - MAX_BITS;\n  for (let i = 0; i < tree.length; i += 2) {\n    let i0 = tree[i] << (MAX_BITS - tree[i + 1]);\n    tree[i] = r15[i0] >>> imb;\n  }\n};\n\nUZIP.F._putsE = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n};\nUZIP.F._putsF = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n  dt[o + 2] |= val >>> 16;\n};\n\nUZIP.F._bitsE = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8)) >>> (pos & 7)) & ((1 << length) - 1);\n};\nUZIP.F._bitsF = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7)) & ((1 << length) - 1);\n};\n/*\nUZIP.F._get9 = function(dt, pos) {\n\treturn ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;\n} */\nUZIP.F._get17 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7);\n};\nUZIP.F._get25 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16) | (dt[(pos >>> 3) + 3] << 24)) >>> (pos & 7);\n};\n\nUZIP.F.U = {\n  next_code: new Uint16Array(16),\n  bl_count: new Uint16Array(16),\n  ordr: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n  of0: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n  exb: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n  ldef: new Uint16Array(32),\n  df0: [\n    1,\n    2,\n    3,\n    4,\n    5,\n    7,\n    9,\n    13,\n    17,\n    25,\n    33,\n    49,\n    65,\n    97,\n    129,\n    193,\n    257,\n    385,\n    513,\n    769,\n    1025,\n    1537,\n    2049,\n    3073,\n    4097,\n    6145,\n    8193,\n    12289,\n    16385,\n    24577,\n    65535,\n    65535\n  ],\n  dxb: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n  ddef: new Uint32Array(32),\n  flmap: new Uint16Array(512),\n  fltree: [],\n  fdmap: new Uint16Array(32),\n  fdtree: [],\n  lmap: new Uint16Array(32768),\n  ltree: [],\n  dmap: new Uint16Array(32768),\n  dtree: [],\n  imap: new Uint16Array(512),\n  itree: [],\n  //rev9 : new Uint16Array(  512)\n  rev15: new Uint16Array(1 << 15),\n  lhst: new Uint32Array(286),\n  dhst: new Uint32Array(30),\n  ihst: new Uint32Array(19),\n  lits: new Uint32Array(15000),\n  strt: new Uint16Array(1 << 16),\n  prev: new Uint16Array(1 << 15)\n};\n\n(function() {\n  let U = UZIP.F.U;\n  let len = 1 << 15;\n  for (let i = 0; i < len; i++) {\n    let x = i;\n    x = ((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1);\n    x = ((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2);\n    x = ((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4);\n    x = ((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8);\n    U.rev15[i] = ((x >>> 16) | (x << 16)) >>> 17;\n  }\n\n  for (let i = 0; i < 32; i++) {\n    U.ldef[i] = (U.of0[i] << 3) | U.exb[i];\n    U.ddef[i] = (U.df0[i] << 4) | U.dxb[i];\n  }\n\n  let i = 0;\n  for (; i <= 143; i++) U.fltree.push(0, 8);\n  for (; i <= 255; i++) U.fltree.push(0, 9);\n  for (; i <= 279; i++) U.fltree.push(0, 7);\n  for (; i <= 287; i++) U.fltree.push(0, 8);\n  UZIP.F.makeCodes(U.fltree, 9);\n  UZIP.F.codes2map(U.fltree, 9, U.flmap);\n  UZIP.F.revCodes(U.fltree, 9);\n\n  for (i = 0; i < 32; i++) U.fdtree.push(0, 5);\n  UZIP.F.makeCodes(U.fdtree, 5);\n  UZIP.F.codes2map(U.fdtree, 5, U.fdmap);\n  UZIP.F.revCodes(U.fdtree, 5);\n\n  for (let i = 0; i < 19; i++) U.itree.push(0, 0);\n  for (let i = 0; i < 286; i++) U.ltree.push(0, 0);\n  for (let i = 0; i < 30; i++) U.dtree.push(0, 0);\n})();\n","// Modules\nimport uzip from '../3p/UZIP';\n\n// Collection of functions to parse roms\n// Private function to fetch a game\nexport const fetchROMAsByteArray = (ROM, loadOptions) => {\n  const fetchROMAsByteArrayTask = async () => {\n    // Check if we were passed straight bytes\n    if (ArrayBuffer.isView(ROM) && ROM.constructor === Uint8Array) {\n      return ROM;\n    } else if (typeof ROM === 'object' && ROM.size) {\n      // We were passed a file from HTML file input\n\n      // Read the file as a Uint8Array\n      const byteArray = await getROMFromFileReaderAsByteArray(ROM);\n\n      if (ROM.name.toLowerCase().endsWith('.zip')) {\n        return await parseByteArrayAsZip(byteArray);\n      }\n\n      return byteArray;\n    } else {\n      // We were passed a URL\n\n      // Fetch the file\n      // First check if we have headers\n      const fetchHeaders = {};\n      if (loadOptions && loadOptions.headers) {\n        fetchHeaders.headers = loadOptions.headers;\n      }\n\n      let bytes = await fetch(ROM, fetchHeaders).then(blob => {\n        if (!blob.ok) {\n          return Promise.reject(blob);\n        }\n        return blob.arrayBuffer();\n      });\n\n      let fileName = ROM;\n      if (loadOptions && loadOptions.fileName) {\n        fileName = loadOptions.fileName;\n      }\n\n      // Get our byteArray\n      const byteArray = new Uint8Array(bytes);\n\n      if (fileName.toLowerCase().endsWith('.zip')) {\n        return await parseByteArrayAsZip(byteArray);\n      }\n\n      return byteArray;\n    }\n  };\n\n  return fetchROMAsByteArrayTask();\n};\n\nconst getROMFromFileReaderAsByteArray = async ROM => {\n  const fileReaderByteArray = await new Promise((resolve, reject) => {\n    // Read the file object\n    // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const byteArray = new Uint8Array(fileReader.result);\n      resolve(byteArray);\n    };\n    fileReader.readAsArrayBuffer(ROM);\n  });\n  return fileReaderByteArray;\n};\n\n// Function to parse and find the gb files within an archive\nconst parseByteArrayAsZip = async byteArray => {\n  // Parse the zip using UZIP\n  const unzipObject = await uzip.parse(byteArray);\n\n  // Find the ROM in the output\n  let foundROM = false;\n  const unzipObjectKeys = Object.keys(unzipObject);\n  unzipObjectKeys.some(key => {\n    const lowercaseKey = key.toLowerCase();\n    if (lowercaseKey.includes('.gb') || lowercaseKey.includes('.gbc')) {\n      foundROM = unzipObject[key];\n      return true;\n    }\n    return false;\n  });\n\n  if (!foundROM) {\n    throw new Error('Could not find a ROM in zip...');\n  }\n\n  return foundROM;\n};\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    var pow;\r\n    if (supportsNativeBigInt) {\r\n        // forced to use eval because ** is a syntax error on pre-ECMAScript2017 environments.\r\n        pow = eval(\"(a,b)=>a**b\");\r\n    }\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        if (b === BigInt(0)) return Integer[1];\r\n        if (a === BigInt(0)) return Integer[0];\r\n        if (a === BigInt(1)) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(BigInt(0));\r\n        return new NativeBigInt(pow(a, b));\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","import { WasmBoyLib } from '../wasmboy/wasmboy';\nimport { waitForLibWorkerMessageType } from '../wasmboy/onmessage';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyGraphics } from '../graphics/graphics';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// https://www.npmjs.com/package/audiobuffer-to-wav\n// https://github.com/Jam3/audiobuffer-to-wav/blob/master/demo/index.js\nimport toWav from 'audiobuffer-to-wav';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// https://www.npmjs.com/package/big-integer\nimport bigInt from 'big-integer';\n\nlet currentRaf = undefined;\nconst forceOutputFrame = () => {\n  WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.FORCE_OUTPUT_FRAME\n  });\n  WasmBoyGraphics.renderFrame();\n};\n\nexport const saveCurrentAudioBufferToWav = () => {\n  if (!WasmBoyAudio.audioBuffer) {\n    return;\n  }\n\n  const wav = toWav(WasmBoyAudio.audioBuffer);\n  const blob = new window.Blob([new DataView(wav)], {\n    type: 'audio/wav'\n  });\n\n  const url = window.URL.createObjectURL(blob);\n  const anchor = document.createElement('a');\n  document.body.appendChild(anchor);\n  anchor.style = 'display: none';\n  anchor.href = url;\n  anchor.download = 'audio.wav';\n  anchor.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const runNumberOfFrames = async frames => {\n  await WasmBoyLib.pause();\n\n  // Set up a raf function to continually update the canvas\n  const rafUpdateCanvas = () => {\n    currentRaf = raf(() => {\n      if (currentRaf) {\n        forceOutputFrame();\n        rafUpdateCanvas();\n      }\n    });\n  };\n  rafUpdateCanvas();\n\n  for (let i = 0; i < frames; i++) {\n    await runWasmExport('executeFrame', []);\n  }\n\n  currentRaf = undefined;\n  forceOutputFrame();\n};\n\nexport const playUntilBreakpoint = async breakpoint => {\n  await WasmBoyLib.play(breakpoint);\n  const message = await waitForLibWorkerMessageType(WORKER_MESSAGE_TYPE.BREAKPOINT);\n  await WasmBoyLib.pause();\n};\n\nexport const runWasmExport = async (exportKey, parameters) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n    export: exportKey,\n    parameters\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getWasmMemorySection = async (start, end) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION,\n    start,\n    end\n  });\n\n  const eventData = getEventData(event);\n  return new Uint8Array(eventData.message.response);\n};\n\nexport const getWasmConstant = async constantKey => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n    constant: constantKey\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getStepsAsString = async radix => {\n  const stepsPerStepSet = await runWasmExport('getStepsPerStepSet');\n  const stepSets = await runWasmExport('getStepSets');\n  const steps = await runWasmExport('getSteps');\n\n  const bigSteps = bigInt(stepsPerStepSet)\n    .multiply(stepSets)\n    .add(steps);\n\n  if (radix) {\n    return bigSteps.toString(radix);\n  }\n  return bigSteps.toString(10);\n};\n\nexport const getCyclesAsString = async radix => {\n  const cyclesPerCycleSet = await runWasmExport('getCyclesPerCycleSet');\n  const cycleSets = await runWasmExport('getCycleSets');\n  const cycles = await runWasmExport('getCycles');\n\n  const bigCycles = bigInt(cyclesPerCycleSet)\n    .multiply(cycleSets)\n    .add(cycles);\n\n  if (radix) {\n    return bigCycles.toString(radix);\n  }\n  return bigCycles.toString(10);\n};\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Other lib helpers\nimport { instantiateWorkers } from '../worker/instantiate';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { loadROMToWasmBoy } from './loadrom';\nimport { render } from './render';\nimport { libWorkerOnMessage } from './onmessage';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// Our Main Orchestrator of the WasmBoy lib\nclass WasmBoyLibService {\n  // Start the request to our wasm module\n  constructor() {\n    this.worker = undefined;\n    this.coreType = undefined;\n    this.canvasElement = undefined;\n    this.paused = false;\n    this.ready = false;\n    this.loadedAndStarted = false;\n    this.renderId = false;\n    this.loadedROM = false;\n\n    this.fps = 0;\n\n    // Reset our config and stateful elements that depend on it\n    // this.options is set here\n    this._resetConfig();\n\n    // Add some listeners for when we are put into the background\n    if (typeof window !== 'undefined') {\n      window.document.addEventListener('visibilitychange', () => {\n        // fires when user switches tabs, apps, goes to homescreen, etc.\n        if (document.visibilityState === 'hidden') {\n          if (this.options && this.options.disablePauseOnHidden) {\n            return;\n          }\n          this.pause();\n        }\n      });\n    }\n  }\n\n  // Function to initialize/configure Wasmboy\n  config(wasmBoyOptions, canvasElement) {\n    const configTask = async () => {\n      // Pause any currently running game\n      await this.pause();\n\n      // Get our canvas elements\n      await this.setCanvas(canvasElement);\n\n      // Reset our config and stateful elements that depend on it\n      // If we have a new config to take its place\n      if (wasmBoyOptions || !this.options) {\n        this._resetConfig();\n      }\n\n      // set our options\n      if (wasmBoyOptions) {\n        // Set all options\n        Object.keys(wasmBoyOptions).forEach(key => {\n          if (this.options[key] !== undefined) {\n            this.options[key] = wasmBoyOptions[key];\n          }\n        });\n\n        // Aliases\n        // Gameboy Speed / Framerate\n        if (wasmBoyOptions.gameboySpeed) {\n          let gameboyFrameRate = Math.floor(wasmBoyOptions.gameboySpeed * 60);\n          if (gameboyFrameRate <= 0) {\n            gameboyFrameRate = 1;\n          }\n          this.options.gameboyFrameRate = gameboyFrameRate;\n        }\n      }\n    };\n\n    return configTask();\n  }\n\n  // Function to return our current configuration as an object\n  getConfig() {\n    return this.options;\n  }\n\n  // Function to get/set our canvas element\n  // Useful for vaporboy\n  setCanvas(canvasElement) {\n    if (!canvasElement) {\n      return Promise.resolve();\n    }\n\n    const setCanvasTask = async () => {\n      await this.pause();\n\n      // Set our new canvas element, and re-run init on graphics to apply styles and things\n      this.canvasElement = canvasElement;\n\n      await WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback);\n    };\n\n    return setCanvasTask();\n  }\n\n  getCanvas() {\n    return this.canvasElement;\n  }\n\n  // Finish request for wasm module, and fetch game\n  loadROM(ROM, fetchHeaders) {\n    const boundLoadROM = loadROMToWasmBoy.bind(this);\n    return boundLoadROM(ROM, fetchHeaders);\n  }\n\n  // Function to start/resume\n  play(optionalBreakpoint) {\n    const playTask = async () => {\n      if (!this.ready) {\n        return;\n      }\n      if (!this.loadedAndStarted) {\n        this.loadedAndStarted = true;\n        if (this.options.onLoadedAndStarted) {\n          this.options.onLoadedAndStarted();\n        }\n      }\n      if (this.options.onPlay) {\n        this.options.onPlay();\n      }\n\n      // Bless the audio, this is to fix any autoplay issues\n      if (!this.options.headless) {\n        WasmBoyAudio.resumeAudioContext();\n        WasmBoyAudio.resetTimeStretch();\n      }\n\n      // Reset the audio queue index to stop weird pauses when trying to load a game\n      await this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE\n      });\n\n      // Undo any pause\n      this.paused = false;\n\n      if (!this.updateId) {\n        if (optionalBreakpoint) {\n          await this.worker.postMessage({\n            type: WORKER_MESSAGE_TYPE.PLAY_UNTIL_BREAKPOINT,\n            breakpoint: optionalBreakpoint\n          });\n        } else {\n          await this.worker.postMessage({\n            type: WORKER_MESSAGE_TYPE.PLAY\n          });\n        }\n      }\n\n      if (!this.renderId && !this.options.headless) {\n        this.renderId = raf(() => {\n          render.call(this);\n        });\n      }\n    };\n\n    return playTask();\n  }\n\n  // Function to pause the game, returns a promise\n  // Will try to wait until the emulation sync is returned, and then will\n  // Allow any actions\n  pause() {\n    const pauseTask = async () => {\n      this.paused = true;\n      if (this.ready && this.options.onPause) {\n        this.options.onPause();\n      }\n\n      // Cancel our update and render loop\n      raf.cancel(this.renderId);\n      this.renderId = false;\n\n      // Cancel any playing audio\n      // Audio played with latency may be still going on here\n      if (!this.options.headless) {\n        WasmBoyAudio.cancelAllAudio(true);\n      }\n\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PAUSE\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n\n    return pauseTask();\n  }\n\n  // Function to reset wasmBoy, with an optional set of options\n  reset(wasmBoyOptions) {\n    const resetTask = async () => {\n      this.config(wasmBoyOptions, this.canvasElement);\n      // Reload the game if one was already loaded\n      if (this.loadedROM) {\n        return this.loadROM(this.loadedROM);\n      }\n    };\n\n    return resetTask();\n  }\n\n  saveState() {\n    const saveStateTask = async () => {\n      await this.pause();\n      const saveState = await WasmBoyMemory.saveState();\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  // Function to return the save states for the game\n  getSaveStates() {\n    const getSaveStatesTask = async () => {\n      let cartridgeObject = await WasmBoyMemory.getCartridgeObject();\n      if (!cartridgeObject) {\n        return [];\n      } else {\n        return cartridgeObject.saveStates;\n      }\n    };\n\n    return getSaveStatesTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      await this.pause();\n      await WasmBoyMemory.loadState(saveState);\n    };\n\n    return loadStateTask();\n  }\n\n  // Simply returns the FPS we get back from the lib worker\n  getFPS() {\n    return this.fps;\n  }\n\n  // Simply returns our current Core Type\n  getCoreType() {\n    return this.coreType;\n  }\n\n  // Private Function to reset options to default\n  _resetConfig() {\n    // Reset Fps Metering\n    this.fpsTimeStamps = [];\n    this.frameSkipCounter = 0;\n\n    // Configurable Options\n    // Set callbacks to null and not undefined,\n    // For when configs are passed, we will be sure to\n    // add them as keys\n    this.options = {\n      headless: false,\n      disablePauseOnHidden: false,\n      isAudioEnabled: true,\n      gameboyFrameRate: 60,\n      frameSkip: 0,\n      includeBootROM: false,\n      isGbcEnabled: true,\n      audioBatchProcessing: false,\n      graphicsBatchProcessing: false,\n      timersBatchProcessing: false,\n      graphicsDisableScanlineRendering: false,\n      audioAccumulateSamples: false,\n      tileRendering: false,\n      tileCaching: false,\n      updateGraphicsCallback: null,\n      updateAudioCallback: null,\n      saveStateCallback: null,\n      onReady: null,\n      onPlay: null,\n      onPause: null,\n      onLoadedAndStarted: null\n    };\n  }\n\n  // Function to instantiate and set up our workers\n  // This ensures we don't create workers twice\n  _instantiateWorkers() {\n    const instantiateWorkersTask = async () => {\n      if (this.worker) {\n        return;\n      } else {\n        this.worker = await instantiateWorkers();\n        this.worker.addMessageListener(libWorkerOnMessage.bind(this));\n      }\n    };\n\n    return instantiateWorkersTask();\n  }\n}\n\nexport const WasmBoyLib = new WasmBoyLibService();\n","// Build our public lib api\nimport { WasmBoyLib } from './wasmboy/wasmboy';\nimport { WasmBoyAudio } from './audio/audio';\nimport { WasmBoyController } from './controller/controller';\nimport { WasmBoyMemory } from './memory/memory';\nimport {\n  saveCurrentAudioBufferToWav,\n  playUntilBreakpoint,\n  runNumberOfFrames,\n  runWasmExport,\n  getWasmMemorySection,\n  getWasmConstant,\n  getStepsAsString,\n  getCyclesAsString\n} from './debug/debug';\n\n// Get our package.json\nimport packageJson from '../package.json';\n\n// Debugging properties prepended with _\n\n// export an object that public exposes parts of the singleton\n// Need to bind to preserve this\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\nexport const WasmBoy = {\n  config: WasmBoyLib.config.bind(WasmBoyLib),\n  getCoreType: WasmBoyLib.getCoreType.bind(WasmBoyLib),\n  getConfig: WasmBoyLib.getConfig.bind(WasmBoyLib),\n  setCanvas: WasmBoyLib.setCanvas.bind(WasmBoyLib),\n  getCanvas: WasmBoyLib.getCanvas.bind(WasmBoyLib),\n  loadROM: WasmBoyLib.loadROM.bind(WasmBoyLib),\n  play: WasmBoyLib.play.bind(WasmBoyLib),\n  pause: WasmBoyLib.pause.bind(WasmBoyLib),\n  reset: WasmBoyLib.reset.bind(WasmBoyLib),\n  isPlaying: () => {\n    return !WasmBoyLib.paused;\n  },\n  isPaused: () => {\n    return WasmBoyLib.paused;\n  },\n  isReady: () => {\n    return WasmBoyLib.ready;\n  },\n  isLoadedAndStarted: () => {\n    return WasmBoyLib.loadedAndStarted;\n  },\n  getVersion: () => {\n    return packageJson.version;\n  },\n  saveState: WasmBoyLib.saveState.bind(WasmBoyLib),\n  getSaveStates: WasmBoyLib.getSaveStates.bind(WasmBoyLib),\n  loadState: WasmBoyLib.loadState.bind(WasmBoyLib),\n  getFPS: WasmBoyLib.getFPS.bind(WasmBoyLib),\n  ResponsiveGamepad: WasmBoyController.ResponsiveGamepad,\n  enableDefaultJoypad: WasmBoyController.enableDefaultJoypad.bind(WasmBoyController),\n  disableDefaultJoypad: WasmBoyController.disableDefaultJoypad.bind(WasmBoyController),\n  setJoypadState: WasmBoyController.setJoypadState.bind(WasmBoyController),\n  resumeAudioContext: WasmBoyAudio.resumeAudioContext.bind(WasmBoyAudio),\n  _getCartridgeInfo: WasmBoyMemory.getCartridgeInfo.bind(WasmBoyMemory),\n  _playUntilBreakpoint: playUntilBreakpoint,\n  _runNumberOfFrames: runNumberOfFrames,\n  _saveCurrentAudioBufferToWav: saveCurrentAudioBufferToWav,\n  _runWasmExport: runWasmExport,\n  _getWasmMemorySection: getWasmMemorySection,\n  _getWasmConstant: getWasmConstant,\n  _getStepsAsString: getStepsAsString,\n  _getCyclesAsString: getCyclesAsString\n};\n"],"names":["getEventData","event","getSaveState","saveState","Object","WASMBOY_SAVE_STATE_SCHEMA","internalState","paletteMemory","gameboyMemory","cartridgeRam","Date","saveStateCallback","_prepareAndStoreAutoSave","saveStateMemoryKeys","i","Array","localStorage","WASMBOY_UNLOAD_STORAGE","JSON","header","cartridgeHeader","_findAndCommitAutoSave","findAndCommitAutoSaveTask","unloadStorage","unloadStorageObject","Uint8Array","saveCartridgeRam","initializeAutoSave","window","document","d","a","b","arguments","length","c","e","keys","getOwnPropertySymbols","concat","filter","getOwnPropertyDescriptor","enumerable","forEach","defineProperty","value","configurable","writable","t","type","includes","touches","rectCenterX","right","left","rectCenterY","bottom","top","touchX","clientX","touchY","clientY","ResponsiveGamepadPluginGB","onGetState","state","gamepadB","getSmartWorkerMessage","message","messageId","workerId","generateId","loadROMToWasmBoy","ROM","fetchHeaders","initializeTask","initPromises","fetchROMAsByteArray","_instantiateWorkers","options","headless","WasmBoyMemory","ROMAsByteArray","Promise","responses","response","worker","postMessage","WORKER_MESSAGE_TYPE","loadROMAndConfigTask","config","audioBatchProcessing","graphicsBatchProcessing","timersBatchProcessing","graphicsDisableScanlineRendering","audioAccumulateSamples","tileRendering","tileCaching","gameboyFrameRate","isAudioEnabled","frameSkip","loadROMTask","pause","WasmBoyGraphics","canvasElement","updateGraphicsCallback","WasmBoyAudio","updateAudioCallback","WasmBoyController","onReady","render","paused","shouldSkipRenderingFrame","frameSkipCounter","raf","writeString","view","offset","string","setUint8","charCodeAt","waitForLibWorkerMessageType","messageType","messageRequests","promise","resolve","libWorkerOnMessage","eventData","request","crashedTask","console","programCounter","runWasmExport","gameboyMemoryConstant","getWasmConstant","opcode","getWasmMemorySection","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","PLAY_UNTIL_BREAKPOINT","BREAKPOINT","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","FORCE_OUTPUT_FRAME","WasmBoyGraphicsService","constructor","undefined","initialize","getContext","GAMEBOY_CAMERA_WIDTH","GAMEBOY_CAMERA_HEIGHT","canvasContext","createImageData","width","height","setWorker","Uint8ClampedArray","renderFrame","imageDataArrayChanged","imageDataArray","canvasImageData","WasmBoyAudioService","audioSources","resumeAudioContext","audioContext","currentTime","resetTimeStretch","latency","audioPlaytime","playAudio","currentFps","allowFastSpeedStretching","numberOfSamples","leftChannelBuffer","rightChannelBuffer","fps","fpsDifference","Math","averageTimeStretchFps","SLOW_TIME_STRETCH_MIN_FPS","reduce","accumulator","currentValue","playbackRate","createBuffer","WASMBOY_SAMPLE_RATE","audioBuffer","copyToChannel","Float32Array","source","createBufferSource","finalNode","responseNode","destination","audioContextCurrentTime","audioContextCurrentTimeWithLatency","DEFAULT_AUDIO_LATENCY_IN_MILLI","playtime","playTime","setTimeout","cancelAllAudio","stopCurrentAudio","_createAudioContextIfNone","promisifyRequest","reject","onsuccess","request.onsuccess","result","onerror","request.onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","prop","prototype","get","set","val","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","idbTransaction.oncomplete","idbTransaction.onerror","onabort","idbTransaction.onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","ObjectStore.prototype.createIndex","ObjectStore.prototype.index","IDBObjectStore","objectStore","Transaction.prototype.objectStore","IDBTransaction","createObjectStore","UpgradeDB.prototype.createObjectStore","IDBDatabase","DB.prototype.transaction","funcName","replace","slice","call","callback","nativeObject","getAll","Constructor.prototype.getAll","query","count","instance","items","iterateCursor","push","continue","module","exports","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","request.onupgradeneeded","delete","default","require$$0","keyval","dbPromise","idb","upgradeDB","key","tx","clear","idbKeyval","wasmboyMemory","wasmBoyInternalState","wasmBoyPaletteMemory","gameBoyMemory","date","isAuto","WasmBoyMemoryService","RAM","_initializeConstants","memoryTypes","CARTRIDGE_ROM","CARTRIDGE_RAM","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","getLoadedCartridgeMemoryState","loadedCartridgeMemoryState","clearMemory","loadCartridgeRom","loadTask","workerMemoryObject","CARTRIDGE_HEADER","passedHeader","passedCartridgeRam","saveCartridgeRamTask","Error","cartridgeObject","loadCartridgeRam","loadCartridgeRamTask","passedSaveState","saveStateTask","loadState","loadStateTask","saverState","getCartridgeObject","getCartridgeInfo","getCartridgeInfoTask","cartridgeInfo","cartridgeRom","String","g","DPAD_UP","DPAD_RIGHT","DPAD_DOWN","DPAD_LEFT","LEFT_ANALOG_HORIZONTAL_AXIS","LEFT_ANALOG_VERTICAL_AXIS","LEFT_ANALOG_UP","LEFT_ANALOG_RIGHT","LEFT_ANALOG_DOWN","LEFT_ANALOG_LEFT","RIGHT_ANALOG_HORIZONTAL_AXIS","RIGHT_ANALOG_VERTICAL_AXIS","RIGHT_ANALOG_UP","RIGHT_ANALOG_RIGHT","RIGHT_ANALOG_DOWN","RIGHT_ANALOG_LEFT","A","B","X","Y","LEFT_TRIGGER","LEFT_BUMPER","RIGHT_TRIGGER","RIGHT_BUMPER","SELECT","START","SPECIAL","h","k","l","m","keymap","enableIgnoreWhenInputElementFocused","enableIgnoreWhenModifierState","_boundUpdateKeymapValues","_updateKeymapValues","bind","addEventListener","removeEventListener","ignoreWhenInputElementFocused","ignoreOnModifierState","some","activeElement","tagName","toLowerCase","getModifierState","code","_isFocusedOnInputElement","_isInModifierState","preventDefault","n","gamepadAnalogStickDeadZone","_getGamepads","buttons","_isButtonPressed","axis","_getAnalogStickAxis","axes","pressed","navigator","getGamepads","q","r","listeners","element","_addTouchStyles","boundingClientRect","_updateElementBoundingClientRect","active","boundUpdateElementRect","boundTouchEvent","_touchEvent","_removeTouchStyles","stopListening","_updateActiveStatus","_updateTouchStyles","onTouchEvent","getBoundingClientRect","style","userSelect","classList","add","remove","u","allowMultipleDirections","_resetState","f","setHorizontalState","setVerticalState","abs","v","HORIZONTAL_AXIS","VERTICAL_AXIS","UP","RIGHT","DOWN","LEFT","transform","deadzone","w","input","y","enabled","dpads","leftAnalogs","rightAnalogs","listen","splice","indexOf","addAnalogInput","z","RESPONSIVE_GAMEPAD_INPUTS","_enabled","_multipleDirectionInput","Keyboard","Gamepad","TouchInput","setKeysToResponsiveGamepadInput","setGamepadButtonsToResponsiveGamepadInput","setGamepadAxisToResponsiveGamepadInput","plugins","inputChangeMap","inputChangeOldState","cancelInputChangeListener","enable","_startInputChangeInterval","disable","onAddPlugin","onRemovePlugin","getState","codes","setInterval","_inputChangeIntervalHandler","this.cancelInputChangeListener","clearInterval","ResponsiveGamepad","WasmBoyControllerService","isEnabled","updateController","controllerState","setJoypadState","setJoypadStateParamsAsArray","enableDefaultJoypad","disableDefaultJoypad","idCounter","randomId","id","SmartWorker","workerUrl","workerJs","atob","blob","Blob","BlobBuilder","Worker","URL","_onMessageHandler","transfer","messageObject","messageIdListener","responseMessage","messageListener","addMessageListener","removeMessageListener","messageListenerIndex","instantiateWorkers","libWorker","wasmboyLibWasmWorkerUrl","LIB","graphicsWorker","wasmboyGraphicsWorkerUrl","GRAPHICS","audioWorker","wasmboyAudioWorkerUrl","AUDIO","controllerWorker","wasmboyControllerWorkerUrl","CONTROLLER","memoryWorker","wasmboyMemoryWorkerUrl","MEMORY","workerReadyPromises","childWorkers","childWorker","messageChannel","MessageChannel","workerReadyPromise","messagesReceived","ports","UZIP","buf","rUs","rUi","o","out","data","eocd","cnu","csize","usize","nl","el","cl","roff","_readLocal","UZIP._readLocal","cmpr","nlen","elen","file","inflateRaw","UZIP.inflateRaw","inflate","UZIP.inflate","deflate","UZIP.deflate","opts","level","off","crc","deflateRaw","UZIP.deflateRaw","encode","UZIP.encode","tot","wUi","wUs","zpd","cpr","fof","ioff","_noNeed","UZIP._noNeed","fn","ext","_writeHeader","UZIP._writeHeader","table","tab","Uint32Array","update","len","UZIP.adler","end","eend","readUshort","buff","writeUshort","readUint","writeUint","readASCII","s","writeASCII","pad","readUTF8","ns","decodeURIComponent","writeUTF8","str","strl","ci","sizeUTF8","UZIP.F.deflateRaw","opos","lvl","opt","U","goodIndex","putsE","pos","cvrd","dlen","lits","strt","prev","li","lc","bs","ebits","nc","ii","mch","dst","lgi","dgi","UZIP.F._bestMatch","nice","chain","pi","dif","td","tl","dlim","maxd","j","ei","curd","UZIP.F._howLong","oi","UZIP.F._hash","UZIP.F._writeBlock","BFINAL","o0","l0","putsF","MD","MH","numl","numd","T","ML","numh","lset","dset","cstSize","fxdSize","dynSize","BTYPE","ltree","dtree","si","qb","qc","UZIP.F._copyExact","p8","UZIP.F.getTrees","UZIP.F.getSecond","UZIP.F.nonZero","UZIP.F.contSize","tree","hst","UZIP.F._codeTiny","rst","rsl","UZIP.F._lenCodes","nxt","nnxt","prv","lz","zc","UZIP.F._hufTree","MAXL","list","hl","lit","l2","i0","i1","i2","maxl","UZIP.F.setDepth","UZIP.F.restrictDepth","dps","bCost","dbt","od","UZIP.F._goodIndex","arr","UZIP.F._writeLit","ch","UZIP.F.inflate","F","bitsF","bitsE","decodeTiny","makeCodes","codes2map","get17","noBuf","HLIT","HDIST","dmap","lmap","HCLEN","ml","md","ebs","dcode","dbs","UZIP.F._check","bl","nbuf","UZIP.F._decodeTiny","LL","mx","ll","ni","UZIP.F.makeCodes","MAX_BITS","max_code","bits","bl_count","next_code","UZIP.F.codes2map","map","r15","rest","UZIP.F.revCodes","imb","UZIP.F._putsE","dt","UZIP.F._putsF","UZIP.F._bitsE","UZIP.F._bitsF","UZIP.F._get17","UZIP.F._get25","Uint16Array","ordr","of0","exb","ldef","df0","dxb","ddef","flmap","fltree","fdmap","fdtree","imap","itree","rev15","lhst","dhst","ihst","x","loadOptions","fetchROMAsByteArrayTask","ArrayBuffer","byteArray","getROMFromFileReaderAsByteArray","parseByteArrayAsZip","bytes","fetch","fileName","fileReaderByteArray","fileReader","FileReader","fileReader.onload","unzipObject","uzip","foundROM","unzipObjectKeys","lowercaseKey","performance","now","module.exports","process","hrtime","getNanoSeconds","nodeLoadTime","hr","moduleLoadTime","upTime","uptime","loadTime","getTime","this","root","global","vendors","caf","suffix","last","queue","frameDuration","_now","next","max","cp","cancelled","round","handle","raf_1","cancel","polyfill","object","requestAnimationFrame","cancelAnimationFrame","bigInt","Integer","radix","alphabet","caseSensitive","DEFAULT_ALPHABET","text","absBase","base","alphabetValues","parseValue","digits","isNegative","start","parseBaseFromArray","BigInteger","sign","isSmall","SmallInteger","NativeBigInt","isPrecise","MAX_INT","smallToArray","floor","arrayToSmall","trim","compareAbs","MAX_INT_ARR","BASE","createArray","truncate","ceil","l_a","l_b","carry","sum","addAny","addSmall","subtract","a_l","b_l","borrow","difference","subtractSmall","multiplyLong","a_i","b_j","product","multiplySmall","shiftLeft","multiplyKaratsuba","ac","bd","abcd","multiplySmallAndArray","square","a_j","divModSmall","lambda","quotient","remainder","divisor","divModAny","self","supportsNativeBigInt","negate","comparison","divisorMostSignificantDigit","shift","quotientDigit","part","unshift","xlen","highx","highy","guess","check","reverse","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","divide","modPow","bitwise","xSign","ySign","xRem","not","yRem","isZero","xDivMod","highestPower2","xDigit","toJSNumber","yDivMod","yDigit","multiply","roughLOB","LOBMASK_I","BigInt","LOBMASK_BI","integerLogarithm","compareTo","tmp","greater","min","gcd","pow","times","toBase","valueOf","neg","isPositive","Number","divmod","digit","minus","toBaseString","join","parseStringValue","split","decimalPlace","test","isValid","LOG_BASE","toString","create","BigInteger.prototype.add","plus","SmallInteger.prototype.add","NativeBigInt.prototype.add","BigInteger.prototype.subtract","SmallInteger.prototype.subtract","NativeBigInt.prototype.subtract","BigInteger.prototype.negate","SmallInteger.prototype.negate","small","NativeBigInt.prototype.negate","BigInteger.prototype.abs","SmallInteger.prototype.abs","NativeBigInt.prototype.abs","BigInteger.prototype.multiply","l1","_multiplyBySmall","SmallInteger.prototype._multiplyBySmall","BigInteger.prototype._multiplyBySmall","SmallInteger.prototype.multiply","NativeBigInt.prototype.multiply","BigInteger.prototype.square","SmallInteger.prototype.square","NativeBigInt.prototype.square","BigInteger.prototype.divmod","BigInteger.prototype.divide","over","BigInteger.prototype.mod","BigInteger.prototype.pow","eval","NativeBigInt.prototype.pow","BigInteger.prototype.modPow","isOdd","BigInteger.prototype.compareAbs","SmallInteger.prototype.compareAbs","NativeBigInt.prototype.compareAbs","compare","BigInteger.prototype.compare","Infinity","SmallInteger.prototype.compare","NativeBigInt.prototype.compare","BigInteger.prototype.equals","eq","notEquals","BigInteger.prototype.notEquals","neq","BigInteger.prototype.greater","gt","BigInteger.prototype.lesser","lt","greaterOrEquals","BigInteger.prototype.greaterOrEquals","geq","lesserOrEquals","BigInteger.prototype.lesserOrEquals","leq","BigInteger.prototype.isEven","SmallInteger.prototype.isEven","NativeBigInt.prototype.isEven","BigInteger.prototype.isOdd","SmallInteger.prototype.isOdd","NativeBigInt.prototype.isOdd","BigInteger.prototype.isPositive","SmallInteger.prototype.isPositive","BigInteger.prototype.isNegative","SmallInteger.prototype.isNegative","BigInteger.prototype.isUnit","SmallInteger.prototype.isUnit","NativeBigInt.prototype.isUnit","BigInteger.prototype.isZero","SmallInteger.prototype.isZero","NativeBigInt.prototype.isZero","BigInteger.prototype.isDivisibleBy","isPrime","BigInteger.prototype.isPrime","strict","bitLength","logN","log","isProbablePrime","BigInteger.prototype.isProbablePrime","iterations","randBetween","modInv","BigInteger.prototype.modInv","zero","newT","one","newR","lastT","lastR","BigInteger.prototype.next","SmallInteger.prototype.next","NativeBigInt.prototype.next","BigInteger.prototype.prev","SmallInteger.prototype.prev","NativeBigInt.prototype.prev","powersOfTwo","powers2Length","BigInteger.prototype.shiftLeft","shiftRight","BigInteger.prototype.shiftRight","remQuo","BigInteger.prototype.not","and","BigInteger.prototype.and","or","BigInteger.prototype.or","xor","BigInteger.prototype.xor","BigInteger.prototype.bitLength","toArray","BigInteger.prototype.toArray","SmallInteger.prototype.toArray","NativeBigInt.prototype.toArray","BigInteger.prototype.toString","zeros","SmallInteger.prototype.toString","toJSON","SmallInteger.prototype.toJSON","BigInteger.prototype.valueOf","parseInt","SmallInteger.prototype.valueOf","NativeBigInt.prototype.toJSNumber","minusOne","lcm","isInstance","Integer.isInstance","low","range","high","random","restricted","fromArray","Integer.fromArray","hasOwnProperty","currentRaf","exportKey","parameters","WasmBoyLib","export","constantKey","constant","WasmBoyLibService","disablePauseOnHidden","wasmBoyOptions","configTask","setCanvas","getConfig","setCanvasTask","getCanvas","loadROM","boundLoadROM","play","optionalBreakpoint","playTask","ready","loadedAndStarted","onLoadedAndStarted","onPlay","updateId","breakpoint","renderId","pauseTask","onPause","reset","resetTask","loadedROM","getSaveStates","getSaveStatesTask","getFPS","getCoreType","coreType","_resetConfig","includeBootROM","isGbcEnabled","instantiateWorkersTask","WasmBoy","isPlaying","isPaused","isReady","isLoadedAndStarted","getVersion","_getCartridgeInfo","_playUntilBreakpoint","playUntilBreakpoint","_runNumberOfFrames","runNumberOfFrames","frames","rafUpdateCanvas","_saveCurrentAudioBufferToWav","saveCurrentAudioBufferToWav","numChannels","buffer","numberOfChannels","sampleRate","format","float32","bitDepth","inputL","inputR","inputIndex","bytesPerSample","blockAlign","samples","DataView","setUint32","setUint16","setInt16","setFloat32","url","anchor","_runWasmExport","_getWasmMemorySection","_getWasmConstant","_getStepsAsString","getStepsAsString","stepsPerStepSet","stepSets","steps","bigSteps","_getCyclesAsString","getCyclesAsString","cyclesPerCycleSet","cycleSets","cycles","bigCycles"],"mappings":"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"}