{"version":3,"file":"wasmboy.wasm.worker.js","sources":["../../lib/worker/util.js","../../lib/worker/workerapi.js","../../lib/worker/constants.js","../../lib/worker/smartworker.js","../../lib/wasmboy/worker/graphics/onmessage.js","../../lib/wasmboy/worker/audio/onmessage.js","../../lib/wasmboy/worker/controller/onmessage.js","../../lib/wasmboy/worker/memory/rom.js","../../lib/wasmboy/worker/memory/ram.js","../../lib/wasmboy/worker/memory/header.js","../../lib/wasmboy/worker/memory/gameboymemory.js","../../lib/wasmboy/worker/memory/palettememory.js","../../lib/wasmboy/worker/memory/internalstate.js","../../lib/wasmboy/worker/memory/onmessage.js","../core/getWasmBoyWasmCore.esm.js","../../lib/common/common.js","../../lib/wasmboy/worker/timestamp.js","../../lib/wasmboy/worker/graphics/transfer.js","../../lib/wasmboy/worker/update.js","../../lib/wasmboy/worker/wasmboy.worker.js"],"sourcesContent":["export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","// Isomorphic worker api to be imported by web workers\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n// Initilize some of our isomorphic values\nimport { isInBrowser } from './util';\n\nlet parentPort;\nif (!isInBrowser) {\n  parentPort = require('worker_threads').parentPort;\n}\n\n// https://nodejs.org/api/worker_threads.html#worker_threads_worker_postmessage_value_transferlist\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\nexport function postMessage(message, transferArray) {\n  // Can't bind parentPort.postMessage, so we need to kinda copy code here :p\n  if (isInBrowser) {\n    self.postMessage(message, transferArray);\n  } else {\n    parentPort.postMessage(message, transferArray);\n  }\n}\n\n// https://nodejs.org/api/worker_threads.html#worker_threads_worker_parentport\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/onmessage\nexport function onMessage(callback, port) {\n  if (!callback) {\n    console.error('workerapi: No callback was provided to onMessage!');\n  }\n\n  // If we passed a port, use that\n  if (port) {\n    if (isInBrowser) {\n      // We are in the browser\n      port.onmessage = callback;\n    } else {\n      // We are in Node\n      port.on('message', callback);\n    }\n    return;\n  }\n\n  if (isInBrowser) {\n    // We are in the browser\n    self.onmessage = callback;\n  } else {\n    // We are in Node\n    parentPort.on('message', callback);\n  }\n}\n","export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  PLAY_UNTIL_BREAKPOINT: 'PLAY_UNTIL_BREAKPOINT',\n  BREAKPOINT: 'BREAKPOINT',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT',\n  FORCE_OUTPUT_FRAME: 'FORCE_OUTPUT_FRAME',\n  SET_SPEED: 'SET_SPEED',\n  IS_GBC: 'IS_GBC'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_PROD_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n    \n    ROLLUP_REPLACE_PROD_BROWSER*/\n\n    /*ROLLUP_REPLACE_DEV_BROWSER\n\n    this.worker = new Worker(workerUrl);\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_DEV_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise(resolve => {\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Function to handle on message from graphics worker\n// to the lib worker\nexport function graphicsWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = libWorker.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf();\n      libWorker.WASMBOY_CURRENT_FRAME_SIZE = libWorker.wasmInstance.exports.FRAME_SIZE.valueOf();\n      // Forward to our lib worker\n      libWorker.graphicsWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION: libWorker.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Function to handler audio worker on message to the libWorker\nexport function audioWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_SOUND_OUTPUT_LOCATION = libWorker.wasmInstance.exports.soundOutputLocation.valueOf();\n      libWorker.WASMBOY_CHANNEL_1_OUTPUT_LOCATION = libWorker.wasmInstance.exports.CHANNEL_1_BUFFER_LOCATION.valueOf();\n      libWorker.WASMBOY_CHANNEL_2_OUTPUT_LOCATION = libWorker.wasmInstance.exports.CHANNEL_2_BUFFER_LOCATION.valueOf();\n      libWorker.WASMBOY_CHANNEL_3_OUTPUT_LOCATION = libWorker.wasmInstance.exports.CHANNEL_3_BUFFER_LOCATION.valueOf();\n      libWorker.WASMBOY_CHANNEL_4_OUTPUT_LOCATION = libWorker.wasmInstance.exports.CHANNEL_4_BUFFER_LOCATION.valueOf();\n\n      // Forward to our lib worker\n      libWorker.audioWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_SOUND_OUTPUT_LOCATION: libWorker.wasmInstance.exports.soundOutputLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.AUDIO_LATENCY: {\n      libWorker.currentAudioLatencyInSeconds = eventData.message.latency;\n      return;\n    }\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Handler for when the controller worker posts to the libWorker\nexport function controllerWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE: {\n      // Config will come in as an array, pass in values using apply\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n      const setJoypadStateParamsAsArray = eventData.message.setJoypadStateParamsAsArray;\n      libWorker.wasmInstance.exports.setJoypadState.apply(libWorker, setJoypadStateParamsAsArray);\n      return;\n    }\n  }\n}\n","// Private function to get the caretridge rom\nexport function getCartridgeRom(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Depening on the rom type, we will have different rom sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = libWorker.wasmByteMemory[libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let romSize = undefined;\n  if (cartridgeType === 0x00) {\n    // ROM only, 32KB\n    romSize = 0x8000;\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 2MB of ROM\n    romSize = 0x200000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 256KB ROM\n    romSize = 0x40000;\n  } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {\n    // MBC3 2MB of ROM\n    romSize = 0x200000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {\n    // MBC5 8MB of ROM\n    romSize = 0x800000;\n  }\n\n  if (!romSize) {\n    return new Uint8Array();\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRom = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_GAME_BYTES_LOCATION,\n    libWorker.WASMBOY_GAME_BYTES_LOCATION + romSize\n  );\n  return cartridgeRom;\n}\n","// Private function to get the cartridge ram\nexport function getCartridgeRam(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Depening on the rom type, we will have different ram sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = libWorker.wasmByteMemory[libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let ramSize = undefined;\n  if (cartridgeType === 0x00) {\n    // No memory for this rom type\n    return new Uint8Array();\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 512X4 Bytes, 2KB\n    ramSize = 0x800;\n  } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {\n    // MBC3 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {\n    // MBC5 128KB of Ram\n    ramSize = 0x20000;\n  }\n\n  if (!ramSize) {\n    return new Uint8Array();\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRam = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION,\n    libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION + ramSize\n  );\n  return cartridgeRam;\n}\n","// Function to get the cartridge header\nexport function getCartridgeHeader(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Header is at 0x0134 - 0x014F\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  const headerLength = 0x014f - 0x0134;\n  const headerLocation = libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0134;\n  const headerArray = libWorker.wasmByteMemory.slice(headerLocation, headerLocation + headerLength);\n\n  return headerArray;\n}\n","// Returns the standard 0xFFFF gameboy memory\n// You will normally see in gameboy docs.\n// This is returned from the core, and represents\n// This wasmboy gameboy state\nexport function getGameBoyMemory(libWorker) {\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION,\n    libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION + libWorker.WASMBOY_INTERNAL_MEMORY_SIZE\n  );\n}\n","// Function to get the current palette data for\n// GBC in memory. This is needed to load state with\n// The correct colors\nexport function getPaletteMemory(libWorker) {\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_PALETTE_MEMORY_LOCATION,\n    libWorker.WASMBOY_PALETTE_MEMORY_LOCATION + libWorker.WASMBOY_PALETTE_MEMORY_SIZE\n  );\n}\n","// Returns the internal savestate of the wasmboy core,\n// To save all soft values held in memory\nexport function getInternalState(libWorker) {\n  libWorker.wasmInstance.exports.saveState();\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_INTERNAL_STATE_LOCATION,\n    libWorker.WASMBOY_INTERNAL_STATE_LOCATION + libWorker.WASMBOY_INTERNAL_STATE_SIZE\n  );\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Our memory getters\nimport { getCartridgeRom } from './rom';\nimport { getCartridgeRam } from './ram';\nimport { getCartridgeHeader } from './header';\nimport { getGameBoyMemory } from './gameboymemory';\nimport { getPaletteMemory } from './palettememory';\nimport { getInternalState } from './internalstate';\n\n// On message handler for when memory worker\n// posts to lib Worker\nexport function memoryWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.CLEAR_MEMORY: {\n      // Clear Wasm memory\n      // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n      for (let i = 0; i <= libWorker.wasmByteMemory.length; i++) {\n        libWorker.wasmByteMemory[i] = 0;\n      }\n\n      const wasmByteMemory = libWorker.wasmByteMemory.slice(0);\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY_DONE,\n            wasmByteMemory: wasmByteMemory.buffer\n          },\n          eventData.messageId\n        ),\n        [wasmByteMemory.buffer]\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_GAME_BYTES_LOCATION = libWorker.wasmInstance.exports.gameBytesLocation.valueOf();\n      (libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION = libWorker.wasmInstance.exports.gameRamBanksLocation.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_STATE_SIZE = libWorker.wasmInstance.exports.wasmBoyInternalStateSize.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_STATE_LOCATION = libWorker.wasmInstance.exports.wasmBoyInternalStateLocation.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_MEMORY_SIZE = libWorker.wasmInstance.exports.gameBoyInternalMemorySize.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION = libWorker.wasmInstance.exports.gameBoyInternalMemoryLocation.valueOf()),\n        (libWorker.WASMBOY_PALETTE_MEMORY_SIZE = libWorker.wasmInstance.exports.gameboyColorPaletteSize.valueOf()),\n        (libWorker.WASMBOY_PALETTE_MEMORY_LOCATION = libWorker.wasmInstance.exports.gameboyColorPaletteLocation.valueOf());\n\n      // Forward to our lib worker\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_GAME_BYTES_LOCATION: libWorker.wasmInstance.exports.gameBytesLocation.valueOf(),\n            WASMBOY_GAME_RAM_BANKS_LOCATION: libWorker.wasmInstance.exports.gameRamBanksLocation.valueOf(),\n            WASMBOY_INTERNAL_STATE_SIZE: libWorker.wasmInstance.exports.wasmBoyInternalStateSize.valueOf(),\n            WASMBOY_INTERNAL_STATE_LOCATION: libWorker.wasmInstance.exports.wasmBoyInternalStateLocation.valueOf(),\n            WASMBOY_INTERNAL_MEMORY_SIZE: libWorker.wasmInstance.exports.gameBoyInternalMemorySize.valueOf(),\n            WASMBOY_INTERNAL_MEMORY_LOCATION: libWorker.wasmInstance.exports.gameBoyInternalMemoryLocation.valueOf(),\n            WASMBOY_PALETTE_MEMORY_SIZE: libWorker.wasmInstance.exports.gameboyColorPaletteSize.valueOf(),\n            WASMBOY_PALETTE_MEMORY_LOCATION: libWorker.wasmInstance.exports.gameboyColorPaletteLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.SET_MEMORY: {\n      const memoryKeys = Object.keys(eventData.message);\n\n      if (memoryKeys.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n        libWorker.wasmByteMemory.set(new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]), libWorker.WASMBOY_GAME_BYTES_LOCATION);\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]),\n          libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]),\n          libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]),\n          libWorker.WASMBOY_PALETTE_MEMORY_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]),\n          libWorker.WASMBOY_INTERNAL_STATE_LOCATION\n        );\n        libWorker.wasmInstance.exports.loadState();\n      }\n\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.SET_MEMORY_DONE\n          },\n          eventData.messageId\n        )\n      );\n\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.GET_MEMORY: {\n      // Construct our data object\n      const responseMemory = {\n        type: WORKER_MESSAGE_TYPE.GET_MEMORY\n      };\n      const responseTransferrables = [];\n\n      const memoryTypes = eventData.message.memoryTypes;\n\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n        const cartridgeRom = getCartridgeRom(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_ROM] = cartridgeRom;\n        responseTransferrables.push(cartridgeRom);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n        const cartridgeRam = getCartridgeRam(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeRam;\n        responseTransferrables.push(cartridgeRam);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_HEADER)) {\n        const cartridgeHeader = getCartridgeHeader(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_HEADER] = cartridgeHeader;\n        responseTransferrables.push(cartridgeHeader);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n        const gameboyMemory = getGameBoyMemory(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.GAMEBOY_MEMORY] = gameboyMemory;\n        responseTransferrables.push(gameboyMemory);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n        const paletteMemory = getPaletteMemory(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.PALETTE_MEMORY] = paletteMemory;\n        responseTransferrables.push(paletteMemory);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n        libWorker.wasmInstance.exports.saveState();\n        const internalState = getInternalState(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.INTERNAL_STATE] = internalState;\n        responseTransferrables.push(internalState);\n      }\n\n      libWorker.memoryWorkerPort.postMessage(getSmartWorkerMessage(responseMemory, eventData.messageId), responseTransferrables);\n\n      return;\n    }\n  }\n}\n","var wasmModuleUrl = \"data:application/wasm;base64,\";\n\n// Import object for our core js wrapper\n// Log throttling for our core\n// The same log can't be output more than once every half second\nlet logRequest = {};\nconst wasmImportObject = {\n  env: {\n    log: (message, arg0, arg1, arg2, arg3, arg4, arg5) => {\n      // Grab our string\n      var len = new Uint32Array(wasmInstance.exports.memory.buffer, message, 1)[0];\n      var str = String.fromCharCode.apply(null, new Uint16Array(wasmInstance.exports.memory.buffer, message + 4, len));\n      if (arg0 !== -9999) str = str.replace('$0', arg0);\n      if (arg1 !== -9999) str = str.replace('$1', arg1);\n      if (arg2 !== -9999) str = str.replace('$2', arg2);\n      if (arg3 !== -9999) str = str.replace('$3', arg3);\n      if (arg4 !== -9999) str = str.replace('$4', arg4);\n      if (arg5 !== -9999) str = str.replace('$5', arg5);\n      console.log('[WasmBoy] ' + str);\n    },\n    hexLog: (arg0, arg1) => {\n      if (!logRequest[arg0]) {\n        // Grab our arguments, and log as hex\n        let logString = '[WasmBoy]';\n        if (arg0 !== -9999) logString += ` 0x${arg0.toString(16)} `;\n        if (arg1 !== -9999) logString += ` 0x${arg1.toString(16)} `; // Uncomment to unthrottle\n\n        console.log(logString); // Comment the lines below to disable throttle\n\n        /*logRequest[arg0] = true;\n        setTimeout(() => {\n          console.log(logString);\n          logRequest[arg0] = false;\n        }, logThrottleLength);*/\n      }\n    }\n  }\n};\n\n// JS Implementation of Instantiating the Wasm Build\n\nconst wasmBrowserInstantiate = async wasmModuleUrl$$1 => {\n  let response = undefined; // Safari does not support .instantiateStreaming()\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming\n\n  if (WebAssembly.instantiateStreaming) {\n    response = await WebAssembly.instantiateStreaming(fetch(wasmModuleUrl$$1), wasmImportObject);\n  } else {\n    const fetchAndInstantiateTask = async () => {\n      const wasmArrayBuffer = await fetch(wasmModuleUrl$$1).then(response => response.arrayBuffer());\n      return WebAssembly.instantiate(wasmArrayBuffer, wasmImportObject);\n    };\n\n    response = await fetchAndInstantiateTask();\n  }\n\n  return response;\n};\n\nconst readBase64Buffer = base64String => {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n};\n\nconst wasmNodeInstantiate = async wasmModuleUrl$$1 => {\n  const wasmBuffer = readBase64Buffer(wasmModuleUrl$$1);\n  return await WebAssembly.instantiate(wasmBuffer, wasmImportObject);\n}; // Function to instantiate our wasm and respond back\n\n\nconst getWasmBoyWasmCore = async isInBrowser => {\n  let response = undefined; // Allow forcing the browser mode, but also check manually\n\n  if (isInBrowser) {\n    response = await wasmBrowserInstantiate(wasmModuleUrl);\n  } else {\n    if (typeof window !== 'undefined' || typeof self !== 'undefined') {\n      response = await wasmBrowserInstantiate(wasmModuleUrl);\n    } else {\n      response = await wasmNodeInstantiate(wasmModuleUrl);\n    }\n  } // Set our wasmInstance and byte memory in the main thread\n\n\n  const instance = response.instance;\n  const byteMemory = new Uint8Array(instance.exports.memory.buffer);\n  return {\n    instance,\n    byteMemory,\n    type: 'Web Assembly'\n  };\n};\n\nexport default getWasmBoyWasmCore;\n","// Common Static functions\n\n// Function to get performance timestamp\n// This is to support node vs. Browser\nexport const getPerformanceTimestamp = () => {\n  if (typeof window !== 'undefined') {\n    return performance.now();\n  }\n  return Date.now();\n};\n","import { getPerformanceTimestamp } from '../../common/common';\n\n// Function to add a timestamp to keep track\n// of how fast we are running\nexport function addTimeStamp(libWorker) {\n  // Track our Fps\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  const currentHighResTime = getPerformanceTimestamp();\n  while (libWorker.fpsTimeStamps[0] < currentHighResTime - 1000) {\n    libWorker.fpsTimeStamps.shift();\n  }\n  libWorker.fpsTimeStamps.push(currentHighResTime);\n\n  libWorker.timeStampsUntilReady--;\n  if (libWorker.timeStampsUntilReady < 0) {\n    libWorker.timeStampsUntilReady = 0;\n  }\n\n  return currentHighResTime;\n}\n\n// Function to wait for a specified number,\n// of timestamps before setting the framerate\nexport function waitForTimeStampsForFrameRate(libWorker) {\n  if (libWorker.options.gameboyFrameRate <= 90) {\n    libWorker.timeStampsUntilReady = Math.floor(libWorker.options.gameboyFrameRate) * 1.25;\n  } else {\n    // Fast stretching should be hardcoded, that way it doesn't just say a large number for a long time\n    libWorker.timeStampsUntilReady = 120;\n  }\n}\n","// Imports\nimport { postMessage } from '../../../worker/workerapi';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../../worker/constants';\n\nexport function transferGraphics(libWorker) {\n  const graphicsFrameEndIndex = libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION + libWorker.WASMBOY_CURRENT_FRAME_SIZE;\n  const graphicsFrameBuffer = libWorker.wasmByteMemory.slice(libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION, graphicsFrameEndIndex).buffer;\n  //libWorker.graphicsWorkerPort.postMessage(graphicsFrameBuffer, [graphicsFrameBuffer]);\n  libWorker.graphicsWorkerPort.postMessage(\n    getSmartWorkerMessage({\n      type: WORKER_MESSAGE_TYPE.UPDATED,\n      graphicsFrameBuffer\n    }),\n    [graphicsFrameBuffer]\n  );\n}\n","// Start our update and render process\n// Can't time by raf, as raf is not garunteed to be 60fps\n// Need to run like a web game, where updates to the state of the core are done a 60 fps\n// but we can render whenever the user would actually see the changes browser side in a raf\n// https://developer.mozilla.org/en-US/docs/Games/Anatomy\n\n// Imports\nimport { postMessage } from '../../worker/workerapi';\nimport { getSmartWorkerMessage } from '../../worker/smartworker';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../worker/constants';\n\n// Memory\nimport { getCartridgeRam } from './memory/ram.js';\nimport { getGameBoyMemory } from './memory/gameboymemory.js';\nimport { getPaletteMemory } from './memory/palettememory.js';\nimport { getInternalState } from './memory/internalstate.js';\n\n// Timestamps\nimport { getPerformanceTimestamp } from '../../common/common';\nimport { addTimeStamp, waitForTimeStampsForFrameRate } from './timestamp';\n\n// Transferring\nimport { transferGraphics } from './graphics/transfer';\n\n// Some variables to help with Audio Latency\n// 0.25 (quarter of a second), just felt right from testing :)\nconst MAX_AUDIO_LATENCY = 0.25;\n// Pass over samples once we have enough worth playing:\n// https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/\nconst AUDIO_BUFFER_SIZE = 1024;\n\n// FPS measuring\nlet currentHighResTime;\nlet currentFps;\nlet gameboyFrameRateWithSpeed;\n\n// interval to set timeout\nlet intervalRate;\n\nfunction scheduleNextUpdate(libWorker) {\n  // Get our high res time\n  const highResTime = getPerformanceTimestamp();\n\n  // Find how long it has been since the last timestamp\n  const timeSinceLastTimestamp = highResTime - libWorker.fpsTimeStamps[libWorker.fpsTimeStamps.length - 1];\n\n  // Get the next time we should update using our interval rate\n  let nextUpdateTime = intervalRate - timeSinceLastTimestamp;\n  if (nextUpdateTime < 0) {\n    nextUpdateTime = 0;\n  }\n\n  // Lastly, increase by our lib worker speed\n  if (libWorker.speed && libWorker.speed > 0) {\n    nextUpdateTime = nextUpdateTime / libWorker.speed;\n  }\n\n  libWorker.updateId = setTimeout(() => {\n    update(libWorker);\n  }, Math.floor(nextUpdateTime));\n}\n\n// Function to run an update on the emulator itself\nexport function update(libWorker, passedIntervalRate) {\n  // Don't run if paused\n  if (libWorker.paused) {\n    return true;\n  }\n\n  // Set the intervalRate if it was passed\n  if (passedIntervalRate !== undefined) {\n    intervalRate = passedIntervalRate;\n  }\n\n  // Set a timestamp for this moment\n  // And make sure we are on track for FPS\n  currentFps = libWorker.getFPS();\n  gameboyFrameRateWithSpeed = libWorker.options.gameboyFrameRate + 1;\n\n  if (libWorker.speed && libWorker.speed > 0) {\n    gameboyFrameRateWithSpeed = gameboyFrameRateWithSpeed * libWorker.speed;\n  }\n\n  if (currentFps > gameboyFrameRateWithSpeed) {\n    // Pop a timestamp off of the front\n    // This is to avoid infinite loop here on loadstate\n    libWorker.fpsTimeStamps.shift();\n    scheduleNextUpdate(libWorker);\n    return true;\n  } else {\n    currentHighResTime = addTimeStamp(libWorker);\n  }\n\n  // Check if we are outputting audio\n  const shouldCheckAudio = !libWorker.options.headless && !libWorker.pauseFpsThrottle && libWorker.options.isAudioEnabled;\n\n  // Execute\n  // Wrapped in promise to better handle audio slowdowns and things of that sort\n  const executePromise = new Promise(resolve => {\n    // Update (Execute a frame)\n    let response;\n    if (shouldCheckAudio) {\n      executeAndCheckAudio(libWorker, resolve);\n    } else {\n      if (libWorker.breakpoint !== undefined) {\n        response = libWorker.wasmInstance.exports.executeFrameUntilBreakpoint(libWorker.breakpoint);\n      } else {\n        response = libWorker.wasmInstance.exports.executeFrame();\n      }\n      resolve(response);\n    }\n  });\n\n  executePromise.then(response => {\n    // Handle our update() response\n    if (response >= 0) {\n      // Pass messages to everyone\n      postMessage(\n        getSmartWorkerMessage({\n          type: WORKER_MESSAGE_TYPE.UPDATED,\n          fps: currentFps\n        })\n      );\n\n      // Check if we have frameskip\n      let shouldSkipRenderingFrame = false;\n      if (libWorker.options.frameSkip && libWorker.options.frameSkip > 0) {\n        libWorker.frameSkipCounter++;\n\n        if (libWorker.frameSkipCounter <= libWorker.options.frameSkip) {\n          shouldSkipRenderingFrame = true;\n        } else {\n          libWorker.frameSkipCounter = 0;\n        }\n      }\n\n      // Transfer Graphics\n      if (!shouldSkipRenderingFrame) {\n        transferGraphics(libWorker);\n      }\n\n      // Transfer Memory for things like save states\n      const memoryObject = {\n        type: WORKER_MESSAGE_TYPE.UPDATED\n      };\n      memoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = getCartridgeRam(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = getGameBoyMemory(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.PALETTE_MEMORY] = getPaletteMemory(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.INTERNAL_STATE] = getInternalState(libWorker).buffer;\n\n      // Check for any undefined values\n      Object.keys(memoryObject).forEach(key => {\n        if (memoryObject[key] === undefined) {\n          memoryObject[key] = new Uint8Array().buffer;\n        }\n      });\n\n      libWorker.memoryWorkerPort.postMessage(getSmartWorkerMessage(memoryObject), [\n        memoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n        memoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n        memoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n        memoryObject[MEMORY_TYPE.INTERNAL_STATE]\n      ]);\n\n      // Check if we hit a breakpoint\n      if (response === 2) {\n        postMessage(\n          getSmartWorkerMessage({\n            type: WORKER_MESSAGE_TYPE.BREAKPOINT\n          })\n        );\n      } else {\n        scheduleNextUpdate(libWorker);\n      }\n    } else {\n      postMessage(\n        getSmartWorkerMessage({\n          type: WORKER_MESSAGE_TYPE.CRASHED\n        })\n      );\n      libWorker.paused = true;\n    }\n  });\n}\n\n// If audio is enabled, sync by audio\n// Audio will pass us its forward latency, and if it is too far ahead,\n// Then we can wait a little bit to let audio catch up\n// 0.25 (quarter of a second), just felt right from testing :)\nfunction executeAndCheckAudio(libWorker, resolve) {\n  // Get our response\n  let response = -1;\n  if (libWorker.breakpoint !== undefined) {\n    response = libWorker.wasmInstance.exports.executeFrameAndCheckAudioUntilBreakpoint(AUDIO_BUFFER_SIZE, libWorker.breakpoint);\n  } else {\n    response = libWorker.wasmInstance.exports.executeFrameAndCheckAudio(AUDIO_BUFFER_SIZE);\n  }\n\n  // If our response is not 1, simply resolve\n  if (response !== 1) {\n    resolve(response);\n  }\n\n  // Do some audio magic\n  if (response === 1) {\n    // Get our audioQueueIndex\n    const audioQueueIndex = libWorker.wasmInstance.exports.getAudioQueueIndex();\n\n    // Check if we are sending too much audio\n    const isTooMuchLatency = libWorker.currentAudioLatencyInSeconds > MAX_AUDIO_LATENCY;\n    const isRunningFullSpeed = currentFps >= gameboyFrameRateWithSpeed;\n\n    if (isTooMuchLatency && isRunningFullSpeed) {\n      sendAudio(libWorker, audioQueueIndex);\n      // Wait, Set a timeout for when we would like to\n      // Continue executing. * 1000 for seconds -> milli\n      // Wait for half the difference, since it may take time to execute, and things\n      const latencyDifferenceInSeconds = libWorker.currentAudioLatencyInSeconds - MAX_AUDIO_LATENCY;\n      const latencyDifferenceInMilli = Math.floor(latencyDifferenceInSeconds * 1000);\n      setTimeout(() => {\n        waitForTimeStampsForFrameRate(libWorker);\n        executeAndCheckAudio(libWorker, resolve);\n      }, Math.floor(latencyDifferenceInMilli / 10));\n    } else {\n      sendAudio(libWorker, audioQueueIndex);\n      executeAndCheckAudio(libWorker, resolve);\n    }\n  }\n}\n\nfunction sendAudio(libWorker, audioQueueIndex) {\n  // Send out our audio\n  // audioQueueIndex * 2, because audio Queue index represents 1 sample,\n  // for left AND right channel. Therefore the end index is, twice\n  // of the audioQueueIndex\n\n  // Build our message bits\n  const audioBuffer = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_SOUND_OUTPUT_LOCATION,\n    libWorker.WASMBOY_SOUND_OUTPUT_LOCATION + audioQueueIndex * 2\n  ).buffer;\n  const message = {\n    type: WORKER_MESSAGE_TYPE.UPDATED,\n    audioBuffer,\n    numberOfSamples: audioQueueIndex,\n    fps: currentFps,\n    allowFastSpeedStretching: libWorker.options.gameboyFrameRate > 60\n  };\n  const messageTransferrables = [audioBuffer];\n\n  // If audio debugging is enabled, we gotta send a lot more\n  if (libWorker.options && libWorker.options.enableAudioDebugging) {\n    // Channel 1\n    const channel1Buffer = libWorker.wasmByteMemory.slice(\n      libWorker.WASMBOY_CHANNEL_1_OUTPUT_LOCATION,\n      libWorker.WASMBOY_CHANNEL_1_OUTPUT_LOCATION + audioQueueIndex * 2\n    ).buffer;\n    message.channel1Buffer = channel1Buffer;\n    messageTransferrables.push(channel1Buffer);\n\n    // Channel 2\n    const channel2Buffer = libWorker.wasmByteMemory.slice(\n      libWorker.WASMBOY_CHANNEL_2_OUTPUT_LOCATION,\n      libWorker.WASMBOY_CHANNEL_2_OUTPUT_LOCATION + audioQueueIndex * 2\n    ).buffer;\n    message.channel2Buffer = channel2Buffer;\n    messageTransferrables.push(channel2Buffer);\n\n    // Channel 3\n    const channel3Buffer = libWorker.wasmByteMemory.slice(\n      libWorker.WASMBOY_CHANNEL_3_OUTPUT_LOCATION,\n      libWorker.WASMBOY_CHANNEL_3_OUTPUT_LOCATION + audioQueueIndex * 2\n    ).buffer;\n    message.channel3Buffer = channel3Buffer;\n    messageTransferrables.push(channel3Buffer);\n\n    // Channel 4\n    const channel4Buffer = libWorker.wasmByteMemory.slice(\n      libWorker.WASMBOY_CHANNEL_4_OUTPUT_LOCATION,\n      libWorker.WASMBOY_CHANNEL_4_OUTPUT_LOCATION + audioQueueIndex * 2\n    ).buffer;\n    message.channel4Buffer = channel4Buffer;\n    messageTransferrables.push(channel4Buffer);\n  }\n\n  libWorker.audioWorkerPort.postMessage(getSmartWorkerMessage(message), messageTransferrables);\n  libWorker.wasmInstance.exports.resetAudioQueue();\n}\n","// Web worker for wasmboy lib\n// Will be used for running wasm, and controlling child workers.\n\n// Using transferables: https://stackoverflow.com/questions/16071211/using-transferable-objects-from-a-web-worker\n\nimport { postMessage, onMessage } from '../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from '../../worker/constants';\nimport { getEventData, isInBrowser } from '../../worker/util';\nimport { getSmartWorkerMessage } from '../../worker/smartworker';\n\n// Post message handlers\nimport { graphicsWorkerOnMessage } from './graphics/onmessage';\nimport { audioWorkerOnMessage } from './audio/onmessage';\nimport { controllerWorkerOnMessage } from './controller/onmessage';\nimport { memoryWorkerOnMessage } from './memory/onmessage';\n\n// Only One response will be used on build time\n// Using Babel plugin to filter imports\nimport getWasmBoyWasmCore from '../../../dist/core/getWasmBoyWasmCore.esm';\nimport getWasmBoyTsCore from '../../../dist/core/getWasmBoyTsCore.esm';\n\n// Update to run the core emulator\nimport { update } from './update';\n\n// Timestamps\nimport { waitForTimeStampsForFrameRate } from './timestamp';\n\n// Transfer\nimport { transferGraphics } from './graphics/transfer';\n\n// Our stateful object\n// Representing our lib worker as a singleton\n// Not using normal classes because:\n// Class functions weren't working for some odd reason, and 'this' was getting wonky\nlet libWorker;\nlibWorker = {\n  // Wasmboy Module Ports\n  graphicsWorkerPort: undefined,\n  memoryWorkerPort: undefined,\n  controllerWorkerPort: undefined,\n  audioWorkerPort: undefined,\n\n  // Wasm Module Properties\n  wasmInstance: undefined,\n  wasmByteMemory: undefined,\n\n  // Lib options\n  options: undefined,\n\n  // Some Constants from the wasm module\n  WASMBOY_GAME_BYTES_LOCATION: 0,\n  WASMBOY_GAME_RAM_BANKS_LOCATION: 0,\n  WASMBOY_INTERNAL_STATE_SIZE: 0,\n  WASMBOY_INTERNAL_STATE_LOCATION: 0,\n  WASMBOY_INTERNAL_MEMORY_SIZE: 0,\n  WASMBOY_INTERNAL_MEMORY_LOCATION: 0,\n  WASMBOY_PALETTE_MEMORY_SIZE: 0,\n  WASMBOY_PALETTE_MEMORY_LOCATION: 0,\n  WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION: 0,\n  WASMBOY_CURRENT_FRAME_SIZE: 0,\n  WASMBOY_SOUND_OUTPUT_LOCATION: 0,\n  WASMBOY_CHANNEL_1_OUTPUT_LOCATION: 0,\n  WASMBOY_CHANNEL_2_OUTPUT_LOCATION: 0,\n  WASMBOY_CHANNEL_3_OUTPUT_LOCATION: 0,\n  WASMBOY_CHANNEL_4_OUTPUT_LOCATION: 0,\n\n  // Playing state\n  paused: true,\n\n  // Our update setTimeout ref\n  updateId: undefined,\n\n  // Our fps timestamps\n  timeStampsUntilReady: 0,\n  fpsTimeStamps: [],\n\n  // Our current speed\n  speed: 0,\n\n  // Frame Skipping\n  frameSkipCounter: 0,\n\n  // Audio latency\n  currentAudioLatencyInSeconds: 0,\n\n  // Break Point\n  breakpoint: undefined,\n\n  // Message Handler from the main thread\n  messageHandler: event => {\n    // Handle our messages from the main thread\n    const eventData = getEventData(event);\n\n    switch (eventData.message.type) {\n      case WORKER_MESSAGE_TYPE.CONNECT: {\n        // Assign our worker ports on connect\n        if (eventData.message.workerId === WORKER_ID.GRAPHICS) {\n          libWorker.graphicsWorkerPort = eventData.message.ports[0];\n          onMessage(graphicsWorkerOnMessage.bind(undefined, libWorker), libWorker.graphicsWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.MEMORY) {\n          libWorker.memoryWorkerPort = eventData.message.ports[0];\n          onMessage(memoryWorkerOnMessage.bind(undefined, libWorker), libWorker.memoryWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.CONTROLLER) {\n          libWorker.controllerWorkerPort = eventData.message.ports[0];\n          onMessage(controllerWorkerOnMessage.bind(undefined, libWorker), libWorker.controllerWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.AUDIO) {\n          libWorker.audioWorkerPort = eventData.message.ports[0];\n          onMessage(audioWorkerOnMessage.bind(undefined, libWorker), libWorker.audioWorkerPort);\n        }\n\n        // Simply post back that we are ready\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.INSTANTIATE_WASM: {\n        const instantiateTask = async () => {\n          let response;\n          // Only One response will be used on build time\n          // Using Babel plugin to filter imports\n          response = await getWasmBoyWasmCore(isInBrowser);\n          response = await getWasmBoyTsCore();\n\n          libWorker.wasmInstance = response.instance;\n          libWorker.wasmByteMemory = response.byteMemory;\n          postMessage(\n            getSmartWorkerMessage(\n              {\n                type: response.type\n              },\n              eventData.messageId\n            )\n          );\n          return;\n        };\n        instantiateTask();\n        return;\n      }\n      case WORKER_MESSAGE_TYPE.CONFIG: {\n        // Config will come in as an array, pass in values using apply\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n        const config = eventData.message.config;\n        libWorker.wasmInstance.exports.config.apply(libWorker, config);\n        libWorker.options = eventData.message.options;\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE: {\n        // Reset the audio queue index to stop weird pauses when trying to load a game\n        libWorker.wasmInstance.exports.resetAudioQueue();\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.PLAY:\n      case WORKER_MESSAGE_TYPE.PLAY_UNTIL_BREAKPOINT: {\n        if (!libWorker.paused || !libWorker.wasmInstance || !libWorker.wasmByteMemory) {\n          postMessage(getSmartWorkerMessage({ error: true }, eventData.messageId));\n          return;\n        }\n\n        // Re-initialize some of our values\n        libWorker.paused = false;\n        libWorker.fpsTimeStamps = [];\n        waitForTimeStampsForFrameRate(libWorker);\n        libWorker.frameSkipCounter = 0;\n        libWorker.currentAudioLatencyInSeconds = 0;\n        libWorker.breakpoint = undefined;\n\n        // Set our breakpoint if we have one\n        if (eventData.message.breakpoint) {\n          libWorker.breakpoint = eventData.message.breakpoint;\n        }\n\n        // 1000 / 60 = 60fps\n        // Add one to the framerate, as we would rather be slightly faster,\n        // than slightly slower\n        const intervalRate = 1000 / libWorker.options.gameboyFrameRate;\n\n        update(libWorker, intervalRate);\n\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.PAUSE: {\n        // Call our update\n        libWorker.paused = true;\n        if (libWorker.updateId) {\n          clearTimeout(libWorker.updateId);\n          libWorker.updateId = undefined;\n        }\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      // Debugging Messages\n      case WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT: {\n        let response;\n        if (eventData.message.parameters) {\n          response = libWorker.wasmInstance.exports[eventData.message.export].apply(undefined, eventData.message.parameters);\n        } else {\n          response = libWorker.wasmInstance.exports[eventData.message.export]();\n        }\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION: {\n        let start = 0;\n        let end = libWorker.wasmByteMemory.length;\n        if (eventData.message.start) {\n          start = eventData.message.start;\n        }\n        if (eventData.message.end) {\n          end = eventData.message.end;\n        }\n\n        const response = libWorker.wasmByteMemory.slice(start, end).buffer;\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n              response: response\n            },\n            eventData.messageId\n          ),\n          [response]\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT: {\n        const response = libWorker.wasmInstance.exports[eventData.message.constant].valueOf();\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.FORCE_OUTPUT_FRAME: {\n        transferGraphics(libWorker);\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.SET_SPEED: {\n        libWorker.speed = eventData.message.speed;\n\n        // Reset all of our fps tracking\n        libWorker.fpsTimeStamps = [];\n        libWorker.timeStampsUntilReady = 60;\n        waitForTimeStampsForFrameRate(libWorker);\n        libWorker.frameSkipCounter = 0;\n        libWorker.currentAudioLatencyInSeconds = 0;\n\n        libWorker.wasmInstance.exports.resetAudioQueue();\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.IS_GBC: {\n        const response = libWorker.wasmInstance.exports.isGBC() > 0;\n\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.IS_GBC,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      default: {\n        //handle other messages from main\n        console.log('Unknown WasmBoy Worker message:', eventData);\n      }\n    }\n  },\n\n  // Function to return the current FPS\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  getFPS: () => {\n    if (libWorker.timeStampsUntilReady > 0) {\n      if (libWorker.speed && libWorker.speed > 0) {\n        return libWorker.options.gameboyFrameRate * libWorker.speed;\n      }\n      return libWorker.options.gameboyFrameRate;\n    } else if (libWorker.fpsTimeStamps) {\n      return libWorker.fpsTimeStamps.length;\n    }\n\n    return 0;\n  }\n};\n\n// Assign the worker a message handler\nonMessage(libWorker.messageHandler);\n"],"names":["getEventData","event","data","isInBrowser","self","parentPort","require","postMessage","message","transferArray","onMessage","callback","port","console","error","onmessage","on","WORKER_MESSAGE_TYPE","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","PLAY_UNTIL_BREAKPOINT","BREAKPOINT","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","FORCE_OUTPUT_FRAME","SET_SPEED","IS_GBC","WORKER_ID","LIB","GRAPHICS","MEMORY","CONTROLLER","AUDIO","MEMORY_TYPE","CARTRIDGE_RAM","CARTRIDGE_ROM","CARTRIDGE_HEADER","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","idCounter","generateId","randomId","Math","random","toString","replace","substr","id","getSmartWorkerMessage","messageId","workerId","graphicsWorkerOnMessage","libWorker","eventData","type","WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION","wasmInstance","exports","frameInProgressVideoOutputLocation","valueOf","WASMBOY_CURRENT_FRAME_SIZE","FRAME_SIZE","graphicsWorkerPort","audioWorkerOnMessage","WASMBOY_SOUND_OUTPUT_LOCATION","soundOutputLocation","WASMBOY_CHANNEL_1_OUTPUT_LOCATION","CHANNEL_1_BUFFER_LOCATION","WASMBOY_CHANNEL_2_OUTPUT_LOCATION","CHANNEL_2_BUFFER_LOCATION","WASMBOY_CHANNEL_3_OUTPUT_LOCATION","CHANNEL_3_BUFFER_LOCATION","WASMBOY_CHANNEL_4_OUTPUT_LOCATION","CHANNEL_4_BUFFER_LOCATION","audioWorkerPort","currentAudioLatencyInSeconds","latency","controllerWorkerOnMessage","setJoypadStateParamsAsArray","setJoypadState","apply","getCartridgeRom","wasmByteMemory","Uint8Array","cartridgeType","WASMBOY_GAME_BYTES_LOCATION","romSize","undefined","cartridgeRom","slice","getCartridgeRam","ramSize","cartridgeRam","WASMBOY_GAME_RAM_BANKS_LOCATION","getCartridgeHeader","headerLength","headerLocation","headerArray","getGameBoyMemory","WASMBOY_INTERNAL_MEMORY_LOCATION","WASMBOY_INTERNAL_MEMORY_SIZE","getPaletteMemory","WASMBOY_PALETTE_MEMORY_LOCATION","WASMBOY_PALETTE_MEMORY_SIZE","getInternalState","saveState","WASMBOY_INTERNAL_STATE_LOCATION","WASMBOY_INTERNAL_STATE_SIZE","memoryWorkerOnMessage","i","length","memoryWorkerPort","buffer","gameBytesLocation","gameRamBanksLocation","wasmBoyInternalStateSize","wasmBoyInternalStateLocation","gameBoyInternalMemorySize","gameBoyInternalMemoryLocation","gameboyColorPaletteSize","gameboyColorPaletteLocation","memoryKeys","Object","keys","includes","set","loadState","responseMemory","responseTransferrables","memoryTypes","push","cartridgeHeader","gameboyMemory","paletteMemory","internalState","wasmModuleUrl","logRequest","wasmImportObject","env","log","arg0","arg1","arg2","arg3","arg4","arg5","len","Uint32Array","memory","str","String","fromCharCode","Uint16Array","hexLog","logString","wasmBrowserInstantiate","wasmModuleUrl$$1","response","WebAssembly","instantiateStreaming","fetch","fetchAndInstantiateTask","wasmArrayBuffer","then","arrayBuffer","instantiate","readBase64Buffer","base64String","Buffer","from","split","wasmNodeInstantiate","wasmBuffer","getWasmBoyWasmCore","window","instance","byteMemory","getPerformanceTimestamp","performance","now","Date","addTimeStamp","currentHighResTime","fpsTimeStamps","shift","timeStampsUntilReady","waitForTimeStampsForFrameRate","options","gameboyFrameRate","floor","transferGraphics","graphicsFrameEndIndex","graphicsFrameBuffer","MAX_AUDIO_LATENCY","AUDIO_BUFFER_SIZE","currentFps","gameboyFrameRateWithSpeed","intervalRate","scheduleNextUpdate","highResTime","timeSinceLastTimestamp","nextUpdateTime","speed","updateId","setTimeout","update","passedIntervalRate","paused","getFPS","shouldCheckAudio","headless","pauseFpsThrottle","isAudioEnabled","executePromise","Promise","resolve","executeAndCheckAudio","breakpoint","executeFrameUntilBreakpoint","executeFrame","fps","shouldSkipRenderingFrame","frameSkip","frameSkipCounter","memoryObject","forEach","key","executeFrameAndCheckAudioUntilBreakpoint","executeFrameAndCheckAudio","audioQueueIndex","getAudioQueueIndex","isTooMuchLatency","isRunningFullSpeed","sendAudio","latencyDifferenceInSeconds","latencyDifferenceInMilli","audioBuffer","numberOfSamples","allowFastSpeedStretching","messageTransferrables","enableAudioDebugging","channel1Buffer","channel2Buffer","channel3Buffer","channel4Buffer","resetAudioQueue","controllerWorkerPort","messageHandler","ports","bind","instantiateTask","config","clearTimeout","parameters","export","start","end","constant","isGBC"],"mappings":";;;EAAO,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;EAClC,MAAIA,KAAK,CAACC,IAAV,EAAgB;EACd,WAAOD,KAAK,CAACC,IAAb;EACD;;EAED,SAAOD,KAAP;EACD;AAED,EAAO,MAAME,WAAW,GAAG,OAAOC,IAAP,KAAgB,WAApC;;ECRP;AACA,EAKA,IAAIC,UAAJ;;EACA,IAAI,CAACF,WAAL,EAAkB;EAChBE,EAAAA,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BD,UAAvC;EACD;EAGD;;;AACA,EAAO,SAASE,WAAT,CAAqBC,OAArB,EAA8BC,aAA9B,EAA6C;EAClD;EACA,MAAIN,WAAJ,EAAiB;EACfC,IAAAA,IAAI,CAACG,WAAL,CAAiBC,OAAjB,EAA0BC,aAA1B;EACD,GAFD,MAEO;EACLJ,IAAAA,UAAU,CAACE,WAAX,CAAuBC,OAAvB,EAAgCC,aAAhC;EACD;EACF;EAGD;;AACA,EAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;EACxC,MAAI,CAACD,QAAL,EAAe;EACbE,IAAAA,OAAO,CAACC,KAAR,CAAc,mDAAd;EACD,GAHuC;;;EAMxC,MAAIF,IAAJ,EAAU;EACR,QAAIT,WAAJ,EAAiB;EACf;EACAS,MAAAA,IAAI,CAACG,SAAL,GAAiBJ,QAAjB;EACD,KAHD,MAGO;EACL;EACAC,MAAAA,IAAI,CAACI,EAAL,CAAQ,SAAR,EAAmBL,QAAnB;EACD;;EACD;EACD;;EAED,MAAIR,WAAJ,EAAiB;EACf;EACAC,IAAAA,IAAI,CAACW,SAAL,GAAiBJ,QAAjB;EACD,GAHD,MAGO;EACL;EACAN,IAAAA,UAAU,CAACW,EAAX,CAAc,SAAd,EAAyBL,QAAzB;EACD;EACF;;EChDM,MAAMM,mBAAmB,GAAG;EACjCC,EAAAA,OAAO,EAAE,SADwB;EAEjCC,EAAAA,gBAAgB,EAAE,kBAFe;EAGjCC,EAAAA,YAAY,EAAE,cAHmB;EAIjCC,EAAAA,iBAAiB,EAAE,mBAJc;EAKjCC,EAAAA,UAAU,EAAE,YALqB;EAMjCC,EAAAA,UAAU,EAAE,YANqB;EAOjCC,EAAAA,eAAe,EAAE,iBAPgB;EAQjCC,EAAAA,aAAa,EAAE,eARkB;EASjCC,EAAAA,kBAAkB,EAAE,oBATa;EAUjCC,EAAAA,MAAM,EAAE,QAVyB;EAWjCC,EAAAA,iBAAiB,EAAE,mBAXc;EAYjCC,EAAAA,IAAI,EAAE,MAZ2B;EAajCC,EAAAA,qBAAqB,EAAE,uBAbU;EAcjCC,EAAAA,UAAU,EAAE,YAdqB;EAejCC,EAAAA,KAAK,EAAE,OAf0B;EAgBjCC,EAAAA,OAAO,EAAE,SAhBwB;EAiBjCC,EAAAA,OAAO,EAAE,SAjBwB;EAkBjCC,EAAAA,gBAAgB,EAAE,kBAlBe;EAmBjCC,EAAAA,aAAa,EAAE,eAnBkB;EAoBjCC,EAAAA,eAAe,EAAE,iBApBgB;EAqBjCC,EAAAA,uBAAuB,EAAE,yBArBQ;EAsBjCC,EAAAA,iBAAiB,EAAE,mBAtBc;EAuBjCC,EAAAA,kBAAkB,EAAE,oBAvBa;EAwBjCC,EAAAA,SAAS,EAAE,WAxBsB;EAyBjCC,EAAAA,MAAM,EAAE;EAzByB,CAA5B;AA4BP,EAAO,MAAMC,SAAS,GAAG;EACvBC,EAAAA,GAAG,EAAE,KADkB;EAEvBC,EAAAA,QAAQ,EAAE,UAFa;EAGvBC,EAAAA,MAAM,EAAE,QAHe;EAIvBC,EAAAA,UAAU,EAAE,YAJW;EAKvBC,EAAAA,KAAK,EAAE;EALgB,CAAlB;AAQP,EAAO,MAAMC,WAAW,GAAG;EACzBC,EAAAA,aAAa,EAAE,eADU;EAEzBC,EAAAA,aAAa,EAAE,eAFU;EAGzBC,EAAAA,gBAAgB,EAAE,kBAHO;EAIzBC,EAAAA,cAAc,EAAE,gBAJS;EAKzBC,EAAAA,cAAc,EAAE,gBALS;EAMzBC,EAAAA,cAAc,EAAE;EANS,CAApB;;ECpCP;AACA;EAUA,IAAIC,SAAS,GAAG,CAAhB;;EACA,MAAMC,UAAU,GAAG,MAAM;EACvB,QAAMC,QAAQ,GAAGC,IAAI,CAACC,MAAL,GACdC,QADc,CACL,EADK,EAEdC,OAFc,CAEN,UAFM,EAEM,EAFN,EAGdC,MAHc,CAGP,CAHO,EAGJ,EAHI,CAAjB;EAIAP,EAAAA,SAAS;EACT,QAAMQ,EAAE,GAAI,GAAEN,QAAS,IAAGF,SAAU,EAApC;;EACA,MAAIA,SAAS,GAAG,MAAhB,EAAwB;EACtBA,IAAAA,SAAS,GAAG,CAAZ;EACD;;EACD,SAAOQ,EAAP;EACD,CAXD;;AAaA,EAAO,SAASC,qBAAT,CAA+BzD,OAA/B,EAAwC0D,SAAxC,EAAmDC,QAAnD,EAA6D;EAClE,MAAI,CAACD,SAAL,EAAgB;EACdA,IAAAA,SAAS,GAAGT,UAAU,EAAtB;EACD;;EACD,SAAO;EACLU,IAAAA,QADK;EAELD,IAAAA,SAFK;EAGL1D,IAAAA;EAHK,GAAP;EAKD;;EC5BD;;AACA,EAAO,SAAS4D,uBAAT,CAAiCC,SAAjC,EAA4CpE,KAA5C,EAAmD;EACxD;EACA,QAAMqE,SAAS,GAAGtE,YAAY,CAACC,KAAD,CAA9B;;EAEA,UAAQqE,SAAS,CAAC9D,OAAV,CAAkB+D,IAA1B;EACE,SAAKtD,mBAAmB,CAACQ,aAAzB;EAAwC;EACtC4C,QAAAA,SAAS,CAACG,qCAAV,GAAkDH,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BC,kCAA/B,CAAkEC,OAAlE,EAAlD;EACAP,QAAAA,SAAS,CAACQ,0BAAV,GAAuCR,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BI,UAA/B,CAA0CF,OAA1C,EAAvC,CAFsC;;EAItCP,QAAAA,SAAS,CAACU,kBAAV,CAA6BxE,WAA7B,CACE0D,qBAAqB,CACnB;EACEM,UAAAA,IAAI,EAAEtD,mBAAmB,CAACS,kBAD5B;EAEE8C,UAAAA,qCAAqC,EAAEH,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BC,kCAA/B,CAAkEC,OAAlE;EAFzC,SADmB,EAKnBN,SAAS,CAACJ,SALS,CADvB;EASA;EACD;EAfH;EAiBD;;ECtBM,SAASc,oBAAT,CAA8BX,SAA9B,EAAyCpE,KAAzC,EAAgD;EACrD;EACA,QAAMqE,SAAS,GAAGtE,YAAY,CAACC,KAAD,CAA9B;;EAEA,UAAQqE,SAAS,CAAC9D,OAAV,CAAkB+D,IAA1B;EACE,SAAKtD,mBAAmB,CAACQ,aAAzB;EAAwC;EACtC4C,QAAAA,SAAS,CAACY,6BAAV,GAA0CZ,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BQ,mBAA/B,CAAmDN,OAAnD,EAA1C;EACAP,QAAAA,SAAS,CAACc,iCAAV,GAA8Cd,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BU,yBAA/B,CAAyDR,OAAzD,EAA9C;EACAP,QAAAA,SAAS,CAACgB,iCAAV,GAA8ChB,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BY,yBAA/B,CAAyDV,OAAzD,EAA9C;EACAP,QAAAA,SAAS,CAACkB,iCAAV,GAA8ClB,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+Bc,yBAA/B,CAAyDZ,OAAzD,EAA9C;EACAP,QAAAA,SAAS,CAACoB,iCAAV,GAA8CpB,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BgB,yBAA/B,CAAyDd,OAAzD,EAA9C,CALsC;;EAQtCP,QAAAA,SAAS,CAACsB,eAAV,CAA0BpF,WAA1B,CACE0D,qBAAqB,CACnB;EACEM,UAAAA,IAAI,EAAEtD,mBAAmB,CAACS,kBAD5B;EAEEuD,UAAAA,6BAA6B,EAAEZ,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BQ,mBAA/B,CAAmDN,OAAnD;EAFjC,SADmB,EAKnBN,SAAS,CAACJ,SALS,CADvB;EASA;EACD;;EAED,SAAKjD,mBAAmB,CAACmB,aAAzB;EAAwC;EACtCiC,QAAAA,SAAS,CAACuB,4BAAV,GAAyCtB,SAAS,CAAC9D,OAAV,CAAkBqF,OAA3D;EACA;EACD;EAxBH;EA0BD;;EC9BM,SAASC,yBAAT,CAAmCzB,SAAnC,EAA8CpE,KAA9C,EAAqD;EAC1D;EACA,QAAMqE,SAAS,GAAGtE,YAAY,CAACC,KAAD,CAA9B;;EAEA,UAAQqE,SAAS,CAAC9D,OAAV,CAAkB+D,IAA1B;EACE,SAAKtD,mBAAmB,CAACkB,gBAAzB;EAA2C;EACzC;EACA;EACA,cAAM4D,2BAA2B,GAAGzB,SAAS,CAAC9D,OAAV,CAAkBuF,2BAAtD;EACA1B,QAAAA,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BsB,cAA/B,CAA8CC,KAA9C,CAAoD5B,SAApD,EAA+D0B,2BAA/D;EACA;EACD;EAPH;EASD;;ECnBD;AACA,EAAO,SAASG,eAAT,CAAyB7B,SAAzB,EAAoC;EACzC,MAAI,CAACA,SAAS,CAAC8B,cAAf,EAA+B;EAC7B,WAAO,IAAIC,UAAJ,EAAP;EACD,GAHwC;EAMzC;EACA;EACA;EAEA;EACA;EACA;EACA;;;EACA,MAAIC,aAAa,GAAGhC,SAAS,CAAC8B,cAAV,CAAyB9B,SAAS,CAACiC,2BAAV,GAAwC,MAAjE,CAApB;EAEA,MAAIC,OAAO,GAAGC,SAAd;;EACA,MAAIH,aAAa,KAAK,IAAtB,EAA4B;EAC1B;EACAE,IAAAA,OAAO,GAAG,MAAV;EACD,GAHD,MAGO,IAAIF,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;EACzD;EACAE,IAAAA,OAAO,GAAG,QAAV;EACD,GAHM,MAGA,IAAIF,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;EACzD;EACAE,IAAAA,OAAO,GAAG,OAAV;EACD,GAHM,MAGA,IAAIF,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;EACzD;EACAE,IAAAA,OAAO,GAAG,QAAV;EACD,GAHM,MAGA,IAAIF,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;EACzD;EACAE,IAAAA,OAAO,GAAG,QAAV;EACD;;EAED,MAAI,CAACA,OAAL,EAAc;EACZ,WAAO,IAAIH,UAAJ,EAAP;EACD,GApCwC;;;EAuCzC,QAAMK,YAAY,GAAGpC,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACnBrC,SAAS,CAACiC,2BADS,EAEnBjC,SAAS,CAACiC,2BAAV,GAAwCC,OAFrB,CAArB;EAIA,SAAOE,YAAP;EACD;;EC7CD;AACA,EAAO,SAASE,eAAT,CAAyBtC,SAAzB,EAAoC;EACzC,MAAI,CAACA,SAAS,CAAC8B,cAAf,EAA+B;EAC7B,WAAO,IAAIC,UAAJ,EAAP;EACD,GAHwC;EAMzC;EACA;EACA;EAEA;EACA;EACA;EACA;;;EACA,MAAIC,aAAa,GAAGhC,SAAS,CAAC8B,cAAV,CAAyB9B,SAAS,CAACiC,2BAAV,GAAwC,MAAjE,CAApB;EAEA,MAAIM,OAAO,GAAGJ,SAAd;;EACA,MAAIH,aAAa,KAAK,IAAtB,EAA4B;EAC1B;EACA,WAAO,IAAID,UAAJ,EAAP;EACD,GAHD,MAGO,IAAIC,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;EACzD;EACAO,IAAAA,OAAO,GAAG,MAAV;EACD,GAHM,MAGA,IAAIP,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;EACzD;EACAO,IAAAA,OAAO,GAAG,KAAV;EACD,GAHM,MAGA,IAAIP,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;EACzD;EACAO,IAAAA,OAAO,GAAG,MAAV;EACD,GAHM,MAGA,IAAIP,aAAa,IAAI,IAAjB,IAAyBA,aAAa,IAAI,IAA9C,EAAoD;EACzD;EACAO,IAAAA,OAAO,GAAG,OAAV;EACD;;EAED,MAAI,CAACA,OAAL,EAAc;EACZ,WAAO,IAAIR,UAAJ,EAAP;EACD,GApCwC;;;EAuCzC,QAAMS,YAAY,GAAGxC,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACnBrC,SAAS,CAACyC,+BADS,EAEnBzC,SAAS,CAACyC,+BAAV,GAA4CF,OAFzB,CAArB;EAIA,SAAOC,YAAP;EACD;;EC7CD;AACA,EAAO,SAASE,kBAAT,CAA4B1C,SAA5B,EAAuC;EAC5C,MAAI,CAACA,SAAS,CAAC8B,cAAf,EAA+B;EAC7B,WAAO,IAAIC,UAAJ,EAAP;EACD,GAH2C;EAM5C;;;EACA,QAAMY,YAAY,GAAG,SAAS,MAA9B;EACA,QAAMC,cAAc,GAAG5C,SAAS,CAACiC,2BAAV,GAAwC,MAA/D;EACA,QAAMY,WAAW,GAAG7C,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CAA+BO,cAA/B,EAA+CA,cAAc,GAAGD,YAAhE,CAApB;EAEA,SAAOE,WAAP;EACD;;ECbD;EACA;EACA;EACA;AACA,EAAO,SAASC,gBAAT,CAA0B9C,SAA1B,EAAqC;EAC1C,SAAOA,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACLrC,SAAS,CAAC+C,gCADL,EAEL/C,SAAS,CAAC+C,gCAAV,GAA6C/C,SAAS,CAACgD,4BAFlD,CAAP;EAID;;ECTD;EACA;EACA;AACA,EAAO,SAASC,gBAAT,CAA0BjD,SAA1B,EAAqC;EAC1C,SAAOA,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACLrC,SAAS,CAACkD,+BADL,EAELlD,SAAS,CAACkD,+BAAV,GAA4ClD,SAAS,CAACmD,2BAFjD,CAAP;EAID;;ECRD;EACA;AACA,EAAO,SAASC,gBAAT,CAA0BpD,SAA1B,EAAqC;EAC1CA,EAAAA,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BgD,SAA/B;EACA,SAAOrD,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACLrC,SAAS,CAACsD,+BADL,EAELtD,SAAS,CAACsD,+BAAV,GAA4CtD,SAAS,CAACuD,2BAFjD,CAAP;EAID;;ECMD;;AACA,EAAO,SAASC,qBAAT,CAA+BxD,SAA/B,EAA0CpE,KAA1C,EAAiD;EACtD;EACA,QAAMqE,SAAS,GAAGtE,YAAY,CAACC,KAAD,CAA9B;;EAEA,UAAQqE,SAAS,CAAC9D,OAAV,CAAkB+D,IAA1B;EACE,SAAKtD,mBAAmB,CAACG,YAAzB;EAAuC;EACrC;EACA;EACA,aAAK,IAAI0G,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIzD,SAAS,CAAC8B,cAAV,CAAyB4B,MAA9C,EAAsDD,CAAC,EAAvD,EAA2D;EACzDzD,UAAAA,SAAS,CAAC8B,cAAV,CAAyB2B,CAAzB,IAA8B,CAA9B;EACD;;EAED,cAAM3B,cAAc,GAAG9B,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CAA+B,CAA/B,CAAvB;EACArC,QAAAA,SAAS,CAAC2D,gBAAV,CAA2BzH,WAA3B,CACE0D,qBAAqB,CACnB;EACEM,UAAAA,IAAI,EAAEtD,mBAAmB,CAACI,iBAD5B;EAEE8E,UAAAA,cAAc,EAAEA,cAAc,CAAC8B;EAFjC,SADmB,EAKnB3D,SAAS,CAACJ,SALS,CADvB,EAQE,CAACiC,cAAc,CAAC8B,MAAhB,CARF;EAUA;EACD;;EAED,SAAKhH,mBAAmB,CAACQ,aAAzB;EAAwC;EACtC4C,QAAAA,SAAS,CAACiC,2BAAV,GAAwCjC,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BwD,iBAA/B,CAAiDtD,OAAjD,EAAxC;EACCP,QAAAA,SAAS,CAACyC,+BAAV,GAA4CzC,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+ByD,oBAA/B,CAAoDvD,OAApD,EAA7C,EACGP,SAAS,CAACuD,2BAAV,GAAwCvD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B0D,wBAA/B,CAAwDxD,OAAxD,EAD3C,EAEGP,SAAS,CAACsD,+BAAV,GAA4CtD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B2D,4BAA/B,CAA4DzD,OAA5D,EAF/C,EAGGP,SAAS,CAACgD,4BAAV,GAAyChD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B4D,yBAA/B,CAAyD1D,OAAzD,EAH5C,EAIGP,SAAS,CAAC+C,gCAAV,GAA6C/C,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B6D,6BAA/B,CAA6D3D,OAA7D,EAJhD,EAKGP,SAAS,CAACmD,2BAAV,GAAwCnD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B8D,uBAA/B,CAAuD5D,OAAvD,EAL3C,EAMGP,SAAS,CAACkD,+BAAV,GAA4ClD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B+D,2BAA/B,CAA2D7D,OAA3D,EAN/C,CAFsC;;EAWtCP,QAAAA,SAAS,CAAC2D,gBAAV,CAA2BzH,WAA3B,CACE0D,qBAAqB,CACnB;EACEM,UAAAA,IAAI,EAAEtD,mBAAmB,CAACS,kBAD5B;EAEE4E,UAAAA,2BAA2B,EAAEjC,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BwD,iBAA/B,CAAiDtD,OAAjD,EAF/B;EAGEkC,UAAAA,+BAA+B,EAAEzC,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+ByD,oBAA/B,CAAoDvD,OAApD,EAHnC;EAIEgD,UAAAA,2BAA2B,EAAEvD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B0D,wBAA/B,CAAwDxD,OAAxD,EAJ/B;EAKE+C,UAAAA,+BAA+B,EAAEtD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B2D,4BAA/B,CAA4DzD,OAA5D,EALnC;EAMEyC,UAAAA,4BAA4B,EAAEhD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B4D,yBAA/B,CAAyD1D,OAAzD,EANhC;EAOEwC,UAAAA,gCAAgC,EAAE/C,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B6D,6BAA/B,CAA6D3D,OAA7D,EAPpC;EAQE4C,UAAAA,2BAA2B,EAAEnD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B8D,uBAA/B,CAAuD5D,OAAvD,EAR/B;EASE2C,UAAAA,+BAA+B,EAAElD,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B+D,2BAA/B,CAA2D7D,OAA3D;EATnC,SADmB,EAYnBN,SAAS,CAACJ,SAZS,CADvB;EAgBA;EACD;;EAED,SAAKjD,mBAAmB,CAACM,UAAzB;EAAqC;EACnC,cAAMmH,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYtE,SAAS,CAAC9D,OAAtB,CAAnB;;EAEA,YAAIkI,UAAU,CAACG,QAAX,CAAoB5F,WAAW,CAACE,aAAhC,CAAJ,EAAoD;EAClDkB,UAAAA,SAAS,CAAC8B,cAAV,CAAyB2C,GAAzB,CAA6B,IAAI1C,UAAJ,CAAe9B,SAAS,CAAC9D,OAAV,CAAkByC,WAAW,CAACE,aAA9B,CAAf,CAA7B,EAA2FkB,SAAS,CAACiC,2BAArG;EACD;;EACD,YAAIoC,UAAU,CAACG,QAAX,CAAoB5F,WAAW,CAACC,aAAhC,CAAJ,EAAoD;EAClDmB,UAAAA,SAAS,CAAC8B,cAAV,CAAyB2C,GAAzB,CACE,IAAI1C,UAAJ,CAAe9B,SAAS,CAAC9D,OAAV,CAAkByC,WAAW,CAACC,aAA9B,CAAf,CADF,EAEEmB,SAAS,CAACyC,+BAFZ;EAID;;EACD,YAAI4B,UAAU,CAACG,QAAX,CAAoB5F,WAAW,CAACI,cAAhC,CAAJ,EAAqD;EACnDgB,UAAAA,SAAS,CAAC8B,cAAV,CAAyB2C,GAAzB,CACE,IAAI1C,UAAJ,CAAe9B,SAAS,CAAC9D,OAAV,CAAkByC,WAAW,CAACI,cAA9B,CAAf,CADF,EAEEgB,SAAS,CAAC+C,gCAFZ;EAID;;EACD,YAAIsB,UAAU,CAACG,QAAX,CAAoB5F,WAAW,CAACK,cAAhC,CAAJ,EAAqD;EACnDe,UAAAA,SAAS,CAAC8B,cAAV,CAAyB2C,GAAzB,CACE,IAAI1C,UAAJ,CAAe9B,SAAS,CAAC9D,OAAV,CAAkByC,WAAW,CAACK,cAA9B,CAAf,CADF,EAEEe,SAAS,CAACkD,+BAFZ;EAID;;EACD,YAAImB,UAAU,CAACG,QAAX,CAAoB5F,WAAW,CAACM,cAAhC,CAAJ,EAAqD;EACnDc,UAAAA,SAAS,CAAC8B,cAAV,CAAyB2C,GAAzB,CACE,IAAI1C,UAAJ,CAAe9B,SAAS,CAAC9D,OAAV,CAAkByC,WAAW,CAACM,cAA9B,CAAf,CADF,EAEEc,SAAS,CAACsD,+BAFZ;EAIAtD,UAAAA,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BqE,SAA/B;EACD;;EAED1E,QAAAA,SAAS,CAAC2D,gBAAV,CAA2BzH,WAA3B,CACE0D,qBAAqB,CACnB;EACEM,UAAAA,IAAI,EAAEtD,mBAAmB,CAACO;EAD5B,SADmB,EAInB8C,SAAS,CAACJ,SAJS,CADvB;EASA;EACD;;EAED,SAAKjD,mBAAmB,CAACK,UAAzB;EAAqC;EACnC;EACA,cAAM0H,cAAc,GAAG;EACrBzE,UAAAA,IAAI,EAAEtD,mBAAmB,CAACK;EADL,SAAvB;EAGA,cAAM2H,sBAAsB,GAAG,EAA/B;EAEA,cAAMC,WAAW,GAAG5E,SAAS,CAAC9D,OAAV,CAAkB0I,WAAtC;;EAEA,YAAIA,WAAW,CAACL,QAAZ,CAAqB5F,WAAW,CAACE,aAAjC,CAAJ,EAAqD;EACnD,gBAAMsD,YAAY,GAAGP,eAAe,CAAC7B,SAAD,CAAf,CAA2B4D,MAAhD;EACAe,UAAAA,cAAc,CAAC/F,WAAW,CAACE,aAAb,CAAd,GAA4CsD,YAA5C;EACAwC,UAAAA,sBAAsB,CAACE,IAAvB,CAA4B1C,YAA5B;EACD;;EACD,YAAIyC,WAAW,CAACL,QAAZ,CAAqB5F,WAAW,CAACC,aAAjC,CAAJ,EAAqD;EACnD,gBAAM2D,YAAY,GAAGF,eAAe,CAACtC,SAAD,CAAf,CAA2B4D,MAAhD;EACAe,UAAAA,cAAc,CAAC/F,WAAW,CAACC,aAAb,CAAd,GAA4C2D,YAA5C;EACAoC,UAAAA,sBAAsB,CAACE,IAAvB,CAA4BtC,YAA5B;EACD;;EACD,YAAIqC,WAAW,CAACL,QAAZ,CAAqB5F,WAAW,CAACG,gBAAjC,CAAJ,EAAwD;EACtD,gBAAMgG,eAAe,GAAGrC,kBAAkB,CAAC1C,SAAD,CAAlB,CAA8B4D,MAAtD;EACAe,UAAAA,cAAc,CAAC/F,WAAW,CAACG,gBAAb,CAAd,GAA+CgG,eAA/C;EACAH,UAAAA,sBAAsB,CAACE,IAAvB,CAA4BC,eAA5B;EACD;;EACD,YAAIF,WAAW,CAACL,QAAZ,CAAqB5F,WAAW,CAACI,cAAjC,CAAJ,EAAsD;EACpD,gBAAMgG,aAAa,GAAGlC,gBAAgB,CAAC9C,SAAD,CAAhB,CAA4B4D,MAAlD;EACAe,UAAAA,cAAc,CAAC/F,WAAW,CAACI,cAAb,CAAd,GAA6CgG,aAA7C;EACAJ,UAAAA,sBAAsB,CAACE,IAAvB,CAA4BE,aAA5B;EACD;;EACD,YAAIH,WAAW,CAACL,QAAZ,CAAqB5F,WAAW,CAACK,cAAjC,CAAJ,EAAsD;EACpD,gBAAMgG,aAAa,GAAGhC,gBAAgB,CAACjD,SAAD,CAAhB,CAA4B4D,MAAlD;EACAe,UAAAA,cAAc,CAAC/F,WAAW,CAACK,cAAb,CAAd,GAA6CgG,aAA7C;EACAL,UAAAA,sBAAsB,CAACE,IAAvB,CAA4BG,aAA5B;EACD;;EACD,YAAIJ,WAAW,CAACL,QAAZ,CAAqB5F,WAAW,CAACM,cAAjC,CAAJ,EAAsD;EACpDc,UAAAA,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BgD,SAA/B;EACA,gBAAM6B,aAAa,GAAG9B,gBAAgB,CAACpD,SAAD,CAAhB,CAA4B4D,MAAlD;EACAe,UAAAA,cAAc,CAAC/F,WAAW,CAACM,cAAb,CAAd,GAA6CgG,aAA7C;EACAN,UAAAA,sBAAsB,CAACE,IAAvB,CAA4BI,aAA5B;EACD;;EAEDlF,QAAAA,SAAS,CAAC2D,gBAAV,CAA2BzH,WAA3B,CAAuC0D,qBAAqB,CAAC+E,cAAD,EAAiB1E,SAAS,CAACJ,SAA3B,CAA5D,EAAmG+E,sBAAnG;EAEA;EACD;EA5IH;EA8ID;;ECjKD,IAAIO,aAAa,GAAG;EAGpB;EACA;;EACA,IAAIC,UAAU,GAAG,EAAjB;EACA,MAAMC,gBAAgB,GAAG;EACvBC,EAAAA,GAAG,EAAE;EACHC,IAAAA,GAAG,EAAE,CAACpJ,OAAD,EAAUqJ,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC,KAAiD;EACpD;EACA,UAAIC,GAAG,GAAG,IAAIC,WAAJ,CAAgB3F,YAAY,CAACC,OAAb,CAAqB2F,MAArB,CAA4BpC,MAA5C,EAAoDzH,OAApD,EAA6D,CAA7D,EAAgE,CAAhE,CAAV;EACA,UAAI8J,GAAG,GAAGC,MAAM,CAACC,YAAP,CAAoBvE,KAApB,CAA0B,IAA1B,EAAgC,IAAIwE,WAAJ,CAAgBhG,YAAY,CAACC,OAAb,CAAqB2F,MAArB,CAA4BpC,MAA5C,EAAoDzH,OAAO,GAAG,CAA9D,EAAiE2J,GAAjE,CAAhC,CAAV;EACA,UAAIN,IAAI,KAAK,CAAC,IAAd,EAAoBS,GAAG,GAAGA,GAAG,CAACxG,OAAJ,CAAY,IAAZ,EAAkB+F,IAAlB,CAAN;EACpB,UAAIC,IAAI,KAAK,CAAC,IAAd,EAAoBQ,GAAG,GAAGA,GAAG,CAACxG,OAAJ,CAAY,IAAZ,EAAkBgG,IAAlB,CAAN;EACpB,UAAIC,IAAI,KAAK,CAAC,IAAd,EAAoBO,GAAG,GAAGA,GAAG,CAACxG,OAAJ,CAAY,IAAZ,EAAkBiG,IAAlB,CAAN;EACpB,UAAIC,IAAI,KAAK,CAAC,IAAd,EAAoBM,GAAG,GAAGA,GAAG,CAACxG,OAAJ,CAAY,IAAZ,EAAkBkG,IAAlB,CAAN;EACpB,UAAIC,IAAI,KAAK,CAAC,IAAd,EAAoBK,GAAG,GAAGA,GAAG,CAACxG,OAAJ,CAAY,IAAZ,EAAkBmG,IAAlB,CAAN;EACpB,UAAIC,IAAI,KAAK,CAAC,IAAd,EAAoBI,GAAG,GAAGA,GAAG,CAACxG,OAAJ,CAAY,IAAZ,EAAkBoG,IAAlB,CAAN;EACpBrJ,MAAAA,OAAO,CAAC+I,GAAR,CAAY,eAAeU,GAA3B;EACD,KAZE;EAaHI,IAAAA,MAAM,EAAE,CAACb,IAAD,EAAOC,IAAP,KAAgB;EACtB,UAAI,CAACL,UAAU,CAACI,IAAD,CAAf,EAAuB;EACrB;EACA,YAAIc,SAAS,GAAG,WAAhB;EACA,YAAId,IAAI,KAAK,CAAC,IAAd,EAAoBc,SAAS,IAAK,MAAKd,IAAI,CAAChG,QAAL,CAAc,EAAd,CAAkB,GAArC;EACpB,YAAIiG,IAAI,KAAK,CAAC,IAAd,EAAoBa,SAAS,IAAK,MAAKb,IAAI,CAACjG,QAAL,CAAc,EAAd,CAAkB,GAArC,CAJC;;EAMrBhD,QAAAA,OAAO,CAAC+I,GAAR,CAAYe,SAAZ,EANqB;;EAQrB;;;;;EAKD;EACF;EA5BE;EADkB,CAAzB;;EAmCA,MAAMC,sBAAsB,GAAG,MAAMC,gBAAN,IAA0B;EACvD,MAAIC,QAAQ,GAAGtE,SAAf,CADuD;EAEvD;;EAEA,MAAIuE,WAAW,CAACC,oBAAhB,EAAsC;EACpCF,IAAAA,QAAQ,GAAG,MAAMC,WAAW,CAACC,oBAAZ,CAAiCC,KAAK,CAACJ,gBAAD,CAAtC,EAA0DnB,gBAA1D,CAAjB;EACD,GAFD,MAEO;EACL,UAAMwB,uBAAuB,GAAG,YAAY;EAC1C,YAAMC,eAAe,GAAG,MAAMF,KAAK,CAACJ,gBAAD,CAAL,CAAwBO,IAAxB,CAA6BN,QAAQ,IAAIA,QAAQ,CAACO,WAAT,EAAzC,CAA9B;EACA,aAAON,WAAW,CAACO,WAAZ,CAAwBH,eAAxB,EAAyCzB,gBAAzC,CAAP;EACD,KAHD;;EAKAoB,IAAAA,QAAQ,GAAG,MAAMI,uBAAuB,EAAxC;EACD;;EAED,SAAOJ,QAAP;EACD,CAhBD;;EAkBA,MAAMS,kBAAgB,GAAGC,YAAY,IAAI;EACvC,SAAOC,MAAM,CAACC,IAAP,CAAYF,YAAY,CAACG,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAZ,EAAwC,QAAxC,CAAP;EACD,CAFD;;EAIA,MAAMC,mBAAmB,GAAG,MAAMf,gBAAN,IAA0B;EACpD,QAAMgB,UAAU,GAAGN,kBAAgB,CAACV,gBAAD,CAAnC;EACA,SAAO,MAAME,WAAW,CAACO,WAAZ,CAAwBO,UAAxB,EAAoCnC,gBAApC,CAAb;EACD,CAHD;;;EAMA,MAAMoC,kBAAkB,GAAG,MAAM3L,WAAN,IAAqB;EAC9C,MAAI2K,QAAQ,GAAGtE,SAAf,CAD8C;;EAG9C,MAAIrG,WAAJ,EAAiB;EACf2K,IAAAA,QAAQ,GAAG,MAAMF,sBAAsB,CAACpB,aAAD,CAAvC;EACD,GAFD,MAEO;EACL,QAAI,OAAOuC,MAAP,KAAkB,WAAlB,IAAiC,OAAO3L,IAAP,KAAgB,WAArD,EAAkE;EAChE0K,MAAAA,QAAQ,GAAG,MAAMF,sBAAsB,CAACpB,aAAD,CAAvC;EACD,KAFD,MAEO;EACLsB,MAAAA,QAAQ,GAAG,MAAMc,mBAAmB,CAACpC,aAAD,CAApC;EACD;EACF,GAX6C;;;EAc9C,QAAMwC,QAAQ,GAAGlB,QAAQ,CAACkB,QAA1B;EACA,QAAMC,UAAU,GAAG,IAAI7F,UAAJ,CAAe4F,QAAQ,CAACtH,OAAT,CAAiB2F,MAAjB,CAAwBpC,MAAvC,CAAnB;EACA,SAAO;EACL+D,IAAAA,QADK;EAELC,IAAAA,UAFK;EAGL1H,IAAAA,IAAI,EAAE;EAHD,GAAP;EAKD,CArBD;;ECrEA;EAEA;EACA;AACA,EAAO,MAAM2H,uBAAuB,GAAG,MAAM;EAC3C,MAAI,OAAOH,MAAP,KAAkB,WAAtB,EAAmC;EACjC,WAAOI,WAAW,CAACC,GAAZ,EAAP;EACD;;EACD,SAAOC,IAAI,CAACD,GAAL,EAAP;EACD,CALM;;ECDP;;AACA,EAAO,SAASE,YAAT,CAAsBjI,SAAtB,EAAiC;EACtC;EACA;EACA,QAAMkI,kBAAkB,GAAGL,uBAAuB,EAAlD;;EACA,SAAO7H,SAAS,CAACmI,aAAV,CAAwB,CAAxB,IAA6BD,kBAAkB,GAAG,IAAzD,EAA+D;EAC7DlI,IAAAA,SAAS,CAACmI,aAAV,CAAwBC,KAAxB;EACD;;EACDpI,EAAAA,SAAS,CAACmI,aAAV,CAAwBrD,IAAxB,CAA6BoD,kBAA7B;EAEAlI,EAAAA,SAAS,CAACqI,oBAAV;;EACA,MAAIrI,SAAS,CAACqI,oBAAV,GAAiC,CAArC,EAAwC;EACtCrI,IAAAA,SAAS,CAACqI,oBAAV,GAAiC,CAAjC;EACD;;EAED,SAAOH,kBAAP;EACD;EAGD;;AACA,EAAO,SAASI,6BAAT,CAAuCtI,SAAvC,EAAkD;EACvD,MAAIA,SAAS,CAACuI,OAAV,CAAkBC,gBAAlB,IAAsC,EAA1C,EAA8C;EAC5CxI,IAAAA,SAAS,CAACqI,oBAAV,GAAiC/I,IAAI,CAACmJ,KAAL,CAAWzI,SAAS,CAACuI,OAAV,CAAkBC,gBAA7B,IAAiD,IAAlF;EACD,GAFD,MAEO;EACL;EACAxI,IAAAA,SAAS,CAACqI,oBAAV,GAAiC,GAAjC;EACD;EACF;;EC9BD;AACA,EAIO,SAASK,gBAAT,CAA0B1I,SAA1B,EAAqC;EAC1C,QAAM2I,qBAAqB,GAAG3I,SAAS,CAACG,qCAAV,GAAkDH,SAAS,CAACQ,0BAA1F;EACA,QAAMoI,mBAAmB,GAAG5I,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CAA+BrC,SAAS,CAACG,qCAAzC,EAAgFwI,qBAAhF,EAAuG/E,MAAnI,CAF0C;;EAI1C5D,EAAAA,SAAS,CAACU,kBAAV,CAA6BxE,WAA7B,CACE0D,qBAAqB,CAAC;EACpBM,IAAAA,IAAI,EAAEtD,mBAAmB,CAACgB,OADN;EAEpBgL,IAAAA;EAFoB,GAAD,CADvB,EAKE,CAACA,mBAAD,CALF;EAOD;;EChBD;AACA,EAwBA;;EACA,MAAMC,iBAAiB,GAAG,IAA1B;EAEA;;EACA,MAAMC,iBAAiB,GAAG,IAA1B;;EAGA,IAAIZ,kBAAJ;EACA,IAAIa,UAAJ;EACA,IAAIC,yBAAJ;;EAGA,IAAIC,YAAJ;;EAEA,SAASC,kBAAT,CAA4BlJ,SAA5B,EAAuC;EACrC;EACA,QAAMmJ,WAAW,GAAGtB,uBAAuB,EAA3C,CAFqC;;EAKrC,QAAMuB,sBAAsB,GAAGD,WAAW,GAAGnJ,SAAS,CAACmI,aAAV,CAAwBnI,SAAS,CAACmI,aAAV,CAAwBzE,MAAxB,GAAiC,CAAzD,CAA7C,CALqC;;EAQrC,MAAI2F,cAAc,GAAGJ,YAAY,GAAGG,sBAApC;;EACA,MAAIC,cAAc,GAAG,CAArB,EAAwB;EACtBA,IAAAA,cAAc,GAAG,CAAjB;EACD,GAXoC;;;EAcrC,MAAIrJ,SAAS,CAACsJ,KAAV,IAAmBtJ,SAAS,CAACsJ,KAAV,GAAkB,CAAzC,EAA4C;EAC1CD,IAAAA,cAAc,GAAGA,cAAc,GAAGrJ,SAAS,CAACsJ,KAA5C;EACD;;EAEDtJ,EAAAA,SAAS,CAACuJ,QAAV,GAAqBC,UAAU,CAAC,MAAM;EACpCC,IAAAA,MAAM,CAACzJ,SAAD,CAAN;EACD,GAF8B,EAE5BV,IAAI,CAACmJ,KAAL,CAAWY,cAAX,CAF4B,CAA/B;EAGD;;;AAGD,EAAO,SAASI,MAAT,CAAgBzJ,SAAhB,EAA2B0J,kBAA3B,EAA+C;EACpD;EACA,MAAI1J,SAAS,CAAC2J,MAAd,EAAsB;EACpB,WAAO,IAAP;EACD,GAJmD;;;EAOpD,MAAID,kBAAkB,KAAKvH,SAA3B,EAAsC;EACpC8G,IAAAA,YAAY,GAAGS,kBAAf;EACD,GATmD;EAYpD;;;EACAX,EAAAA,UAAU,GAAG/I,SAAS,CAAC4J,MAAV,EAAb;EACAZ,EAAAA,yBAAyB,GAAGhJ,SAAS,CAACuI,OAAV,CAAkBC,gBAAlB,GAAqC,CAAjE;;EAEA,MAAIxI,SAAS,CAACsJ,KAAV,IAAmBtJ,SAAS,CAACsJ,KAAV,GAAkB,CAAzC,EAA4C;EAC1CN,IAAAA,yBAAyB,GAAGA,yBAAyB,GAAGhJ,SAAS,CAACsJ,KAAlE;EACD;;EAED,MAAIP,UAAU,GAAGC,yBAAjB,EAA4C;EAC1C;EACA;EACAhJ,IAAAA,SAAS,CAACmI,aAAV,CAAwBC,KAAxB;EACAc,IAAAA,kBAAkB,CAAClJ,SAAD,CAAlB;EACA,WAAO,IAAP;EACD,GAND,MAMO;EACLkI,IAAAA,kBAAkB,GAAGD,YAAY,CAACjI,SAAD,CAAjC;EACD,GA5BmD;;;EA+BpD,QAAM6J,gBAAgB,GAAG,CAAC7J,SAAS,CAACuI,OAAV,CAAkBuB,QAAnB,IAA+B,CAAC9J,SAAS,CAAC+J,gBAA1C,IAA8D/J,SAAS,CAACuI,OAAV,CAAkByB,cAAzG,CA/BoD;EAkCpD;;EACA,QAAMC,cAAc,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;EAC5C;EACA,QAAI1D,QAAJ;;EACA,QAAIoD,gBAAJ,EAAsB;EACpBO,MAAAA,oBAAoB,CAACpK,SAAD,EAAYmK,OAAZ,CAApB;EACD,KAFD,MAEO;EACL,UAAInK,SAAS,CAACqK,UAAV,KAAyBlI,SAA7B,EAAwC;EACtCsE,QAAAA,QAAQ,GAAGzG,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BiK,2BAA/B,CAA2DtK,SAAS,CAACqK,UAArE,CAAX;EACD,OAFD,MAEO;EACL5D,QAAAA,QAAQ,GAAGzG,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BkK,YAA/B,EAAX;EACD;;EACDJ,MAAAA,OAAO,CAAC1D,QAAD,CAAP;EACD;EACF,GAbsB,CAAvB;EAeAwD,EAAAA,cAAc,CAAClD,IAAf,CAAoBN,QAAQ,IAAI;EAC9B;EACA,QAAIA,QAAQ,IAAI,CAAhB,EAAmB;EACjB;EACAvK,MAAAA,WAAW,CACT0D,qBAAqB,CAAC;EACpBM,QAAAA,IAAI,EAAEtD,mBAAmB,CAACgB,OADN;EAEpB4M,QAAAA,GAAG,EAAEzB;EAFe,OAAD,CADZ,CAAX,CAFiB;;EAUjB,UAAI0B,wBAAwB,GAAG,KAA/B;;EACA,UAAIzK,SAAS,CAACuI,OAAV,CAAkBmC,SAAlB,IAA+B1K,SAAS,CAACuI,OAAV,CAAkBmC,SAAlB,GAA8B,CAAjE,EAAoE;EAClE1K,QAAAA,SAAS,CAAC2K,gBAAV;;EAEA,YAAI3K,SAAS,CAAC2K,gBAAV,IAA8B3K,SAAS,CAACuI,OAAV,CAAkBmC,SAApD,EAA+D;EAC7DD,UAAAA,wBAAwB,GAAG,IAA3B;EACD,SAFD,MAEO;EACLzK,UAAAA,SAAS,CAAC2K,gBAAV,GAA6B,CAA7B;EACD;EACF,OAnBgB;;;EAsBjB,UAAI,CAACF,wBAAL,EAA+B;EAC7B/B,QAAAA,gBAAgB,CAAC1I,SAAD,CAAhB;EACD,OAxBgB;;;EA2BjB,YAAM4K,YAAY,GAAG;EACnB1K,QAAAA,IAAI,EAAEtD,mBAAmB,CAACgB;EADP,OAArB;EAGAgN,MAAAA,YAAY,CAAChM,WAAW,CAACC,aAAb,CAAZ,GAA0CyD,eAAe,CAACtC,SAAD,CAAf,CAA2B4D,MAArE;EACAgH,MAAAA,YAAY,CAAChM,WAAW,CAACI,cAAb,CAAZ,GAA2C8D,gBAAgB,CAAC9C,SAAD,CAAhB,CAA4B4D,MAAvE;EACAgH,MAAAA,YAAY,CAAChM,WAAW,CAACK,cAAb,CAAZ,GAA2CgE,gBAAgB,CAACjD,SAAD,CAAhB,CAA4B4D,MAAvE;EACAgH,MAAAA,YAAY,CAAChM,WAAW,CAACM,cAAb,CAAZ,GAA2CkE,gBAAgB,CAACpD,SAAD,CAAhB,CAA4B4D,MAAvE,CAjCiB;;EAoCjBU,MAAAA,MAAM,CAACC,IAAP,CAAYqG,YAAZ,EAA0BC,OAA1B,CAAkCC,GAAG,IAAI;EACvC,YAAIF,YAAY,CAACE,GAAD,CAAZ,KAAsB3I,SAA1B,EAAqC;EACnCyI,UAAAA,YAAY,CAACE,GAAD,CAAZ,GAAoB,IAAI/I,UAAJ,GAAiB6B,MAArC;EACD;EACF,OAJD;EAMA5D,MAAAA,SAAS,CAAC2D,gBAAV,CAA2BzH,WAA3B,CAAuC0D,qBAAqB,CAACgL,YAAD,CAA5D,EAA4E,CAC1EA,YAAY,CAAChM,WAAW,CAACC,aAAb,CAD8D,EAE1E+L,YAAY,CAAChM,WAAW,CAACI,cAAb,CAF8D,EAG1E4L,YAAY,CAAChM,WAAW,CAACK,cAAb,CAH8D,EAI1E2L,YAAY,CAAChM,WAAW,CAACM,cAAb,CAJ8D,CAA5E,EA1CiB;;EAkDjB,UAAIuH,QAAQ,KAAK,CAAjB,EAAoB;EAClBvK,QAAAA,WAAW,CACT0D,qBAAqB,CAAC;EACpBM,UAAAA,IAAI,EAAEtD,mBAAmB,CAACc;EADN,SAAD,CADZ,CAAX;EAKD,OAND,MAMO;EACLwL,QAAAA,kBAAkB,CAAClJ,SAAD,CAAlB;EACD;EACF,KA3DD,MA2DO;EACL9D,MAAAA,WAAW,CACT0D,qBAAqB,CAAC;EACpBM,QAAAA,IAAI,EAAEtD,mBAAmB,CAACiB;EADN,OAAD,CADZ,CAAX;EAKAmC,MAAAA,SAAS,CAAC2J,MAAV,GAAmB,IAAnB;EACD;EACF,GArED;EAsED;EAGD;EACA;EACA;;EACA,SAASS,oBAAT,CAA8BpK,SAA9B,EAAyCmK,OAAzC,EAAkD;EAChD;EACA,MAAI1D,QAAQ,GAAG,CAAC,CAAhB;;EACA,MAAIzG,SAAS,CAACqK,UAAV,KAAyBlI,SAA7B,EAAwC;EACtCsE,IAAAA,QAAQ,GAAGzG,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B0K,wCAA/B,CAAwEjC,iBAAxE,EAA2F9I,SAAS,CAACqK,UAArG,CAAX;EACD,GAFD,MAEO;EACL5D,IAAAA,QAAQ,GAAGzG,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B2K,yBAA/B,CAAyDlC,iBAAzD,CAAX;EACD,GAP+C;;;EAUhD,MAAIrC,QAAQ,KAAK,CAAjB,EAAoB;EAClB0D,IAAAA,OAAO,CAAC1D,QAAD,CAAP;EACD,GAZ+C;;;EAehD,MAAIA,QAAQ,KAAK,CAAjB,EAAoB;EAClB;EACA,UAAMwE,eAAe,GAAGjL,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B6K,kBAA/B,EAAxB,CAFkB;;EAKlB,UAAMC,gBAAgB,GAAGnL,SAAS,CAACuB,4BAAV,GAAyCsH,iBAAlE;EACA,UAAMuC,kBAAkB,GAAGrC,UAAU,IAAIC,yBAAzC;;EAEA,QAAImC,gBAAgB,IAAIC,kBAAxB,EAA4C;EAC1CC,MAAAA,SAAS,CAACrL,SAAD,EAAYiL,eAAZ,CAAT,CAD0C;EAG1C;EACA;;EACA,YAAMK,0BAA0B,GAAGtL,SAAS,CAACuB,4BAAV,GAAyCsH,iBAA5E;EACA,YAAM0C,wBAAwB,GAAGjM,IAAI,CAACmJ,KAAL,CAAW6C,0BAA0B,GAAG,IAAxC,CAAjC;EACA9B,MAAAA,UAAU,CAAC,MAAM;EACflB,QAAAA,6BAA6B,CAACtI,SAAD,CAA7B;EACAoK,QAAAA,oBAAoB,CAACpK,SAAD,EAAYmK,OAAZ,CAApB;EACD,OAHS,EAGP7K,IAAI,CAACmJ,KAAL,CAAW8C,wBAAwB,GAAG,EAAtC,CAHO,CAAV;EAID,KAXD,MAWO;EACLF,MAAAA,SAAS,CAACrL,SAAD,EAAYiL,eAAZ,CAAT;EACAb,MAAAA,oBAAoB,CAACpK,SAAD,EAAYmK,OAAZ,CAApB;EACD;EACF;EACF;;EAED,SAASkB,SAAT,CAAmBrL,SAAnB,EAA8BiL,eAA9B,EAA+C;EAC7C;EACA;EACA;EACA;EAEA;EACA,QAAMO,WAAW,GAAGxL,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CAClBrC,SAAS,CAACY,6BADQ,EAElBZ,SAAS,CAACY,6BAAV,GAA0CqK,eAAe,GAAG,CAF1C,EAGlBrH,MAHF;EAIA,QAAMzH,OAAO,GAAG;EACd+D,IAAAA,IAAI,EAAEtD,mBAAmB,CAACgB,OADZ;EAEd4N,IAAAA,WAFc;EAGdC,IAAAA,eAAe,EAAER,eAHH;EAIdT,IAAAA,GAAG,EAAEzB,UAJS;EAKd2C,IAAAA,wBAAwB,EAAE1L,SAAS,CAACuI,OAAV,CAAkBC,gBAAlB,GAAqC;EALjD,GAAhB;EAOA,QAAMmD,qBAAqB,GAAG,CAACH,WAAD,CAA9B,CAlB6C;;EAqB7C,MAAIxL,SAAS,CAACuI,OAAV,IAAqBvI,SAAS,CAACuI,OAAV,CAAkBqD,oBAA3C,EAAiE;EAC/D;EACA,UAAMC,cAAc,GAAG7L,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACrBrC,SAAS,CAACc,iCADW,EAErBd,SAAS,CAACc,iCAAV,GAA8CmK,eAAe,GAAG,CAF3C,EAGrBrH,MAHF;EAIAzH,IAAAA,OAAO,CAAC0P,cAAR,GAAyBA,cAAzB;EACAF,IAAAA,qBAAqB,CAAC7G,IAAtB,CAA2B+G,cAA3B,EAP+D;;EAU/D,UAAMC,cAAc,GAAG9L,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACrBrC,SAAS,CAACgB,iCADW,EAErBhB,SAAS,CAACgB,iCAAV,GAA8CiK,eAAe,GAAG,CAF3C,EAGrBrH,MAHF;EAIAzH,IAAAA,OAAO,CAAC2P,cAAR,GAAyBA,cAAzB;EACAH,IAAAA,qBAAqB,CAAC7G,IAAtB,CAA2BgH,cAA3B,EAf+D;;EAkB/D,UAAMC,cAAc,GAAG/L,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACrBrC,SAAS,CAACkB,iCADW,EAErBlB,SAAS,CAACkB,iCAAV,GAA8C+J,eAAe,GAAG,CAF3C,EAGrBrH,MAHF;EAIAzH,IAAAA,OAAO,CAAC4P,cAAR,GAAyBA,cAAzB;EACAJ,IAAAA,qBAAqB,CAAC7G,IAAtB,CAA2BiH,cAA3B,EAvB+D;;EA0B/D,UAAMC,cAAc,GAAGhM,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CACrBrC,SAAS,CAACoB,iCADW,EAErBpB,SAAS,CAACoB,iCAAV,GAA8C6J,eAAe,GAAG,CAF3C,EAGrBrH,MAHF;EAIAzH,IAAAA,OAAO,CAAC6P,cAAR,GAAyBA,cAAzB;EACAL,IAAAA,qBAAqB,CAAC7G,IAAtB,CAA2BkH,cAA3B;EACD;;EAEDhM,EAAAA,SAAS,CAACsB,eAAV,CAA0BpF,WAA1B,CAAsC0D,qBAAqB,CAACzD,OAAD,CAA3D,EAAsEwP,qBAAtE;EACA3L,EAAAA,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B4L,eAA/B;EACD;;EC/RD;AACA,EA8BA;EACA;EACA;;EACA,IAAIjM,SAAJ;EACAA,SAAS,GAAG;EACV;EACAU,EAAAA,kBAAkB,EAAEyB,SAFV;EAGVwB,EAAAA,gBAAgB,EAAExB,SAHR;EAIV+J,EAAAA,oBAAoB,EAAE/J,SAJZ;EAKVb,EAAAA,eAAe,EAAEa,SALP;EAOV;EACA/B,EAAAA,YAAY,EAAE+B,SARJ;EASVL,EAAAA,cAAc,EAAEK,SATN;EAWV;EACAoG,EAAAA,OAAO,EAAEpG,SAZC;EAcV;EACAF,EAAAA,2BAA2B,EAAE,CAfnB;EAgBVQ,EAAAA,+BAA+B,EAAE,CAhBvB;EAiBVc,EAAAA,2BAA2B,EAAE,CAjBnB;EAkBVD,EAAAA,+BAA+B,EAAE,CAlBvB;EAmBVN,EAAAA,4BAA4B,EAAE,CAnBpB;EAoBVD,EAAAA,gCAAgC,EAAE,CApBxB;EAqBVI,EAAAA,2BAA2B,EAAE,CArBnB;EAsBVD,EAAAA,+BAA+B,EAAE,CAtBvB;EAuBV/C,EAAAA,qCAAqC,EAAE,CAvB7B;EAwBVK,EAAAA,0BAA0B,EAAE,CAxBlB;EAyBVI,EAAAA,6BAA6B,EAAE,CAzBrB;EA0BVE,EAAAA,iCAAiC,EAAE,CA1BzB;EA2BVE,EAAAA,iCAAiC,EAAE,CA3BzB;EA4BVE,EAAAA,iCAAiC,EAAE,CA5BzB;EA6BVE,EAAAA,iCAAiC,EAAE,CA7BzB;EA+BV;EACAuI,EAAAA,MAAM,EAAE,IAhCE;EAkCV;EACAJ,EAAAA,QAAQ,EAAEpH,SAnCA;EAqCV;EACAkG,EAAAA,oBAAoB,EAAE,CAtCZ;EAuCVF,EAAAA,aAAa,EAAE,EAvCL;EAyCV;EACAmB,EAAAA,KAAK,EAAE,CA1CG;EA4CV;EACAqB,EAAAA,gBAAgB,EAAE,CA7CR;EA+CV;EACApJ,EAAAA,4BAA4B,EAAE,CAhDpB;EAkDV;EACA8I,EAAAA,UAAU,EAAElI,SAnDF;EAqDV;EACAgK,EAAAA,cAAc,EAAEvQ,KAAK,IAAI;EACvB;EACA,UAAMqE,SAAS,GAAGtE,YAAY,CAACC,KAAD,CAA9B;;EAEA,YAAQqE,SAAS,CAAC9D,OAAV,CAAkB+D,IAA1B;EACE,WAAKtD,mBAAmB,CAACC,OAAzB;EAAkC;EAChC;EACA,cAAIoD,SAAS,CAAC9D,OAAV,CAAkB2D,QAAlB,KAA+BxB,SAAS,CAACE,QAA7C,EAAuD;EACrDwB,YAAAA,SAAS,CAACU,kBAAV,GAA+BT,SAAS,CAAC9D,OAAV,CAAkBiQ,KAAlB,CAAwB,CAAxB,CAA/B;EACA/P,YAAAA,SAAS,CAAC0D,uBAAuB,CAACsM,IAAxB,CAA6BlK,SAA7B,EAAwCnC,SAAxC,CAAD,EAAqDA,SAAS,CAACU,kBAA/D,CAAT;EACD,WAHD,MAGO,IAAIT,SAAS,CAAC9D,OAAV,CAAkB2D,QAAlB,KAA+BxB,SAAS,CAACG,MAA7C,EAAqD;EAC1DuB,YAAAA,SAAS,CAAC2D,gBAAV,GAA6B1D,SAAS,CAAC9D,OAAV,CAAkBiQ,KAAlB,CAAwB,CAAxB,CAA7B;EACA/P,YAAAA,SAAS,CAACmH,qBAAqB,CAAC6I,IAAtB,CAA2BlK,SAA3B,EAAsCnC,SAAtC,CAAD,EAAmDA,SAAS,CAAC2D,gBAA7D,CAAT;EACD,WAHM,MAGA,IAAI1D,SAAS,CAAC9D,OAAV,CAAkB2D,QAAlB,KAA+BxB,SAAS,CAACI,UAA7C,EAAyD;EAC9DsB,YAAAA,SAAS,CAACkM,oBAAV,GAAiCjM,SAAS,CAAC9D,OAAV,CAAkBiQ,KAAlB,CAAwB,CAAxB,CAAjC;EACA/P,YAAAA,SAAS,CAACoF,yBAAyB,CAAC4K,IAA1B,CAA+BlK,SAA/B,EAA0CnC,SAA1C,CAAD,EAAuDA,SAAS,CAACkM,oBAAjE,CAAT;EACD,WAHM,MAGA,IAAIjM,SAAS,CAAC9D,OAAV,CAAkB2D,QAAlB,KAA+BxB,SAAS,CAACK,KAA7C,EAAoD;EACzDqB,YAAAA,SAAS,CAACsB,eAAV,GAA4BrB,SAAS,CAAC9D,OAAV,CAAkBiQ,KAAlB,CAAwB,CAAxB,CAA5B;EACA/P,YAAAA,SAAS,CAACsE,oBAAoB,CAAC0L,IAArB,CAA0BlK,SAA1B,EAAqCnC,SAArC,CAAD,EAAkDA,SAAS,CAACsB,eAA5D,CAAT;EACD,WAd+B;;;EAiBhCpF,UAAAA,WAAW,CAAC0D,qBAAqB,CAACuC,SAAD,EAAYlC,SAAS,CAACJ,SAAtB,CAAtB,CAAX;EACA;EACD;;EAED,WAAKjD,mBAAmB,CAACE,gBAAzB;EAA2C;EACzC,gBAAMwP,eAAe,GAAG,YAAY;EAClC,gBAAI7F,QAAJ,CADkC;EAGlC;;EACAA,YAAAA,QAAQ,GAAG,MAAMgB,kBAAkB,CAAC3L,WAAD,CAAnC;EAGAkE,YAAAA,SAAS,CAACI,YAAV,GAAyBqG,QAAQ,CAACkB,QAAlC;EACA3H,YAAAA,SAAS,CAAC8B,cAAV,GAA2B2E,QAAQ,CAACmB,UAApC;EACA1L,YAAAA,WAAW,CACT0D,qBAAqB,CACnB;EACEM,cAAAA,IAAI,EAAEuG,QAAQ,CAACvG;EADjB,aADmB,EAInBD,SAAS,CAACJ,SAJS,CADZ,CAAX;EAQA;EACD,WAlBD;;EAmBAyM,UAAAA,eAAe;EACf;EACD;;EACD,WAAK1P,mBAAmB,CAACU,MAAzB;EAAiC;EAC/B;EACA;EACA,gBAAMiP,MAAM,GAAGtM,SAAS,CAAC9D,OAAV,CAAkBoQ,MAAjC;EACAvM,UAAAA,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BkM,MAA/B,CAAsC3K,KAAtC,CAA4C5B,SAA5C,EAAuDuM,MAAvD;EACAvM,UAAAA,SAAS,CAACuI,OAAV,GAAoBtI,SAAS,CAAC9D,OAAV,CAAkBoM,OAAtC;EACArM,UAAAA,WAAW,CAAC0D,qBAAqB,CAACuC,SAAD,EAAYlC,SAAS,CAACJ,SAAtB,CAAtB,CAAX;EACA;EACD;;EAED,WAAKjD,mBAAmB,CAACW,iBAAzB;EAA4C;EAC1C;EACAyC,UAAAA,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B4L,eAA/B;EACA/P,UAAAA,WAAW,CAAC0D,qBAAqB,CAACuC,SAAD,EAAYlC,SAAS,CAACJ,SAAtB,CAAtB,CAAX;EACA;EACD;;EAED,WAAKjD,mBAAmB,CAACY,IAAzB;EACA,WAAKZ,mBAAmB,CAACa,qBAAzB;EAAgD;EAC9C,cAAI,CAACuC,SAAS,CAAC2J,MAAX,IAAqB,CAAC3J,SAAS,CAACI,YAAhC,IAAgD,CAACJ,SAAS,CAAC8B,cAA/D,EAA+E;EAC7E5F,YAAAA,WAAW,CAAC0D,qBAAqB,CAAC;EAAEnD,cAAAA,KAAK,EAAE;EAAT,aAAD,EAAkBwD,SAAS,CAACJ,SAA5B,CAAtB,CAAX;EACA;EACD,WAJ6C;;;EAO9CG,UAAAA,SAAS,CAAC2J,MAAV,GAAmB,KAAnB;EACA3J,UAAAA,SAAS,CAACmI,aAAV,GAA0B,EAA1B;EACAG,UAAAA,6BAA6B,CAACtI,SAAD,CAA7B;EACAA,UAAAA,SAAS,CAAC2K,gBAAV,GAA6B,CAA7B;EACA3K,UAAAA,SAAS,CAACuB,4BAAV,GAAyC,CAAzC;EACAvB,UAAAA,SAAS,CAACqK,UAAV,GAAuBlI,SAAvB,CAZ8C;;EAe9C,cAAIlC,SAAS,CAAC9D,OAAV,CAAkBkO,UAAtB,EAAkC;EAChCrK,YAAAA,SAAS,CAACqK,UAAV,GAAuBpK,SAAS,CAAC9D,OAAV,CAAkBkO,UAAzC;EACD,WAjB6C;EAoB9C;EACA;;;EACA,gBAAMpB,YAAY,GAAG,OAAOjJ,SAAS,CAACuI,OAAV,CAAkBC,gBAA9C;EAEAiB,UAAAA,MAAM,CAACzJ,SAAD,EAAYiJ,YAAZ,CAAN;EAEA/M,UAAAA,WAAW,CAAC0D,qBAAqB,CAACuC,SAAD,EAAYlC,SAAS,CAACJ,SAAtB,CAAtB,CAAX;EACA;EACD;;EAED,WAAKjD,mBAAmB,CAACe,KAAzB;EAAgC;EAC9B;EACAqC,UAAAA,SAAS,CAAC2J,MAAV,GAAmB,IAAnB;;EACA,cAAI3J,SAAS,CAACuJ,QAAd,EAAwB;EACtBiD,YAAAA,YAAY,CAACxM,SAAS,CAACuJ,QAAX,CAAZ;EACAvJ,YAAAA,SAAS,CAACuJ,QAAV,GAAqBpH,SAArB;EACD;;EACDjG,UAAAA,WAAW,CAAC0D,qBAAqB,CAACuC,SAAD,EAAYlC,SAAS,CAACJ,SAAtB,CAAtB,CAAX;EACA;EACD;EAED;;EACA,WAAKjD,mBAAmB,CAACoB,eAAzB;EAA0C;EACxC,cAAIyI,QAAJ;;EACA,cAAIxG,SAAS,CAAC9D,OAAV,CAAkBsQ,UAAtB,EAAkC;EAChChG,YAAAA,QAAQ,GAAGzG,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BJ,SAAS,CAAC9D,OAAV,CAAkBuQ,MAAjD,EAAyD9K,KAAzD,CAA+DO,SAA/D,EAA0ElC,SAAS,CAAC9D,OAAV,CAAkBsQ,UAA5F,CAAX;EACD,WAFD,MAEO;EACLhG,YAAAA,QAAQ,GAAGzG,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BJ,SAAS,CAAC9D,OAAV,CAAkBuQ,MAAjD,GAAX;EACD;;EACDxQ,UAAAA,WAAW,CACT0D,qBAAqB,CACnB;EACEM,YAAAA,IAAI,EAAEtD,mBAAmB,CAACoB,eAD5B;EAEEyI,YAAAA,QAAQ,EAAEA;EAFZ,WADmB,EAKnBxG,SAAS,CAACJ,SALS,CADZ,CAAX;EASA;EACD;;EAED,WAAKjD,mBAAmB,CAACqB,uBAAzB;EAAkD;EAChD,cAAI0O,KAAK,GAAG,CAAZ;EACA,cAAIC,GAAG,GAAG5M,SAAS,CAAC8B,cAAV,CAAyB4B,MAAnC;;EACA,cAAIzD,SAAS,CAAC9D,OAAV,CAAkBwQ,KAAtB,EAA6B;EAC3BA,YAAAA,KAAK,GAAG1M,SAAS,CAAC9D,OAAV,CAAkBwQ,KAA1B;EACD;;EACD,cAAI1M,SAAS,CAAC9D,OAAV,CAAkByQ,GAAtB,EAA2B;EACzBA,YAAAA,GAAG,GAAG3M,SAAS,CAAC9D,OAAV,CAAkByQ,GAAxB;EACD;;EAED,gBAAMnG,QAAQ,GAAGzG,SAAS,CAAC8B,cAAV,CAAyBO,KAAzB,CAA+BsK,KAA/B,EAAsCC,GAAtC,EAA2ChJ,MAA5D;EACA1H,UAAAA,WAAW,CACT0D,qBAAqB,CACnB;EACEM,YAAAA,IAAI,EAAEtD,mBAAmB,CAACoB,eAD5B;EAEEyI,YAAAA,QAAQ,EAAEA;EAFZ,WADmB,EAKnBxG,SAAS,CAACJ,SALS,CADZ,EAQT,CAAC4G,QAAD,CARS,CAAX;EAUA;EACD;;EAED,WAAK7J,mBAAmB,CAACsB,iBAAzB;EAA4C;EAC1C,gBAAMuI,QAAQ,GAAGzG,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BJ,SAAS,CAAC9D,OAAV,CAAkB0Q,QAAjD,EAA2DtM,OAA3D,EAAjB;EACArE,UAAAA,WAAW,CACT0D,qBAAqB,CACnB;EACEM,YAAAA,IAAI,EAAEtD,mBAAmB,CAACsB,iBAD5B;EAEEuI,YAAAA,QAAQ,EAAEA;EAFZ,WADmB,EAKnBxG,SAAS,CAACJ,SALS,CADZ,CAAX;EASA;EACD;;EAED,WAAKjD,mBAAmB,CAACuB,kBAAzB;EAA6C;EAC3CuK,UAAAA,gBAAgB,CAAC1I,SAAD,CAAhB;EACA;EACD;;EAED,WAAKpD,mBAAmB,CAACwB,SAAzB;EAAoC;EAClC4B,UAAAA,SAAS,CAACsJ,KAAV,GAAkBrJ,SAAS,CAAC9D,OAAV,CAAkBmN,KAApC,CADkC;;EAIlCtJ,UAAAA,SAAS,CAACmI,aAAV,GAA0B,EAA1B;EACAnI,UAAAA,SAAS,CAACqI,oBAAV,GAAiC,EAAjC;EACAC,UAAAA,6BAA6B,CAACtI,SAAD,CAA7B;EACAA,UAAAA,SAAS,CAAC2K,gBAAV,GAA6B,CAA7B;EACA3K,UAAAA,SAAS,CAACuB,4BAAV,GAAyC,CAAzC;EAEAvB,UAAAA,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+B4L,eAA/B;EACA;EACD;;EAED,WAAKrP,mBAAmB,CAACyB,MAAzB;EAAiC;EAC/B,gBAAMoI,QAAQ,GAAGzG,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+ByM,KAA/B,KAAyC,CAA1D;EAEA5Q,UAAAA,WAAW,CACT0D,qBAAqB,CACnB;EACEM,YAAAA,IAAI,EAAEtD,mBAAmB,CAACyB,MAD5B;EAEEoI,YAAAA,QAAQ,EAAEA;EAFZ,WADmB,EAKnBxG,SAAS,CAACJ,SALS,CADZ,CAAX;EASA;EACD;;EAED;EAAS;EACP;EACArD,UAAAA,OAAO,CAAC+I,GAAR,CAAY,iCAAZ,EAA+CtF,SAA/C;EACD;EAvMH;EAyMD,GAnQS;EAqQV;EACA;EACA2J,EAAAA,MAAM,EAAE,MAAM;EACZ,QAAI5J,SAAS,CAACqI,oBAAV,GAAiC,CAArC,EAAwC;EACtC,UAAIrI,SAAS,CAACsJ,KAAV,IAAmBtJ,SAAS,CAACsJ,KAAV,GAAkB,CAAzC,EAA4C;EAC1C,eAAOtJ,SAAS,CAACuI,OAAV,CAAkBC,gBAAlB,GAAqCxI,SAAS,CAACsJ,KAAtD;EACD;;EACD,aAAOtJ,SAAS,CAACuI,OAAV,CAAkBC,gBAAzB;EACD,KALD,MAKO,IAAIxI,SAAS,CAACmI,aAAd,EAA6B;EAClC,aAAOnI,SAAS,CAACmI,aAAV,CAAwBzE,MAA/B;EACD;;EAED,WAAO,CAAP;EACD;EAlRS,CAAZ;;EAsRArH,SAAS,CAAC2D,SAAS,CAACmM,cAAX,CAAT;;;;"}