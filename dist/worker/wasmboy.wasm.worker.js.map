{"version":3,"file":"wasmboy.wasm.worker.js","sources":["../../lib/worker/util.js","../../lib/worker/workerapi.js","../../lib/worker/constants.js","../../lib/worker/smartworker.js","../../lib/wasmboy/worker/graphics/onmessage.js","../../lib/wasmboy/worker/audio/onmessage.js","../../lib/wasmboy/worker/controller/onmessage.js","../../lib/wasmboy/worker/memory/rom.js","../../lib/wasmboy/worker/memory/ram.js","../../lib/wasmboy/worker/memory/header.js","../../lib/wasmboy/worker/memory/gameboymemory.js","../../lib/wasmboy/worker/memory/palettememory.js","../../lib/wasmboy/worker/memory/internalstate.js","../../lib/wasmboy/worker/memory/onmessage.js","../core/getWasmBoyWasmCore.esm.js","../../lib/common/common.js","../../lib/wasmboy/worker/timestamp.js","../../lib/wasmboy/worker/update.js","../../lib/wasmboy/worker/wasmboy.worker.js"],"sourcesContent":["export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","// Isomorphic worker api to be imported by web workers\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n// Initilize some of our isomorphic values\nimport { isInBrowser } from './util';\n\nlet parentPort;\nif (!isInBrowser) {\n  parentPort = require('worker_threads').parentPort;\n}\n\n// https://nodejs.org/api/worker_threads.html#worker_threads_worker_postmessage_value_transferlist\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\nexport function postMessage(message, transferArray) {\n  // Can't bind parentPort.postMessage, so we need to kinda copy code here :p\n  if (isInBrowser) {\n    self.postMessage(message, transferArray);\n  } else {\n    parentPort.postMessage(message, transferArray);\n  }\n}\n\n// https://nodejs.org/api/worker_threads.html#worker_threads_worker_parentport\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/onmessage\nexport function onMessage(callback, port) {\n  if (!callback) {\n    console.error('workerapi: No callback was provided to onMessage!');\n  }\n\n  // If we passed a port, use that\n  if (port) {\n    if (isInBrowser) {\n      // We are in the browser\n      port.onmessage = callback;\n    } else {\n      // We are in Node\n      port.on('message', callback);\n    }\n    return;\n  }\n\n  if (isInBrowser) {\n    // We are in the browser\n    self.onmessage = callback;\n  } else {\n    // We are in Node\n    parentPort.on('message', callback);\n  }\n}\n","export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_PROD_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n    \n    ROLLUP_REPLACE_PROD_BROWSER*/\n\n    /*ROLLUP_REPLACE_DEV_BROWSER\n\n    this.worker = new Worker(workerUrl);\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_DEV_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise(resolve => {\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Function to handle on message from graphics worker\n// to the lib worker\nexport function graphicsWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = libWorker.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf();\n      libWorker.WASMBOY_CURRENT_FRAME_SIZE = libWorker.wasmInstance.exports.FRAME_SIZE.valueOf();\n      // Forward to our lib worker\n      libWorker.graphicsWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION: libWorker.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Function to handler audio worker on message to the libWorker\nexport function audioWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_SOUND_OUTPUT_LOCATION = libWorker.wasmInstance.exports.soundOutputLocation.valueOf();\n      // Forward to our lib worker\n      libWorker.audioWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_SOUND_OUTPUT_LOCATION: libWorker.wasmInstance.exports.soundOutputLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.AUDIO_LATENCY: {\n      libWorker.currentAudioLatencyInSeconds = eventData.message.latency;\n      return;\n    }\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Handler for when the controller worker posts to the libWorker\nexport function controllerWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE: {\n      // Config will come in as an array, pass in values using apply\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n      const setJoypadStateParamsAsArray = eventData.message.setJoypadStateParamsAsArray;\n      libWorker.wasmInstance.exports.setJoypadState.apply(libWorker, setJoypadStateParamsAsArray);\n      return;\n    }\n  }\n}\n","// Private function to get the caretridge rom\nexport function getCartridgeRom(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Depening on the rom type, we will have different rom sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = libWorker.wasmByteMemory[libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let romSize = undefined;\n  if (cartridgeType === 0x00) {\n    // ROM only, 32KB\n    romSize = 0x8000;\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 2MB of ROM\n    romSize = 0x200000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 256KB ROM\n    romSize = 0x40000;\n  } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {\n    // MBC3 2MB of ROM\n    romSize = 0x200000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {\n    // MBC5 8MB of ROM\n    romSize = 0x800000;\n  }\n\n  if (!romSize) {\n    return new Uint8Array();\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRom = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_GAME_BYTES_LOCATION,\n    libWorker.WASMBOY_GAME_BYTES_LOCATION + romSize\n  );\n  return cartridgeRom;\n}\n","// Private function to get the cartridge ram\nexport function getCartridgeRam(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Depening on the rom type, we will have different ram sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = libWorker.wasmByteMemory[libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let ramSize = undefined;\n  if (cartridgeType === 0x00) {\n    // No memory for this rom type\n    return new Uint8Array();\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 512X4 Bytes, 2KB\n    ramSize = 0x800;\n  } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {\n    // MBC3 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {\n    // MBC5 128KB of Ram\n    ramSize = 0x20000;\n  }\n\n  if (!ramSize) {\n    return new Uint8Array();\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRam = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION,\n    libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION + ramSize\n  );\n  return cartridgeRam;\n}\n","// Function to get the cartridge header\nexport function getCartridgeHeader(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return new Uint8Array();\n  }\n\n  // Header is at 0x0134 - 0x014F\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  const headerLength = 0x014f - 0x0134;\n  const headerLocation = libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0134;\n  const headerArray = libWorker.wasmByteMemory.slice(headerLocation, headerLocation + headerLength);\n\n  return headerArray;\n}\n","// Returns the standard 0xFFFF gameboy memory\n// You will normally see in gameboy docs.\n// This is returned from the core, and represents\n// This wasmboy gameboy state\nexport function getGameBoyMemory(libWorker) {\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION,\n    libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION + libWorker.WASMBOY_INTERNAL_MEMORY_SIZE\n  );\n}\n","// Function to get the current palette data for\n// GBC in memory. This is needed to load state with\n// The correct colors\nexport function getPaletteMemory(libWorker) {\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_PALETTE_MEMORY_LOCATION,\n    libWorker.WASMBOY_PALETTE_MEMORY_LOCATION + libWorker.WASMBOY_PALETTE_MEMORY_SIZE\n  );\n}\n","// Returns the internal savestate of the wasmboy core,\n// To save all soft values held in memory\nexport function getInternalState(libWorker) {\n  libWorker.wasmInstance.exports.saveState();\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_INTERNAL_STATE_LOCATION,\n    libWorker.WASMBOY_INTERNAL_STATE_LOCATION + libWorker.WASMBOY_INTERNAL_STATE_SIZE\n  );\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Our memory getters\nimport { getCartridgeRom } from './rom';\nimport { getCartridgeRam } from './ram';\nimport { getCartridgeHeader } from './header';\nimport { getGameBoyMemory } from './gameboymemory';\nimport { getPaletteMemory } from './palettememory';\nimport { getInternalState } from './internalstate';\n\n// On message handler for when memory worker\n// posts to lib Worker\nexport function memoryWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.CLEAR_MEMORY: {\n      // Clear Wasm memory\n      // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n      for (let i = 0; i <= libWorker.wasmByteMemory.length; i++) {\n        libWorker.wasmByteMemory[i] = 0;\n      }\n\n      const wasmByteMemory = libWorker.wasmByteMemory.slice(0);\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY_DONE,\n            wasmByteMemory: wasmByteMemory.buffer\n          },\n          eventData.messageId\n        ),\n        [wasmByteMemory.buffer]\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_GAME_BYTES_LOCATION = libWorker.wasmInstance.exports.gameBytesLocation.valueOf();\n      (libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION = libWorker.wasmInstance.exports.gameRamBanksLocation.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_STATE_SIZE = libWorker.wasmInstance.exports.wasmBoyInternalStateSize.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_STATE_LOCATION = libWorker.wasmInstance.exports.wasmBoyInternalStateLocation.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_MEMORY_SIZE = libWorker.wasmInstance.exports.gameBoyInternalMemorySize.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION = libWorker.wasmInstance.exports.gameBoyInternalMemoryLocation.valueOf()),\n        (libWorker.WASMBOY_PALETTE_MEMORY_SIZE = libWorker.wasmInstance.exports.gameboyColorPaletteSize.valueOf()),\n        (libWorker.WASMBOY_PALETTE_MEMORY_LOCATION = libWorker.wasmInstance.exports.gameboyColorPaletteLocation.valueOf());\n\n      // Forward to our lib worker\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_GAME_BYTES_LOCATION: libWorker.wasmInstance.exports.gameBytesLocation.valueOf(),\n            WASMBOY_GAME_RAM_BANKS_LOCATION: libWorker.wasmInstance.exports.gameRamBanksLocation.valueOf(),\n            WASMBOY_INTERNAL_STATE_SIZE: libWorker.wasmInstance.exports.wasmBoyInternalStateSize.valueOf(),\n            WASMBOY_INTERNAL_STATE_LOCATION: libWorker.wasmInstance.exports.wasmBoyInternalStateLocation.valueOf(),\n            WASMBOY_INTERNAL_MEMORY_SIZE: libWorker.wasmInstance.exports.gameBoyInternalMemorySize.valueOf(),\n            WASMBOY_INTERNAL_MEMORY_LOCATION: libWorker.wasmInstance.exports.gameBoyInternalMemoryLocation.valueOf(),\n            WASMBOY_PALETTE_MEMORY_SIZE: libWorker.wasmInstance.exports.gameboyColorPaletteSize.valueOf(),\n            WASMBOY_PALETTE_MEMORY_LOCATION: libWorker.wasmInstance.exports.gameboyColorPaletteLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.SET_MEMORY: {\n      const memoryKeys = Object.keys(eventData.message);\n\n      if (memoryKeys.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n        libWorker.wasmByteMemory.set(new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]), libWorker.WASMBOY_GAME_BYTES_LOCATION);\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]),\n          libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]),\n          libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]),\n          libWorker.WASMBOY_PALETTE_MEMORY_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]),\n          libWorker.WASMBOY_INTERNAL_STATE_LOCATION\n        );\n        libWorker.wasmInstance.exports.loadState();\n      }\n\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.SET_MEMORY_DONE\n          },\n          eventData.messageId\n        )\n      );\n\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.GET_MEMORY: {\n      // Construct our data object\n      const responseMemory = {\n        type: WORKER_MESSAGE_TYPE.GET_MEMORY\n      };\n      const responseTransferrables = [];\n\n      const memoryTypes = eventData.message.memoryTypes;\n\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n        const cartridgeRom = getCartridgeRom(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_ROM] = cartridgeRom;\n        responseTransferrables.push(cartridgeRom);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n        const cartridgeRam = getCartridgeRam(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeRam;\n        responseTransferrables.push(cartridgeRam);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_HEADER)) {\n        const cartridgeHeader = getCartridgeHeader(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_HEADER] = cartridgeHeader;\n        responseTransferrables.push(cartridgeHeader);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n        const gameboyMemory = getGameBoyMemory(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.GAMEBOY_MEMORY] = gameboyMemory;\n        responseTransferrables.push(gameboyMemory);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n        const paletteMemory = getPaletteMemory(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.PALETTE_MEMORY] = paletteMemory;\n        responseTransferrables.push(paletteMemory);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n        libWorker.wasmInstance.exports.saveState();\n        const internalState = getInternalState(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.INTERNAL_STATE] = internalState;\n        responseTransferrables.push(internalState);\n      }\n\n      libWorker.memoryWorkerPort.postMessage(getSmartWorkerMessage(responseMemory, eventData.messageId), responseTransferrables);\n\n      return;\n    }\n  }\n}\n","var wasmModuleUrl = \"data:application/wasm;base64,\";\n\n// Import object for our core js wrapper\n// Log throttling for our core\n// The same log can't be output more than once every half second\nlet logRequest = {};\nconst wasmImportObject = {\n  env: {\n    log: (message, arg0, arg1, arg2, arg3, arg4, arg5) => {\n      // Grab our string\n      var len = new Uint32Array(wasmInstance.exports.memory.buffer, message, 1)[0];\n      var str = String.fromCharCode.apply(null, new Uint16Array(wasmInstance.exports.memory.buffer, message + 4, len));\n      if (arg0 !== -9999) str = str.replace('$0', arg0);\n      if (arg1 !== -9999) str = str.replace('$1', arg1);\n      if (arg2 !== -9999) str = str.replace('$2', arg2);\n      if (arg3 !== -9999) str = str.replace('$3', arg3);\n      if (arg4 !== -9999) str = str.replace('$4', arg4);\n      if (arg5 !== -9999) str = str.replace('$5', arg5);\n      console.log('[WasmBoy] ' + str);\n    },\n    hexLog: (arg0, arg1, arg2, arg3, arg4, arg5) => {\n      if (!logRequest[arg0]) {\n        // Grab our arguments, and log as hex\n        let logString = '[WasmBoy]';\n        if (arg0 !== -9999) logString += ` 0x${arg0.toString(16)} `;\n        if (arg1 !== -9999) logString += ` 0x${arg1.toString(16)} `;\n        if (arg2 !== -9999) logString += ` 0x${arg2.toString(16)} `;\n        if (arg3 !== -9999) logString += ` 0x${arg3.toString(16)} `;\n        if (arg4 !== -9999) logString += ` 0x${arg4.toString(16)} `;\n        if (arg5 !== -9999) logString += ` 0x${arg5.toString(16)} `; // Uncomment to unthrottle\n\n        console.log(logString); // Comment the lines below to disable throttle\n\n        /*logRequest[arg0] = true;\n        setTimeout(() => {\n          console.log(logString);\n          logRequest[arg0] = false;\n        }, logThrottleLength);*/\n      }\n    }\n  }\n};\n\n// JS Implementation of Instantiating the Wasm Build\n\nconst wasmBrowserInstantiate = async wasmModuleUrl$$1 => {\n  let response = undefined; // Safari does not support .instantiateStreaming()\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming\n\n  if (WebAssembly.instantiateStreaming) {\n    response = await WebAssembly.instantiateStreaming(fetch(wasmModuleUrl$$1), wasmImportObject);\n  } else {\n    const fetchAndInstantiateTask = async () => {\n      const wasmArrayBuffer = await fetch(wasmModuleUrl$$1).then(response => response.arrayBuffer());\n      return WebAssembly.instantiate(wasmArrayBuffer, wasmImportObject);\n    };\n\n    response = await fetchAndInstantiateTask();\n  }\n\n  return response;\n};\n\nconst readBase64Buffer = base64String => {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n};\n\nconst wasmNodeInstantiate = async wasmModuleUrl$$1 => {\n  const wasmBuffer = readBase64Buffer(wasmModuleUrl$$1);\n  return await WebAssembly.instantiate(wasmBuffer, wasmImportObject);\n}; // Function to instantiate our wasm and respond back\n\n\nconst getWasmBoyWasmCore = async isInBrowser => {\n  let response = undefined; // Allow forcing the browser mode, but also check manually\n\n  if (isInBrowser) {\n    response = await wasmBrowserInstantiate(wasmModuleUrl);\n  } else {\n    if (typeof window !== 'undefined' || typeof self !== 'undefined') {\n      response = await wasmBrowserInstantiate(wasmModuleUrl);\n    } else {\n      response = await wasmNodeInstantiate(wasmModuleUrl);\n    }\n  } // Set our wasmInstance and byte memory in the main thread\n\n\n  const instance = response.instance;\n  const byteMemory = new Uint8Array(instance.exports.memory.buffer);\n  return {\n    instance,\n    byteMemory,\n    type: 'Web Assembly'\n  };\n};\n\nexport default getWasmBoyWasmCore;\n","// Common Static functions\n\n// Function to get performance timestamp\n// This is to support node vs. Browser\nexport const getPerformanceTimestamp = () => {\n  if (typeof window !== 'undefined') {\n    return performance.now();\n  }\n  return Date.now();\n};\n","import { getPerformanceTimestamp } from '../../common/common';\n\n// Function to add a timestamp to keep track\n// of how fast we are running\nexport function addTimeStamp(libWorker) {\n  // Track our Fps\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  const currentHighResTime = getPerformanceTimestamp();\n  while (libWorker.fpsTimeStamps[0] < currentHighResTime - 1000) {\n    libWorker.fpsTimeStamps.shift();\n  }\n  libWorker.fpsTimeStamps.push(currentHighResTime);\n\n  libWorker.timeStampsUntilReady--;\n  if (libWorker.timeStampsUntilReady < 0) {\n    libWorker.timeStampsUntilReady = 0;\n  }\n\n  return currentHighResTime;\n}\n\n// Function to wait for a specified number,\n// of timestamps before setting the framerate\nexport function waitForTimeStampsForFrameRate(libWorker) {\n  if (libWorker.options.gameboyFrameRate <= 90) {\n    libWorker.timeStampsUntilReady = Math.floor(libWorker.options.gameboyFrameRate) * 1.25;\n  } else {\n    // Fast stretching should be hardcoded, that way it doesn't just say a large number for a long time\n    libWorker.timeStampsUntilReady = 120;\n  }\n}\n","// Start our update and render process\n// Can't time by raf, as raf is not garunteed to be 60fps\n// Need to run like a web game, where updates to the state of the core are done a 60 fps\n// but we can render whenever the user would actually see the changes browser side in a raf\n// https://developer.mozilla.org/en-US/docs/Games/Anatomy\n\n// Imports\nimport { postMessage } from '../../worker/workerapi';\nimport { getSmartWorkerMessage } from '../../worker/smartworker';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../worker/constants';\n\n// Memory\nimport { getCartridgeRam } from './memory/ram.js';\nimport { getGameBoyMemory } from './memory/gameboymemory.js';\nimport { getPaletteMemory } from './memory/palettememory.js';\nimport { getInternalState } from './memory/internalstate.js';\n\n// Timestamps\nimport { getPerformanceTimestamp } from '../../common/common';\nimport { addTimeStamp, waitForTimeStampsForFrameRate } from './timestamp';\n\n// Some variables to help with Audio Latency\n// 0.25 (quarter of a second), just felt right from testing :)\nconst MAX_AUDIO_LATENCY = 0.25;\n// Pass over samples once we have enough worth playing:\n// https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/\nconst AUDIO_BUFFER_SIZE = 1024;\n\n// FPS measuring\nlet currentHighResTime;\nlet currentFps;\n\n// interval to set timeout\nlet intervalRate;\n\nfunction scheduleNextUpdate(libWorker) {\n  // Get our high res time\n  const highResTime = getPerformanceTimestamp();\n\n  // Find how long it has been since the last timestamp\n  const timeSinceLastTimestamp = highResTime - libWorker.fpsTimeStamps[libWorker.fpsTimeStamps.length - 1];\n\n  // Get the next time we should update using our interval rate\n  let nextUpdateTime = intervalRate - timeSinceLastTimestamp;\n  if (nextUpdateTime < 0) {\n    nextUpdateTime = 0;\n  }\n\n  libWorker.updateId = setTimeout(() => {\n    update(libWorker);\n  }, Math.floor(nextUpdateTime));\n}\n\n// Function to run an update on the emulator itself\nexport function update(libWorker, passedIntervalRate) {\n  // Don't run if paused\n  if (libWorker.paused) {\n    return true;\n  }\n\n  // Set the intervalRate if it was passed\n  if (passedIntervalRate !== undefined) {\n    intervalRate = passedIntervalRate;\n  }\n\n  // Set a timestamp for this moment\n  // And make sure we are on track for FPS\n  currentFps = libWorker.getFPS();\n  if (currentFps > libWorker.options.gameboyFrameRate + 1) {\n    // Pop a timestamp off of the front\n    // This is to avoid infinite loop here on loadstate\n    libWorker.fpsTimeStamps.shift();\n    scheduleNextUpdate(libWorker);\n    return true;\n  } else {\n    currentHighResTime = addTimeStamp(libWorker);\n  }\n\n  // Check if we are outputting audio\n  const shouldCheckAudio = !libWorker.options.headless && !libWorker.pauseFpsThrottle && libWorker.options.isAudioEnabled;\n\n  // Execute\n  // Wrapped in promise to better handle audio slowdowns and things of that sort\n  const executePromise = new Promise(resolve => {\n    // Update (Execute a frame)\n    let response;\n    if (shouldCheckAudio) {\n      executeAndCheckAudio(libWorker, resolve);\n    } else {\n      response = libWorker.wasmInstance.exports.executeFrame();\n      resolve(response);\n    }\n  });\n\n  executePromise.then(response => {\n    // Handle our update() response\n    if (response >= 0) {\n      // Pass messages to everyone\n      postMessage(\n        getSmartWorkerMessage({\n          type: WORKER_MESSAGE_TYPE.UPDATED,\n          fps: currentFps\n        })\n      );\n\n      // Check if we have frameskip\n      let shouldSkipRenderingFrame = false;\n      if (libWorker.options.frameSkip && libWorker.options.frameSkip > 0) {\n        libWorker.frameSkipCounter++;\n\n        if (libWorker.frameSkipCounter <= libWorker.options.frameSkip) {\n          shouldSkipRenderingFrame = true;\n        } else {\n          libWorker.frameSkipCounter = 0;\n        }\n      }\n\n      // Transfer Graphics\n      if (!shouldSkipRenderingFrame) {\n        const graphicsFrameEndIndex = libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION + libWorker.WASMBOY_CURRENT_FRAME_SIZE;\n        const graphicsFrameBuffer = libWorker.wasmByteMemory.slice(libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION, graphicsFrameEndIndex)\n          .buffer;\n        //libWorker.graphicsWorkerPort.postMessage(graphicsFrameBuffer, [graphicsFrameBuffer]);\n        libWorker.graphicsWorkerPort.postMessage(\n          getSmartWorkerMessage({\n            type: WORKER_MESSAGE_TYPE.UPDATED,\n            graphicsFrameBuffer\n          }),\n          [graphicsFrameBuffer]\n        );\n      }\n\n      // Transfer Memory for things like save states\n      const memoryObject = {\n        type: WORKER_MESSAGE_TYPE.UPDATED\n      };\n      memoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = getCartridgeRam(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = getGameBoyMemory(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.PALETTE_MEMORY] = getPaletteMemory(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.INTERNAL_STATE] = getInternalState(libWorker).buffer;\n\n      // Check for any undefined values\n      Object.keys(memoryObject).forEach(key => {\n        if (memoryObject[key] === undefined) {\n          memoryObject[key] = new Uint8Array().buffer;\n        }\n      });\n\n      libWorker.memoryWorkerPort.postMessage(getSmartWorkerMessage(memoryObject), [\n        memoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n        memoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n        memoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n        memoryObject[MEMORY_TYPE.INTERNAL_STATE]\n      ]);\n\n      scheduleNextUpdate(libWorker);\n    } else {\n      postMessage(\n        getSmartWorkerMessage({\n          type: WORKER_MESSAGE_TYPE.CRASHED\n        })\n      );\n      libWorker.paused = true;\n    }\n  });\n}\n\n// If audio is enabled, sync by audio\n// Audio will pass us its forward latency, and if it is too far ahead,\n// Then we can wait a little bit to let audio catch up\n// 0.25 (quarter of a second), just felt right from testing :)\nfunction executeAndCheckAudio(libWorker, resolve) {\n  // Get our response\n  const response = libWorker.wasmInstance.exports.executeFrameAndCheckAudio(AUDIO_BUFFER_SIZE);\n\n  // If our response is not 1, simply resolve\n  if (response !== 1) {\n    resolve(response);\n  }\n\n  // Do some audio magic\n  if (response === 1) {\n    // Get our audioQueueIndex\n    const audioQueueIndex = libWorker.wasmInstance.exports.getAudioQueueIndex();\n\n    // Check if we are sending too much audio\n    const isTooMuchLatency = libWorker.currentAudioLatencyInSeconds > MAX_AUDIO_LATENCY;\n    const isRunningFullSpeed = currentFps >= libWorker.options.gameboyFrameRate;\n\n    if (isTooMuchLatency && isRunningFullSpeed) {\n      sendAudio(libWorker, audioQueueIndex);\n      // Wait, Set a timeout for when we would like to\n      // Continue executing. * 1000 for seconds -> milli\n      // Wait for half the difference, since it may take time to execute, and things\n      const latencyDifferenceInSeconds = libWorker.currentAudioLatencyInSeconds - MAX_AUDIO_LATENCY;\n      const latencyDifferenceInMilli = Math.floor(latencyDifferenceInSeconds * 1000);\n      setTimeout(() => {\n        waitForTimeStampsForFrameRate(libWorker);\n        executeAndCheckAudio(libWorker, resolve);\n      }, Math.floor(latencyDifferenceInMilli / 10));\n    } else {\n      sendAudio(libWorker, audioQueueIndex);\n      executeAndCheckAudio(libWorker, resolve);\n    }\n  }\n}\n\nfunction sendAudio(libWorker, audioQueueIndex) {\n  // Send out our audio\n  // audioQueueIndex * 2, because audio Queue index represents 1 sample,\n  // for left AND right channel. Therefore the end index is, twice\n  // of the audioQueueIndex\n  const audioBuffer = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_SOUND_OUTPUT_LOCATION,\n    libWorker.WASMBOY_SOUND_OUTPUT_LOCATION + audioQueueIndex * 2\n  ).buffer;\n  libWorker.audioWorkerPort.postMessage(\n    getSmartWorkerMessage({\n      type: WORKER_MESSAGE_TYPE.UPDATED,\n      audioBuffer,\n      numberOfSamples: audioQueueIndex,\n      fps: currentFps,\n      allowFastSpeedStretching: libWorker.options.gameboyFrameRate > 60\n    }),\n    [audioBuffer]\n  );\n  libWorker.wasmInstance.exports.resetAudioQueue();\n}\n","// Web worker for wasmboy lib\n// Will be used for running wasm, and controlling child workers.\n\n// Using transferables: https://stackoverflow.com/questions/16071211/using-transferable-objects-from-a-web-worker\n\nimport { postMessage, onMessage } from '../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from '../../worker/constants';\nimport { getEventData, isInBrowser } from '../../worker/util';\nimport { getSmartWorkerMessage } from '../../worker/smartworker';\n\n// Post message handlers\nimport { graphicsWorkerOnMessage } from './graphics/onmessage';\nimport { audioWorkerOnMessage } from './audio/onmessage';\nimport { controllerWorkerOnMessage } from './controller/onmessage';\nimport { memoryWorkerOnMessage } from './memory/onmessage';\n\n// Only One response will be used on build time\n// Using Babel plugin to filter imports\nimport getWasmBoyWasmCore from '../../../dist/core/getWasmBoyWasmCore.esm';\nimport getWasmBoyTsCore from '../../../dist/core/getWasmBoyTsCore.esm';\n\n// Update to run the core emulator\nimport { update } from './update';\n\n// Timestamps\nimport { waitForTimeStampsForFrameRate } from './timestamp';\n\n// Our stateful object\n// Representing our lib worker as a singleton\n// Not using normal classes because:\n// Class functions weren't working for some odd reason, and 'this' was getting wonky\nlet libWorker;\nlibWorker = {\n  // Wasmboy Module Ports\n  graphicsWorkerPort: undefined,\n  memoryWorkerPort: undefined,\n  controllerWorkerPort: undefined,\n  audioWorkerPort: undefined,\n\n  // Wasm Module Properties\n  wasmInstance: undefined,\n  wasmByteMemory: undefined,\n\n  // Lib options\n  options: undefined,\n\n  // Some Constants from the wasm module\n  WASMBOY_GAME_BYTES_LOCATION: 0,\n  WASMBOY_GAME_RAM_BANKS_LOCATION: 0,\n  WASMBOY_INTERNAL_STATE_SIZE: 0,\n  WASMBOY_INTERNAL_STATE_LOCATION: 0,\n  WASMBOY_INTERNAL_MEMORY_SIZE: 0,\n  WASMBOY_INTERNAL_MEMORY_LOCATION: 0,\n  WASMBOY_PALETTE_MEMORY_SIZE: 0,\n  WASMBOY_PALETTE_MEMORY_LOCATION: 0,\n  WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION: 0,\n  WASMBOY_CURRENT_FRAME_SIZE: 0,\n  WASMBOY_SOUND_OUTPUT_LOCATION: 0,\n\n  // Playing state\n  paused: true,\n\n  // Our update setTimeout ref\n  updateId: undefined,\n\n  // Our fps timestamps\n  timeStampsUntilReady: 0,\n  fpsTimeStamps: [],\n\n  // Frame Skipping\n  frameSkipCounter: 0,\n\n  // Audio latency\n  currentAudioLatencyInSeconds: 0,\n\n  // Message Handler from the main thread\n  messageHandler: event => {\n    // Handle our messages from the main thread\n    const eventData = getEventData(event);\n\n    switch (eventData.message.type) {\n      case WORKER_MESSAGE_TYPE.CONNECT: {\n        // Assign our worker ports on connect\n        if (eventData.message.workerId === WORKER_ID.GRAPHICS) {\n          libWorker.graphicsWorkerPort = eventData.message.ports[0];\n          onMessage(graphicsWorkerOnMessage.bind(undefined, libWorker), libWorker.graphicsWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.MEMORY) {\n          libWorker.memoryWorkerPort = eventData.message.ports[0];\n          onMessage(memoryWorkerOnMessage.bind(undefined, libWorker), libWorker.memoryWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.CONTROLLER) {\n          libWorker.controllerWorkerPort = eventData.message.ports[0];\n          onMessage(controllerWorkerOnMessage.bind(undefined, libWorker), libWorker.controllerWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.AUDIO) {\n          libWorker.audioWorkerPort = eventData.message.ports[0];\n          onMessage(audioWorkerOnMessage.bind(undefined, libWorker), libWorker.audioWorkerPort);\n        }\n\n        // Simply post back that we are ready\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.INSTANTIATE_WASM: {\n        const instantiateTask = async () => {\n          let response;\n          // Only One response will be used on build time\n          // Using Babel plugin to filter imports\n          response = await getWasmBoyWasmCore(isInBrowser);\n          response = await getWasmBoyTsCore();\n\n          libWorker.wasmInstance = response.instance;\n          libWorker.wasmByteMemory = response.byteMemory;\n          postMessage(\n            getSmartWorkerMessage(\n              {\n                type: response.type\n              },\n              eventData.messageId\n            )\n          );\n          return;\n        };\n        instantiateTask();\n        return;\n      }\n      case WORKER_MESSAGE_TYPE.CONFIG: {\n        // Config will come in as an array, pass in values using apply\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n        const config = eventData.message.config;\n        libWorker.wasmInstance.exports.config.apply(libWorker, config);\n        libWorker.options = eventData.message.options;\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE: {\n        // Reset the audio queue index to stop weird pauses when trying to load a game\n        libWorker.wasmInstance.exports.resetAudioQueue();\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.PLAY: {\n        if (!libWorker.paused || !libWorker.wasmInstance || !libWorker.wasmByteMemory) {\n          postMessage(getSmartWorkerMessage({ error: true }, eventData.messageId));\n          return;\n        }\n\n        // Re-initialize some of our values\n        libWorker.paused = false;\n        libWorker.fpsTimeStamps = [];\n        libWorker.frameSkipCounter = 0;\n        libWorker.currentAudioLatencyInSeconds = 0;\n\n        // 1000 / 60 = 60fps\n        // Add one to the framerate, as we would rather be slightly faster,\n        // than slightly slower\n        const intervalRate = 1000 / libWorker.options.gameboyFrameRate;\n        update(libWorker, intervalRate);\n\n        waitForTimeStampsForFrameRate(libWorker);\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.PAUSE: {\n        // Call our update\n        libWorker.paused = true;\n        if (libWorker.updateId) {\n          clearTimeout(libWorker.updateId);\n          libWorker.updateId = undefined;\n        }\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      // Debugging Messages\n      case WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT: {\n        let response;\n        if (eventData.message.parameters) {\n          response = libWorker.wasmInstance.exports[eventData.message.export].apply(undefined, eventData.message.parameters);\n        } else {\n          response = libWorker.wasmInstance.exports[eventData.message.export]();\n        }\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION: {\n        let start = 0;\n        let end = libWorker.wasmByteMemory.length;\n        if (eventData.message.start) {\n          start = eventData.message.start;\n        }\n        if (eventData.message.end) {\n          end = eventData.message.end;\n        }\n\n        const response = libWorker.wasmByteMemory.slice(start, end).buffer;\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n              response: response\n            },\n            eventData.messageId\n          ),\n          [response]\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT: {\n        const response = libWorker.wasmInstance.exports[eventData.message.constant].valueOf();\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      default: {\n        //handle other messages from main\n        console.log(eventData);\n      }\n    }\n  },\n\n  // Function to return the current FPS\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  getFPS: () => {\n    if (libWorker.timeStampsUntilReady > 0) {\n      return libWorker.options.gameboyFrameRate;\n    } else if (libWorker.fpsTimeStamps) {\n      return libWorker.fpsTimeStamps.length;\n    }\n\n    return 0;\n  }\n};\n\n// Assign the worker a message handler\nonMessage(libWorker.messageHandler);\n"],"names":["getEventData","event","data","isInBrowser","self","parentPort","require","postMessage","message","transferArray","onMessage","callback","port","console","error","onmessage","on","WORKER_MESSAGE_TYPE","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","WORKER_ID","LIB","GRAPHICS","MEMORY","CONTROLLER","AUDIO","MEMORY_TYPE","CARTRIDGE_RAM","CARTRIDGE_ROM","CARTRIDGE_HEADER","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","idCounter","generateId","randomId","Math","random","toString","replace","substr","id","getSmartWorkerMessage","messageId","workerId","graphicsWorkerOnMessage","libWorker","eventData","type","WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION","wasmInstance","exports","frameInProgressVideoOutputLocation","valueOf","WASMBOY_CURRENT_FRAME_SIZE","FRAME_SIZE","graphicsWorkerPort","audioWorkerOnMessage","WASMBOY_SOUND_OUTPUT_LOCATION","soundOutputLocation","audioWorkerPort","currentAudioLatencyInSeconds","latency","controllerWorkerOnMessage","setJoypadStateParamsAsArray","setJoypadState","apply","getCartridgeRom","wasmByteMemory","Uint8Array","cartridgeType","WASMBOY_GAME_BYTES_LOCATION","romSize","undefined","cartridgeRom","slice","getCartridgeRam","ramSize","cartridgeRam","WASMBOY_GAME_RAM_BANKS_LOCATION","getCartridgeHeader","headerLength","headerLocation","headerArray","getGameBoyMemory","WASMBOY_INTERNAL_MEMORY_LOCATION","WASMBOY_INTERNAL_MEMORY_SIZE","getPaletteMemory","WASMBOY_PALETTE_MEMORY_LOCATION","WASMBOY_PALETTE_MEMORY_SIZE","getInternalState","saveState","WASMBOY_INTERNAL_STATE_LOCATION","WASMBOY_INTERNAL_STATE_SIZE","memoryWorkerOnMessage","i","length","memoryWorkerPort","buffer","gameBytesLocation","gameRamBanksLocation","wasmBoyInternalStateSize","wasmBoyInternalStateLocation","gameBoyInternalMemorySize","gameBoyInternalMemoryLocation","gameboyColorPaletteSize","gameboyColorPaletteLocation","memoryKeys","Object","keys","includes","set","loadState","responseMemory","responseTransferrables","memoryTypes","push","cartridgeHeader","gameboyMemory","paletteMemory","internalState","wasmModuleUrl","logRequest","wasmImportObject","env","log","arg0","arg1","arg2","arg3","arg4","arg5","len","Uint32Array","memory","str","String","fromCharCode","Uint16Array","hexLog","logString","wasmBrowserInstantiate","wasmModuleUrl$$1","response","WebAssembly","instantiateStreaming","fetch","fetchAndInstantiateTask","wasmArrayBuffer","then","arrayBuffer","instantiate","readBase64Buffer","base64String","Buffer","from","split","wasmNodeInstantiate","wasmBuffer","getWasmBoyWasmCore","window","instance","byteMemory","getPerformanceTimestamp","performance","now","Date","addTimeStamp","currentHighResTime","fpsTimeStamps","shift","timeStampsUntilReady","waitForTimeStampsForFrameRate","options","gameboyFrameRate","floor","MAX_AUDIO_LATENCY","AUDIO_BUFFER_SIZE","currentFps","intervalRate","scheduleNextUpdate","highResTime","timeSinceLastTimestamp","nextUpdateTime","updateId","setTimeout","update","passedIntervalRate","paused","getFPS","shouldCheckAudio","headless","pauseFpsThrottle","isAudioEnabled","executePromise","Promise","resolve","executeAndCheckAudio","executeFrame","fps","shouldSkipRenderingFrame","frameSkip","frameSkipCounter","graphicsFrameEndIndex","graphicsFrameBuffer","memoryObject","forEach","key","executeFrameAndCheckAudio","audioQueueIndex","getAudioQueueIndex","isTooMuchLatency","isRunningFullSpeed","sendAudio","latencyDifferenceInSeconds","latencyDifferenceInMilli","audioBuffer","numberOfSamples","allowFastSpeedStretching","resetAudioQueue","controllerWorkerPort","messageHandler","ports","bind","instantiateTask","config","clearTimeout","parameters","export","start","end","constant"],"mappings":"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"}