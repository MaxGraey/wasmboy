'use strict';var WasmBoy=function(ka){function E(a){return a.data?a.data:a}function fa(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}return a}function W(a,
b){return b={exports:{}},a(b,b.exports),b.exports}function la(){let a=Object.assign({},wa);a.wasmboyMemory.wasmBoyInternalState=this.internalState;a.wasmboyMemory.wasmBoyPaletteMemory=this.paletteMemory;a.wasmboyMemory.gameBoyMemory=this.gameboyMemory;a.wasmboyMemory.cartridgeRam=this.cartridgeRam;a.date=Date.now();a.isAuto=!1;this.saveStateCallback&&this.saveStateCallback(a);return a}function X(){if(!this.internalState)return null;const a=la.bind(this)(),b=Object.keys(a.wasmboyMemory);for(let c=
0;c<b.length;c++)a.wasmboyMemory[b[c]]=Array.prototype.slice.call(a.wasmboyMemory[b[c]]);a.isAuto=!0;localStorage.setItem(this.WASMBOY_UNLOAD_STORAGE,JSON.stringify({header:Array.prototype.slice.call(this.cartridgeHeader),cartridgeRam:Array.prototype.slice.call(this.cartridgeRam),saveState:a}));return null}function xa(){return(async()=>{var a=localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);if(a){var b=JSON.parse(a);localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);a=new Uint8Array(b.header);
const c=new Uint8Array(b.cartridgeRam);if(b=b.saveState){const a=Object.keys(b.wasmboyMemory);for(let c=0;c<a.length;c++)b.wasmboyMemory[a[c]]=new Uint8Array(b.wasmboyMemory[a[c]])}await this.saveCartridgeRam(a,c);await this.saveState(a,b)}})()}function ya(){window.addEventListener("beforeunload",()=>{X.bind(this)()},!1);window.addEventListener("unload",()=>{X.bind(this)()},!1);window.addEventListener("pagehide",()=>{X.bind(this)()},!1);document.addEventListener("visibilitychange",()=>{"hidden"===
document.visibilityState&&X.bind(this)()});return xa.bind(this)()}function ha(){var a=function(){return Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10)};return(""+a()+a()).slice()}function u(a){var b=Object.assign({},za);b.ID=ha();b.KEY_CODE=a;return b}function B(a,b,c){var d=Object.assign({},ma);d.ID=ha();d.JOYSTICK=Object.assign({},ma.JOYSTICK);a||0===a?d.BUTTON_ID=a:void 0!==b&&void 0!==c&&(d.JOYSTICK.AXIS_ID=b,d.JOYSTICK.IS_POSITIVE=c);return d}function Aa(a,b,c,d){var e=Object.assign({},
Ba);e.ID=ha();e.ELEMENT=a;e.TYPE=b;e.DIRECTION=c;e.EVENT_HANDLER=d;a=e.ELEMENT.getBoundingClientRect();e.BOUNDING_RECT=a;a=function(a){e.EVENT_HANDLER&&e.EVENT_HANDLER(a)};e.ELEMENT.addEventListener("touchstart",a);e.ELEMENT.addEventListener("touchmove",a);e.ELEMENT.addEventListener("touchend",a);e.ELEMENT.addEventListener("mousedown",a);e.ELEMENT.addEventListener("mouseup",a);return e}function Ca(a,b,c){b||(b=ia());return{workerId:c,messageId:b,message:a}}function Da(a,b){this.loadedAndStarted=this.ready=
!1;const c=async()=>{const c=[Ea(a,b),this._instantiateWorkers()];!this.options.headless&&D.getLoadedCartridgeMemoryState().RAM&&c.push(D.saveCartridgeRam());let d;await Promise.all(c).then((a)=>{d=a[0]});this.coreType=(await this.worker.postMessage({type:w.INSTANTIATE_WASM})).message.type;return d},d=async(a)=>{await D.clearMemory();await D.loadCartridgeRom(a);this.loadedROM=a;await this.worker.postMessage({type:w.CONFIG,config:[0,this.options.isGbcEnabled?1:0,this.options.audioBatchProcessing?1:
0,this.options.graphicsBatchProcessing?1:0,this.options.timersBatchProcessing?1:0,this.options.graphicsDisableScanlineRendering?1:0,this.options.audioAccumulateSamples?1:0,this.options.tileRendering?1:0,this.options.tileCaching?1:0],options:{gameboyFrameRate:this.options.gameboyFrameRate,headless:this.options.headless,isAudioEnabled:this.options.isAudioEnabled,frameSkip:this.options.frameSkip}})};return(async()=>{await this.pause();let a=await c();this.options.headless?(await D.initialize(this.options.headless,
this.options.saveStateCallback),await d(a)):(await Promise.all([Y.initialize(this.canvasElement,this.options.updateGraphicsCallback),K.initialize(this.options.updateAudioCallback),F.initialize(),D.initialize(this.options.headless,this.options.saveStateCallback)]),await d(a),await D.loadCartridgeRam());this.ready=!0;if(this.options.onReady)this.options.onReady()})()}function na(){if(this.paused)return!0;let a=!1;this.frameSkip&&0<this.frameSkip&&(this.frameSkipCounter++,this.frameSkipCounter<this.frameSkip?
a=!0:this.frameSkipCounter=0);a||Y.renderFrame();F.updateController();this.renderId=M(()=>{na.call(this)})}function T(a,b,c){for(var d=0;d<c.length;d++)a.setUint8(b+d,c.charCodeAt(d))}function Fa(a){a=E(a);if(a.message)switch(a.message.type){case w.UPDATED:this.fps=a.message.fps;break;case w.CRASHED:(async()=>{await this.pause();console.log("Wasmboy Crashed!");let a=await G("getProgramCounter");var c=await oa("GAMEBOY_INTERNAL_MEMORY_LOCATION");c=await pa(c+a,c+a+1);console.log(`Program Counter: 0x${a.toString(16)}`);
console.log(`Opcode: 0x${c[0].toString(16)}`)})()}}const w={CONNECT:"CONNECT",INSTANTIATE_WASM:"INSTANTIATE_WASM",CLEAR_MEMORY:"CLEAR_MEMORY",CLEAR_MEMORY_DONE:"CLEAR_MEMORY_DONE",GET_MEMORY:"GET_MEMORY",SET_MEMORY:"SET_MEMORY",SET_MEMORY_DONE:"SET_MEMORY_DONE",GET_CONSTANTS:"GET_CONSTANTS",GET_CONSTANTS_DONE:"GET_CONSTANTS_DONE",CONFIG:"CONFIG",RESET_AUDIO_QUEUE:"RESET_AUDIO_QUEUE",PLAY:"PLAY",PAUSE:"PAUSE",UPDATED:"UPDATED",CRASHED:"CRASHED",SET_JOYPAD_STATE:"SET_JOYPAD_STATE",AUDIO_LATENCY:"AUDIO_LATENCY",
RUN_WASM_EXPORT:"RUN_WASM_EXPORT",GET_WASM_MEMORY_SECTION:"GET_WASM_MEMORY_SECTION",GET_WASM_CONSTANT:"GET_WASM_CONSTANT"};class Ga{constructor(){this.imageDataArray=this.canvasImageData=this.canvasContext=this.canvasElement=this.frameQueueRenderPromise=this.frameQueue=this.updateGraphicsCallback=this.worker=void 0;this.imageDataArrayChanged=!1}initialize(a,b){this.updateGraphicsCallback=b;this.frameQueue=[];return(async()=>{this.canvasElement=a;this.canvasContext=this.canvasElement.getContext("2d");
this.canvasElement.width=160;this.canvasElement.height=144;this.canvasImageData=this.canvasContext.createImageData(160,144);this.canvasElement.style="\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      ";this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);
this.worker&&await this.worker.postMessage({type:w.GET_CONSTANTS})})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=E(a);switch(a.message.type){case w.UPDATED:this.imageDataArray=new Uint8ClampedArray(a.message.imageDataArrayBuffer),this.imageDataArrayChanged=!0}})}renderFrame(){if(this.imageDataArrayChanged){this.imageDataArrayChanged=!1;this.updateGraphicsCallback&&this.updateGraphicsCallback(this.imageDataArray);for(let a=0;a<this.imageDataArray.length;a++)this.canvasImageData.data[a]=
this.imageDataArray[a];this.canvasContext.clearRect(0,0,160,144);this.canvasContext.putImageData(this.canvasImageData,0,0)}}}const Y=new Ga;class Ha{constructor(){this.audioPlaytime=this.audioBuffer=this.audioContext=this.updateAudioCallback=this.worker=void 0;this.audioSources=[];this.averageTimeStretchFps=[];this.WASMBOY_SOUND_OUTPUT_LOCATION=0}initialize(a){return(async()=>{this.updateAudioCallback=a;this.averageTimeStretchFps=[];0<this.audioSources.length&&this.cancelAllAudio();this.audioSources=
[];this._createAudioContextIfNone();return this.worker.postMessage({type:w.GET_CONSTANTS})})()}resumeAudioContext(){this._createAudioContextIfNone();"suspended"===this.audioContext.state&&(this.audioContext.resume(),this.audioPlaytime=this.audioContext.currentTime)}resetTimeStretch(){this.averageTimeStretchFps=[]}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=E(a);switch(a.message.type){case w.UPDATED:this.playAudio(a.message.fps,a.message.allowFastSpeedStretching,a.message.numberOfSamples,
a.message.leftChannel,a.message.rightChannel),a=0,this.audioContext.currentTime&&0<this.audioContext.currentTime&&(a=this.audioPlaytime-this.audioContext.currentTime),this.worker.postMessage({type:w.AUDIO_LATENCY,latency:a})}})}playAudio(a,b,c,d,e){let f=a||60;const g=Math.abs(a-this.averageTimeStretchFps[this.averageTimeStretchFps.length-1]);g&&15<=g&&this.resetTimeStretch();this.averageTimeStretchFps.push(a);171<this.averageTimeStretchFps.length&&this.averageTimeStretchFps.shift();57<=this.averageTimeStretchFps.length&&
(f=this.averageTimeStretchFps.reduce((a,b)=>a+b),f=Math.floor(f/this.averageTimeStretchFps.length));a=1;if(57>f||b)a*=f/60,0>=a&&(a=.01);this.audioBuffer=this.audioContext.createBuffer(2,c,48E3);this.audioBuffer.copyToChannel?(this.audioBuffer.copyToChannel(new Float32Array(d),0,0),this.audioBuffer.copyToChannel(new Float32Array(e),1,0)):(this.audioBuffer.getChannelData(0).set(new Float32Array(d)),this.audioBuffer.getChannelData(1).set(new Float32Array(e)));b=this.audioContext.createBufferSource();
b.buffer=this.audioBuffer;b.playbackRate.setValueAtTime(a,this.audioContext.currentTime);d=b;this.updateAudioCallback&&(e=this.updateAudioCallback(this.audioContext,b))&&(d=e);d.connect(this.audioContext.destination);d=this.audioContext.currentTime;e=d+.1;this.audioPlaytime=this.audioPlaytime||e;this.audioPlaytime<d&&(this.cancelAllAudio(),this.audioPlaytime=e);b.start(this.audioPlaytime);for(this.audioPlaytime+=c/(48E3*a);this.audioSources[this.audioSources.length-1]&&this.audioSources[this.audioSources.length-
1].playtime<=this.audioPlaytime;)this.audioSources[this.audioSources.length-1].source.stop(),this.audioSources.pop();this.audioSources.push({source:b,playTime:this.audioPlaytime,fps:f});setTimeout(()=>{this.audioSources.shift()},this.audioPlaytime-this.audioContext.currentTime+500)}cancelAllAudio(a){if(this.audioContext){for(let b=0;b<this.audioSources.length;b++)(a||this.audioSources[b].playTime>this.audioPlaytime)&&this.audioSources[b].source.stop();this.audioPlaytime=this.audioContext.currentTime+
.1}}_createAudioContextIfNone(){this.audioContext||(this.audioContext=new (window.AudioContext||window.webkitAudioContext))}}const K=new Ha;var qa="undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{},Ia=W(function(a){(function(){function b(a){return new Promise(function(b,c){a.onsuccess=function(){b(a.result)};a.onerror=function(){c(a.error)}})}function c(a,c,d){var e,f=new Promise(function(f,g){e=a[c].apply(a,d);b(e).then(f,g)});f.request=e;return f}
function d(a,b,d){var e=c(a,b,d);return e.then(function(a){if(a)return new h(a,e.request)})}function e(a,b,c){c.forEach(function(c){Object.defineProperty(a.prototype,c,{get:function(){return this[b][c]},set:function(a){this[b][c]=a}})})}function f(a,b,d,e){e.forEach(function(e){e in d.prototype&&(a.prototype[e]=function(){return c(this[b],e,arguments)})})}function g(a,b,c,d){d.forEach(function(d){d in c.prototype&&(a.prototype[d]=function(){return this[b][d].apply(this[b],arguments)})})}function m(a,
b,c,e){e.forEach(function(e){e in c.prototype&&(a.prototype[e]=function(){return d(this[b],e,arguments)})})}function l(a){this._index=a}function h(a,b){this._cursor=a;this._request=b}function I(a){this._store=a}function n(a){this._tx=a;this.complete=new Promise(function(b,c){a.oncomplete=function(){b()};a.onerror=function(){c(a.error)};a.onabort=function(){c(a.error)}})}function y(a,b,c){this._db=a;this.oldVersion=b;this.transaction=new n(c)}function z(a){this._db=a}e(l,"_index",["name","keyPath",
"multiEntry","unique"]);f(l,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]);m(l,"_index",IDBIndex,["openCursor","openKeyCursor"]);e(h,"_cursor",["direction","key","primaryKey","value"]);f(h,"_cursor",IDBCursor,["update","delete"]);["advance","continue","continuePrimaryKey"].forEach(function(a){a in IDBCursor.prototype&&(h.prototype[a]=function(){var c=this,d=arguments;return Promise.resolve().then(function(){c._cursor[a].apply(c._cursor,d);return b(c._request).then(function(a){if(a)return new h(a,
c._request)})})})});I.prototype.createIndex=function(){return new l(this._store.createIndex.apply(this._store,arguments))};I.prototype.index=function(){return new l(this._store.index.apply(this._store,arguments))};e(I,"_store",["name","keyPath","indexNames","autoIncrement"]);f(I,"_store",IDBObjectStore,"put add delete clear get getAll getKey getAllKeys count".split(" "));m(I,"_store",IDBObjectStore,["openCursor","openKeyCursor"]);g(I,"_store",IDBObjectStore,["deleteIndex"]);n.prototype.objectStore=
function(){return new I(this._tx.objectStore.apply(this._tx,arguments))};e(n,"_tx",["objectStoreNames","mode"]);g(n,"_tx",IDBTransaction,["abort"]);y.prototype.createObjectStore=function(){return new I(this._db.createObjectStore.apply(this._db,arguments))};e(y,"_db",["name","version","objectStoreNames"]);g(y,"_db",IDBDatabase,["deleteObjectStore","close"]);z.prototype.transaction=function(){return new n(this._db.transaction.apply(this._db,arguments))};e(z,"_db",["name","version","objectStoreNames"]);
g(z,"_db",IDBDatabase,["close"]);["openCursor","openKeyCursor"].forEach(function(a){[I,l].forEach(function(b){a in b.prototype&&(b.prototype[a.replace("open","iterate")]=function(){var b=Array.prototype.slice.call(arguments),c=b[b.length-1],d=this._store||this._index,e=d[a].apply(d,b.slice(0,-1));e.onsuccess=function(){c(e.result)}})})});[l,I].forEach(function(a){a.prototype.getAll||(a.prototype.getAll=function(a,b){var c=this,d=[];return new Promise(function(e){c.iterateCursor(a,function(a){a?(d.push(a.value),
void 0!==b&&d.length==b?e(d):a.continue()):e(d)})})})});a.exports={open:function(a,b,d){a=c(indexedDB,"open",[a,b]);var e=a.request;e&&(e.onupgradeneeded=function(a){d&&d(new y(e.result,a.oldVersion,e.transaction))});return a.then(function(a){return new z(a)})},delete:function(a){return c(indexedDB,"deleteDatabase",[a])}};a.exports.default=a.exports})()}),H=W(function(a){a.exports="undefined"!=typeof indexedDB?Ia:{open:function(){return Promise.reject("IDB requires a browser environment")},delete:function(){return Promise.reject("IDB requires a browser environment")}}}),
N=!1;if("undefined"!==typeof window){const a=H.open("wasmboy",1,(a)=>{a.createObjectStore("keyval")});N={get(b){return a.then((a)=>a.transaction("keyval").objectStore("keyval").get(b))},set(b,c){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").put(c,b);return a.complete})},delete(b){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").delete(b);return a.complete})},clear(){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").clear();
return a.complete})},keys(){return a.then((a)=>{a=a.transaction("keyval");const b=[],d=a.objectStore("keyval");(d.iterateKeyCursor||d.iterateCursor).call(d,(a)=>{a&&(b.push(a.key),a.continue())});return a.complete.then(()=>b)})}}}const O=N,wa={wasmboyMemory:{wasmBoyInternalState:[],wasmBoyPaletteMemory:[],gameBoyMemory:[],cartridgeRam:[]},date:void 0,isAuto:void 0};class Ja{constructor(){this.saveStateCallback=this.worker=void 0;this.loadedCartridgeMemoryState={ROM:!1,RAM:!1};this.internalState=this.paletteMemory=
this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0;this.WASMBOY_UNLOAD_STORAGE="WASMBOY_UNLOAD_STORAGE";this.WASMBOY_PALETTE_MEMORY_LOCATION=this.WASMBOY_PALETTE_MEMORY_SIZE=this.WASMBOY_INTERNAL_MEMORY_LOCATION=this.WASMBOY_INTERNAL_MEMORY_SIZE=this.WASMBOY_INTERNAL_STATE_LOCATION=this.WASMBOY_INTERNAL_STATE_SIZE=this.WASMBOY_GAME_RAM_BANKS_LOCATION=this.WASMBOY_GAME_BYTES_LOCATION=0}initialize(a,b){return(async()=>{a?(this.saveStateCallback=b,await this._initializeConstants()):
(this.saveStateCallback=b,await this._initializeConstants(),await ya.call(this))})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=E(a);switch(a.message.type){case w.UPDATED:{const b=Object.keys(a.message);delete b.type;b.includes("CARTRIDGE_ROM")&&(this.cartridgeRom=new Uint8Array(a.message.CARTRIDGE_ROM));b.includes("CARTRIDGE_RAM")&&(this.cartridgeRam=new Uint8Array(a.message.CARTRIDGE_RAM));b.includes("GAMEBOY_MEMORY")&&(this.gameboyMemory=new Uint8Array(a.message.GAMEBOY_MEMORY));
b.includes("PALETTE_MEMORY")&&(this.paletteMemory=new Uint8Array(a.message.PALETTE_MEMORY));b.includes("INTERNAL_STATE")&&(this.internalState=new Uint8Array(a.message.INTERNAL_STATE))}}})}getLoadedCartridgeMemoryState(){return this.loadedCartridgeMemoryState}clearMemory(){return this.worker.postMessage({type:w.CLEAR_MEMORY}).then((a)=>{this.loadedCartridgeMemoryState.ROM=!1;this.loadedCartridgeMemoryState.RAM=!1;this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=
this.cartridgeRom=void 0})}loadCartridgeRom(a){return(async()=>{const b={};b.CARTRIDGE_ROM=a.buffer;await this.worker.postMessage(fa({type:w.SET_MEMORY},b)).then((a)=>{this.loadedCartridgeMemoryState.ROM=!0});await this.worker.postMessage({type:w.GET_MEMORY,memoryTypes:["CARTRIDGE_ROM","CARTRIDGE_HEADER"]}).then((a)=>{a=E(a);this.cartridgeRom=new Uint8Array(a.message.CARTRIDGE_ROM);this.cartridgeHeader=new Uint8Array(a.message.CARTRIDGE_HEADER)})})()}saveCartridgeRam(a,b){return(async()=>{let c,d;
a&&b?(c=a,d=b):(c=this.cartridgeHeader,d=this.cartridgeRam);if(!c||!d)throw Error("Error parsing the cartridgeRam or cartridge header");let e=await O.get(c);e||(e={});e.cartridgeRam=d;await O.set(c,e)})()}loadCartridgeRam(){return(async()=>{var a=this.cartridgeHeader;if(!a)throw Error("Error parsing the cartridge header");const b=await O.get(a);b&&b.cartridgeRam&&(a={},a.CARTRIDGE_RAM=b.cartridgeRam.buffer,await this.worker.postMessage(fa({type:w.SET_MEMORY},a)).then((a)=>{this.loadedCartridgeMemoryState.RAM=
!0;this.cartridgeRam=b.cartridgeRam}))})()}saveState(a,b){return(async()=>{let c,d;a&&b?(c=b,d=a):(c=la.call(this),d=this.cartridgeHeader);if(!d)throw Error("Error parsing the cartridge header");let e=await O.get(d);e||(e={});e.saveStates||(e.saveStates=[]);e.saveStates.push(c);await O.set(d,e);return c})()}loadState(a){return(async()=>{var b=this.cartridgeHeader;if(!b)throw Error("Error getting the cartridge header");if(!a){b=await O.get(b);if(!b||!b.saveStates)throw Error("No Save State passed, and no cartridge object found");
saverState=b.saveStates[0]}b={};b.CARTRIDGE_RAM=a.wasmboyMemory.cartridgeRam.buffer;b.GAMEBOY_MEMORY=a.wasmboyMemory.gameBoyMemory.buffer;b.PALETTE_MEMORY=a.wasmboyMemory.wasmBoyPaletteMemory.buffer;b.INTERNAL_STATE=a.wasmboyMemory.wasmBoyInternalState.buffer;await this.worker.postMessage(fa({type:w.SET_MEMORY},b),[b.CARTRIDGE_RAM,b.GAMEBOY_MEMORY,b.PALETTE_MEMORY,b.INTERNAL_STATE]);await this.worker.postMessage({type:w.GET_MEMORY,memoryTypes:["CARTRIDGE_RAM","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE"]}).then((a)=>
{a=E(a);this.cartridgeRam=a.message.CARTRIDGE_RAM;this.gameboyMemory=a.message.GAMEBOY_MEMORY;this.paletteMemory=a.message.PALETTE_MEMORY;this.internalState=a.message.INTERNAL_STATE})})()}getCartridgeObject(){return O.get(this.cartridgeHeader)}getCartridgeInfo(){return this.loadedCartridgeMemoryState.ROM?(async()=>{const a={};a.header=this.cartridgeHeader;a.ROM=this.cartridgeRom;a.RAM=this.cartridgeRam;a.nintendoLogo=a.ROM.slice(260,308);a.title=a.ROM.slice(308,324);a.titleAsString=String.fromCharCode.apply(null,
a.title);a.manufacturerCode=a.ROM.slice(319,323);a.CGBFlag=a.ROM[323];a.newLicenseeCode=a.ROM.slice(324,326);a.SGBFlag=a.ROM[326];a.cartridgeType=a.ROM[327];a.ROMSize=a.ROM[328];a.RAMSize=a.ROM[329];a.destinationCode=a.ROM[330];a.oldLicenseeCode=a.ROM[331];a.maskROMVersionNumber=a.ROM[332];a.headerChecksum=a.ROM[333];a.globalChecksum=a.ROM.slice(334,336);return a})():Promise.reject("No ROM has been loaded")}_initializeConstants(){return this.worker.postMessage({type:w.GET_CONSTANTS}).then((a)=>{const b=
E(a);Object.keys(this).forEach((a)=>{void 0!==b.message[a]&&(this[a]=b.message[a])})})}}const D=new Ja;var za={ID:void 0,ACTIVE:!1,KEY_CODE:void 0},ma={ID:void 0,ACTIVE:!1,BUTTON_ID:void 0,JOYSTICK:{AXIS_ID:void 0,IS_POSITIVE:void 0}},Ba={ID:void 0,ACTIVE:!1,ELEMENT:void 0,TYPE:void 0,DIRECTION:void 0,EVENT_HANDLER:void 0,BOUNDING_RECT:void 0},ra={UP:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},RIGHT:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},DOWN:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},LEFT:{KEYBOARD:[],GAMEPAD:[],
TOUCHPAD:[]},A:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},B:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},SELECT:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},START:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]}},n=Object.assign({},ra);n.UP.KEYBOARD.push(u(38));n.UP.KEYBOARD.push(u(87));n.UP.KEYBOARD.push(u(104));n.UP.GAMEPAD.push(B(12));n.UP.GAMEPAD.push(B(!1,1,!1));n.UP.GAMEPAD.push(B(!1,3,!1));n.RIGHT.KEYBOARD.push(u(39));n.RIGHT.KEYBOARD.push(u(68));n.RIGHT.KEYBOARD.push(u(102));n.RIGHT.GAMEPAD.push(B(15));n.RIGHT.GAMEPAD.push(B(!1,
0,!0));n.RIGHT.GAMEPAD.push(B(!1,2,!0));n.DOWN.KEYBOARD.push(u(40));n.DOWN.KEYBOARD.push(u(83));n.DOWN.KEYBOARD.push(u(101));n.DOWN.KEYBOARD.push(u(98));n.DOWN.GAMEPAD.push(B(13));n.DOWN.GAMEPAD.push(B(!1,1,!0));n.DOWN.GAMEPAD.push(B(!1,3,!0));n.LEFT.KEYBOARD.push(u(37));n.LEFT.KEYBOARD.push(u(65));n.LEFT.KEYBOARD.push(u(100));n.LEFT.GAMEPAD.push(B(14));n.LEFT.GAMEPAD.push(B(!1,0,!1));n.LEFT.GAMEPAD.push(B(!1,2,!1));n.A.KEYBOARD.push(u(88));n.A.KEYBOARD.push(u(186));n.A.KEYBOARD.push(u(103));n.A.GAMEPAD.push(B(0));
n.A.GAMEPAD.push(B(1));n.B.KEYBOARD.push(u(90));n.B.KEYBOARD.push(u(27));n.B.KEYBOARD.push(u(222));n.B.KEYBOARD.push(u(8));n.B.KEYBOARD.push(u(105));n.B.GAMEPAD.push(B(2));n.B.GAMEPAD.push(B(3));n.START.KEYBOARD.push(u(13));n.START.KEYBOARD.push(u(32));n.START.KEYBOARD.push(u(99));n.START.GAMEPAD.push(B(9));n.SELECT.KEYBOARD.push(u(16));n.SELECT.KEYBOARD.push(u(9));n.SELECT.KEYBOARD.push(u(220));n.SELECT.KEYBOARD.push(u(97));n.SELECT.GAMEPAD.push(B(8));var Ka=function(){function a(a,c){for(var b=
0;b<c.length;b++){var e=c[b];e.enumerable=e.enumerable||!1;e.configurable=!0;"value"in e&&(e.writable=!0);Object.defineProperty(a,e.key,e)}}return function(b,c,d){c&&a(b.prototype,c);d&&a(b,d);return b}}(),sa="input textarea button select option optgroup label datalist".split(" "),U=new (function(){function a(){if(!(this instanceof a))throw new TypeError("Cannot call a class as a function");this.gamepadAnalogStickDeadZone=.25;this.keyMapKeys=Object.keys(Object.assign({},ra));this.keyMap=JSON.parse(JSON.stringify(n));
this.addedEventListeners=this.enabled=!1}Ka(a,[{key:"enable",value:function(a){a&&(this.keyMap=a);this.addedEventListeners||"undefined"===typeof window||(window.addEventListener("keyup",this.updateKeyboard.bind(this)),window.addEventListener("keydown",this.updateKeyboard.bind(this)),window.addEventListener("resize",this.updateTouchpadRect.bind(this)),this.addedEventListeners=!0);this.enabled=!0}},{key:"disable",value:function(){this.keyMap=void 0;this.enabled=!1}},{key:"isEnabled",value:function(){return this.enabled}},
{key:"addTouchInput",value:function(a,c,d,e){var b=this,g=void 0;g=Aa(c,d,e,function(c){b.updateTouchpad(a,g,c)});this.keyMap[a].TOUCHPAD.push(g);return g.ID}},{key:"removeTouchInput",value:function(a,c){var b=void 0;this.keyMap[a].TOUCHPAD.some(function(a,d){return a.ID===c?(b=d,!0):!1});return void 0!==b?(this.keyMap[a].TOUCHPAD.splice(b,1),!0):!1}},{key:"getState",value:function(){var a=this;if(!this.enabled)return{};this.updateGamepad();var c={};this.keyMapKeys.forEach(function(b){a.keyMap[b].KEYBOARD.some(function(a){return a.ACTIVE})?
c[b]=!0:a.keyMap[b].GAMEPAD.some(function(a){return a.ACTIVE})?c[b]=!0:a.keyMap[b].TOUCHPAD.some(function(a){return a.ACTIVE})?c[b]=!0:c[b]=!1});return c}},{key:"isIgnoringKeyEvents",value:function(){return"undefined"===typeof window?!0:sa.some(function(a){return document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1})}},{key:"updateKeyboard",value:function(a){var b=this;if(this.enabled&&"undefined"!==typeof window&&!(a&&a.target&&a.target.tagName&&sa.some(function(b){return a&&
a.target.tagName.toLowerCase()===b.toLowerCase()?!0:!1}))){var d=!1;"keydown"===a.type&&(d=!0);this.keyMapKeys.forEach(function(c){b.keyMap[c].KEYBOARD.forEach(function(e,g){e.KEY_CODE===a.keyCode&&(b.keyMap[c].KEYBOARD[g].ACTIVE=d)})});a.preventDefault()}}},{key:"updateGamepad",value:function(){for(var a=this,c=navigator.getGamepads?navigator.getGamepads():[],d=function(b){var d=c[b];if(!d)return"continue";a.keyMapKeys.forEach(function(b){a.keyMap[b].GAMEPAD.forEach(function(c,e){if(a.keyMap[b].GAMEPAD[e].BUTTON_ID||
0===a.keyMap[b].GAMEPAD[e].BUTTON_ID)c=a.keyMap[b].GAMEPAD[e].BUTTON_ID,a.keyMap[b].GAMEPAD[e].ACTIVE=d.buttons[c]?d.buttons[c].pressed:!1;void 0!==a.keyMap[b].GAMEPAD[e].JOYSTICK.AXIS_ID&&void 0!==a.keyMap[b].GAMEPAD[e].JOYSTICK.IS_POSITIVE&&(a.keyMap[b].GAMEPAD[e].ACTIVE=a.keyMap[b].GAMEPAD[e].JOYSTICK.IS_POSITIVE?(d.axes[a.keyMap[b].GAMEPAD[e].JOYSTICK.AXIS_ID]||0)>+a.gamepadAnalogStickDeadZone:(d.axes[a.keyMap[b].GAMEPAD[e].JOYSTICK.AXIS_ID]||0)<-a.gamepadAnalogStickDeadZone)})})},e=0;e<c.length;e++)d(e)}},
{key:"updateTouchpadRect",value:function(){var a=this;this.keyMapKeys.forEach(function(b){a.keyMap[b].TOUCHPAD.forEach(function(c,e){c=a.keyMap[b].TOUCHPAD[e].ELEMENT.getBoundingClientRect();a.keyMap[b].TOUCHPAD[e].BOUNDING_RECT=c})})}},{key:"resetTouchDpad",value:function(){var a=this;["UP","RIGHT","DOWN","LEFT"].forEach(function(b){a.keyMap[b].TOUCHPAD.forEach(function(a){a.ACTIVE=!1})})}},{key:"updateTouchpad",value:function(a,c,d){if(this.enabled&&d&&(!d.type.includes("touch")||d.touches))if(d.preventDefault(),
"touchstart"===d.type||"touchmove"===d.type||"mousedown"===d.type){if("DPAD"===c.TYPE){a=void 0;d.type.includes("touch")?a=d.touches[0]:d.type.includes("mouse")&&(a=d);d=(c.BOUNDING_RECT.right-c.BOUNDING_RECT.left)/2;var b=a.clientX-c.BOUNDING_RECT.left;a=a.clientY-c.BOUNDING_RECT.top;if(b>d+c.BOUNDING_RECT.width/2+50)return;Math.abs(d-b)+c.BOUNDING_RECT.width/8>Math.abs((c.BOUNDING_RECT.bottom-c.BOUNDING_RECT.top)/2-a)?Math.abs(c.BOUNDING_RECT.width/2-b)>c.BOUNDING_RECT.width/20&&(a=b<c.BOUNDING_RECT.width/
2,c.ACTIVE=a&&"LEFT"===c.DIRECTION?!0:a||"RIGHT"!==c.DIRECTION?!1:!0):(a=a<c.BOUNDING_RECT.height/2,c.ACTIVE=a&&"UP"===c.DIRECTION?!0:a||"DOWN"!==c.DIRECTION?!1:!0)}"BUTTON"===c.TYPE&&(c.ACTIVE=!0)}else"DPAD"===c.TYPE&&this.resetTouchDpad(),"BUTTON"===c.TYPE&&(c.ACTIVE=!1)}}]);return a}());class La{constructor(){this.worker=void 0;this.isEnabled=!1;this.enableDefaultJoypad()}initialize(){return Promise.resolve()}setWorker(a){this.worker=a}updateController(){if(!this.isEnabled)return{};const a=U.getState();
this.setJoypadState(a);return a}setJoypadState(a){this.worker.postMessage({type:w.SET_JOYPAD_STATE,setJoypadStateParamsAsArray:[a.UP?1:0,a.RIGHT?1:0,a.DOWN?1:0,a.LEFT?1:0,a.A?1:0,a.B?1:0,a.SELECT?1:0,a.START?1:0]})}enableDefaultJoypad(){this.isEnabled=!0;U.enable(JSON.parse(JSON.stringify(n)))}disableDefaultJoypad(){this.isEnabled=!1;U.disable(JSON.parse(JSON.stringify(n)))}addTouchInput(a,b,c,d){return U.addTouchInput(a,b,c,d)}removeTouchInput(a,b){return U.removeTouchInput(a,b)}}const F=new La;
let Z=0;const ia=()=>{var a=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10);Z++;a=`${a}-${Z}`;1E5<Z&&(Z=0);return a};class Q{constructor(a,b){this.id=ia();b&&(this.id=b);this.messageListeners=[];a=atob(a.split(",")[1]);let c;try{c=new Blob([a],{type:"application/javascript"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,c=new BlobBuilder,c.append(a),c=c.getBlob()}this.worker=new Worker(URL.createObjectURL(c));this.worker.onmessage=
this._onMessageHandler.bind(this)}postMessage(a,b){a=Ca(a,void 0,this.id);const c=a.messageId,d=new Promise((a)=>{this.addMessageListener((b,d)=>{b=E(b);b.messageId===c&&(this.removeMessageListener(d.id),a(b))})});this.worker.postMessage(a,b);return d}addMessageListener(a){this.messageListeners.push({id:ia(),callback:a})}removeMessageListener(a){let b;this.messageListeners.some((c,d)=>c.id===a?(b=d,!0):!1);void 0!==b&&this.messageListeners.splice(b,1)}_onMessageHandler(a){this.messageListeners.forEach((b)=>
{b.callback(a,b)})}}const Ma=async()=>{const a=new Q("data:application/javascript;base64,",
"LIB"),b=new Q("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6ZixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGs7Y29uc3QgbT0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6ZyhjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgZj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApLGQ9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KDMpO2ZvcihsZXQgYz0wOzE0ND5jO2MrKylmb3IobGV0IGU9MDsxNjA+ZTtlKyspe3ZhciBiPTMqKDE2MCpjK2UpO2ZvcihsZXQgYz0wOzM+YztjKyspZFtjXT1hW2IrY107Yj00KihlKzE2MCpjKTtmW2JdPWRbMF07ZltiKzFdPWRbMV07ZltiKzJdPWRbMl07ZltiKzNdPTI1NX1hPWZ9ZyhjKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bCgoYSk9PnthPWEuZGF0YT8KYS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjprPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sayk7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmsucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"GRAPHICS"),c=new Q("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtoP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGgpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoaClzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZCl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6ZCxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGg9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtofHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHI9KGEpPT57YT1hLmRhdGE/YS5kYXRhOmE7aWYoYS5tZXNzYWdlKXN3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e3ZhciBiPW5ldyBVaW50OEFycmF5KGEubWVzc2FnZS5hdWRpb0J1ZmZlcik7dmFyIGQ9YS5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBjPW5ldyBGbG9hdDMyQXJyYXkoZCk7dmFyIGY9bmV3IEZsb2F0MzJBcnJheShkKTtsZXQgZz0wO2QqPTI7Zm9yKHZhciBlPTA7ZTxkO2UrPTIpY1tnXT1xKGJbZV0pLGcrKztnPTA7Zm9yKGU9MTtlPGQ7ZSs9MilmW2ddPXEoYltlXSksZysrO2I9Yy5idWZmZXI7Zj1mLmJ1ZmZlcn1tKGMoe3R5cGU6IlVQREFURUQiLGxlZnRDaGFubmVsOmIscmlnaHRDaGFubmVsOmYsCm51bWJlck9mU2FtcGxlczphLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczphLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzphLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSksW2IsZl0pfX07cCgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9YS5tZXNzYWdlLnBvcnRzWzBdO3AocixsKTttKGModm9pZCAwLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UUyI6bC5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkFVRElPX0xBVEVOQ1kiOmwucG9zdE1lc3NhZ2UoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK",
"AUDIO"),d=new Q("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=",
"CONTROLLER"),e=new Q("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
"MEMORY"),f=[];[b,c,d,e].forEach((b)=>{const c=new MessageChannel,d=new Promise((d)=>{let e=0;a.postMessage({type:w.CONNECT,workerId:b.id,ports:[c.port1]},[c.port1]).then(()=>{e++;2<=e&&d()});b.postMessage({type:w.CONNECT,workerId:a.id,ports:[c.port2]},[c.port2]).then(()=>{e++;2<=e&&d()})});f.push(d)});await Promise.all(f);Y.setWorker(b);K.setWorker(c);F.setWorker(d);D.setWorker(e);return a};let h={parse:function(a){let b=h.bin.readUshort,c=h.bin.readUint;var d;let e={};a=new Uint8Array(a);for(d=
a.length-4;101010256!=c(a,d);)d--;d=d+4+4;let f=b(a,d);d+=2;b(a,d);d+=2;c(a,d);d+=4;d=c(a,d);for(let g=0;g<f;g++){c(a,d);d+=4;d+=4;d+=4;d+=4;c(a,d);d+=4;let f=c(a,d);d+=4;let g=c(a,d);d+=4;let p=b(a,d),n=b(a,d+2),r=b(a,d+4);d+=6;d+=8;let y=c(a,d);d+=4;d+=p+n+r;h._readLocal(a,y,e,f,g)}return e},_readLocal:function(a,b,c,d,e){var f=h.bin.readUshort,g=h.bin.readUint;g(a,b);b+=4;f(a,b);b+=2;f(a,b);b+=2;let m=f(a,b);b+=2;g(a,b);b+=4;g(a,b);b=b+4+8;g=f(a,b);b+=2;let l=f(a,b);b+=2;f=h.bin.readUTF8(a,b,g);
b=b+g+l;a=new Uint8Array(a.buffer,b);if(0==m)c[f]=new Uint8Array(a.buffer.slice(b,b+d));else if(8==m)b=new Uint8Array(e),h.inflateRaw(a,b),c[f]=b;else throw"unknown compression method: "+m;},inflateRaw:function(a,b){return h.F.inflate(a,b)},inflate:function(a,b){return h.inflateRaw(new Uint8Array(a.buffer,a.byteOffset+2,a.length-6),b)},deflate:function(a,b){null==b&&(b={level:6});let c=0,d=new Uint8Array(50+Math.floor(1.1*a.length));d[c]=120;d[c+1]=156;c=h.F.deflateRaw(a,d,c+2,b.level);a=h.adler(a,
0,a.length);d[c+0]=a>>>24&255;d[c+1]=a>>>16&255;d[c+2]=a>>>8&255;d[c+3]=a>>>0&255;return new Uint8Array(d.buffer,0,c+4)},deflateRaw:function(a,b){null==b&&(b={level:6});let c=new Uint8Array(50+Math.floor(1.1*a.length)),d;d=h.F.deflateRaw(a,c,d,b.level);return new Uint8Array(c.buffer,0,d)},encode:function(a){var b=0;let c=h.bin.writeUint,d=h.bin.writeUshort;var e={};for(var f in a){var g=!h._noNeed(f),m=a[f];let b=h.crc.crc(m,0,m.length);e[f]={cpr:g,usize:m.length,crc:b,file:g?h.deflateRaw(m):m}}for(let a in e)b+=
e[a].file.length+30+46+2*h.bin.sizeUTF8(a);a=new Uint8Array(b+22);b=0;f=[];for(var l in e)g=e[l],f.push(b),b=h._writeHeader(a,b,l,g,0);l=0;g=b;for(let c in e)m=e[c],f.push(b),b=h._writeHeader(a,b,c,m,1,f[l++]);e=b-g;c(a,b,101010256);b=b+4+4;d(a,b,l);b+=2;d(a,b,l);b+=2;c(a,b,e);c(a,b+4,g);return a.buffer},_noNeed:function(a){a=a.split(".").pop().toLowerCase();return-1!="png,jpg,jpeg,zip".indexOf(a)},_writeHeader:function(a,b,c,d,e,f){let g=h.bin.writeUint,m=h.bin.writeUshort,l=d.file;g(a,b,0==e?67324752:
33639248);b+=4;1==e&&(b+=2);m(a,b,20);b+=2;m(a,b,0);b+=2;m(a,b,d.cpr?8:0);b+=2;g(a,b,0);b+=4;g(a,b,d.crc);b+=4;g(a,b,l.length);b+=4;g(a,b,d.usize);b+=4;m(a,b,h.bin.sizeUTF8(c));b+=2;m(a,b,0);b+=2;1==e&&(b=b+2+2+6,g(a,b,f),b+=4);c=h.bin.writeUTF8(a,b,c);b+=c;0==e&&(a.set(l,b),b+=l.length);return b}};h.crc={table:function(){let a=new Uint32Array(256);for(let b=0;256>b;b++){let c=b;for(let a=0;8>a;a++)c=c&1?3988292384^c>>>1:c>>>1;a[b]=c}return a}(),update:function(a,b,c,d){for(let e=0;e<d;e++)a=h.crc.table[(a^
b[c+e])&255]^a>>>8;return a},crc:function(a,b,c){return h.crc.update(4294967295,a,b,c)^4294967295}};h.adler=function(a,b,c){let d=1,e=0,f=b;for(b+=c;f<b;){for(c=Math.min(f+5552,b);f<c;)d+=a[f++],e+=d;d%=65521;e%=65521}return e<<16|d};h.bin={readUshort:function(a,b){return a[b]|a[b+1]<<8},writeUshort:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255},readUint:function(a,b){return 16777216*a[b+3]+(a[b+2]<<16|a[b+1]<<8|a[b])},writeUint:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255;a[b+2]=c>>16&255;a[b+3]=c>>24&
255},readASCII:function(a,b,c){let d="";for(let e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d},writeASCII:function(a,b,c){for(let d=0;d<c.length;d++)a[b+d]=c.charCodeAt(d)},pad:function(a){return 2>a.length?"0"+a:a},readUTF8:function(a,b,c){let d="",e;for(let e=0;e<c;e++)d+="%"+h.bin.pad(a[b+e].toString(16));try{e=decodeURIComponent(d)}catch(f){return h.bin.readASCII(a,b,c)}return e},writeUTF8:function(a,b,c){let d=c.length,e=0;for(let f=0;f<d;f++){let d=c.charCodeAt(f);if(0==(d&4294967168))a[b+
e]=d,e++;else if(0==(d&4294965248))a[b+e]=192|d>>6,a[b+e+1]=128|d>>0&63,e+=2;else if(0==(d&4294901760))a[b+e]=224|d>>12,a[b+e+1]=128|d>>6&63,a[b+e+2]=128|d>>0&63,e+=3;else if(0==(d&4292870144))a[b+e]=240|d>>18,a[b+e+1]=128|d>>12&63,a[b+e+2]=128|d>>6&63,a[b+e+3]=128|d>>0&63,e+=4;else throw"e";}return e},sizeUTF8:function(a){let b=a.length,c=0;for(let d=0;d<b;d++){let b=a.charCodeAt(d);if(0==(b&4294967168))c++;else if(0==(b&4294965248))c+=2;else if(0==(b&4294901760))c+=3;else if(0==(b&4292870144))c+=
4;else throw"e";}return c}};h.F={};h.F.deflateRaw=function(a,b,c,d){var e=[[0,0,0,0,0],[4,4,8,4,0],[4,5,16,8,0],[4,6,16,16,0],[4,10,16,32,0],[8,16,32,32,0],[8,16,128,128,0],[8,32,128,256,0],[32,128,258,1024,1],[32,258,258,4096,1]][d];let f=h.F.U,g=h.F._goodIndex;var m=h.F._putsE;let l=0;c<<=3;let p=0,n=a.length;if(0==d){for(;l<n;)e=Math.min(65535,n-l),m(b,c,l+e==n?1:0),c=h.F._copyExact(a,l,e,b,c+8),l+=e;return c>>>3}m=f.lits;d=f.strt;let r=f.prev,y=0,z=0,q=0,u=0;let x=0;2<n&&(x=h.F._hash(a,0),d[x]=
0);for(l=0;l<n;l++){var C=x;if(l+1<n-2){x=h.F._hash(a,l+1);var v=l+1&32767;r[v]=d[x];d[x]=v}if(p<=l){if(14E3<y||26697<z)p<l&&(m[y]=l-p,y+=2,p=l),c=h.F._writeBlock(l==n-1||p==n?1:0,m,y,u,a,q,l-q,b,c),y=z=u=0,q=l;v=0;l<n-2&&(v=h.F._bestMatch(a,l,r,C,Math.min(e[2],n-l),e[3]));if(0!=v){C=v>>>16;v&=65535;let a=g(C,f.of0);f.lhst[257+a]++;let b=g(v,f.df0);f.dhst[b]++;u+=f.exb[a]+f.dxb[b];m[y]=C<<23|l-p;m[y+1]=v<<16|a<<8|b;y+=2;p=l+C}else f.lhst[a[l]]++;z++}}if(q!=l||0==a.length)p<l&&(m[y]=l-p,y+=2),c=h.F._writeBlock(1,
m,y,u,a,q,l-q,b,c);for(;0!=(c&7);)c++;return c>>>3};h.F._bestMatch=function(a,b,c,d,e,f){var g=b&32767;let m=c[g],l=g-m+32768&32767;if(m==g||d!=h.F._hash(a,b-l))return 0;let p=d=0,n=Math.min(32767,b);for(;l<=n&&0!=--f&&m!=g;){if(0==d||a[b+d]==a[b+d-l])if(g=h.F._howLong(a,b,l),g>d){d=g;p=l;if(d>=e)break;l+2<g&&(g=l+2);let a=0;for(let d=0;d<g-2;d++){let e=b-l+d+32768&32767,f=e-c[e]+32768&32767;f>a&&(a=f,m=e)}}g=m;m=c[g];l+=g-m+32768&32767}return d<<16|p};h.F._howLong=function(a,b,c){if(a[b]!=a[b-c]||
a[b+1]!=a[b+1-c]||a[b+2]!=a[b+2-c])return 0;let d=b,e=Math.min(a.length,b+258);for(b+=3;b<e&&a[b]==a[b-c];)b++;return b-d};h.F._hash=function(a,b){return(a[b]<<8|a[b+1])+(a[b+2]<<4)&65535};h.saved=0;h.F._writeBlock=function(a,b,c,d,e,f,g,m,l){let p=h.F.U,n=h.F._putsF,r=h.F._putsE;let y,z,q,u;p.lhst[256]++;var x=h.F.getTrees();var C=x[0];y=x[1];z=x[2];q=x[3];u=x[4];var v=x[5];var w=x[6];x=x[7];var B=(0==(l+3&7)?0:8-(l+3&7))+32+(g<<3);let D=d+h.F.contSize(p.fltree,p.lhst)+h.F.contSize(p.fdtree,p.dhst);
d=d+h.F.contSize(p.ltree,p.lhst)+h.F.contSize(p.dtree,p.dhst);d+=14+3*v+h.F.contSize(p.itree,p.ihst)+(2*p.ihst[16]+3*p.ihst[17]+7*p.ihst[18]);for(var J=0;286>J;J++)p.lhst[J]=0;for(J=0;30>J;J++)p.dhst[J]=0;for(J=0;19>J;J++)p.ihst[J]=0;B=B<D&&B<d?0:D<d?1:2;n(m,l,a);n(m,l+1,B);l+=3;if(0==B){for(;0!=(l&7);)l++;l=h.F._copyExact(e,f,g,m,l)}else{let d,I;1==B&&(d=p.fltree,I=p.fdtree);if(2==B){h.F.makeCodes(p.ltree,C);h.F.revCodes(p.ltree,C);h.F.makeCodes(p.dtree,y);h.F.revCodes(p.dtree,y);h.F.makeCodes(p.itree,
z);h.F.revCodes(p.itree,z);d=p.ltree;I=p.dtree;r(m,l,q-257);l+=5;r(m,l,u-1);l+=5;r(m,l,v-4);l+=4;for(a=0;a<v;a++)r(m,l+3*a,p.itree[(p.ordr[a]<<1)+1]);l=h.F._codeTiny(w,p.itree,m,l+3*v);l=h.F._codeTiny(x,p.itree,m,l)}for(v=0;v<c;v+=2){a=b[v];w=a>>>23;for(a=f+(a&8388607);f<a;)l=h.F._writeLit(e[f++],d,m,l);0!=w&&(C=b[v+1],a=C>>16,g=C>>8&255,C&=255,l=h.F._writeLit(257+g,d,m,l),r(m,l,w-p.of0[g]),l+=p.exb[g],l=h.F._writeLit(C,I,m,l),n(m,l,a-p.df0[C]),l+=p.dxb[C],f+=w)}l=h.F._writeLit(256,d,m,l)}return l};
h.F._copyExact=function(a,b,c,d,e){let f=e>>>3;d[f]=c;d[f+1]=c>>>8;d[f+2]=255-d[f];d[f+3]=255-d[f+1];f+=4;d.set(new Uint8Array(a.buffer,b,c),f);return e+(c+4<<3)};h.F.getTrees=function(){let a=h.F.U,b=h.F._hufTree(a.lhst,a.ltree,15),c=h.F._hufTree(a.dhst,a.dtree,15),d=[],e=h.F._lenCodes(a.ltree,d),f=[],g=h.F._lenCodes(a.dtree,f);for(var m=0;m<d.length;m+=2)a.ihst[d[m]]++;for(m=0;m<f.length;m+=2)a.ihst[f[m]]++;m=h.F._hufTree(a.ihst,a.itree,7);let l=19;for(;4<l&&0==a.itree[(a.ordr[l-1]<<1)+1];)l--;
return[b,c,m,e,g,l,d,f]};h.F.getSecond=function(a){let b=[];for(let c=0;c<a.length;c+=2)b.push(a[c+1]);return b};h.F.nonZero=function(a){let b="";for(let c=0;c<a.length;c+=2)0!=a[c+1]&&(b+=(c>>1)+",");return b};h.F.contSize=function(a,b){let c=0;for(let d=0;d<b.length;d++)c+=b[d]*a[(d<<1)+1];return c};h.F._codeTiny=function(a,b,c,d){for(let e=0;e<a.length;e+=2){let f=a[e],g=a[e+1];d=h.F._writeLit(f,b,c,d);let m=16==f?2:17==f?3:7;15<f&&(h.F._putsE(c,d,g,m),d+=m)}return d};h.F._lenCodes=function(a,
b){let c=a.length;for(;2!=c&&0==a[c-1];)c-=2;for(let f=0;f<c;f+=2){var d=a[f+1],e=f+3<c?a[f+3]:-1;let g=f+5<c?a[f+5]:-1,h=0==f?-1:a[f-1];if(0==d&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,138);11>d?b.push(17,d-3):b.push(18,d-11);f+=2*d-2}else if(d==h&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,6);b.push(16,d-3);f+=2*d-2}else b.push(d,0)}return c>>>1};h.F._hufTree=function(a,b,c){var d=[],e=a.length,f=b.length,g=0;for(g=0;g<f;g+=2)b[g]=0,b[g+1]=0;for(g=
0;g<e;g++)0!=a[g]&&d.push({lit:g,f:a[g]});a=d.length;e=d.slice(0);if(0==a)return 0;if(1==a)return c=d[0].lit,d=0==c?1:0,b[(c<<1)+1]=1,b[(d<<1)+1]=1;d.sort(function(a,b){return a.f-b.f});g=d[0];f=d[1];let m=0,l=1,p=2;for(d[0]={lit:-1,f:g.f+f.f,l:g,r:f,d:0};l!=a-1;)g=m!=l&&(p==a||d[m].f<d[p].f)?d[m++]:d[p++],f=m!=l&&(p==a||d[m].f<d[p].f)?d[m++]:d[p++],d[l++]={lit:-1,f:g.f+f.f,l:g,r:f};d=h.F.setDepth(d[l-1],0);d>c&&(h.F.restrictDepth(e,c,d),d=c);for(g=0;g<a;g++)b[(e[g].lit<<1)+1]=e[g].d;return d};h.F.setDepth=
function(a,b){return-1!=a.lit?a.d=b:Math.max(h.F.setDepth(a.l,b+1),h.F.setDepth(a.r,b+1))};h.F.restrictDepth=function(a,b,c){let d=0,e=1<<c-b,f=0;a.sort(function(a,b){return b.d==a.d?a.f-b.f:b.d-a.d});for(d=0;d<a.length;d++)if(a[d].d>b){let g=a[d].d;a[d].d=b;f+=e-(1<<c-g)}else break;for(f>>>=c-b;0<f;)c=a[d].d,c<b?(a[d].d++,f-=1<<b-c-1):d++;for(;0<=d;d--)a[d].d==b&&0>f&&(a[d].d--,f++);0!=f&&console.log("debt left")};h.F._goodIndex=function(a,b){let c=0;b[c|16]<=a&&(c|=16);b[c|8]<=a&&(c|=8);b[c|4]<=
a&&(c|=4);b[c|2]<=a&&(c|=2);b[c|1]<=a&&(c|=1);return c};h.F._writeLit=function(a,b,c,d){h.F._putsF(c,d,b[a<<1]);return d+b[(a<<1)+1]};h.F.inflate=function(a,b){if(3==a[0]&&0==a[1])return b?b:new Uint8Array(0);var c=h.F;let d=c._bitsF,e=c._bitsE,f=c._decodeTiny,g=c.makeCodes,m=c.codes2map,l=c._get17;c=c.U;let p=null==b;p&&(b=new Uint8Array(a.length>>2<<3));let n=0;var r,y;let z=y=r=0;for(var q=0,u;0==n;){n=d(a,q,1);var x=d(a,q+1,2);q+=3;if(0==x)0!=(q&7)&&(q+=8-(q&7)),q=(q>>>3)+4,x=a[q-4]|a[q-3]<<8,
p&&(b=h.F._check(b,z+x)),b.set(new Uint8Array(a.buffer,a.byteOffset+q,x),z),q=q+x<<3,z+=x;else{p&&(b=h.F._check(b,z+131072));if(1==x){var w=c.flmap;u=c.fdmap;r=511;y=31}if(2==x){r=e(a,q,5)+257;y=e(a,q+5,5)+1;w=e(a,q+10,4)+4;q+=14;for(u=0;38>u;u+=2)c.itree[u]=0,c.itree[u+1]=0;x=1;for(u=0;u<w;u++){var v=e(a,q+3*u,3);c.itree[(c.ordr[u]<<1)+1]=v;v>x&&(x=v)}q+=3*w;g(c.itree,x);m(c.itree,x,c.imap);w=c.lmap;u=c.dmap;v=f(c.imap,(1<<x)-1,r,a,q,c.ltree);r=(1<<(v>>>24))-1;q+=v&16777215;g(c.ltree,v>>>24);m(c.ltree,
v>>>24,w);x=f(c.imap,(1<<x)-1,y,a,q,c.dtree);y=(1<<(x>>>24))-1;q+=x&16777215;g(c.dtree,x>>>24);m(c.dtree,x>>>24,u)}for(;;)if(x=w[l(a,q)&r],q+=x&15,v=x>>>4,0==v>>>8)b[z++]=v;else if(256==v)break;else{x=z+v-254;264<v&&(v=c.ldef[v-257],x=z+(v>>>3)+e(a,q,v&7),q+=v&7);v=u[l(a,q)&y];q+=v&15;v=c.ddef[v>>>4];let f=(v>>>4)+d(a,q,v&15);for(q+=v&15;z<x;)b[z]=b[z++-f],b[z]=b[z++-f],b[z]=b[z++-f],b[z]=b[z++-f];z=x}}}return b.length==z?b:b.slice(0,z)};h.F._check=function(a,b){let c=a.length;if(b<=c)return a;b=
new Uint8Array(c<<1);for(let d=0;d<c;d+=4)b[d]=a[d],b[d+1]=a[d+1],b[d+2]=a[d+2],b[d+3]=a[d+3];return b};h.F._decodeTiny=function(a,b,c,d,e,f){let g=e,m=h.F._bitsE,l=h.F._get17,n=c<<1,r=c=0;for(;c<n;){var u=a[l(d,e)&b];e+=u&15;var y=u>>>4;if(15>=y)f[c]=0,f[c+1]=y,y>r&&(r=y),c+=2;else{let a=u=0;16==y?(a=3+m(d,e,2)<<1,e+=2,u=f[c-1]):17==y?(a=3+m(d,e,3)<<1,e+=3):18==y&&(a=11+m(d,e,7)<<1,e+=7);for(y=c+a;c<y;)f[c]=0,f[c+1]=u,c+=2}}for(a=f.length;c<a;)f[c+1]=0,c+=2;return r<<24|e-g};h.F.makeCodes=function(a,
b){var c=h.F.U;let d=a.length;var e;let f;var g=c.bl_count;for(e=0;e<=b;e++)g[e]=0;for(e=1;e<d;e+=2)g[a[e]]++;c=c.next_code;e=0;g[0]=0;for(f=1;f<=b;f++)e=e+g[f-1]<<1,c[f]=e;for(b=0;b<d;b+=2)g=a[b+1],0!=g&&(a[b]=c[g],c[g]++)};h.F.codes2map=function(a,b,c){let d=a.length,e=h.F.U.rev15;for(let h=0;h<d;h+=2)if(0!=a[h+1]){var f=a[h+1];let d=h>>1<<4|f;var g=b-f;f=a[h]<<g;for(g=f+(1<<g);f!=g;)c[e[f]>>>15-b]=d,f++}};h.F.revCodes=function(a,b){let c=h.F.U.rev15,d=15-b;for(let e=0;e<a.length;e+=2)a[e]=c[a[e]<<
b-a[e+1]]>>>d};h.F._putsE=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8};h.F._putsF=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8;a[b+2]|=c>>>16};h.F._bitsE=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8)>>>(b&7)&(1<<c)-1};h.F._bitsF=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)&(1<<c)-1};h.F._get17=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)};h.F._get25=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16|a[(b>>>3)+
3]<<24)>>>(b&7)};h.F.U={next_code:new Uint16Array(16),bl_count:new Uint16Array(16),ordr:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],of0:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],exb:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],ldef:new Uint16Array(32),df0:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],dxb:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,
6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],ddef:new Uint32Array(32),flmap:new Uint16Array(512),fltree:[],fdmap:new Uint16Array(32),fdtree:[],lmap:new Uint16Array(32768),ltree:[],dmap:new Uint16Array(32768),dtree:[],imap:new Uint16Array(512),itree:[],rev15:new Uint16Array(32768),lhst:new Uint32Array(286),dhst:new Uint32Array(30),ihst:new Uint32Array(19),lits:new Uint32Array(15E3),strt:new Uint16Array(65536),prev:new Uint16Array(32768)};(function(){let a=h.F.U;for(var b=0;32768>b;b++){let c=b;c=(c&
2863311530)>>>1|(c&1431655765)<<1;c=(c&3435973836)>>>2|(c&858993459)<<2;c=(c&4042322160)>>>4|(c&252645135)<<4;c=(c&4278255360)>>>8|(c&16711935)<<8;a.rev15[b]=(c>>>16|c<<16)>>>17}for(b=0;32>b;b++)a.ldef[b]=a.of0[b]<<3|a.exb[b],a.ddef[b]=a.df0[b]<<4|a.dxb[b];for(b=0;143>=b;b++)a.fltree.push(0,8);for(;255>=b;b++)a.fltree.push(0,9);for(;279>=b;b++)a.fltree.push(0,7);for(;287>=b;b++)a.fltree.push(0,8);h.F.makeCodes(a.fltree,9);h.F.codes2map(a.fltree,9,a.flmap);h.F.revCodes(a.fltree,9);for(b=0;32>b;b++)a.fdtree.push(0,
5);h.F.makeCodes(a.fdtree,5);h.F.codes2map(a.fdtree,5,a.fdmap);h.F.revCodes(a.fdtree,5);for(b=0;19>b;b++)a.itree.push(0,0);for(b=0;286>b;b++)a.ltree.push(0,0);for(b=0;30>b;b++)a.dtree.push(0,0)})();const Ea=(a,b)=>(async()=>{if(ArrayBuffer.isView(a)&&a.constructor===Uint8Array)return a;if("object"===typeof a&&a.size){var c=await Na(a);return a.name.toLowerCase().endsWith(".zip")?await ta(c):c}c={};b&&b.headers&&(c.headers=b.headers);var d=await fetch(a,c).then((a)=>a.ok?a.arrayBuffer():Promise.reject(a));
c=a;b&&b.fileName&&(c=b.fileName);d=new Uint8Array(d);return c.toLowerCase().endsWith(".zip")?await ta(d):d})(),Na=async(a)=>await new Promise((b,c)=>{const d=new FileReader;d.onload=()=>{const a=new Uint8Array(d.result);b(a)};d.readAsArrayBuffer(a)}),ta=async(a)=>{const b=await h.parse(a);let c=!1;Object.keys(b).some((a)=>{const d=a.toLowerCase();return d.includes(".gb")||d.includes(".gbc")?(c=b[a],!0):!1});if(!c)throw Error("Could not find a ROM in zip...");return c};var Oa=W(function(a){(function(){if("undefined"!==
typeof performance&&null!==performance&&performance.now)a.exports=function(){return performance.now()};else if("undefined"!==typeof process&&null!==process&&process.hrtime){a.exports=function(){return(c()-f)/1E6};var b=process.hrtime;var c=function(){var a=b();return 1E9*a[0]+a[1]};var d=c();var e=1E9*process.uptime();var f=d-e}else if(Date.now){a.exports=function(){return Date.now()-g};var g=Date.now()}else a.exports=function(){return(new Date).getTime()-g},g=(new Date).getTime()}).call(qa)}),L=
"undefined"===typeof window?qa:window;H=["moz","webkit"];var R=L.requestAnimationFrame,V=L.cancelAnimationFrame||L.cancelRequestAnimationFrame;for(N=0;!R&&N<H.length;N++)R=L[H[N]+"RequestAnimationFrame"],V=L[H[N]+"CancelAnimationFrame"]||L[H[N]+"CancelRequestAnimationFrame"];if(!R||!V){var ja=0,ua=0,P=[],Pa=1E3/60;R=function(a){if(0===P.length){var b=Oa(),c=Math.max(0,Pa-(b-ja));ja=c+b;setTimeout(function(){for(var a=P.slice(0),b=P.length=0;b<a.length;b++)if(!a[b].cancelled)try{a[b].callback(ja)}catch(f){setTimeout(function(){throw f;
},0)}},Math.round(c))}P.push({handle:++ua,callback:a,cancelled:!1});return ua};V=function(a){for(var b=0;b<P.length;b++)P[b].handle===a&&(P[b].cancelled=!0)}}var M=function(a){return R.call(L,a)};M.cancel=function(){V.apply(L,arguments)};M.polyfill=function(a){a||(a=L);a.requestAnimationFrame=R;a.cancelAnimationFrame=V};var va=W(function(a){var b=function(a){function c(a,b,d,e){if("undefined"===typeof a)return c[0];if("undefined"!==typeof b){if(10!==+b||d){var k=d||"0123456789abcdefghijklmnopqrstuvwxyz";
a=String(a);e||(a=a.toLowerCase(),k=k.toLowerCase());var t=a.length,f=Math.abs(b);d={};for(e=0;e<k.length;e++)d[k[e]]=e;for(e=0;e<t;e++)if(k=a[e],"-"!==k&&k in d&&d[k]>=f&&("1"!==k||1!==f))throw Error(k+" is not a valid digit in base "+b+".");b=A(b);t=[];for(e=(f="-"===a[0])?1:0;e<a.length;e++)if(k=a[e],k in d)t.push(A(d[k]));else if("<"===k){k=e;do e++;while(">"!==a[e]&&e<a.length);t.push(A(a.slice(k+1,e)))}else throw Error(k+" is not a valid character");b=W(t,b,f)}else b=A(a);return b}return A(a)}
function e(a,b){this.value=a;this.sign=b;this.isSmall=!1}function f(a){this.value=a;this.sign=0>a;this.isSmall=!0}function g(a){this.value=a}function h(a){return-9007199254740992<a&&9007199254740992>a}function l(a){return 1E7>a?[a]:1E14>a?[a%1E7,Math.floor(a/1E7)]:[a%1E7,Math.floor(a/1E7)%1E7,Math.floor(a/1E14)]}function n(a){r(a);var b=a.length;if(4>b&&0>H(a,T))switch(b){case 0:return 0;case 1:return a[0];case 2:return a[0]+1E7*a[1];default:return a[0]+1E7*(a[1]+1E7*a[2])}return a}function r(a){for(var b=
a.length;0===a[--b];);a.length=b+1}function u(a){for(var b=Array(a),c=-1;++c<a;)b[c]=0;return b}function y(a){return 0<a?Math.floor(a):Math.ceil(a)}function w(a,b){var c=a.length,k=b.length,d=Array(c),e=0,t;for(t=0;t<k;t++){var f=a[t]+b[t]+e;e=1E7<=f?1:0;d[t]=f-1E7*e}for(;t<c;)f=a[t]+e,e=1E7===f?1:0,d[t++]=f-1E7*e;0<e&&d.push(e);return d}function q(a,b){return a.length>=b.length?w(a,b):w(b,a)}function B(a,b){var c=a.length,k=Array(c),d;for(d=0;d<c;d++){var e=a[d]-1E7+b;b=Math.floor(e/1E7);k[d]=e-
1E7*b;b+=1}for(;0<b;)k[d++]=b%1E7,b=Math.floor(b/1E7);return k}function x(a,b){var c=a.length,k=b.length,d=Array(c),e=0,t;for(t=0;t<k;t++){var f=a[t]-e-b[t];0>f?(f+=1E7,e=1):e=0;d[t]=f}for(t=k;t<c;t++){f=a[t]-e;if(0>f)f+=1E7;else{d[t++]=f;break}d[t]=f}for(;t<c;t++)d[t]=a[t];r(d);return d}function C(a,b,c){var k=a.length,d=Array(k);b=-b;var t;for(t=0;t<k;t++){var g=a[t]+b;b=Math.floor(g/1E7);g%=1E7;d[t]=0>g?g+1E7:g}d=n(d);return"number"===typeof d?(c&&(d=-d),new f(d)):new e(d,c)}function v(a,b){var c=
a.length,k=b.length,d=u(c+k),e;for(e=0;e<c;++e){var t=a[e];for(var f=0;f<k;++f){var g=b[f];g=t*g+d[e+f];var h=Math.floor(g/1E7);d[e+f]=g-1E7*h;d[e+f+1]+=h}}r(d);return d}function D(a,b){var c=a.length,k=Array(c),d=0,e;for(e=0;e<c;e++){var t=a[e]*b+d;d=Math.floor(t/1E7);k[e]=t-1E7*d}for(;0<d;)k[e++]=d%1E7,d=Math.floor(d/1E7);return k}function F(a,b){for(var c=[];0<b--;)c.push(0);return c.concat(a)}function E(a,b){var c=Math.max(a.length,b.length);if(30>=c)return v(a,b);c=Math.ceil(c/2);var k=a.slice(c);
a=a.slice(0,c);var d=b.slice(c),e=b.slice(0,c);b=E(a,e);var t=E(k,d);k=E(q(a,k),q(e,d));c=q(q(b,F(x(x(k,b),t),c)),F(t,2*c));r(c);return c}function J(a,b,c){return 1E7>a?new e(D(b,a),c):new e(v(b,l(a)),c)}function K(a){var b=a.length,c=u(b+b),k;for(k=0;k<b;k++){var d=a[k];var e=-(d*d);for(var f=k;f<b;f++){var g=a[f];g=2*d*g+c[k+f]+e;e=Math.floor(g/1E7);c[k+f]=g-1E7*e}c[k+b]=e}r(c);return c}function L(a,b){var c=a.length,k=u(c);var d=0;for(--c;0<=c;--c){d=1E7*d+a[c];var e=y(d/b);d-=e*b;k[c]=e|0}return[k,
d|0]}function G(a,b){b=A(b);if(ca)return[new g(a.value/b.value),new g(a.value%b.value)];var d=a.value;var k=b.value;if(0===k)throw Error("Cannot divide by zero");if(a.isSmall)return b.isSmall?[new f(y(d/k)),new f(d%k)]:[c[0],a];if(b.isSmall){if(1===k)return[a,c[0]];if(-1==k)return[a.negate(),c[0]];k=Math.abs(k);if(1E7>k)return k=L(d,k),d=n(k[0]),k=k[1],a.sign&&(k=-k),"number"===typeof d?(a.sign!==b.sign&&(d=-d),[new f(d),new f(k)]):[new e(d,a.sign!==b.sign),new f(k)];k=l(k)}var t=H(d,k);if(-1===t)return[c[0],
a];if(0===t)return[c[a.sign===b.sign?1:-1],c[0]];if(200>=d.length+k.length){var h=k,m=d.length;k=h.length;t=u(h.length);var p=h[k-1],v=Math.ceil(1E7/(2*p));d=D(d,v);h=D(h,v);var q,w,z;d.length<=m&&d.push(0);h.push(0);p=h[k-1];for(q=m-k;0<=q;q--){m=9999999;d[q+k]!==p&&(m=Math.floor((1E7*d[q+k]+d[q+k-1])/p));var B=w=0;var C=h.length;for(z=0;z<C;z++){w+=m*h[z];var E=Math.floor(w/1E7);B+=d[q+z]-(w-1E7*E);w=E;0>B?(d[q+z]=B+1E7,B=-1):(d[q+z]=B,B=0)}for(;0!==B;){--m;for(z=w=0;z<C;z++)w+=d[q+z]-1E7+h[z],
0>w?(d[q+z]=w+1E7,w=0):(d[q+z]=w,w=1);B+=w}t[q]=m}d=L(d,v)[0];k=[n(t),n(d)]}else{t=d.length;p=k.length;v=[];for(h=[];t;)if(h.unshift(d[--t]),r(h),0>H(h,k))v.push(0);else{m=h.length;q=1E7*h[m-1]+h[m-2];w=1E7*k[p-1]+k[p-2];m>p&&(q=1E7*(q+1));m=Math.ceil(q/w);do{q=D(k,m);if(0>=H(q,h))break;m--}while(m);v.push(m);h=x(h,q)}v.reverse();k=[n(v),n(h)]}d=k[0];b=a.sign!==b.sign;k=k[1];a=a.sign;"number"===typeof d?(b&&(d=-d),d=new f(d)):d=new e(d,b);"number"===typeof k?(a&&(k=-k),k=new f(k)):k=new e(k,a);return[d,
k]}function H(a,b){if(a.length!==b.length)return a.length>b.length?1:-1;for(var c=a.length-1;0<=c;c--)if(a[c]!==b[c])return a[c]>b[c]?1:-1;return 0}function N(a){a=a.abs();if(a.isUnit())return!1;if(a.equals(2)||a.equals(3)||a.equals(5))return!0;if(a.isEven()||a.isDivisibleBy(3)||a.isDivisibleBy(5))return!1;if(a.lesser(49))return!0}function O(a,c){for(var d=a.prev(),k=d,e=0,f,t,g;k.isEven();)k=k.divide(2),e++;t=0;a:for(;t<c.length;t++)if(!a.lesser(c[t])&&(g=b(c[t]).modPow(k,a),!g.isUnit()&&!g.equals(d))){for(f=
e-1;0!=f;f--){g=g.square().mod(a);if(g.isUnit())break;if(g.equals(d))continue a}return!1}return!0}function P(a,c,d){c=A(c);var k=a.isNegative(),e=c.isNegative();a=k?a.not():a;var f=e?c.not():c;for(c=[];!a.isZero()||!f.isZero();){a=G(a,aa);var t=a[1].toJSNumber();k&&(t=aa-1-t);f=G(f,aa);var g=f[1].toJSNumber();e&&(g=aa-1-g);a=a[0];f=f[0];c.push(d(t,g))}d=0!==d(k?1:0,e?1:0)?b(-1):b(0);for(k=c.length-1;0<=k;--k)d=d.multiply(aa).add(b(c[k]));return d}function M(a){a=a.value;a="number"===typeof a?a|1073741824:
"bigint"===typeof a?a|BigInt(1073741824):a[0]+1E7*a[1]|1073758208;return a&-a}function R(a,c){if(0>=c.compareTo(a)){var d=R(a,c.square(c)),k=d.p;d=d.e;c=k.multiply(c);return 0>=c.compareTo(a)?{p:c,e:2*d+1}:{p:k,e:2*d}}return{p:b(1),e:0}}function U(a,b){a=A(a);b=A(b);return a.greater(b)?a:b}function Q(a,b){a=A(a);b=A(b);return a.lesser(b)?a:b}function V(a,b){a=A(a).abs();b=A(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var d=c[1],k;a.isEven()&&b.isEven();)k=Q(M(a),
M(b)),a=a.divide(k),b=b.divide(k),d=d.multiply(k);for(;a.isEven();)a=a.divide(M(a));do{for(;b.isEven();)b=b.divide(M(b));a.greater(b)&&(k=b,b=a,a=k);b=b.subtract(a)}while(!b.isZero());return d.isUnit()?a:a.multiply(d)}function W(a,b,d){var k=c[0],e=c[1],f;for(f=a.length-1;0<=f;f--)k=k.add(a[f].times(e)),e=e.times(b);return d?k.negate():k}function da(a,c){c=b(c);if(c.isZero()){if(a.isZero())return{value:[0],isNegative:!1};throw Error("Cannot convert nonzero numbers to base 0.");}if(c.equals(-1)){if(a.isZero())return{value:[0],
isNegative:!1};if(a.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-a.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};c=Array.apply(null,Array(a.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);c.unshift([1]);return{value:[].concat.apply([],c),isNegative:!1}}var d=!1;a.isNegative()&&c.isPositive()&&(d=!0,a=a.abs());if(c.isUnit())return a.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(a.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:d};
for(var k=[],e;a.isNegative()||0<=a.compareAbs(c);)e=a.divmod(c),a=e.quotient,e=e.remainder,e.isNegative()&&(e=c.minus(e).abs(),a=a.next()),k.push(e.toJSNumber());k.push(a.toJSNumber());return{value:k.reverse(),isNegative:d}}function X(a,b,c){a=da(a,b);return(a.isNegative?"-":"")+a.value.map(function(a){var b=c;b=b||"0123456789abcdefghijklmnopqrstuvwxyz";a=a<b.length?b[a]:"<"+a+">";return a}).join("")}function Y(a){if(h(+a)){var b=+a;if(b===y(b))return ca?new g(BigInt(b)):new f(b);throw Error("Invalid integer: "+
a);}(b="-"===a[0])&&(a=a.slice(1));var c=a.split(/e/i);if(2<c.length)throw Error("Invalid integer: "+c.join("e"));if(2===c.length){a=c[1];"+"===a[0]&&(a=a.slice(1));a=+a;if(a!==y(a)||!h(a))throw Error("Invalid integer: "+a+" is not a valid exponent.");c=c[0];var d=c.indexOf(".");0<=d&&(a-=c.length-d-1,c=c.slice(0,d)+c.slice(d+1));if(0>a)throw Error("Cannot include negative exponent part for integers");a=c+=Array(a+1).join("0")}if(!/^([0-9][0-9]*)$/.test(a))throw Error("Invalid integer: "+a);if(ca)return new g(BigInt(b?
"-"+a:a));c=[];d=a.length;for(var k=d-7;0<d;)c.push(+a.slice(k,d)),k-=7,0>k&&(k=0),d-=7;r(c);return new e(c,b)}function A(a){if("number"===typeof a){if(ca)a=new g(BigInt(a));else if(h(a)){if(a!==y(a))throw Error(a+" is not an integer.");a=new f(a)}else a=Y(a.toString());return a}return"string"===typeof a?Y(a):"bigint"===typeof a?new g(a):a}var T=l(9007199254740992),ca="function"===typeof BigInt;e.prototype=Object.create(c.prototype);f.prototype=Object.create(c.prototype);g.prototype=Object.create(c.prototype);
e.prototype.add=function(a){a=A(a);if(this.sign!==a.sign)return this.subtract(a.negate());var b=this.value,c=a.value;return a.isSmall?new e(B(b,Math.abs(c)),this.sign):new e(q(b,c),this.sign)};e.prototype.plus=e.prototype.add;f.prototype.add=function(a){a=A(a);var b=this.value;if(0>b!==a.sign)return this.subtract(a.negate());var c=a.value;if(a.isSmall){if(h(b+c))return new f(b+c);c=l(Math.abs(c))}return new e(B(c,Math.abs(b)),0>b)};f.prototype.plus=f.prototype.add;g.prototype.add=function(a){return new g(this.value+
A(a).value)};g.prototype.plus=g.prototype.add;e.prototype.subtract=function(a){var b=A(a);if(this.sign!==b.sign)return this.add(b.negate());a=this.value;var c=b.value;if(b.isSmall)return C(a,Math.abs(c),this.sign);b=this.sign;0<=H(a,c)?a=x(a,c):(a=x(c,a),b=!b);a=n(a);"number"===typeof a?(b&&(a=-a),a=new f(a)):a=new e(a,b);return a};e.prototype.minus=e.prototype.subtract;f.prototype.subtract=function(a){a=A(a);var b=this.value;if(0>b!==a.sign)return this.add(a.negate());var c=a.value;return a.isSmall?
new f(b-c):C(c,Math.abs(b),0<=b)};f.prototype.minus=f.prototype.subtract;g.prototype.subtract=function(a){return new g(this.value-A(a).value)};g.prototype.minus=g.prototype.subtract;e.prototype.negate=function(){return new e(this.value,!this.sign)};f.prototype.negate=function(){var a=this.sign,b=new f(-this.value);b.sign=!a;return b};g.prototype.negate=function(){return new g(-this.value)};e.prototype.abs=function(){return new e(this.value,!1)};f.prototype.abs=function(){return new f(Math.abs(this.value))};
g.prototype.abs=function(){return new g(0<=this.value?this.value:-this.value)};e.prototype.multiply=function(a){var b=A(a);a=this.value;var d=b.value,k=this.sign!==b.sign;if(b.isSmall){if(0===d)return c[0];if(1===d)return this;if(-1===d)return this.negate();d=Math.abs(d);if(1E7>d)return new e(D(a,d),k);d=l(d)}b=a.length;var f=d.length;return 0<-.012*b-.012*f+1.5E-5*b*f?new e(E(a,d),k):new e(v(a,d),k)};e.prototype.times=e.prototype.multiply;f.prototype._multiplyBySmall=function(a){return h(a.value*
this.value)?new f(a.value*this.value):J(Math.abs(a.value),l(Math.abs(this.value)),this.sign!==a.sign)};e.prototype._multiplyBySmall=function(a){return 0===a.value?c[0]:1===a.value?this:-1===a.value?this.negate():J(Math.abs(a.value),this.value,this.sign!==a.sign)};f.prototype.multiply=function(a){return A(a)._multiplyBySmall(this)};f.prototype.times=f.prototype.multiply;g.prototype.multiply=function(a){return new g(this.value*A(a).value)};g.prototype.times=g.prototype.multiply;e.prototype.square=function(){return new e(K(this.value),
!1)};f.prototype.square=function(){var a=this.value*this.value;return h(a)?new f(a):new e(K(l(Math.abs(this.value))),!1)};g.prototype.square=function(a){return new g(this.value*this.value)};e.prototype.divmod=function(a){a=G(this,a);return{quotient:a[0],remainder:a[1]}};g.prototype.divmod=f.prototype.divmod=e.prototype.divmod;e.prototype.divide=function(a){return G(this,a)[0]};g.prototype.over=g.prototype.divide=f.prototype.over=f.prototype.divide=e.prototype.over=e.prototype.divide;e.prototype.mod=
function(a){return G(this,a)[1]};g.prototype.mod=g.prototype.remainder=f.prototype.remainder=f.prototype.mod=e.prototype.remainder=e.prototype.mod;e.prototype.pow=function(a){var b=A(a),d=this.value;a=b.value;var e;if(0===a)return c[1];if(0===d)return c[0];if(1===d)return c[1];if(-1===d)return b.isEven()?c[1]:c[-1];if(b.sign)return c[0];if(!b.isSmall)throw Error("The exponent "+b.toString()+" is too large.");if(this.isSmall&&h(e=Math.pow(d,a)))return new f(y(e));e=this;for(b=c[1];;){a&1&&(b=b.times(e),
--a);if(0===a)break;a/=2;e=e.square()}return b};f.prototype.pow=e.prototype.pow;var Z;ca&&(Z=eval("(a,b)=>a**b"));g.prototype.pow=function(a){a=A(a);var b=this.value,d=a.value;return d===BigInt(0)?c[1]:b===BigInt(0)?c[0]:b===BigInt(1)?c[1]:b===BigInt(-1)?a.isEven()?c[1]:c[-1]:a.isNegative()?new g(BigInt(0)):new g(Z(b,d))};e.prototype.modPow=function(a,b){a=A(a);b=A(b);if(b.isZero())throw Error("Cannot take modPow with modulus 0");for(var d=c[1],e=this.mod(b);a.isPositive();){if(e.isZero())return c[0];
a.isOdd()&&(d=d.multiply(e).mod(b));a=a.divide(2);e=e.square().mod(b)}return d};g.prototype.modPow=f.prototype.modPow=e.prototype.modPow;e.prototype.compareAbs=function(a){a=A(a);return a.isSmall?1:H(this.value,a.value)};f.prototype.compareAbs=function(a){a=A(a);var b=Math.abs(this.value),c=a.value;return a.isSmall?(c=Math.abs(c),b===c?0:b>c?1:-1):-1};g.prototype.compareAbs=function(a){var b=this.value;a=A(a).value;b=0<=b?b:-b;a=0<=a?a:-a;return b===a?0:b>a?1:-1};e.prototype.compare=function(a){if(Infinity===
a)return-1;if(-Infinity===a)return 1;a=A(a);return this.sign!==a.sign?a.sign?1:-1:a.isSmall?this.sign?-1:1:H(this.value,a.value)*(this.sign?-1:1)};e.prototype.compareTo=e.prototype.compare;f.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=A(a);var b=this.value,c=a.value;return a.isSmall?b==c?0:b>c?1:-1:0>b!==a.sign?0>b?-1:1:0>b?1:-1};f.prototype.compareTo=f.prototype.compare;g.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;var b=
this.value;a=A(a).value;return b===a?0:b>a?1:-1};g.prototype.compareTo=g.prototype.compare;e.prototype.equals=function(a){return 0===this.compare(a)};g.prototype.eq=g.prototype.equals=f.prototype.eq=f.prototype.equals=e.prototype.eq=e.prototype.equals;e.prototype.notEquals=function(a){return 0!==this.compare(a)};g.prototype.neq=g.prototype.notEquals=f.prototype.neq=f.prototype.notEquals=e.prototype.neq=e.prototype.notEquals;e.prototype.greater=function(a){return 0<this.compare(a)};g.prototype.gt=
g.prototype.greater=f.prototype.gt=f.prototype.greater=e.prototype.gt=e.prototype.greater;e.prototype.lesser=function(a){return 0>this.compare(a)};g.prototype.lt=g.prototype.lesser=f.prototype.lt=f.prototype.lesser=e.prototype.lt=e.prototype.lesser;e.prototype.greaterOrEquals=function(a){return 0<=this.compare(a)};g.prototype.geq=g.prototype.greaterOrEquals=f.prototype.geq=f.prototype.greaterOrEquals=e.prototype.geq=e.prototype.greaterOrEquals;e.prototype.lesserOrEquals=function(a){return 0>=this.compare(a)};
g.prototype.leq=g.prototype.lesserOrEquals=f.prototype.leq=f.prototype.lesserOrEquals=e.prototype.leq=e.prototype.lesserOrEquals;e.prototype.isEven=function(){return 0===(this.value[0]&1)};f.prototype.isEven=function(){return 0===(this.value&1)};g.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};e.prototype.isOdd=function(){return 1===(this.value[0]&1)};f.prototype.isOdd=function(){return 1===(this.value&1)};g.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};
e.prototype.isPositive=function(){return!this.sign};f.prototype.isPositive=function(){return 0<this.value};g.prototype.isPositive=f.prototype.isPositive;e.prototype.isNegative=function(){return this.sign};f.prototype.isNegative=function(){return 0>this.value};g.prototype.isNegative=f.prototype.isNegative;e.prototype.isUnit=function(){return!1};f.prototype.isUnit=function(){return 1===Math.abs(this.value)};g.prototype.isUnit=function(){return this.abs().value===BigInt(1)};e.prototype.isZero=function(){return!1};
f.prototype.isZero=function(){return 0===this.value};g.prototype.isZero=function(){return this.value===BigInt(0)};e.prototype.isDivisibleBy=function(a){a=A(a);return a.isZero()?!1:a.isUnit()?!0:0===a.compareAbs(2)?this.isEven():this.mod(a).isZero()};g.prototype.isDivisibleBy=f.prototype.isDivisibleBy=e.prototype.isDivisibleBy;e.prototype.isPrime=function(c){var d=N(this);if(d!==a)return d;d=this.abs();var e=d.bitLength();if(64>=e)return O(d,[2,325,9375,28178,450775,9780504,1795265022]);e=Math.log(2)*
e.toJSNumber();c=Math.ceil(!0===c?2*Math.pow(e,2):e);e=[];for(var f=0;f<c;f++)e.push(b(f+2));return O(d,e)};g.prototype.isPrime=f.prototype.isPrime=e.prototype.isPrime;e.prototype.isProbablePrime=function(c){var d=N(this);if(d!==a)return d;d=this.abs();c=c===a?5:c;for(var e=[],f=0;f<c;f++)e.push(b.randBetween(2,d.minus(2)));return O(d,e)};g.prototype.isProbablePrime=f.prototype.isProbablePrime=e.prototype.isProbablePrime;e.prototype.modInv=function(a){for(var c=b.zero,d=b.one,e=A(a),f=this.abs(),
g,k,h;!f.isZero();)g=e.divide(f),k=c,h=e,c=d,e=f,d=k.subtract(g.multiply(d)),f=h.subtract(g.multiply(f));if(!e.isUnit())throw Error(this.toString()+" and "+a.toString()+" are not co-prime");-1===c.compare(0)&&(c=c.add(a));return this.isNegative()?c.negate():c};g.prototype.modInv=f.prototype.modInv=e.prototype.modInv;e.prototype.next=function(){var a=this.value;return this.sign?C(a,1,this.sign):new e(B(a,1),this.sign)};f.prototype.next=function(){var a=this.value;return 9007199254740992>a+1?new f(a+
1):new e(T,!1)};g.prototype.next=function(){return new g(this.value+BigInt(1))};e.prototype.prev=function(){var a=this.value;return this.sign?new e(B(a,1),!0):C(a,1,this.sign)};f.prototype.prev=function(){var a=this.value;return-9007199254740992<a-1?new f(a-1):new e(T,!0)};g.prototype.prev=function(){return new g(this.value-BigInt(1))};for(var S=[1];1E7>=2*S[S.length-1];)S.push(2*S[S.length-1]);var ea=S.length,aa=S[ea-1];e.prototype.shiftLeft=function(a){a=A(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+
" is too large for shifting.");if(0>a)return this.shiftRight(-a);var b=this;if(b.isZero())return b;for(;a>=ea;)b=b.multiply(aa),a-=ea-1;return b.multiply(S[a])};g.prototype.shiftLeft=f.prototype.shiftLeft=e.prototype.shiftLeft;e.prototype.shiftRight=function(a){var b;a=A(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");if(0>a)return this.shiftLeft(-a);for(b=this;a>=ea;){if(b.isZero()||b.isNegative()&&b.isUnit())return b;b=G(b,aa);b=b[1].isNegative()?b[0].prev():
b[0];a-=ea-1}b=G(b,S[a]);return b[1].isNegative()?b[0].prev():b[0]};g.prototype.shiftRight=f.prototype.shiftRight=e.prototype.shiftRight;e.prototype.not=function(){return this.negate().prev()};g.prototype.not=f.prototype.not=e.prototype.not;e.prototype.and=function(a){return P(this,a,function(a,b){return a&b})};g.prototype.and=f.prototype.and=e.prototype.and;e.prototype.or=function(a){return P(this,a,function(a,b){return a|b})};g.prototype.or=f.prototype.or=e.prototype.or;e.prototype.xor=function(a){return P(this,
a,function(a,b){return a^b})};g.prototype.xor=f.prototype.xor=e.prototype.xor;e.prototype.bitLength=function(){var a=this;0>a.compareTo(b(0))&&(a=a.negate().subtract(b(1)));return 0===a.compareTo(b(0))?b(0):b(R(a,b(2)).e).add(b(1))};g.prototype.bitLength=f.prototype.bitLength=e.prototype.bitLength;e.prototype.toArray=function(a){return da(this,a)};f.prototype.toArray=function(a){return da(this,a)};g.prototype.toArray=function(a){return da(this,a)};e.prototype.toString=function(b,c){b===a&&(b=10);
if(10!==b)return X(this,b,c);b=this.value;c=b.length;for(var d=String(b[--c]),e;0<=--c;)e=String(b[c]),d+="0000000".slice(e.length)+e;return(this.sign?"-":"")+d};f.prototype.toString=function(b,c){b===a&&(b=10);return 10!=b?X(this,b,c):String(this.value)};g.prototype.toString=f.prototype.toString;g.prototype.toJSON=e.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()};e.prototype.valueOf=function(){return parseInt(this.toString(),10)};e.prototype.toJSNumber=e.prototype.valueOf;
f.prototype.valueOf=function(){return this.value};f.prototype.toJSNumber=f.prototype.valueOf;g.prototype.valueOf=g.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};for(var ba=0;1E3>ba;ba++)c[ba]=A(ba),0<ba&&(c[-ba]=A(-ba));c.one=c[1];c.zero=c[0];c.minusOne=c[-1];c.max=U;c.min=Q;c.gcd=V;c.lcm=function(a,b){a=A(a).abs();b=A(b).abs();return a.divide(V(a,b)).multiply(b)};c.isInstance=function(a){return a instanceof e||a instanceof f||a instanceof g};c.randBetween=function(a,b){a=A(a);
b=A(b);var d=Q(a,b);a=U(a,b).subtract(d).add(1);if(a.isSmall)return d.add(Math.floor(Math.random()*a));a=da(a,1E7).value;b=[];for(var e=!0,f=0;f<a.length;f++){var g=e?a[f]:1E7,h=y(Math.random()*g);b.push(h);h<g&&(e=!1)}return d.add(c.fromArray(b,1E7,!1))};c.fromArray=function(a,b,c){return W(a.map(A),A(b||10),c)};return c}();a.hasOwnProperty("exports")&&(a.exports=b)});const G=async(a,b)=>{if(r.worker)return a=await r.worker.postMessage({type:w.RUN_WASM_EXPORT,export:a,parameters:b}),E(a).message.response},
pa=async(a,b)=>{if(r.worker)return a=await r.worker.postMessage({type:w.GET_WASM_MEMORY_SECTION,start:a,end:b}),a=E(a),new Uint8Array(a.message.response)},oa=async(a)=>{if(r.worker)return a=await r.worker.postMessage({type:w.GET_WASM_CONSTANT,constant:a}),E(a).message.response};class Qa{constructor(){this.canvasElement=this.coreType=this.worker=void 0;this.loadedROM=this.renderId=this.loadedAndStarted=this.ready=this.paused=!1;this.fps=0;this._resetConfig();"undefined"!==typeof window&&window.document.addEventListener("visibilitychange",
()=>{"hidden"!==document.visibilityState||this.options&&this.options.disablePauseOnHidden||this.pause()})}config(a,b){return(async()=>{await this.pause();await this.setCanvas(b);!a&&this.options||this._resetConfig();if(a&&(Object.keys(a).forEach((b)=>{void 0!==this.options[b]&&(this.options[b]=a[b])}),a.gameboySpeed)){let b=Math.floor(60*a.gameboySpeed);0>=b&&(b=1);this.options.gameboyFrameRate=b}})()}getConfig(){return this.options}setCanvas(a){return a?(async()=>{await this.pause();this.canvasElement=
a;await Y.initialize(this.canvasElement,this.options.updateGraphicsCallback)})():Promise.resolve()}getCanvas(){return this.canvasElement}loadROM(a,b){return Da.bind(this)(a,b)}play(){return(async()=>{if(this.ready){if(!this.loadedAndStarted&&(this.loadedAndStarted=!0,this.options.onLoadedAndStarted))this.options.onLoadedAndStarted();if(this.options.onPlay)this.options.onPlay();this.options.headless||(K.resumeAudioContext(),K.resetTimeStretch());await this.worker.postMessage({type:w.RESET_AUDIO_QUEUE});
this.paused=!1;this.updateId||await this.worker.postMessage({type:w.PLAY});this.renderId||this.options.headless||(this.renderId=M(()=>{na.call(this)}))}})()}pause(){return(async()=>{this.paused=!0;if(this.ready&&this.options.onPause)this.options.onPause();M.cancel(this.renderId);this.renderId=!1;this.options.headless||K.cancelAllAudio(!0);this.worker&&await this.worker.postMessage({type:w.PAUSE});await new Promise((a)=>{M(()=>{a()})})})()}reset(a){return(async()=>{this.config(a,this.canvasElement);
if(this.loadedROM)return this.loadROM(this.loadedROM)})()}saveState(){return(async()=>{await this.pause();return await D.saveState()})()}getSaveStates(){return(async()=>{let a=await D.getCartridgeObject();return a?a.saveStates:[]})()}loadState(a){return(async()=>{await this.pause();await D.loadState(a)})()}getFPS(){return this.fps}getCoreType(){return this.coreType}_resetConfig(){this.fpsTimeStamps=[];this.frameSkipCounter=0;this.options={headless:!1,disablePauseOnHidden:!1,isAudioEnabled:!0,gameboyFrameRate:60,
frameSkip:0,includeBootROM:!1,isGbcEnabled:!0,audioBatchProcessing:!1,graphicsBatchProcessing:!1,timersBatchProcessing:!1,graphicsDisableScanlineRendering:!1,audioAccumulateSamples:!1,tileRendering:!1,tileCaching:!1,updateGraphicsCallback:null,updateAudioCallback:null,saveStateCallback:null,onReady:null,onPlay:null,onPause:null,onLoadedAndStarted:null}}_instantiateWorkers(){return(async()=>{this.worker||(this.worker=await Ma(),this.worker.addMessageListener(Fa.bind(this)))})()}}const r=new Qa;H={config:r.config.bind(r),
getCoreType:r.getCoreType.bind(r),getConfig:r.getConfig.bind(r),setCanvas:r.setCanvas.bind(r),getCanvas:r.getCanvas.bind(r),loadROM:r.loadROM.bind(r),play:r.play.bind(r),pause:r.pause.bind(r),reset:r.reset.bind(r),isPlaying:()=>!r.paused,isPaused:()=>r.paused,isReady:()=>r.ready,isLoadedAndStarted:()=>r.loadedAndStarted,getVersion:()=>"0.3.3",saveState:r.saveState.bind(r),getSaveStates:r.getSaveStates.bind(r),loadState:r.loadState.bind(r),getFPS:r.getFPS.bind(r),enableDefaultJoypad:F.enableDefaultJoypad.bind(F),
disableDefaultJoypad:F.disableDefaultJoypad.bind(F),setJoypadState:F.setJoypadState.bind(F),addTouchInput:F.addTouchInput.bind(F),removeTouchInput:F.removeTouchInput.bind(F),resumeAudioContext:K.resumeAudioContext.bind(K),_getCartridgeInfo:D.getCartridgeInfo.bind(D),_saveCurrentAudioBufferToWav:()=>{if(K.audioBuffer){var a=K.audioBuffer;var b={};var c=a.numberOfChannels,d=a.sampleRate;b=b.float32?3:1;var e=3===b?32:16;if(2===c){var f=a.getChannelData(0);a=a.getChannelData(1);for(var g=f.length+a.length,
h=new Float32Array(g),l=0,n=0;l<g;)h[l++]=f[n],h[l++]=a[n],n++;f=h}else f=a.getChannelData(0);h=e/8;l=c*h;a=new ArrayBuffer(44+f.length*h);g=new DataView(a);T(g,0,"RIFF");g.setUint32(4,36+f.length*h,!0);T(g,8,"WAVE");T(g,12,"fmt ");g.setUint32(16,16,!0);g.setUint16(20,b,!0);g.setUint16(22,c,!0);g.setUint32(24,d,!0);g.setUint32(28,d*l,!0);g.setUint16(32,l,!0);g.setUint16(34,e,!0);T(g,36,"data");g.setUint32(40,f.length*h,!0);if(1===b)for(c=44,d=0;d<f.length;d++,c+=2)b=Math.max(-1,Math.min(1,f[d])),
g.setInt16(c,0>b?32768*b:32767*b,!0);else for(c=44,d=0;d<f.length;d++,c+=4)g.setFloat32(c,f[d],!0);c=new window.Blob([new DataView(a)],{type:"audio/wav"});c=window.URL.createObjectURL(c);d=document.createElement("a");document.body.appendChild(d);d.style="display: none";d.href=c;d.download="audio.wav";d.click();window.URL.revokeObjectURL(c)}},_runWasmExport:G,_getWasmMemorySection:pa,_getWasmConstant:oa,_getStepsAsString:async(a)=>{var b=await G("getStepsPerStepSet");const c=await G("getStepSets"),
d=await G("getSteps");b=va(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)},_getCyclesAsString:async(a)=>{var b=await G("getCyclesPerCycleSet");const c=await G("getCycleSets"),d=await G("getCycles");b=va(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)}};ka.WasmBoy=H;return ka}({});
//# sourceMappingURL=wasmboy.wasm.iife.js.map
