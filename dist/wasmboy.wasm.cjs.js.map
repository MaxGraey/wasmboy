{"version":3,"file":"wasmboy.wasm.cjs.js","sources":["../lib/graphics/constants.js","../lib/worker/constants.js","../lib/worker/util.js","../lib/graphics/graphics.js","../lib/audio/audio.js","../lib/memory/idb.js","../lib/memory/state.js","../lib/memory/autosave.js","../lib/memory/memory.js","../node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","../lib/controller/controller.js","worker/wasmboy.wasm.worker.js","worker/graphics.worker.js","worker/audio.worker.js","worker/controller.worker.js","worker/memory.worker.js","../lib/worker/smartworker.js","../lib/worker/instantiate.js","../lib/3p/UZIP.js","../lib/wasmboy/fetchrom.js","../lib/wasmboy/loadrom.js","../node_modules/performance-now/lib/performance-now.js","../node_modules/raf/index.js","../lib/wasmboy/render.js","../node_modules/audiobuffer-to-wav/dist/index.esm.js","../node_modules/big-integer/BigInteger.js","../lib/debug/debug.js","../lib/wasmboy/onmessage.js","../lib/wasmboy/wasmboy.js","../lib/index.js"],"sourcesContent":["// Some shared constants by the graphics lib and worker\n\nexport const GAMEBOY_CAMERA_WIDTH = 160;\nexport const GAMEBOY_CAMERA_HEIGHT = 144;\n","export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","import { GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT } from './constants';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Performance tips with canvas:\n// https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n\nclass WasmBoyGraphicsService {\n  constructor() {\n    this.worker = undefined;\n    this.updateGraphicsCallback = undefined;\n\n    this.frameQueue = undefined;\n    this.frameQueueRenderPromise = undefined;\n\n    this.canvasElement = undefined;\n    this.canvasContext = undefined;\n    this.canvasImageData = undefined;\n    this.imageDataArray = undefined;\n    this.imageDataArrayChanged = false;\n  }\n\n  initialize(canvasElement, updateGraphicsCallback) {\n    this.updateGraphicsCallback = updateGraphicsCallback;\n\n    // Initialiuze our cached wasm constants\n    // WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = this.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf();\n\n    // Reset our frame queue and render promises\n    this.frameQueue = [];\n\n    const initializeTask = async () => {\n      // Prepare our canvas\n      this.canvasElement = canvasElement;\n      this.canvasContext = this.canvasElement.getContext('2d');\n      this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;\n      this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;\n      this.canvasImageData = this.canvasContext.createImageData(GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n\n      // Add some css for smooth 8-bit canvas scaling\n      // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n      // https://caniuse.com/#feat=css-crisp-edges\n      this.canvasElement.style = `\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      `;\n\n      // Fill the canvas with a blank screen\n      // using client width since we are not requiring a width and height oin the canvas\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n      // TODO: Mention respopnsive canvas scaling in the docs\n      this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n      // Finally make sure we set our constants for our worker\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n        });\n      }\n    };\n\n    return initializeTask();\n  }\n\n  // Function to set our worker\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          this.imageDataArray = new Uint8ClampedArray(eventData.message.imageDataArrayBuffer);\n          this.imageDataArrayChanged = true;\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to render a frame\n  // Will add the frame to the frame queue to be rendered\n  // Returns the promise from this.drawFrameQueue\n  // Which resolves once all frames are rendered\n  renderFrame() {\n    // Check if we have new graphics to show\n    if (!this.imageDataArrayChanged) {\n      return;\n    }\n    this.imageDataArrayChanged = false;\n\n    // Check for a callback for accessing image data\n    if (this.updateGraphicsCallback) {\n      this.updateGraphicsCallback(this.imageDataArray);\n    }\n\n    // Add our new imageData\n    for (let i = 0; i < this.imageDataArray.length; i++) {\n      this.canvasImageData.data[i] = this.imageDataArray[i];\n    }\n\n    this.canvasContext.clearRect(0, 0, GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n    this.canvasContext.putImageData(this.canvasImageData, 0, 0);\n  }\n}\n\nexport const WasmBoyGraphics = new WasmBoyGraphicsService();\n","// Tons of help from:\n// https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html\n// https://github.com/binji/binjgb/blob/master/demo/demo.js\n// Web Audio API is tricky!\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// Define our performance constants\n// Both of these make it sound off\n// Latency controls how much delay audio has, larger = more delay, goal is to be as small as possible\n// Time remaining controls how far ahead we can be., larger = more frames rendered before playing a new set of samples. goal is to be as small as possible. May want to adjust this number according to performance of device\n// These magic numbers just come from preference, can be set as options\nconst DEFAULT_AUDIO_LATENCY_IN_MILLI = 100;\nconst WASMBOY_SAMPLE_RATE = 48000;\n\n// Some canstants that use the ones above that will allow for faster performance\nconst DEFAULT_AUDIO_LATENCY_IN_SECONDS = DEFAULT_AUDIO_LATENCY_IN_MILLI / 1000;\n\n// The minimum fps we can have, before we start time stretching for slowness\nconst SLOW_TIME_STRETCH_MIN_FPS = 57;\n\nclass WasmBoyAudioService {\n  constructor() {\n    // Wasmboy instance and memory\n    this.worker = undefined;\n    this.updateAudioCallback = undefined;\n\n    this.audioContext = undefined;\n    this.audioBuffer = undefined;\n    // The play time for our audio samples\n    this.audioPlaytime = undefined;\n    this.audioSources = [];\n\n    // Average fps for time stretching\n    this.averageTimeStretchFps = [];\n\n    // Our sound output Location, we will initialize this in init\n    this.WASMBOY_SOUND_OUTPUT_LOCATION = 0;\n  }\n\n  initialize(updateAudioCallback) {\n    const initializeTask = async () => {\n      this.updateAudioCallback = updateAudioCallback;\n\n      this.averageTimeStretchFps = [];\n      if (this.audioSources.length > 0) {\n        this.cancelAllAudio();\n      }\n      this.audioSources = [];\n\n      this._createAudioContextIfNone();\n\n      // Lastly get our audio constants\n      return this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      });\n    };\n    return initializeTask();\n  }\n\n  // Ensure that Audio is blessed.\n  // Meaning, the audioContext won't be\n  // affected by any autoplay issues.\n  // https://www.chromium.org/audio-video/autoplay\n  resumeAudioContext() {\n    this._createAudioContextIfNone();\n    if (this.audioContext.state === 'suspended') {\n      this.audioContext.resume();\n      this.audioPlaytime = this.audioContext.currentTime;\n    }\n  }\n\n  resetTimeStretch() {\n    // Simply reset our average FPS counter array\n    this.averageTimeStretchFps = [];\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Dont wait for raf.\n          // Audio being shown is not dependent on the browser drawing a frame :)\n          this.playAudio(\n            eventData.message.fps,\n            eventData.message.allowFastSpeedStretching,\n            eventData.message.numberOfSamples,\n            eventData.message.leftChannel,\n            eventData.message.rightChannel\n          );\n\n          // Next, send back how much forward latency\n          // we have\n          let latency = 0;\n          if (this.audioContext.currentTime && this.audioContext.currentTime > 0) {\n            latency = this.audioPlaytime - this.audioContext.currentTime;\n          }\n          this.worker.postMessage({\n            type: WORKER_MESSAGE_TYPE.AUDIO_LATENCY,\n            latency\n          });\n          return;\n        }\n      }\n    });\n  }\n\n  // Function to queue up and audio buyffer to be played\n  // Returns a promise so that we may \"sync by audio\"\n  // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/dau8e2w/\n  playAudio(currentFps, allowFastSpeedStretching, numberOfSamples, leftChannelBuffer, rightChannelBuffer) {\n    // Find our averageFps\n    let fps = currentFps || 60;\n\n    // Check if we got a huge fps outlier.\n    // If so, let's just reset our average.\n    // This will fix the slow gradual ramp down\n    const fpsDifference = Math.abs(currentFps - this.averageTimeStretchFps[this.averageTimeStretchFps.length - 1]);\n    if (fpsDifference && fpsDifference >= 15) {\n      this.resetTimeStretch();\n    }\n\n    // Find our average fps for time stretching\n    this.averageTimeStretchFps.push(currentFps);\n    // TODO Make the multiplier Const the timeshift speed\n    if (this.averageTimeStretchFps.length > Math.floor(SLOW_TIME_STRETCH_MIN_FPS * 3)) {\n      this.averageTimeStretchFps.shift();\n    }\n\n    // Make sure we have a minimum number of time stretch fps timestamps to judge the average time\n    if (this.averageTimeStretchFps.length >= SLOW_TIME_STRETCH_MIN_FPS) {\n      fps = this.averageTimeStretchFps.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue;\n      });\n      fps = Math.floor(fps / this.averageTimeStretchFps.length);\n    }\n\n    // Find if we should time stretch this sample or not from our current fps\n    let playbackRate = 1.0;\n    if (fps < SLOW_TIME_STRETCH_MIN_FPS || allowFastSpeedStretching) {\n      // Has to be 60 to get accurent playback regarless of fps cap\n      playbackRate = playbackRate * (fps / 60);\n      if (playbackRate <= 0) {\n        playbackRate = 0.01;\n      }\n    }\n\n    // Create an audio buffer, with a left and right channel\n    this.audioBuffer = this.audioContext.createBuffer(2, numberOfSamples, WASMBOY_SAMPLE_RATE);\n    if (this.audioBuffer.copyToChannel) {\n      this.audioBuffer.copyToChannel(new Float32Array(leftChannelBuffer), 0, 0);\n      this.audioBuffer.copyToChannel(new Float32Array(rightChannelBuffer), 1, 0);\n    } else {\n      // Safari fallback\n      this.audioBuffer.getChannelData(0).set(new Float32Array(leftChannelBuffer));\n      this.audioBuffer.getChannelData(1).set(new Float32Array(rightChannelBuffer));\n    }\n\n    // Get an AudioBufferSourceNode.\n    // This is the AudioNode to use when we want to play an AudioBuffer\n    let source = this.audioContext.createBufferSource();\n\n    // set the buffer in the AudioBufferSourceNode\n    source.buffer = this.audioBuffer;\n\n    // Set our playback rate for time resetretching\n    source.playbackRate.setValueAtTime(playbackRate, this.audioContext.currentTime);\n\n    // Call our callback, if we have one\n    let finalNode = source;\n    if (this.updateAudioCallback) {\n      const responseNode = this.updateAudioCallback(this.audioContext, source);\n      if (responseNode) {\n        finalNode = responseNode;\n      }\n    }\n\n    // connect the AudioBufferSourceNode to the\n    // destination so we can hear the sound\n    finalNode.connect(this.audioContext.destination);\n\n    // Check if we made it in time\n    // Idea from: https://github.com/binji/binjgb/blob/master/demo/demo.js\n    let audioContextCurrentTime = this.audioContext.currentTime;\n    let audioContextCurrentTimeWithLatency = audioContextCurrentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n    this.audioPlaytime = this.audioPlaytime || audioContextCurrentTimeWithLatency;\n    if (this.audioPlaytime < audioContextCurrentTime) {\n      // We took too long, or something happen and hiccup'd the emulator, reset audio playback times\n      this.cancelAllAudio();\n      this.audioPlaytime = audioContextCurrentTimeWithLatency;\n    }\n\n    // start the source playing\n    source.start(this.audioPlaytime);\n\n    // Set our new audio playtime goal\n    const sourcePlaybackLength = numberOfSamples / (WASMBOY_SAMPLE_RATE * playbackRate);\n    this.audioPlaytime = this.audioPlaytime + sourcePlaybackLength;\n\n    // Cancel all audio sources on the tail that play before us\n    while (\n      this.audioSources[this.audioSources.length - 1] &&\n      this.audioSources[this.audioSources.length - 1].playtime <= this.audioPlaytime\n    ) {\n      this.audioSources[this.audioSources.length - 1].source.stop();\n      this.audioSources.pop();\n    }\n\n    // Add the source so we can stop this if needed\n    this.audioSources.push({\n      source: source,\n      playTime: this.audioPlaytime,\n      fps: fps\n    });\n\n    // Shift ourselves out when finished\n    const timeUntilSourceEnds = this.audioPlaytime - this.audioContext.currentTime + 500;\n    setTimeout(() => {\n      this.audioSources.shift();\n    }, timeUntilSourceEnds);\n  }\n\n  cancelAllAudio(stopCurrentAudio) {\n    if (!this.audioContext) {\n      return;\n    }\n\n    // Cancel all audio That was queued to play\n    for (let i = 0; i < this.audioSources.length; i++) {\n      if (stopCurrentAudio || this.audioSources[i].playTime > this.audioPlaytime) {\n        this.audioSources[i].source.stop();\n      }\n    }\n\n    // Reset our audioPlaytime\n    this.audioPlaytime = this.audioContext.currentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n  }\n\n  _createAudioContextIfNone() {\n    if (!this.audioContext) {\n      // Get our Audio context\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    }\n  }\n}\n\nexport const WasmBoyAudio = new WasmBoyAudioService();\n","// Get our idb instance, and initialize to asn idb-keyval\n// This is so we don't get the default keyval DB name. And will allow\n// Parent projects to use the slimmer idb keyval\n// https://www.npmjs.com/package/idb\n\n// Need to wrap in rollup replace to stop\n// node commonjs from breaking\n/*ROLLUP_REPLACE_BROWSER\nimport idb from 'idb';\nROLLUP_REPLACE_BROWSER*/\n\nlet keyval = false;\n\n// Get our idb dPromise\nif (typeof window !== 'undefined') {\n  const dbPromise = idb.open('wasmboy', 1, upgradeDB => {\n    upgradeDB.createObjectStore('keyval');\n  });\n\n  // Get our idb-keyval instance\n  keyval = {\n    get(key) {\n      return dbPromise.then(db => {\n        return db\n          .transaction('keyval')\n          .objectStore('keyval')\n          .get(key);\n      });\n    },\n    set(key, val) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').put(val, key);\n        return tx.complete;\n      });\n    },\n    delete(key) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').delete(key);\n        return tx.complete;\n      });\n    },\n    clear() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').clear();\n        return tx.complete;\n      });\n    },\n    keys() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval');\n        const keys = [];\n        const store = tx.objectStore('keyval');\n\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // openKeyCursor isn't supported by Safari, so we fall back\n        (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n          if (!cursor) return;\n          keys.push(cursor.key);\n          cursor.continue();\n        });\n\n        return tx.complete.then(() => keys);\n      });\n    }\n  };\n}\n\nexport const idbKeyval = keyval;\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n//  Will save the state in parts, to easy memory map changes:\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_SAVE_STATE_SCHEMA = {\n  wasmboyMemory: {\n    wasmBoyInternalState: [],\n    wasmBoyPaletteMemory: [],\n    gameBoyMemory: [],\n    cartridgeRam: []\n  },\n  date: undefined,\n  isAuto: undefined\n};\n\n// Function to return a save state of the current memory\nexport function getSaveState() {\n  // Save our internal wasmboy state to memory\n  // Should be done whenever we send back memory\n  // this.wasmInstance.exports.saveState();\n\n  let saveState = Object.assign({}, WASMBOY_SAVE_STATE_SCHEMA);\n\n  saveState.wasmboyMemory.wasmBoyInternalState = this.internalState;\n  saveState.wasmboyMemory.wasmBoyPaletteMemory = this.paletteMemory;\n  saveState.wasmboyMemory.gameBoyMemory = this.gameboyMemory;\n  saveState.wasmboyMemory.cartridgeRam = this.cartridgeRam;\n  saveState.date = Date.now();\n  saveState.isAuto = false;\n\n  if (this.saveStateCallback) {\n    this.saveStateCallback(saveState);\n  }\n\n  return saveState;\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Need to add a return value, and force all code in the block to be sync\n// https://stackoverflow.com/questions/7255649/window-onbeforeunload-not-working\n// http://vaughnroyko.com/idbonbeforeunload/\n// https://bugzilla.mozilla.org/show_bug.cgi?id=870645\n\n// Solution:\n// ~~Try to force sync: https://www.npmjs.com/package/deasync~~ Didn't work, requires fs\n// Save to local storage, and pick it back up in init: https://bugs.chromium.org/p/chromium/issues/detail?id=144862\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\n\n// Function to create a save state, and store it as a localstorage token\nfunction _prepareAndStoreAutoSave() {\n  // Check if the game is currently playing\n  if (!this.internalState) {\n    return null;\n  }\n\n  // Get our cartridge ram and header\n  // Use this.cartridgeHeader and this.cartridgeRam\n  //const header = getCartridgeHeader.bind(this)();\n  //const cartridgeRam = getCartridgeRam.bind(this)();\n\n  // Get our save state, and un type our arrays\n  const saveState = getSaveState.bind(this)();\n  const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n  for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n    saveState.wasmboyMemory[saveStateMemoryKeys[i]] = Array.prototype.slice.call(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n  }\n\n  // Set isAuto\n  saveState.isAuto = true;\n\n  // Need to conert types arrays, and back, or selse wll get indexed JSON\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n\n  localStorage.setItem(\n    this.WASMBOY_UNLOAD_STORAGE,\n    JSON.stringify({\n      header: Array.prototype.slice.call(this.cartridgeHeader),\n      cartridgeRam: Array.prototype.slice.call(this.cartridgeRam),\n      saveState: saveState\n    })\n  );\n\n  return null;\n}\n\n// Function to find any autosaves in localstorage, and commit them to our idb\nfunction _findAndCommitAutoSave() {\n  const findAndCommitAutoSaveTask = async () => {\n    // Load any unloaded storage in our localStorage\n    const unloadStorage = localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);\n    if (unloadStorage) {\n      const unloadStorageObject = JSON.parse(unloadStorage);\n      localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);\n\n      const header = new Uint8Array(unloadStorageObject.header);\n      const cartridgeRam = new Uint8Array(unloadStorageObject.cartridgeRam);\n\n      // Get our save state, and re-type our array\n      const saveState = unloadStorageObject.saveState;\n      if (saveState) {\n        const saveStateMemoryKeys = Object.keys(saveState.wasmboyMemory);\n        for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n          saveState.wasmboyMemory[saveStateMemoryKeys[i]] = new Uint8Array(saveState.wasmboyMemory[saveStateMemoryKeys[i]]);\n        }\n      }\n\n      await this.saveCartridgeRam(header, cartridgeRam);\n      await this.saveState(header, saveState);\n    }\n  };\n\n  return findAndCommitAutoSaveTask();\n}\n\n// Function to set event listeners to run our unload handler\nexport function initializeAutoSave() {\n  // Set listeners to ensure we save our cartridge ram before closing\n  window.addEventListener(\n    'beforeunload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'unload',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  window.addEventListener(\n    'pagehide',\n    () => {\n      _prepareAndStoreAutoSave.bind(this)();\n    },\n    false\n  );\n  // Mobile Page visibility, for pressing home, closing tabs, task switcher, etc...\n  // https://www.igvita.com/2015/11/20/dont-lose-user-and-app-state-use-page-visibility/\n  document.addEventListener('visibilitychange', () => {\n    // fires when user switches tabs, apps, goes to homescreen, etc.\n    // NOTE: This will not create a new save state in desktop browser,\n    // Because the localstorage string is only picked up on refresh :)\n    // Unless you force kill the browser or something, which is what we want\n    // Anyways\n    if (document.visibilityState === 'hidden') {\n      _prepareAndStoreAutoSave.bind(this)();\n    }\n  });\n\n  // Restore any autosave lingering to be committed\n  return _findAndCommitAutoSave.bind(this)();\n}\n","import { idbKeyval } from './idb';\n\n// Import worker stuff\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// import Functions involving GB and WasmBoy memory\nimport { getSaveState } from './state.js';\nimport { initializeAutoSave } from './autosave.js';\n\nclass WasmBoyMemoryService {\n  constructor() {\n    this.worker = undefined;\n    this.saveStateCallback = undefined;\n    this.loadedCartridgeMemoryState = {\n      ROM: false,\n      RAM: false\n    };\n\n    // Our different types of memory\n    this.cartridgeRom = undefined;\n    this.cartridgeHeader = undefined;\n    this.cartridgeRam = undefined;\n    this.gameboyMemory = undefined;\n    this.paletteMemory = undefined;\n    this.internalState = undefined;\n\n    // Going to set the key for idbKeyval as the cartridge header.\n    // Then, for each cartridge, it will return an object.\n    // there will be a cartridgeRam Key, settings Key, and a saveState key\n    // Not going to make one giant object, as we want to keep idb transactions light and fast\n    this.WASMBOY_UNLOAD_STORAGE = 'WASMBOY_UNLOAD_STORAGE';\n\n    // Define some constants since calls to wasm are expensive\n    this.WASMBOY_GAME_BYTES_LOCATION = 0;\n    this.WASMBOY_GAME_RAM_BANKS_LOCATION = 0;\n    this.WASMBOY_INTERNAL_STATE_SIZE = 0;\n    this.WASMBOY_INTERNAL_STATE_LOCATION = 0;\n    this.WASMBOY_INTERNAL_MEMORY_SIZE = 0;\n    this.WASMBOY_INTERNAL_MEMORY_LOCATION = 0;\n    this.WASMBOY_PALETTE_MEMORY_SIZE = 0;\n    this.WASMBOY_PALETTE_MEMORY_LOCATION = 0;\n  }\n\n  initialize(headless, saveStateCallback) {\n    const initializeTask = async () => {\n      if (headless) {\n        this.saveStateCallback = saveStateCallback;\n\n        await this._initializeConstants();\n      } else {\n        this.saveStateCallback = saveStateCallback;\n\n        await this._initializeConstants();\n\n        // initialize the autosave feature\n        await initializeAutoSave.call(this);\n      }\n    };\n\n    return initializeTask();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n\n    // Also set our handler\n    this.worker.addMessageListener(event => {\n      const eventData = getEventData(event);\n\n      switch (eventData.message.type) {\n        case WORKER_MESSAGE_TYPE.UPDATED: {\n          // Simply set our memory\n          const memoryTypes = Object.keys(eventData.message);\n          delete memoryTypes.type;\n\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n            this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n            this.cartridgeRam = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n            this.gameboyMemory = new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n            this.paletteMemory = new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]);\n          }\n          if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n            this.internalState = new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]);\n          }\n\n          return;\n        }\n      }\n    });\n  }\n\n  getLoadedCartridgeMemoryState() {\n    return this.loadedCartridgeMemoryState;\n  }\n\n  clearMemory() {\n    // Clear Wasm memory\n    // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY\n      })\n      .then(event => {\n        this.loadedCartridgeMemoryState.ROM = false;\n        this.loadedCartridgeMemoryState.RAM = false;\n\n        // Reset everything\n        this.cartridgeRom = undefined;\n        this.cartridgeHeader = undefined;\n        this.cartridgeRam = undefined;\n        this.gameboyMemory = undefined;\n        this.paletteMemory = undefined;\n        this.internalState = undefined;\n      });\n  }\n\n  loadCartridgeRom(ROM) {\n    const loadTask = async () => {\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_ROM] = ROM.buffer;\n\n      // Don't pass the rom as a transferrable, since,\n      // We want to keep a copy of it for reset\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.ROM = true;\n        });\n\n      // Also get our cartridge header\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_ROM, MEMORY_TYPE.CARTRIDGE_HEADER]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRom = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]);\n          this.cartridgeHeader = new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_HEADER]);\n        });\n    };\n\n    return loadTask();\n  }\n\n  // Function to save the cartridge ram\n  // This emulates the cartridge having a battery to\n  // Keep things like Pokemon Save data in memory\n  // Also allows passing in a a Uint8Array header and ram to be set manually\n  saveCartridgeRam(passedHeader, passedCartridgeRam) {\n    const saveCartridgeRamTask = async () => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      let header;\n      let cartridgeRam;\n      if (passedHeader && passedCartridgeRam) {\n        header = passedHeader;\n        cartridgeRam = passedCartridgeRam;\n      } else {\n        header = this.cartridgeHeader;\n        cartridgeRam = this.cartridgeRam;\n      }\n\n      if (!header || !cartridgeRam) {\n        throw new Error('Error parsing the cartridgeRam or cartridge header');\n      }\n\n      // Get our cartridge object\n      let cartridgeObject = await idbKeyval.get(header);\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n\n      // Set the cartridgeRam to our cartridgeObject\n      cartridgeObject.cartridgeRam = cartridgeRam;\n\n      await idbKeyval.set(header, cartridgeObject);\n    };\n\n    return saveCartridgeRamTask();\n  }\n\n  // function to load the cartridge ram\n  // opposite of above\n  loadCartridgeRam() {\n    const loadCartridgeRamTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      const cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject || !cartridgeObject.cartridgeRam) {\n        return;\n      }\n\n      // Set the cartridgeRam\n      // Don't transfer, because we want to keep a reference to it\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeObject.cartridgeRam.buffer;\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        })\n        .then(event => {\n          this.loadedCartridgeMemoryState.RAM = true;\n          this.cartridgeRam = cartridgeObject.cartridgeRam;\n        });\n    };\n    return loadCartridgeRamTask();\n  }\n\n  // Function to save the state to the indexeddb\n  saveState(passedHeader, passedSaveState) {\n    const saveStateTask = async () => {\n      // Get our save state\n      let saveState;\n      let header;\n      if (passedHeader && passedSaveState) {\n        saveState = passedSaveState;\n        header = passedHeader;\n      } else {\n        saveState = getSaveState.call(this);\n        header = this.cartridgeHeader;\n      }\n\n      if (!header) {\n        throw new Error('Error parsing the cartridge header');\n      }\n\n      let cartridgeObject = await idbKeyval.get(header);\n\n      if (!cartridgeObject) {\n        cartridgeObject = {};\n      }\n      if (!cartridgeObject.saveStates) {\n        cartridgeObject.saveStates = [];\n      }\n\n      cartridgeObject.saveStates.push(saveState);\n\n      await idbKeyval.set(header, cartridgeObject);\n\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      const header = this.cartridgeHeader;\n\n      if (!header) {\n        throw new Error('Error getting the cartridge header');\n      }\n\n      if (!saveState) {\n        const cartridgeObject = await idbKeyval.get(header);\n        if (!cartridgeObject || !cartridgeObject.saveStates) {\n          throw new Error('No Save State passed, and no cartridge object found');\n          return;\n        }\n        saverState = cartridgeObject.saveStates[0];\n      }\n\n      const workerMemoryObject = {};\n      workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = saveState.wasmboyMemory.cartridgeRam.buffer;\n      workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = saveState.wasmboyMemory.gameBoyMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY] = saveState.wasmboyMemory.wasmBoyPaletteMemory.buffer;\n      workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE] = saveState.wasmboyMemory.wasmBoyInternalState.buffer;\n\n      await this.worker.postMessage(\n        {\n          type: WORKER_MESSAGE_TYPE.SET_MEMORY,\n          ...workerMemoryObject\n        },\n        [\n          workerMemoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n          workerMemoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n          workerMemoryObject[MEMORY_TYPE.INTERNAL_STATE]\n        ]\n      );\n\n      await this.worker\n        .postMessage({\n          type: WORKER_MESSAGE_TYPE.GET_MEMORY,\n          memoryTypes: [MEMORY_TYPE.CARTRIDGE_RAM, MEMORY_TYPE.GAMEBOY_MEMORY, MEMORY_TYPE.PALETTE_MEMORY, MEMORY_TYPE.INTERNAL_STATE]\n        })\n        .then(event => {\n          const eventData = getEventData(event);\n          this.cartridgeRam = eventData.message[MEMORY_TYPE.CARTRIDGE_RAM];\n          this.gameboyMemory = eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY];\n          this.paletteMemory = eventData.message[MEMORY_TYPE.PALETTE_MEMORY];\n          this.internalState = eventData.message[MEMORY_TYPE.INTERNAL_STATE];\n        });\n    };\n\n    return loadStateTask();\n  }\n\n  // Function to return the current cartridge object\n  getCartridgeObject() {\n    return idbKeyval.get(this.cartridgeHeader);\n  }\n\n  // Function to return all informationh aboyut the currently loaded cart.\n  // This will include, the ROM, the RAM, the header, and the indivudal pieces of the header\n  // See: http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  getCartridgeInfo() {\n    if (!this.loadedCartridgeMemoryState.ROM) {\n      return Promise.reject('No ROM has been loaded');\n    }\n\n    let getCartridgeInfoTask = async () => {\n      const cartridgeInfo = {};\n\n      cartridgeInfo.header = this.cartridgeHeader;\n      cartridgeInfo.ROM = this.cartridgeRom;\n      cartridgeInfo.RAM = this.cartridgeRam;\n\n      // Now parse our header for additional information\n      cartridgeInfo.nintendoLogo = cartridgeInfo.ROM.slice(0x104, 0x134);\n\n      cartridgeInfo.title = cartridgeInfo.ROM.slice(0x134, 0x144);\n      cartridgeInfo.titleAsString = String.fromCharCode.apply(null, cartridgeInfo.title);\n\n      cartridgeInfo.manufacturerCode = cartridgeInfo.ROM.slice(0x13f, 0x143);\n\n      cartridgeInfo.CGBFlag = cartridgeInfo.ROM[0x143];\n\n      cartridgeInfo.newLicenseeCode = cartridgeInfo.ROM.slice(0x144, 0x146);\n\n      cartridgeInfo.SGBFlag = cartridgeInfo.ROM[0x146];\n\n      cartridgeInfo.cartridgeType = cartridgeInfo.ROM[0x147];\n\n      cartridgeInfo.ROMSize = cartridgeInfo.ROM[0x148];\n\n      cartridgeInfo.RAMSize = cartridgeInfo.ROM[0x149];\n\n      cartridgeInfo.destinationCode = cartridgeInfo.ROM[0x14a];\n\n      cartridgeInfo.oldLicenseeCode = cartridgeInfo.ROM[0x14b];\n\n      cartridgeInfo.maskROMVersionNumber = cartridgeInfo.ROM[0x14c];\n\n      cartridgeInfo.headerChecksum = cartridgeInfo.ROM[0x14d];\n\n      cartridgeInfo.globalChecksum = cartridgeInfo.ROM.slice(0x14e, 0x150);\n\n      return cartridgeInfo;\n    };\n\n    return getCartridgeInfoTask();\n  }\n\n  _initializeConstants() {\n    // Initialize our cached wasm constants\n    return this.worker\n      .postMessage({\n        type: WORKER_MESSAGE_TYPE.GET_CONSTANTS\n      })\n      .then(event => {\n        const eventData = getEventData(event);\n        Object.keys(this).forEach(key => {\n          if (eventData.message[key] !== undefined) {\n            this[key] = eventData.message[key];\n          }\n        });\n      });\n  }\n}\n\n// Create a singleton to export\nexport const WasmBoyMemory = new WasmBoyMemoryService();\n","// Define a keyboard key schema\nvar keyInputSchema = {\n  ID: undefined,\n  ACTIVE: false,\n  KEY_CODE: undefined\n\n  // Define a gamepad button schema\n  // https://w3c.github.io/gamepad/#remapping\n};var gamepadInputSchema = {\n  ID: undefined,\n  ACTIVE: false,\n  BUTTON_ID: undefined,\n  JOYSTICK: {\n    AXIS_ID: undefined,\n    IS_POSITIVE: undefined\n  }\n};\n\nvar touchInputSchema = {\n  ID: undefined,\n  ACTIVE: false,\n  ELEMENT: undefined,\n  TYPE: undefined,\n  DIRECTION: undefined,\n  EVENT_HANDLER: undefined,\n  BOUNDING_RECT: undefined\n\n  // Define our finaly kerboard schema here\n};var keyMapSchema = {\n  UP: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  RIGHT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  DOWN: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  LEFT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  A: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  B: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  SELECT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  START: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  }\n\n  // Function to return an ID for our input\n  // https://stackoverflow.com/questions/6860853/generate-random-string-for-div-id\n};function getInputId() {\n\n  var idGenerator = function idGenerator() {\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 10);\n  };\n\n  var stringId = \"\" + idGenerator() + idGenerator();\n  return stringId.slice();\n}\n\nfunction getKeyInput(keyCode) {\n  var input = Object.assign({}, keyInputSchema);\n  input.ID = getInputId();\n  input.KEY_CODE = keyCode;\n  return input;\n}\n\nfunction getGamepadInput(gamepadButtonId, axisId, axisIsPositive) {\n  var input = Object.assign({}, gamepadInputSchema);\n  input.ID = getInputId();\n  input.JOYSTICK = Object.assign({}, gamepadInputSchema.JOYSTICK);\n  if (gamepadButtonId || gamepadButtonId === 0) {\n    input.BUTTON_ID = gamepadButtonId;\n  } else if (axisId !== undefined && axisIsPositive !== undefined) {\n    input.JOYSTICK.AXIS_ID = axisId;\n    input.JOYSTICK.IS_POSITIVE = axisIsPositive;\n  }\n  return input;\n}\n\nfunction getTouchInput(element, type, direction, eventHandler) {\n  var input = Object.assign({}, touchInputSchema);\n\n  input.ID = getInputId();\n\n  // TODO: Check the type for a valid type\n\n  // Add our passed parameters\n  input.ELEMENT = element;\n  input.TYPE = type;\n  input.DIRECTION = direction;\n  input.EVENT_HANDLER = eventHandler;\n\n  // Add our bounding rect\n  var boundingRect = input.ELEMENT.getBoundingClientRect();\n  input.BOUNDING_RECT = boundingRect;\n\n  // Define our eventListener functions\n  var eventListenerCallback = function eventListenerCallback(event) {\n    if (input.EVENT_HANDLER) {\n      input.EVENT_HANDLER(event);\n    }\n  };\n\n  // Add event listeners to the element\n  input.ELEMENT.addEventListener(\"touchstart\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"touchmove\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"touchend\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"mousedown\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"mouseup\", eventListenerCallback);\n\n  return input;\n}\n\nfunction KeyMapSchema() {\n  return Object.assign({}, keyMapSchema);\n}\n\nvar Key = {\n\n  BACKSPACE: 8,\n  TAB: 9,\n  RETURN: 13,\n  SHIFT: 16,\n  CTRL: 17,\n  ALT: 18,\n  ESCAPE: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n\n  W: 87,\n  A: 65,\n  S: 83,\n  D: 68,\n  Q: 81,\n  E: 69,\n  X: 88,\n  Z: 90,\n\n  SEMI_COLON: 186,\n  SINGLE_QUOTE: 222,\n  BACK_SLASH: 220,\n\n  NUMPAD_0: 96,\n  NUMPAD_1: 97,\n  NUMPAD_2: 98,\n  NUMPAD_3: 99,\n  NUMPAD_4: 100,\n  NUMPAD_5: 101,\n  NUMPAD_6: 102,\n  NUMPAD_7: 103,\n  NUMPAD_8: 104,\n  NUMPAD_9: 105\n};\n\nvar keymap = KeyMapSchema();\n\n// Up\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.ARROW_UP));\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.W));\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.NUMPAD_8));\nkeymap.UP.GAMEPAD.push(getGamepadInput(12));\nkeymap.UP.GAMEPAD.push(getGamepadInput(false, 1, false));\nkeymap.UP.GAMEPAD.push(getGamepadInput(false, 3, false));\n\n// Right\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.ARROW_RIGHT));\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.D));\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.NUMPAD_6));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(15));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(false, 0, true));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(false, 2, true));\n\n// Down\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.ARROW_DOWN));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.S));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.NUMPAD_5));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.NUMPAD_2));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(13));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(false, 1, true));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(false, 3, true));\n\n// Left\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.ARROW_LEFT));\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.A));\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.NUMPAD_4));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(14));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(false, 0, false));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(false, 2, false));\n\n// A\nkeymap.A.KEYBOARD.push(getKeyInput(Key.X));\nkeymap.A.KEYBOARD.push(getKeyInput(Key.SEMI_COLON));\nkeymap.A.KEYBOARD.push(getKeyInput(Key.NUMPAD_7));\nkeymap.A.GAMEPAD.push(getGamepadInput(0));\nkeymap.A.GAMEPAD.push(getGamepadInput(1));\n\n// B\nkeymap.B.KEYBOARD.push(getKeyInput(Key.Z));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.ESCAPE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.SINGLE_QUOTE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.BACKSPACE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.NUMPAD_9));\nkeymap.B.GAMEPAD.push(getGamepadInput(2));\nkeymap.B.GAMEPAD.push(getGamepadInput(3));\n\n// Start\nkeymap.START.KEYBOARD.push(getKeyInput(Key.RETURN));\nkeymap.START.KEYBOARD.push(getKeyInput(Key.SPACE));\nkeymap.START.KEYBOARD.push(getKeyInput(Key.NUMPAD_3));\nkeymap.START.GAMEPAD.push(getGamepadInput(9));\n\n// Select\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.SHIFT));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.TAB));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.BACK_SLASH));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.NUMPAD_1));\nkeymap.SELECT.GAMEPAD.push(getGamepadInput(8));\n\nvar KEYMAP = function KEYMAP() {\n  return JSON.parse(JSON.stringify(keymap));\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n// HTML Tags that can be focused on, where the library should be disabled\n// https://www.w3schools.com/tags/ref_byfunc.asp\nvar INPUT_HTML_TAGS = ['input', 'textarea', 'button', 'select', 'option', 'optgroup', 'label', 'datalist'];\n\n// Helpers for accessing gamepad\n// Similar to: https://github.com/torch2424/picoDeploy/blob/master/src/assets/3pLibs/pico8gamepad/pico8gamepad.js\nfunction getAnalogStickAxis(gamepad, axisId) {\n  return gamepad.axes[axisId] || 0.0;\n}\n\nfunction isButtonPressed(gamepad, buttonId) {\n  return gamepad.buttons[buttonId] ? gamepad.buttons[buttonId].pressed : false;\n}\n\nvar ResponsiveGamepadService = function () {\n  function ResponsiveGamepadService() {\n    classCallCheck(this, ResponsiveGamepadService);\n\n    // Our settings\n    this.gamepadAnalogStickDeadZone = 0.25;\n    this.keyMapKeys = Object.keys(KeyMapSchema());\n    this.keyMap = KEYMAP();\n    this.enabled = false;\n    this.addedEventListeners = false;\n  }\n\n  createClass(ResponsiveGamepadService, [{\n    key: 'enable',\n    value: function enable(keyMap) {\n\n      // TODO: Verify it is a valid keymap passed\n      if (keyMap) {\n        this.keyMap = keyMap;\n      }\n\n      // Add our key event listeners\n      // Wrapping in this for preact prerender\n      if (!this.addedEventListeners && typeof window !== \"undefined\") {\n        window.addEventListener('keyup', this.updateKeyboard.bind(this));\n        window.addEventListener('keydown', this.updateKeyboard.bind(this));\n        // Add a resize listen to update the gamepad rect on resize\n        window.addEventListener(\"resize\", this.updateTouchpadRect.bind(this));\n\n        this.addedEventListeners = true;\n      }\n\n      this.enabled = true;\n    }\n\n    // Disable responsive gamepad, and remove all the listeners\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.keyMap = undefined;\n\n      this.enabled = false;\n    }\n  }, {\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: 'addTouchInput',\n    value: function addTouchInput(keyMapKey, element, type, direction) {\n      var _this = this;\n\n      // Declare our touch input\n      // TODO: May have to add the event handler after getting the input\n      var touchInput = void 0;\n      touchInput = getTouchInput(element, type, direction, function (event) {\n        _this.updateTouchpad(keyMapKey, touchInput, event);\n      });\n\n      // Add the input to our keymap\n      this.keyMap[keyMapKey].TOUCHPAD.push(touchInput);\n\n      // Return the touchInput ID so that is may be removed later\n      return touchInput.ID;\n    }\n  }, {\n    key: 'removeTouchInput',\n    value: function removeTouchInput(keyMapKey, touchInputId) {\n      // Search for the input in our touch pad for every key\n      var touchInputIndex = undefined;\n\n      this.keyMap[keyMapKey].TOUCHPAD.some(function (input, index) {\n        if (input.ID === touchInputId) {\n          touchInputIndex = index;\n          return true;\n        }\n\n        return false;\n      });\n\n      // If we found the key and index, remove the touch input\n      if (touchInputIndex !== undefined) {\n        this.keyMap[keyMapKey].TOUCHPAD.splice(touchInputIndex, 1);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'getState',\n    value: function getState() {\n      var _this2 = this;\n\n      if (!this.enabled) {\n        return {};\n      }\n\n      // Keyboard handled by listeners on window\n\n      // Update the gamepad state\n      this.updateGamepad();\n\n      // Touch Handled by listeners on touchInputs\n\n      // Create an abstracted controller state\n      var controllerState = {};\n\n      // Loop through our Keys, and quickly build our controller state\n      this.keyMapKeys.forEach(function (key) {\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var keyboardState = _this2.keyMap[key].KEYBOARD.some(function (keyInput) {\n          return keyInput.ACTIVE;\n        });\n\n        if (keyboardState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var gamepadState = _this2.keyMap[key].GAMEPAD.some(function (gamepadInput) {\n          return gamepadInput.ACTIVE;\n        });\n\n        if (gamepadState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var touchState = _this2.keyMap[key].TOUCHPAD.some(function (touchInput) {\n          return touchInput.ACTIVE;\n        });\n\n        if (touchState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        controllerState[key] = false;\n      });\n\n      // Return the controller state in case we need something from it\n      return controllerState;\n    }\n\n    // Function to return if we are ignoring input for key events\n\n  }, {\n    key: 'isIgnoringKeyEvents',\n    value: function isIgnoringKeyEvents() {\n\n      // Checking for window for preact prerender\n      if (typeof window === \"undefined\") {\n        return true;\n      }\n\n      return INPUT_HTML_TAGS.some(function (htmlTag) {\n        if (document.activeElement && document.activeElement.tagName.toLowerCase() === htmlTag.toLowerCase()) {\n          return true;\n        }\n        return false;\n      });\n    }\n\n    // Function to handle keyboard update events\n\n  }, {\n    key: 'updateKeyboard',\n    value: function updateKeyboard(keyEvent) {\n      var _this3 = this;\n\n      if (!this.enabled) {\n        return;\n      }\n\n      // Checking for window for preact prerender\n      if (typeof window === \"undefined\") {\n        return;\n      }\n\n      // Ignore the event if focus on a input-table field\n      // https://www.w3schools.com/tags/ref_byfunc.asp\n      if (keyEvent && keyEvent.target && keyEvent.target.tagName) {\n        var isTargetInputField = INPUT_HTML_TAGS.some(function (htmlTag) {\n          if (keyEvent && keyEvent.target.tagName.toLowerCase() === htmlTag.toLowerCase()) {\n            return true;\n          }\n          return false;\n        });\n\n        if (isTargetInputField) {\n          return;\n        }\n      }\n\n      // Get the new state of the key\n      var isPressed = false;\n      if (keyEvent.type === 'keydown') {\n        isPressed = true;\n      }\n\n      // Loop through our keys\n      this.keyMapKeys.forEach(function (key) {\n        _this3.keyMap[key].KEYBOARD.forEach(function (keyInput, index) {\n          if (keyInput.KEY_CODE === keyEvent.keyCode) {\n            _this3.keyMap[key].KEYBOARD[index].ACTIVE = isPressed;\n          }\n        });\n      });\n\n      // If we found a key, prevent default so page wont scroll and things\n      keyEvent.preventDefault();\n    }\n\n    // Function to check the gamepad API for the gamepad state\n\n  }, {\n    key: 'updateGamepad',\n    value: function updateGamepad() {\n      var _this4 = this;\n\n      // Similar to: https://github.com/torch2424/picoDeploy/blob/master/src/assets/3pLibs/pico8gamepad/pico8gamepad.js\n      // Gampad Diagram: https://www.html5rocks.com/en/tutorials/doodles/gamepad/#toc-gamepadinfo\n      var gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n\n      var _loop = function _loop(i) {\n\n        // Get our current gamepad\n        var gamepad = gamepads[i];\n\n        if (!gamepad) {\n          return 'continue';\n        }\n\n        // Loop through our keys\n        _this4.keyMapKeys.forEach(function (key) {\n          _this4.keyMap[key].GAMEPAD.forEach(function (gamepadInput, index) {\n\n            // Check if we are a gamepad button\n            if (_this4.keyMap[key].GAMEPAD[index].BUTTON_ID || _this4.keyMap[key].GAMEPAD[index].BUTTON_ID === 0) {\n              _this4.keyMap[key].GAMEPAD[index].ACTIVE = isButtonPressed(gamepad, _this4.keyMap[key].GAMEPAD[index].BUTTON_ID);\n            }\n\n            // Check if we are an axis\n            if (_this4.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID !== undefined && _this4.keyMap[key].GAMEPAD[index].JOYSTICK.IS_POSITIVE !== undefined) {\n              if (_this4.keyMap[key].GAMEPAD[index].JOYSTICK.IS_POSITIVE) {\n                _this4.keyMap[key].GAMEPAD[index].ACTIVE = getAnalogStickAxis(gamepad, _this4.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID) > +_this4.gamepadAnalogStickDeadZone;\n              } else {\n                _this4.keyMap[key].GAMEPAD[index].ACTIVE = getAnalogStickAxis(gamepad, _this4.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID) < -_this4.gamepadAnalogStickDeadZone;\n              }\n            }\n          });\n        });\n      };\n\n      for (var i = 0; i < gamepads.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === 'continue') continue;\n      }\n    }\n\n    // Function to update button position and size\n\n  }, {\n    key: 'updateTouchpadRect',\n    value: function updateTouchpadRect() {\n      var _this5 = this;\n\n      // Read from the DOM, and get each of our elements position, doing this here, as it is best to read from the dom in sequence\n      // use element.getBoundingRect() top, bottom, left, right to get clientX and clientY in touch events :)\n      // https://stackoverflow.com/questions/442404/retrieve-the-position-x-y-of-an-html-element\n      //console.log(\"GamepadComponent: Updating Rect()...\");\n      this.keyMapKeys.forEach(function (key) {\n        _this5.keyMap[key].TOUCHPAD.forEach(function (touchInput, index) {\n          var boundingRect = _this5.keyMap[key].TOUCHPAD[index].ELEMENT.getBoundingClientRect();\n          _this5.keyMap[key].TOUCHPAD[index].BOUNDING_RECT = boundingRect;\n        });\n      });\n    }\n\n    // Reset all Diretion keys for a DPAD for touch Inputs\n\n  }, {\n    key: 'resetTouchDpad',\n    value: function resetTouchDpad() {\n      var _this6 = this;\n\n      var dpadKeys = ['UP', 'RIGHT', 'DOWN', 'LEFT'];\n\n      dpadKeys.forEach(function (dpadKey) {\n        _this6.keyMap[dpadKey].TOUCHPAD.forEach(function (touchInput) {\n          touchInput.ACTIVE = false;\n        });\n      });\n    }\n\n    // Function called on an event of a touchInput SVG Element\n\n  }, {\n    key: 'updateTouchpad',\n    value: function updateTouchpad(keyMapKey, touchInput, event) {\n\n      if (!this.enabled) {\n        return;\n      }\n\n      if (!event || event.type.includes('touch') && !event.touches) return;\n\n      //event.stopPropagation();\n      event.preventDefault();\n\n      //this.debugCurrentTouch(event);\n\n      // Check for active event types\n      if (event.type === \"touchstart\" || event.type === \"touchmove\" || event.type === \"mousedown\") {\n        // Active\n\n        if (touchInput.TYPE === 'DPAD') {\n\n          // Calculate for the correct key\n          // Only using the first touch, since we shouldn't be having two fingers on the dpad\n          var touch = void 0;\n          if (event.type.includes('touch')) {\n            touch = event.touches[0];\n          } else if (event.type.includes('mouse')) {\n            touch = event;\n          }\n\n          // Find if the horizontal or vertical influence is greater\n          // Find our centers of our rectangles, and our unbiased X Y values on the rect\n          var rectCenterX = (touchInput.BOUNDING_RECT.right - touchInput.BOUNDING_RECT.left) / 2;\n          var rectCenterY = (touchInput.BOUNDING_RECT.bottom - touchInput.BOUNDING_RECT.top) / 2;\n          var touchX = touch.clientX - touchInput.BOUNDING_RECT.left;\n          var touchY = touch.clientY - touchInput.BOUNDING_RECT.top;\n\n          // Lesson From: picoDeploy\n          // Fix for shoot button causing the character to move right on multi touch error\n          // + 50 for some buffer\n          if (touchX > rectCenterX + touchInput.BOUNDING_RECT.width / 2 + 50) {\n            // Ignore the event\n            return;\n          }\n\n          // Create an additonal influece for horizontal, to make it feel better\n          var horizontalInfluence = touchInput.BOUNDING_RECT.width / 8;\n\n          // Determine if we are horizontal or vertical\n          var isHorizontal = Math.abs(rectCenterX - touchX) + horizontalInfluence > Math.abs(rectCenterY - touchY);\n\n          // Find if left or right from width, vice versa for height\n          if (isHorizontal) {\n            // Add a horizontal dead zone\n            var deadzoneSize = touchInput.BOUNDING_RECT.width / 20;\n            if (Math.abs(touchInput.BOUNDING_RECT.width / 2 - touchX) > deadzoneSize) {\n\n              var isLeft = touchX < touchInput.BOUNDING_RECT.width / 2;\n\n              if (isLeft && touchInput.DIRECTION === 'LEFT') {\n                touchInput.ACTIVE = true;\n              } else if (!isLeft && touchInput.DIRECTION === 'RIGHT') {\n                touchInput.ACTIVE = true;\n              } else {\n                touchInput.ACTIVE = false;\n              }\n            }\n          } else {\n            var isUp = touchY < touchInput.BOUNDING_RECT.height / 2;\n            if (isUp && touchInput.DIRECTION === 'UP') {\n              touchInput.ACTIVE = true;\n            } else if (!isUp && touchInput.DIRECTION === 'DOWN') {\n              touchInput.ACTIVE = true;\n            } else {\n              touchInput.ACTIVE = false;\n            }\n          }\n        }\n\n        // Button Type\n        if (touchInput.TYPE === 'BUTTON') {\n          touchInput.ACTIVE = true;\n        }\n      } else {\n        // Not active\n\n        // Handle Dpad Type\n        if (touchInput.TYPE === 'DPAD') {\n          this.resetTouchDpad();\n        }\n\n        // Button Type\n        if (touchInput.TYPE === 'BUTTON') {\n          touchInput.ACTIVE = false;\n        }\n      }\n    }\n  }]);\n  return ResponsiveGamepadService;\n}();\n\n// Exports\n\n\nvar ResponsiveGamepad = new ResponsiveGamepadService();\n\nexport { ResponsiveGamepad, KEYMAP as KEYMAP_DEFAULT, KEYMAP as KEYMAP_GAMEBOY };\n","// https://github.com/torch2424/responsive-gamepad\nimport { ResponsiveGamepad, KEYMAP_GAMEBOY } from 'responsive-gamepad';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\nclass WasmBoyControllerService {\n  constructor() {\n    // Our wasm instance\n    this.worker = undefined;\n    this.isEnabled = false;\n    this.enableDefaultJoypad();\n  }\n\n  initialize() {\n    return Promise.resolve();\n  }\n\n  setWorker(worker) {\n    this.worker = worker;\n  }\n\n  updateController() {\n    if (!this.isEnabled) {\n      return {};\n    }\n\n    // Create an abstracted controller state\n    const controllerState = ResponsiveGamepad.getState();\n\n    // Set the new controller state on the instance\n    this.setJoypadState(controllerState);\n\n    // Return the controller state in case we need something from it\n    return controllerState;\n  }\n\n  setJoypadState(controllerState) {\n    const setJoypadStateParamsAsArray = [\n      controllerState.UP ? 1 : 0,\n      controllerState.RIGHT ? 1 : 0,\n      controllerState.DOWN ? 1 : 0,\n      controllerState.LEFT ? 1 : 0,\n      controllerState.A ? 1 : 0,\n      controllerState.B ? 1 : 0,\n      controllerState.SELECT ? 1 : 0,\n      controllerState.START ? 1 : 0\n    ];\n\n    this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE,\n      setJoypadStateParamsAsArray\n    });\n  }\n\n  enableDefaultJoypad() {\n    this.isEnabled = true;\n\n    ResponsiveGamepad.enable(KEYMAP_GAMEBOY());\n  }\n\n  disableDefaultJoypad() {\n    this.isEnabled = false;\n\n    ResponsiveGamepad.disable(KEYMAP_GAMEBOY());\n  }\n\n  addTouchInput(keyMapKey, element, type, direction) {\n    return ResponsiveGamepad.addTouchInput(keyMapKey, element, type, direction);\n  }\n\n  removeTouchInput(keyMapKey, touchInputId) {\n    return ResponsiveGamepad.removeTouchInput(keyMapKey, touchInputId);\n  }\n}\n\nexport const WasmBoyController = new WasmBoyControllerService();\n","export default \"data:application/javascript;base64,\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6ZixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGs7Y29uc3QgbT0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6ZyhjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgZj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApLGQ9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KDMpO2ZvcihsZXQgYz0wOzE0ND5jO2MrKylmb3IobGV0IGU9MDsxNjA+ZTtlKyspe3ZhciBiPTMqKDE2MCpjK2UpO2ZvcihsZXQgYz0wOzM+YztjKyspZFtjXT1hW2IrY107Yj00KihlKzE2MCpjKTtmW2JdPWRbMF07ZltiKzFdPWRbMV07ZltiKzJdPWRbMl07ZltiKzNdPTI1NX1hPWZ9ZyhjKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bCgoYSk9PnthPWEuZGF0YT8KYS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjprPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sayk7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmsucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtoP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGgpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoaClzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZCl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6ZCxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGg9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtofHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHI9KGEpPT57YT1hLmRhdGE/YS5kYXRhOmE7aWYoYS5tZXNzYWdlKXN3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e3ZhciBiPW5ldyBVaW50OEFycmF5KGEubWVzc2FnZS5hdWRpb0J1ZmZlcik7dmFyIGQ9YS5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBjPW5ldyBGbG9hdDMyQXJyYXkoZCk7dmFyIGY9bmV3IEZsb2F0MzJBcnJheShkKTtsZXQgZz0wO2QqPTI7Zm9yKHZhciBlPTA7ZTxkO2UrPTIpY1tnXT1xKGJbZV0pLGcrKztnPTA7Zm9yKGU9MTtlPGQ7ZSs9MilmW2ddPXEoYltlXSksZysrO2I9Yy5idWZmZXI7Zj1mLmJ1ZmZlcn1tKGMoe3R5cGU6IlVQREFURUQiLGxlZnRDaGFubmVsOmIscmlnaHRDaGFubmVsOmYsCm51bWJlck9mU2FtcGxlczphLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczphLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzphLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSksW2IsZl0pfX07cCgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9YS5tZXNzYWdlLnBvcnRzWzBdO3AocixsKTttKGModm9pZCAwLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UUyI6bC5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkFVRElPX0xBVEVOQ1kiOmwucG9zdE1lc3NhZ2UoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=\"","export default \"data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==\"","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_PROD_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n    \n    ROLLUP_REPLACE_PROD_BROWSER*/\n\n    /*ROLLUP_REPLACE_DEV_BROWSER\n\n    this.worker = new Worker(workerUrl);\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_DEV_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise(resolve => {\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Import our worker urls\n// Only one of the wasmboylib imports will be used. Rollup/Babel handles which one\nimport wasmboyLibWasmWorkerUrl from '../../dist/worker/wasmboy.wasm.worker.js';\nimport wasmboyLibTsWorkerUrl from '../../dist/worker/wasmboy.ts.worker.js';\nimport wasmboyGraphicsWorkerUrl from '../../dist/worker/graphics.worker.js';\nimport wasmboyAudioWorkerUrl from '../../dist/worker/audio.worker.js';\nimport wasmboyControllerWorkerUrl from '../../dist/worker/controller.worker.js';\nimport wasmboyMemoryWorkerUrl from '../../dist/worker/memory.worker.js';\n\n// Import our Smart Worker Interface\nimport { SmartWorker } from './smartworker';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from './constants';\n\n/*ROLLUP_REPLACE_NODE\nconst { MessageChannel } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nexport const instantiateWorkers = async () => {\n  // Create our workers\n  let libWorkerUrl;\n  libWorkerUrl = wasmboyLibWasmWorkerUrl;\n  libWorkerUrl = wasmboyLibTsWorkerUrl;\n\n  const libWorker = new SmartWorker(libWorkerUrl, WORKER_ID.LIB);\n  const graphicsWorker = new SmartWorker(wasmboyGraphicsWorkerUrl, WORKER_ID.GRAPHICS);\n  const audioWorker = new SmartWorker(wasmboyAudioWorkerUrl, WORKER_ID.AUDIO);\n  const controllerWorker = new SmartWorker(wasmboyControllerWorkerUrl, WORKER_ID.CONTROLLER);\n  const memoryWorker = new SmartWorker(wasmboyMemoryWorkerUrl, WORKER_ID.MEMORY);\n  // Create an array of promises for when each worker is ready\n  const workerReadyPromises = [];\n\n  // Add our workers to an array,\n  const childWorkers = [graphicsWorker, audioWorker, controllerWorker, memoryWorker];\n\n  // Create a messaging channel between our main lib worker,\n  // And all of the children workers\n  childWorkers.forEach(childWorker => {\n    // Create our message channel\n    // https://stackoverflow.com/questions/14191394/web-workers-communication-using-messagechannel-html5\n    const messageChannel = new MessageChannel();\n\n    const workerReadyPromise = new Promise(resolve => {\n      // Our resolve function\n      let messagesReceived = 0;\n      const tryResolveWorkerReady = () => {\n        messagesReceived++;\n        if (messagesReceived >= 2) {\n          resolve();\n        }\n      };\n\n      // Post our connect messages\n      libWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: childWorker.id,\n            ports: [messageChannel.port1]\n          },\n          [messageChannel.port1]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n      childWorker\n        .postMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CONNECT,\n            workerId: libWorker.id,\n            ports: [messageChannel.port2]\n          },\n          [messageChannel.port2]\n        )\n        .then(() => {\n          tryResolveWorkerReady();\n        });\n    });\n\n    workerReadyPromises.push(workerReadyPromise);\n  });\n\n  // Wait for all workers to be ready\n  await Promise.all(workerReadyPromises);\n\n  // Finally, pass the ready workers to all of our children lib\n  WasmBoyGraphics.setWorker(graphicsWorker);\n  WasmBoyAudio.setWorker(audioWorker);\n  WasmBoyController.setWorker(controllerWorker);\n  WasmBoyMemory.setWorker(memoryWorker);\n\n  // Return the main worker for the main lib\n  return libWorker;\n};\n","// Taken/Modified From: https://github.com/photopea/UZIP.js\n\nlet UZIP = {};\n\n// Make it a hacky es module\nconst uzip = UZIP;\nexport default uzip;\n\nUZIP['parse'] = function(\n  buf // ArrayBuffer\n) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint,\n    o = 0,\n    out = {};\n  let data = new Uint8Array(buf);\n  let eocd = data.length - 4;\n\n  while (rUi(data, eocd) != 0x06054b50) eocd--;\n\n  o = eocd;\n  o += 4; // sign  = 0x06054b50\n  o += 4; // disks = 0;\n  let cnu = rUs(data, o);\n  o += 2;\n  let cnt = rUs(data, o);\n  o += 2;\n\n  let csize = rUi(data, o);\n  o += 4;\n  let coffs = rUi(data, o);\n  o += 4;\n\n  o = coffs;\n  for (let i = 0; i < cnu; i++) {\n    let sign = rUi(data, o);\n    o += 4;\n    o += 4; // versions;\n    o += 4; // flag + compr\n    o += 4; // time\n\n    let crc32 = rUi(data, o);\n    o += 4;\n    let csize = rUi(data, o);\n    o += 4;\n    let usize = rUi(data, o);\n    o += 4;\n\n    let nl = rUs(data, o),\n      el = rUs(data, o + 2),\n      cl = rUs(data, o + 4);\n    o += 6; // name, extra, comment\n    o += 8; // disk, attribs\n\n    let roff = rUi(data, o);\n    o += 4;\n    o += nl + el + cl;\n\n    UZIP._readLocal(data, roff, out, csize, usize);\n  }\n  //console.log(out);\n  return out;\n};\n\nUZIP._readLocal = function(data, o, out, csize, usize) {\n  let rUs = UZIP.bin.readUshort,\n    rUi = UZIP.bin.readUint;\n  let sign = rUi(data, o);\n  o += 4;\n  let ver = rUs(data, o);\n  o += 2;\n  let gpflg = rUs(data, o);\n  o += 2;\n  //if((gpflg&8)!=0) throw \"unknown sizes\";\n  let cmpr = rUs(data, o);\n  o += 2;\n\n  let time = rUi(data, o);\n  o += 4;\n\n  let crc32 = rUi(data, o);\n  o += 4;\n  //let csize = rUi(data, o);  o+=4;\n  //let usize = rUi(data, o);  o+=4;\n  o += 8;\n\n  let nlen = rUs(data, o);\n  o += 2;\n  let elen = rUs(data, o);\n  o += 2;\n\n  let name = UZIP.bin.readUTF8(data, o, nlen);\n  o += nlen;\n  o += elen;\n\n  //console.log(sign.toString(16), ver, gpflg, cmpr, crc32.toString(16), \"csize, usize\", csize, usize, nlen, elen, name, o);\n\n  let file = new Uint8Array(data.buffer, o);\n  if (false) {\n  } else if (cmpr == 0) out[name] = new Uint8Array(file.buffer.slice(o, o + csize));\n  else if (cmpr == 8) {\n    let buf = new Uint8Array(usize);\n    UZIP.inflateRaw(file, buf);\n    //let nbuf = pako[\"inflateRaw\"](file);\n    //for(let i=0; i<buf.length; i++) if(buf[i]!=nbuf[i]) {  console.log(buf.length, nbuf.length, usize, i);  throw \"e\";  }\n    out[name] = buf;\n  } else throw 'unknown compression method: ' + cmpr;\n};\n\nUZIP.inflateRaw = function(file, buf) {\n  return UZIP.F.inflate(file, buf);\n};\nUZIP.inflate = function(file, buf) {\n  let CMF = file[0],\n    FLG = file[1];\n  let CM = CMF & 15,\n    CINFO = CMF >>> 4;\n  //console.log(CM, CINFO,CMF,FLG);\n  return UZIP.inflateRaw(new Uint8Array(file.buffer, file.byteOffset + 2, file.length - 6), buf);\n};\nUZIP.deflate = function(data, opts /*, buf, off*/) {\n  if (opts == null) opts = { level: 6 };\n  let off = 0,\n    buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  buf[off] = 120;\n  buf[off + 1] = 156;\n  off += 2;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  let crc = UZIP.adler(data, 0, data.length);\n  buf[off + 0] = (crc >>> 24) & 255;\n  buf[off + 1] = (crc >>> 16) & 255;\n  buf[off + 2] = (crc >>> 8) & 255;\n  buf[off + 3] = (crc >>> 0) & 255;\n  return new Uint8Array(buf.buffer, 0, off + 4);\n};\nUZIP.deflateRaw = function(data, opts) {\n  if (opts == null) opts = { level: 6 };\n  let buf = new Uint8Array(50 + Math.floor(data.length * 1.1));\n  let off;\n  off = UZIP.F.deflateRaw(data, buf, off, opts.level);\n  return new Uint8Array(buf.buffer, 0, off);\n};\n\nUZIP.encode = function(obj) {\n  let tot = 0,\n    wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let zpd = {};\n  for (let p in obj) {\n    let cpr = !UZIP._noNeed(p),\n      buf = obj[p],\n      crc = UZIP.crc.crc(buf, 0, buf.length);\n    zpd[p] = { cpr: cpr, usize: buf.length, crc: crc, file: cpr ? UZIP.deflateRaw(buf) : buf };\n  }\n\n  for (let p in zpd) tot += zpd[p].file.length + 30 + 46 + 2 * UZIP.bin.sizeUTF8(p);\n  tot += 22;\n\n  let data = new Uint8Array(tot),\n    o = 0;\n  let fof = [];\n\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 0);\n  }\n  let i = 0,\n    ioff = o;\n  for (let p in zpd) {\n    let file = zpd[p];\n    fof.push(o);\n    o = UZIP._writeHeader(data, o, p, file, 1, fof[i++]);\n  }\n  let csize = o - ioff;\n\n  wUi(data, o, 0x06054b50);\n  o += 4;\n  o += 4; // disks\n  wUs(data, o, i);\n  o += 2;\n  wUs(data, o, i);\n  o += 2; // number of c d records\n  wUi(data, o, csize);\n  o += 4;\n  wUi(data, o, ioff);\n  o += 4;\n  o += 2;\n  return data.buffer;\n};\n// no need to compress .PNG, .ZIP, .JPEG ....\nUZIP._noNeed = function(fn) {\n  let ext = fn\n    .split('.')\n    .pop()\n    .toLowerCase();\n  return 'png,jpg,jpeg,zip'.indexOf(ext) != -1;\n};\n\nUZIP._writeHeader = function(data, o, p, obj, t, roff) {\n  let wUi = UZIP.bin.writeUint,\n    wUs = UZIP.bin.writeUshort;\n  let file = obj.file;\n\n  wUi(data, o, t == 0 ? 0x04034b50 : 0x02014b50);\n  o += 4; // sign\n  if (t == 1) o += 2; // ver made by\n  wUs(data, o, 20);\n  o += 2; // ver\n  wUs(data, o, 0);\n  o += 2; // gflip\n  wUs(data, o, obj.cpr ? 8 : 0);\n  o += 2; // cmpr\n\n  wUi(data, o, 0);\n  o += 4; // time\n  wUi(data, o, obj.crc);\n  o += 4; // crc32\n  wUi(data, o, file.length);\n  o += 4; // csize\n  wUi(data, o, obj.usize);\n  o += 4; // usize\n\n  wUs(data, o, UZIP.bin.sizeUTF8(p));\n  o += 2; // nlen\n  wUs(data, o, 0);\n  o += 2; // elen\n\n  if (t == 1) {\n    o += 2; // comment length\n    o += 2; // disk number\n    o += 6; // attributes\n    wUi(data, o, roff);\n    o += 4; // usize\n  }\n  let nlen = UZIP.bin.writeUTF8(data, o, p);\n  o += nlen;\n  if (t == 0) {\n    data.set(file, o);\n    o += file.length;\n  }\n  return o;\n};\n\nUZIP.crc = {\n  table: (function() {\n    let tab = new Uint32Array(256);\n    for (let n = 0; n < 256; n++) {\n      let c = n;\n      for (let k = 0; k < 8; k++) {\n        if (c & 1) c = 0xedb88320 ^ (c >>> 1);\n        else c = c >>> 1;\n      }\n      tab[n] = c;\n    }\n    return tab;\n  })(),\n  update: function(c, buf, off, len) {\n    for (let i = 0; i < len; i++) c = UZIP.crc.table[(c ^ buf[off + i]) & 0xff] ^ (c >>> 8);\n    return c;\n  },\n  crc: function(b, o, l) {\n    return UZIP.crc.update(0xffffffff, b, o, l) ^ 0xffffffff;\n  }\n};\nUZIP.adler = function(data, o, len) {\n  let a = 1,\n    b = 0;\n  let off = o,\n    end = o + len;\n  while (off < end) {\n    let eend = Math.min(off + 5552, end);\n    while (off < eend) {\n      a += data[off++];\n      b += a;\n    }\n    a = a % 65521;\n    b = b % 65521;\n  }\n  return (b << 16) | a;\n};\n\nUZIP.bin = {\n  readUshort: function(buff, p) {\n    return buff[p] | (buff[p + 1] << 8);\n  },\n  writeUshort: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n  },\n  readUint: function(buff, p) {\n    return buff[p + 3] * (256 * 256 * 256) + ((buff[p + 2] << 16) | (buff[p + 1] << 8) | buff[p]);\n  },\n  writeUint: function(buff, p, n) {\n    buff[p] = n & 255;\n    buff[p + 1] = (n >> 8) & 255;\n    buff[p + 2] = (n >> 16) & 255;\n    buff[p + 3] = (n >> 24) & 255;\n  },\n  readASCII: function(buff, p, l) {\n    let s = '';\n    for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function(data, p, s) {\n    for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  pad: function(n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function(buff, p, l) {\n    let s = '',\n      ns;\n    for (let i = 0; i < l; i++) s += '%' + UZIP.bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UZIP.bin.readASCII(buff, p, l);\n    }\n    return ns;\n  },\n  writeUTF8: function(buff, p, str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        buff[p + i] = code;\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        buff[p + i] = 192 | (code >> 6);\n        buff[p + i + 1] = 128 | ((code >> 0) & 63);\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        buff[p + i] = 224 | (code >> 12);\n        buff[p + i + 1] = 128 | ((code >> 6) & 63);\n        buff[p + i + 2] = 128 | ((code >> 0) & 63);\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        buff[p + i] = 240 | (code >> 18);\n        buff[p + i + 1] = 128 | ((code >> 12) & 63);\n        buff[p + i + 2] = 128 | ((code >> 6) & 63);\n        buff[p + i + 3] = 128 | ((code >> 0) & 63);\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  },\n  sizeUTF8: function(str) {\n    let strl = str.length,\n      i = 0;\n    for (let ci = 0; ci < strl; ci++) {\n      let code = str.charCodeAt(ci);\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) {\n        i++;\n      } else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) {\n        i += 2;\n      } else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) {\n        i += 3;\n      } else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) {\n        i += 4;\n      } else throw 'e';\n    }\n    return i;\n  }\n};\n\nUZIP.F = {};\n\nUZIP.F.deflateRaw = function(data, out, opos, lvl) {\n  let opts = [\n    /*\n\t\t ush good_length; /* reduce lazy search above this match length \n\t\t ush max_lazy;    /* do not perform lazy search above this match length \n         ush nice_length; /* quit search above this match length \n\t*/\n    /*      good lazy nice chain */\n    /* 0 */ [0, 0, 0, 0, 0] /* store only */,\n    /* 1 */ [4, 4, 8, 4, 0] /* max speed, no lazy matches */,\n    /* 2 */ [4, 5, 16, 8, 0],\n    /* 3 */ [4, 6, 16, 16, 0],\n\n    /* 4 */ [4, 10, 16, 32, 0] /* lazy matches */,\n    /* 5 */ [8, 16, 32, 32, 0],\n    /* 6 */ [8, 16, 128, 128, 0],\n    /* 7 */ [8, 32, 128, 256, 0],\n    /* 8 */ [32, 128, 258, 1024, 1],\n    /* 9 */ [32, 258, 258, 4096, 1]\n  ]; /* max compression */\n\n  let opt = opts[lvl];\n\n  let U = UZIP.F.U,\n    goodIndex = UZIP.F._goodIndex,\n    hash = UZIP.F._hash,\n    putsE = UZIP.F._putsE;\n  let i = 0,\n    pos = opos << 3,\n    cvrd = 0,\n    dlen = data.length;\n\n  if (lvl == 0) {\n    while (i < dlen) {\n      let len = Math.min(0xffff, dlen - i);\n      putsE(out, pos, i + len == dlen ? 1 : 0);\n      pos = UZIP.F._copyExact(data, i, len, out, pos + 8);\n      i += len;\n    }\n    return pos >>> 3;\n  }\n\n  let lits = U.lits,\n    strt = U.strt,\n    prev = U.prev,\n    li = 0,\n    lc = 0,\n    bs = 0,\n    ebits = 0,\n    c = 0,\n    nc = 0; // last_item, literal_count, block_start\n  if (dlen > 2) {\n    nc = UZIP.F._hash(data, 0);\n    strt[nc] = 0;\n  }\n  let nmch = 0,\n    nmci = 0;\n\n  for (i = 0; i < dlen; i++) {\n    c = nc;\n    //*\n    if (i + 1 < dlen - 2) {\n      nc = UZIP.F._hash(data, i + 1);\n      let ii = (i + 1) & 0x7fff;\n      prev[ii] = strt[nc];\n      strt[nc] = ii;\n    } //*/\n    if (cvrd <= i) {\n      if (li > 14000 || lc > 26697) {\n        if (cvrd < i) {\n          lits[li] = i - cvrd;\n          li += 2;\n          cvrd = i;\n        }\n        pos = UZIP.F._writeBlock(i == dlen - 1 || cvrd == dlen ? 1 : 0, lits, li, ebits, data, bs, i - bs, out, pos);\n        li = lc = ebits = 0;\n        bs = i;\n      }\n\n      let mch = 0;\n      //if(nmci==i) mch= nmch;  else\n      if (i < dlen - 2) mch = UZIP.F._bestMatch(data, i, prev, c, Math.min(opt[2], dlen - i), opt[3]);\n      /*\n\t\t\tif(mch!=0 && opt[4]==1 && (mch>>>16)<opt[1] && i+1<dlen-2) {\n\t\t\t\tnmch = UZIP.F._bestMatch(data, i+1, prev, nc, opt[2], opt[3]);  nmci=i+1;\n\t\t\t\t//let mch2 = UZIP.F._bestMatch(data, i+2, prev, nnc);  //nmci=i+1;\n\t\t\t\tif((nmch>>>16)>(mch>>>16)) mch=0;\n\t\t\t}//*/\n      let len = mch >>> 16,\n        dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n      if (mch != 0) {\n        let len = mch >>> 16,\n          dst = mch & 0xffff; //if(i-dst<0) throw \"e\";\n        let lgi = goodIndex(len, U.of0);\n        U.lhst[257 + lgi]++;\n        let dgi = goodIndex(dst, U.df0);\n        U.dhst[dgi]++;\n        ebits += U.exb[lgi] + U.dxb[dgi];\n        lits[li] = (len << 23) | (i - cvrd);\n        lits[li + 1] = (dst << 16) | (lgi << 8) | dgi;\n        li += 2;\n        cvrd = i + len;\n      } else {\n        U.lhst[data[i]]++;\n      }\n      lc++;\n    }\n  }\n  if (bs != i || data.length == 0) {\n    if (cvrd < i) {\n      lits[li] = i - cvrd;\n      li += 2;\n      cvrd = i;\n    }\n    pos = UZIP.F._writeBlock(1, lits, li, ebits, data, bs, i - bs, out, pos);\n    li = 0;\n    lc = 0;\n    li = lc = ebits = 0;\n    bs = i;\n  }\n  while ((pos & 7) != 0) pos++;\n  return pos >>> 3;\n};\nUZIP.F._bestMatch = function(data, i, prev, c, nice, chain) {\n  let ci = i & 0x7fff,\n    pi = prev[ci];\n  //console.log(\"----\", i);\n  let dif = (ci - pi + (1 << 15)) & 0x7fff;\n  if (pi == ci || c != UZIP.F._hash(data, i - dif)) return 0;\n  let tl = 0,\n    td = 0; // top length, top distance\n  let dlim = Math.min(0x7fff, i);\n  while (dif <= dlim && --chain != 0 && pi != ci /*&& c==UZIP.F._hash(data,i-dif)*/) {\n    if (tl == 0 || data[i + tl] == data[i + tl - dif]) {\n      let cl = UZIP.F._howLong(data, i, dif);\n      if (cl > tl) {\n        tl = cl;\n        td = dif;\n        if (tl >= nice) break; //*\n        if (dif + 2 < cl) cl = dif + 2;\n        let maxd = 0; // pi does not point to the start of the word\n        for (let j = 0; j < cl - 2; j++) {\n          let ei = (i - dif + j + (1 << 15)) & 0x7fff;\n          let li = prev[ei];\n          let curd = (ei - li + (1 << 15)) & 0x7fff;\n          if (curd > maxd) {\n            maxd = curd;\n            pi = ei;\n          }\n        } //*/\n      }\n    }\n\n    ci = pi;\n    pi = prev[ci];\n    dif += (ci - pi + (1 << 15)) & 0x7fff;\n  }\n  return (tl << 16) | td;\n};\nUZIP.F._howLong = function(data, i, dif) {\n  if (data[i] != data[i - dif] || data[i + 1] != data[i + 1 - dif] || data[i + 2] != data[i + 2 - dif]) return 0;\n  let oi = i,\n    l = Math.min(data.length, i + 258);\n  i += 3;\n  //while(i+4<l && data[i]==data[i-dif] && data[i+1]==data[i+1-dif] && data[i+2]==data[i+2-dif] && data[i+3]==data[i+3-dif]) i+=4;\n  while (i < l && data[i] == data[i - dif]) i++;\n  return i - oi;\n};\nUZIP.F._hash = function(data, i) {\n  return (((data[i] << 8) | data[i + 1]) + (data[i + 2] << 4)) & 0xffff;\n  //let hash_shift = 0, hash_mask = 255;\n  //let h = data[i+1] % 251;\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = (((h << 8) + data[i+2]) % 251);\n  //h = ((h<<hash_shift) ^ (c) ) & hash_mask;\n  //return h | (data[i]<<8);\n  //return (data[i] | (data[i+1]<<8));\n};\n//UZIP.___toth = 0;\nUZIP.saved = 0;\nUZIP.F._writeBlock = function(BFINAL, lits, li, ebits, data, o0, l0, out, pos) {\n  let U = UZIP.F.U,\n    putsF = UZIP.F._putsF,\n    putsE = UZIP.F._putsE;\n\n  //*\n  let T, ML, MD, MH, numl, numd, numh, lset, dset;\n  U.lhst[256]++;\n  T = UZIP.F.getTrees();\n  ML = T[0];\n  MD = T[1];\n  MH = T[2];\n  numl = T[3];\n  numd = T[4];\n  numh = T[5];\n  lset = T[6];\n  dset = T[7];\n\n  let cstSize = (((pos + 3) & 7) == 0 ? 0 : 8 - ((pos + 3) & 7)) + 32 + (l0 << 3);\n  let fxdSize = ebits + UZIP.F.contSize(U.fltree, U.lhst) + UZIP.F.contSize(U.fdtree, U.dhst);\n  let dynSize = ebits + UZIP.F.contSize(U.ltree, U.lhst) + UZIP.F.contSize(U.dtree, U.dhst);\n  dynSize += 14 + 3 * numh + UZIP.F.contSize(U.itree, U.ihst) + (U.ihst[16] * 2 + U.ihst[17] * 3 + U.ihst[18] * 7);\n\n  for (let j = 0; j < 286; j++) U.lhst[j] = 0;\n  for (let j = 0; j < 30; j++) U.dhst[j] = 0;\n  for (let j = 0; j < 19; j++) U.ihst[j] = 0;\n  //*/\n  let BTYPE = cstSize < fxdSize && cstSize < dynSize ? 0 : fxdSize < dynSize ? 1 : 2;\n  putsF(out, pos, BFINAL);\n  putsF(out, pos + 1, BTYPE);\n  pos += 3;\n\n  let opos = pos;\n  if (BTYPE == 0) {\n    while ((pos & 7) != 0) pos++;\n    pos = UZIP.F._copyExact(data, o0, l0, out, pos);\n  } else {\n    let ltree, dtree;\n    if (BTYPE == 1) {\n      ltree = U.fltree;\n      dtree = U.fdtree;\n    }\n    if (BTYPE == 2) {\n      UZIP.F.makeCodes(U.ltree, ML);\n      UZIP.F.revCodes(U.ltree, ML);\n      UZIP.F.makeCodes(U.dtree, MD);\n      UZIP.F.revCodes(U.dtree, MD);\n      UZIP.F.makeCodes(U.itree, MH);\n      UZIP.F.revCodes(U.itree, MH);\n\n      ltree = U.ltree;\n      dtree = U.dtree;\n\n      putsE(out, pos, numl - 257);\n      pos += 5; // 286\n      putsE(out, pos, numd - 1);\n      pos += 5; // 30\n      putsE(out, pos, numh - 4);\n      pos += 4; // 19\n\n      for (let i = 0; i < numh; i++) putsE(out, pos + i * 3, U.itree[(U.ordr[i] << 1) + 1]);\n      pos += 3 * numh;\n      pos = UZIP.F._codeTiny(lset, U.itree, out, pos);\n      pos = UZIP.F._codeTiny(dset, U.itree, out, pos);\n    }\n\n    let off = o0;\n    for (let si = 0; si < li; si += 2) {\n      let qb = lits[si],\n        len = qb >>> 23,\n        end = off + (qb & ((1 << 23) - 1));\n      while (off < end) pos = UZIP.F._writeLit(data[off++], ltree, out, pos);\n\n      if (len != 0) {\n        let qc = lits[si + 1],\n          dst = qc >> 16,\n          lgi = (qc >> 8) & 255,\n          dgi = qc & 255;\n        pos = UZIP.F._writeLit(257 + lgi, ltree, out, pos);\n        putsE(out, pos, len - U.of0[lgi]);\n        pos += U.exb[lgi];\n\n        pos = UZIP.F._writeLit(dgi, dtree, out, pos);\n        putsF(out, pos, dst - U.df0[dgi]);\n        pos += U.dxb[dgi];\n        off += len;\n      }\n    }\n    pos = UZIP.F._writeLit(256, ltree, out, pos);\n  }\n  //console.log(pos-opos, fxdSize, dynSize, cstSize);\n  return pos;\n};\nUZIP.F._copyExact = function(data, off, len, out, pos) {\n  let p8 = pos >>> 3;\n  out[p8] = len;\n  out[p8 + 1] = len >>> 8;\n  out[p8 + 2] = 255 - out[p8];\n  out[p8 + 3] = 255 - out[p8 + 1];\n  p8 += 4;\n  out.set(new Uint8Array(data.buffer, off, len), p8);\n  //for(let i=0; i<len; i++) out[p8+i]=data[off+i];\n  return pos + ((len + 4) << 3);\n};\n/*\n\tInteresting facts:\n\t- decompressed block can have bytes, which do not occur in a Huffman tree (copied from the previous block by reference)\n*/\n\nUZIP.F.getTrees = function() {\n  let U = UZIP.F.U;\n  let ML = UZIP.F._hufTree(U.lhst, U.ltree, 15);\n  let MD = UZIP.F._hufTree(U.dhst, U.dtree, 15);\n  let lset = [],\n    numl = UZIP.F._lenCodes(U.ltree, lset);\n  let dset = [],\n    numd = UZIP.F._lenCodes(U.dtree, dset);\n  for (let i = 0; i < lset.length; i += 2) U.ihst[lset[i]]++;\n  for (let i = 0; i < dset.length; i += 2) U.ihst[dset[i]]++;\n  let MH = UZIP.F._hufTree(U.ihst, U.itree, 7);\n  let numh = 19;\n  while (numh > 4 && U.itree[(U.ordr[numh - 1] << 1) + 1] == 0) numh--;\n  return [ML, MD, MH, numl, numd, numh, lset, dset];\n};\nUZIP.F.getSecond = function(a) {\n  let b = [];\n  for (let i = 0; i < a.length; i += 2) b.push(a[i + 1]);\n  return b;\n};\nUZIP.F.nonZero = function(a) {\n  let b = '';\n  for (let i = 0; i < a.length; i += 2) if (a[i + 1] != 0) b += (i >> 1) + ',';\n  return b;\n};\nUZIP.F.contSize = function(tree, hst) {\n  let s = 0;\n  for (let i = 0; i < hst.length; i++) s += hst[i] * tree[(i << 1) + 1];\n  return s;\n};\nUZIP.F._codeTiny = function(set, tree, out, pos) {\n  for (let i = 0; i < set.length; i += 2) {\n    let l = set[i],\n      rst = set[i + 1]; //console.log(l, pos, tree[(l<<1)+1]);\n    pos = UZIP.F._writeLit(l, tree, out, pos);\n    let rsl = l == 16 ? 2 : l == 17 ? 3 : 7;\n    if (l > 15) {\n      UZIP.F._putsE(out, pos, rst, rsl);\n      pos += rsl;\n    }\n  }\n  return pos;\n};\nUZIP.F._lenCodes = function(tree, set) {\n  let len = tree.length;\n  while (len != 2 && tree[len - 1] == 0) len -= 2; // when no distances, keep one code with length 0\n  for (let i = 0; i < len; i += 2) {\n    let l = tree[i + 1],\n      nxt = i + 3 < len ? tree[i + 3] : -1,\n      nnxt = i + 5 < len ? tree[i + 5] : -1,\n      prv = i == 0 ? -1 : tree[i - 1];\n    if (l == 0 && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 138);\n      if (zc < 11) set.push(17, zc - 3);\n      else set.push(18, zc - 11);\n      i += zc * 2 - 2;\n    } else if (l == prv && nxt == l && nnxt == l) {\n      let lz = i + 5;\n      while (lz + 2 < len && tree[lz + 2] == l) lz += 2;\n      let zc = Math.min((lz + 1 - i) >>> 1, 6);\n      set.push(16, zc - 3);\n      i += zc * 2 - 2;\n    } else set.push(l, 0);\n  }\n  return len >>> 1;\n};\nUZIP.F._hufTree = function(hst, tree, MAXL) {\n  let list = [],\n    hl = hst.length,\n    tl = tree.length,\n    i = 0;\n  for (i = 0; i < tl; i += 2) {\n    tree[i] = 0;\n    tree[i + 1] = 0;\n  }\n  for (i = 0; i < hl; i++) if (hst[i] != 0) list.push({ lit: i, f: hst[i] });\n  let end = list.length,\n    l2 = list.slice(0);\n  if (end == 0) return 0; // empty histogram (usually for dist)\n  if (end == 1) {\n    let lit = list[0].lit,\n      l2 = lit == 0 ? 1 : 0;\n    tree[(lit << 1) + 1] = 1;\n    tree[(l2 << 1) + 1] = 1;\n    return 1;\n  }\n  list.sort(function(a, b) {\n    return a.f - b.f;\n  });\n  let a = list[0],\n    b = list[1],\n    i0 = 0,\n    i1 = 1,\n    i2 = 2;\n  list[0] = { lit: -1, f: a.f + b.f, l: a, r: b, d: 0 };\n  while (i1 != end - 1) {\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      a = list[i0++];\n    } else {\n      a = list[i2++];\n    }\n    if (i0 != i1 && (i2 == end || list[i0].f < list[i2].f)) {\n      b = list[i0++];\n    } else {\n      b = list[i2++];\n    }\n    list[i1++] = { lit: -1, f: a.f + b.f, l: a, r: b };\n  }\n  let maxl = UZIP.F.setDepth(list[i1 - 1], 0);\n  if (maxl > MAXL) {\n    UZIP.F.restrictDepth(l2, MAXL, maxl);\n    maxl = MAXL;\n  }\n  for (i = 0; i < end; i++) tree[(l2[i].lit << 1) + 1] = l2[i].d;\n  return maxl;\n};\n\nUZIP.F.setDepth = function(t, d) {\n  if (t.lit != -1) {\n    t.d = d;\n    return d;\n  }\n  return Math.max(UZIP.F.setDepth(t.l, d + 1), UZIP.F.setDepth(t.r, d + 1));\n};\n\nUZIP.F.restrictDepth = function(dps, MD, maxl) {\n  let i = 0,\n    bCost = 1 << (maxl - MD),\n    dbt = 0;\n  dps.sort(function(a, b) {\n    return b.d == a.d ? a.f - b.f : b.d - a.d;\n  });\n\n  for (i = 0; i < dps.length; i++)\n    if (dps[i].d > MD) {\n      let od = dps[i].d;\n      dps[i].d = MD;\n      dbt += bCost - (1 << (maxl - od));\n    } else break;\n  dbt = dbt >>> (maxl - MD);\n  while (dbt > 0) {\n    let od = dps[i].d;\n    if (od < MD) {\n      dps[i].d++;\n      dbt -= 1 << (MD - od - 1);\n    } else i++;\n  }\n  for (; i >= 0; i--)\n    if (dps[i].d == MD && dbt < 0) {\n      dps[i].d--;\n      dbt++;\n    }\n  if (dbt != 0) console.log('debt left');\n};\n\nUZIP.F._goodIndex = function(v, arr) {\n  let i = 0;\n  if (arr[i | 16] <= v) i |= 16;\n  if (arr[i | 8] <= v) i |= 8;\n  if (arr[i | 4] <= v) i |= 4;\n  if (arr[i | 2] <= v) i |= 2;\n  if (arr[i | 1] <= v) i |= 1;\n  return i;\n};\nUZIP.F._writeLit = function(ch, ltree, out, pos) {\n  UZIP.F._putsF(out, pos, ltree[ch << 1]);\n  return pos + ltree[(ch << 1) + 1];\n};\n\nUZIP.F.inflate = function(data, buf) {\n  if (data[0] == 3 && data[1] == 0) return buf ? buf : new Uint8Array(0);\n  let F = UZIP.F,\n    bitsF = F._bitsF,\n    bitsE = F._bitsE,\n    decodeTiny = F._decodeTiny,\n    makeCodes = F.makeCodes,\n    codes2map = F.codes2map,\n    get17 = F._get17;\n  let U = F.U;\n\n  let noBuf = buf == null;\n  if (noBuf) buf = new Uint8Array((data.length >> 2) << 3);\n\n  let BFINAL = 0,\n    BTYPE = 0,\n    HLIT = 0,\n    HDIST = 0,\n    HCLEN = 0,\n    ML = 0,\n    MD = 0;\n  let off = 0,\n    pos = 0;\n  let lmap, dmap;\n\n  while (BFINAL == 0) {\n    BFINAL = bitsF(data, pos, 1);\n    BTYPE = bitsF(data, pos + 1, 2);\n    pos += 3;\n    //console.log(BFINAL, BTYPE);\n\n    if (BTYPE == 0) {\n      if ((pos & 7) != 0) pos += 8 - (pos & 7);\n      let p8 = (pos >>> 3) + 4,\n        len = data[p8 - 4] | (data[p8 - 3] << 8); //console.log(len);//bitsF(data, pos, 16),\n      if (noBuf) buf = UZIP.F._check(buf, off + len);\n      buf.set(new Uint8Array(data.buffer, data.byteOffset + p8, len), off);\n      //for(let i=0; i<len; i++) buf[off+i] = data[p8+i];\n      //for(let i=0; i<len; i++) if(buf[off+i] != data[p8+i]) throw \"e\";\n      pos = (p8 + len) << 3;\n      off += len;\n      continue;\n    }\n    if (noBuf) buf = UZIP.F._check(buf, off + (1 << 17));\n    if (BTYPE == 1) {\n      lmap = U.flmap;\n      dmap = U.fdmap;\n      ML = (1 << 9) - 1;\n      MD = (1 << 5) - 1;\n    }\n    if (BTYPE == 2) {\n      HLIT = bitsE(data, pos, 5) + 257;\n      HDIST = bitsE(data, pos + 5, 5) + 1;\n      HCLEN = bitsE(data, pos + 10, 4) + 4;\n      pos += 14;\n\n      let ppos = pos;\n      for (let i = 0; i < 38; i += 2) {\n        U.itree[i] = 0;\n        U.itree[i + 1] = 0;\n      }\n      let tl = 1;\n      for (let i = 0; i < HCLEN; i++) {\n        let l = bitsE(data, pos + i * 3, 3);\n        U.itree[(U.ordr[i] << 1) + 1] = l;\n        if (l > tl) tl = l;\n      }\n      pos += 3 * HCLEN; //console.log(itree);\n      makeCodes(U.itree, tl);\n      codes2map(U.itree, tl, U.imap);\n\n      lmap = U.lmap;\n      dmap = U.dmap;\n\n      let ml = decodeTiny(U.imap, (1 << tl) - 1, HLIT, data, pos, U.ltree);\n      ML = (1 << (ml >>> 24)) - 1;\n      pos += ml & 0xffffff;\n      makeCodes(U.ltree, ml >>> 24);\n      codes2map(U.ltree, ml >>> 24, lmap);\n\n      let md = decodeTiny(U.imap, (1 << tl) - 1, HDIST, data, pos, U.dtree);\n      MD = (1 << (md >>> 24)) - 1;\n      pos += md & 0xffffff;\n      makeCodes(U.dtree, md >>> 24);\n      codes2map(U.dtree, md >>> 24, dmap);\n    }\n    //let ooff=off, opos=pos;\n    while (true) {\n      let code = lmap[get17(data, pos) & ML];\n      pos += code & 15;\n      let lit = code >>> 4; //U.lhst[lit]++;\n      if (lit >>> 8 == 0) {\n        buf[off++] = lit;\n      } else if (lit == 256) {\n        break;\n      } else {\n        let end = off + lit - 254;\n        if (lit > 264) {\n          let ebs = U.ldef[lit - 257];\n          end = off + (ebs >>> 3) + bitsE(data, pos, ebs & 7);\n          pos += ebs & 7;\n        }\n        //UZIP.F.dst[end-off]++;\n\n        let dcode = dmap[get17(data, pos) & MD];\n        pos += dcode & 15;\n        let dlit = dcode >>> 4;\n        let dbs = U.ddef[dlit],\n          dst = (dbs >>> 4) + bitsF(data, pos, dbs & 15);\n        pos += dbs & 15;\n\n        //let o0 = off-dst, stp = Math.min(end-off, dst);\n        //if(stp>20) while(off<end) {  buf.copyWithin(off, o0, o0+stp);  off+=stp;  }  else\n        //if(end-dst<=off) buf.copyWithin(off, off-dst, end-dst);  else\n        //if(dst==1) buf.fill(buf[off-1], off, end);  else\n        while (off < end) {\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n          buf[off] = buf[off++ - dst];\n        }\n        off = end;\n        //while(off!=end) {  buf[off]=buf[off++-dst];  }\n      }\n    }\n    //console.log(off-ooff, (pos-opos)>>>3);\n  }\n  //console.log(UZIP.F.dst);\n  //console.log(tlen, dlen, off-tlen+tcnt);\n  return buf.length == off ? buf : buf.slice(0, off);\n};\nUZIP.F._check = function(buf, len) {\n  let bl = buf.length;\n  if (len <= bl) return buf;\n  let nbuf = new Uint8Array(bl << 1);\n  for (let i = 0; i < bl; i += 4) {\n    nbuf[i] = buf[i];\n    nbuf[i + 1] = buf[i + 1];\n    nbuf[i + 2] = buf[i + 2];\n    nbuf[i + 3] = buf[i + 3];\n  }\n  return nbuf;\n};\n\nUZIP.F._decodeTiny = function(lmap, LL, len, data, pos, tree) {\n  let opos = pos;\n  let bitsE = UZIP.F._bitsE,\n    get17 = UZIP.F._get17;\n  let dlen = len << 1,\n    i = 0,\n    mx = 0;\n  //if(pos<1000) console.log(\"--------\");\n  //console.log(\"----\", pos, \":\",  data[7],data[8], data[9], data[10], data[11]);\n  while (i < dlen) {\n    let code = lmap[get17(data, pos) & LL];\n    pos += code & 15;\n    let lit = code >>> 4; //if(pos<1000) console.log(lit, i>>>1);\n    //if(i<20)console.log(lit, code>>>9, pos);\n    if (lit <= 15) {\n      tree[i] = 0;\n      tree[i + 1] = lit;\n      if (lit > mx) mx = lit;\n      i += 2;\n    } else {\n      let ll = 0,\n        n = 0;\n      if (lit == 16) {\n        n = (3 + bitsE(data, pos, 2)) << 1;\n        pos += 2;\n        ll = tree[i - 1];\n      } else if (lit == 17) {\n        n = (3 + bitsE(data, pos, 3)) << 1;\n        pos += 3;\n      } else if (lit == 18) {\n        n = (11 + bitsE(data, pos, 7)) << 1;\n        pos += 7;\n      }\n      let ni = i + n;\n      while (i < ni) {\n        tree[i] = 0;\n        tree[i + 1] = ll;\n        i += 2;\n      }\n    }\n  }\n  let tl = tree.length;\n  while (i < tl) {\n    tree[i + 1] = 0;\n    i += 2;\n  }\n  return (mx << 24) | (pos - opos);\n};\n\nUZIP.F.makeCodes = function(tree, MAX_BITS) {\n  // code, length\n  let U = UZIP.F.U;\n  let max_code = tree.length;\n  let code, bits, n, i, len;\n\n  let bl_count = U.bl_count;\n  for (let i = 0; i <= MAX_BITS; i++) bl_count[i] = 0;\n  for (i = 1; i < max_code; i += 2) bl_count[tree[i]]++;\n\n  let next_code = U.next_code; // smallest code for each length\n\n  code = 0;\n  bl_count[0] = 0;\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n\n  for (n = 0; n < max_code; n += 2) {\n    len = tree[n + 1];\n    if (len != 0) {\n      tree[n] = next_code[len];\n      next_code[len]++;\n    }\n  }\n};\nUZIP.F.codes2map = function(tree, MAX_BITS, map) {\n  let max_code = tree.length;\n  let U = UZIP.F.U,\n    r15 = U.rev15;\n  for (let i = 0; i < max_code; i += 2)\n    if (tree[i + 1] != 0) {\n      let lit = i >> 1;\n      let cl = tree[i + 1],\n        val = (lit << 4) | cl; // :  (0x8000 | (U.of0[lit-257]<<7) | (U.exb[lit-257]<<4) | cl);\n      let rest = MAX_BITS - cl,\n        i0 = tree[i] << rest,\n        i1 = i0 + (1 << rest);\n      //tree[i]=r15[i0]>>>(15-MAX_BITS);\n      while (i0 != i1) {\n        let p0 = r15[i0] >>> (15 - MAX_BITS);\n        map[p0] = val;\n        i0++;\n      }\n    }\n};\nUZIP.F.revCodes = function(tree, MAX_BITS) {\n  let r15 = UZIP.F.U.rev15,\n    imb = 15 - MAX_BITS;\n  for (let i = 0; i < tree.length; i += 2) {\n    let i0 = tree[i] << (MAX_BITS - tree[i + 1]);\n    tree[i] = r15[i0] >>> imb;\n  }\n};\n\nUZIP.F._putsE = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n};\nUZIP.F._putsF = function(dt, pos, val) {\n  val = val << (pos & 7);\n  let o = pos >>> 3;\n  dt[o] |= val;\n  dt[o + 1] |= val >>> 8;\n  dt[o + 2] |= val >>> 16;\n};\n\nUZIP.F._bitsE = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8)) >>> (pos & 7)) & ((1 << length) - 1);\n};\nUZIP.F._bitsF = function(dt, pos, length) {\n  return ((dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7)) & ((1 << length) - 1);\n};\n/*\nUZIP.F._get9 = function(dt, pos) {\n\treturn ((dt[pos>>>3] | (dt[(pos>>>3)+1]<<8))>>>(pos&7))&511;\n} */\nUZIP.F._get17 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16)) >>> (pos & 7);\n};\nUZIP.F._get25 = function(dt, pos) {\n  // return at least 17 meaningful bytes\n  return (dt[pos >>> 3] | (dt[(pos >>> 3) + 1] << 8) | (dt[(pos >>> 3) + 2] << 16) | (dt[(pos >>> 3) + 3] << 24)) >>> (pos & 7);\n};\n\nUZIP.F.U = {\n  next_code: new Uint16Array(16),\n  bl_count: new Uint16Array(16),\n  ordr: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n  of0: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n  exb: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n  ldef: new Uint16Array(32),\n  df0: [\n    1,\n    2,\n    3,\n    4,\n    5,\n    7,\n    9,\n    13,\n    17,\n    25,\n    33,\n    49,\n    65,\n    97,\n    129,\n    193,\n    257,\n    385,\n    513,\n    769,\n    1025,\n    1537,\n    2049,\n    3073,\n    4097,\n    6145,\n    8193,\n    12289,\n    16385,\n    24577,\n    65535,\n    65535\n  ],\n  dxb: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n  ddef: new Uint32Array(32),\n  flmap: new Uint16Array(512),\n  fltree: [],\n  fdmap: new Uint16Array(32),\n  fdtree: [],\n  lmap: new Uint16Array(32768),\n  ltree: [],\n  dmap: new Uint16Array(32768),\n  dtree: [],\n  imap: new Uint16Array(512),\n  itree: [],\n  //rev9 : new Uint16Array(  512)\n  rev15: new Uint16Array(1 << 15),\n  lhst: new Uint32Array(286),\n  dhst: new Uint32Array(30),\n  ihst: new Uint32Array(19),\n  lits: new Uint32Array(15000),\n  strt: new Uint16Array(1 << 16),\n  prev: new Uint16Array(1 << 15)\n};\n\n(function() {\n  let U = UZIP.F.U;\n  let len = 1 << 15;\n  for (let i = 0; i < len; i++) {\n    let x = i;\n    x = ((x & 0xaaaaaaaa) >>> 1) | ((x & 0x55555555) << 1);\n    x = ((x & 0xcccccccc) >>> 2) | ((x & 0x33333333) << 2);\n    x = ((x & 0xf0f0f0f0) >>> 4) | ((x & 0x0f0f0f0f) << 4);\n    x = ((x & 0xff00ff00) >>> 8) | ((x & 0x00ff00ff) << 8);\n    U.rev15[i] = ((x >>> 16) | (x << 16)) >>> 17;\n  }\n\n  for (let i = 0; i < 32; i++) {\n    U.ldef[i] = (U.of0[i] << 3) | U.exb[i];\n    U.ddef[i] = (U.df0[i] << 4) | U.dxb[i];\n  }\n\n  let i = 0;\n  for (; i <= 143; i++) U.fltree.push(0, 8);\n  for (; i <= 255; i++) U.fltree.push(0, 9);\n  for (; i <= 279; i++) U.fltree.push(0, 7);\n  for (; i <= 287; i++) U.fltree.push(0, 8);\n  UZIP.F.makeCodes(U.fltree, 9);\n  UZIP.F.codes2map(U.fltree, 9, U.flmap);\n  UZIP.F.revCodes(U.fltree, 9);\n\n  for (i = 0; i < 32; i++) U.fdtree.push(0, 5);\n  UZIP.F.makeCodes(U.fdtree, 5);\n  UZIP.F.codes2map(U.fdtree, 5, U.fdmap);\n  UZIP.F.revCodes(U.fdtree, 5);\n\n  for (let i = 0; i < 19; i++) U.itree.push(0, 0);\n  for (let i = 0; i < 286; i++) U.ltree.push(0, 0);\n  for (let i = 0; i < 30; i++) U.dtree.push(0, 0);\n})();\n","// Modules\nimport uzip from '../3p/UZIP';\n\n// Collection of functions to parse roms\n// Private function to fetch a game\nexport const fetchROMAsByteArray = (ROM, loadOptions) => {\n  const fetchROMAsByteArrayTask = async () => {\n    // Check if we were passed straight bytes\n    if (ArrayBuffer.isView(ROM) && ROM.constructor === Uint8Array) {\n      return ROM;\n    } else if (typeof ROM === 'object' && ROM.size) {\n      // We were passed a file from HTML file input\n\n      // Read the file as a Uint8Array\n      const byteArray = await getROMFromFileReaderAsByteArray(ROM);\n\n      if (ROM.name.toLowerCase().endsWith('.zip')) {\n        return await parseByteArrayAsZip(byteArray);\n      }\n\n      return byteArray;\n    } else {\n      // We were passed a URL\n\n      // Fetch the file\n      // First check if we have headers\n      const fetchHeaders = {};\n      if (loadOptions && loadOptions.headers) {\n        fetchHeaders.headers = loadOptions.headers;\n      }\n\n      let bytes = await fetch(ROM, fetchHeaders).then(blob => {\n        if (!blob.ok) {\n          return Promise.reject(blob);\n        }\n        return blob.arrayBuffer();\n      });\n\n      let fileName = ROM;\n      if (loadOptions && loadOptions.fileName) {\n        fileName = loadOptions.fileName;\n      }\n\n      // Get our byteArray\n      const byteArray = new Uint8Array(bytes);\n\n      if (fileName.toLowerCase().endsWith('.zip')) {\n        return await parseByteArrayAsZip(byteArray);\n      }\n\n      return byteArray;\n    }\n  };\n\n  return fetchROMAsByteArrayTask();\n};\n\nconst getROMFromFileReaderAsByteArray = async ROM => {\n  const fileReaderByteArray = await new Promise((resolve, reject) => {\n    // Read the file object\n    // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const byteArray = new Uint8Array(fileReader.result);\n      resolve(byteArray);\n    };\n    fileReader.readAsArrayBuffer(ROM);\n  });\n  return fileReaderByteArray;\n};\n\n// Function to parse and find the gb files within an archive\nconst parseByteArrayAsZip = async byteArray => {\n  // Parse the zip using UZIP\n  const unzipObject = await uzip.parse(byteArray);\n\n  // Find the ROM in the output\n  let foundROM = false;\n  const unzipObjectKeys = Object.keys(unzipObject);\n  unzipObjectKeys.some(key => {\n    const lowercaseKey = key.toLowerCase();\n    if (lowercaseKey.includes('.gb') || lowercaseKey.includes('.gbc')) {\n      foundROM = unzipObject[key];\n      return true;\n    }\n    return false;\n  });\n\n  if (!foundROM) {\n    throw new Error('Could not find a ROM in zip...');\n  }\n\n  return foundROM;\n};\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Fetch our rom\nimport { fetchROMAsByteArray } from './fetchrom';\n\n// Get our worker message types\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\n\n// Finish request for wasm module, and fetch game\n// NOTE: **Should bind the wasmboy this here**\nexport function loadROMToWasmBoy(ROM, fetchHeaders) {\n  // Getting started with wasm\n  // http://webassembly.org/getting-started/js-api/\n  this.ready = false;\n  this.loadedAndStarted = false;\n\n  const initializeTask = async () => {\n    // Get our promises\n    const initPromises = [fetchROMAsByteArray(ROM, fetchHeaders), this._instantiateWorkers()];\n\n    if (!this.options.headless && WasmBoyMemory.getLoadedCartridgeMemoryState().RAM) {\n      initPromises.push(WasmBoyMemory.saveCartridgeRam());\n    }\n\n    let ROMAsByteArray;\n    await Promise.all(initPromises).then(responses => {\n      ROMAsByteArray = responses[0];\n    });\n\n    // Now tell the wasm module to instantiate wasm\n    const response = await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.INSTANTIATE_WASM\n    });\n\n    this.coreType = response.message.type;\n\n    return ROMAsByteArray;\n  };\n\n  const loadROMAndConfigTask = async ROM => {\n    // Clear what is currently in memory, then load the cartridge memory\n    await WasmBoyMemory.clearMemory();\n\n    // TODO: Handle passing a boot rom\n    await WasmBoyMemory.loadCartridgeRom(ROM);\n\n    // Save the game that we loaded if we need to reload the game\n    this.loadedROM = ROM;\n\n    // Run our initialization on the core\n    await this.worker.postMessage({\n      type: WORKER_MESSAGE_TYPE.CONFIG,\n      config: [\n        0, // TODO: Include Boot Rom\n        this.options.isGbcEnabled ? 1 : 0,\n        this.options.audioBatchProcessing ? 1 : 0,\n        this.options.graphicsBatchProcessing ? 1 : 0,\n        this.options.timersBatchProcessing ? 1 : 0,\n        this.options.graphicsDisableScanlineRendering ? 1 : 0,\n        this.options.audioAccumulateSamples ? 1 : 0,\n        this.options.tileRendering ? 1 : 0,\n        this.options.tileCaching ? 1 : 0\n      ],\n      options: {\n        gameboyFrameRate: this.options.gameboyFrameRate,\n        headless: this.options.headless,\n        isAudioEnabled: this.options.isAudioEnabled,\n        frameSkip: this.options.frameSkip\n      }\n    });\n  };\n\n  const loadROMTask = async () => {\n    // Pause wasmBoy\n    await this.pause();\n\n    // Initialize any needed parts of wasmboy\n    let ROM = await initializeTask();\n\n    // Check if we are running headless\n    if (this.options.headless) {\n      await WasmBoyMemory.initialize(this.options.headless, this.options.saveStateCallback);\n\n      await loadROMAndConfigTask(ROM);\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    } else {\n      // Finally intialize all of our services\n      // Initialize our services\n      await Promise.all([\n        WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback),\n        WasmBoyAudio.initialize(this.options.updateAudioCallback),\n        WasmBoyController.initialize(),\n        WasmBoyMemory.initialize(this.options.headless, this.options.saveStateCallback)\n      ]);\n\n      await loadROMAndConfigTask(ROM);\n\n      // Load the game's cartridge ram\n      await WasmBoyMemory.loadCartridgeRam();\n\n      this.ready = true;\n      if (this.options.onReady) {\n        this.options.onReady();\n      }\n    }\n  };\n\n  return loadROMTask();\n}\n","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\n// Imports\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyController } from '../controller/controller';\n\n// Function to render our emulator output\nexport function render() {\n  // Don't run if paused\n  if (this.paused) {\n    return true;\n  }\n\n  // Check if we have frameskip\n  let shouldSkipRenderingFrame = false;\n  if (this.frameSkip && this.frameSkip > 0) {\n    this.frameSkipCounter++;\n\n    if (this.frameSkipCounter < this.frameSkip) {\n      shouldSkipRenderingFrame = true;\n    } else {\n      this.frameSkipCounter = 0;\n    }\n  }\n\n  // Render the display\n  if (!shouldSkipRenderingFrame) {\n    WasmBoyGraphics.renderFrame();\n  }\n\n  // Update our controller\n  WasmBoyController.updateController();\n\n  this.renderId = raf(() => {\n    render.call(this);\n  });\n}\n","function index(buffer, opt) {\n  opt = opt || {};\n\n  var numChannels = buffer.numberOfChannels;\n  var sampleRate = buffer.sampleRate;\n  var format = opt.float32 ? 3 : 1;\n  var bitDepth = format === 3 ? 32 : 16;\n\n  var result;\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n  } else {\n    result = buffer.getChannelData(0);\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8;\n  var blockAlign = numChannels * bytesPerSample;\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n  var view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, format, true);\n  /* channel count */\n  view.setUint16(22, numChannels, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true);\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true);\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples);\n  } else {\n    writeFloat32(view, 44, samples);\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length;\n  var result = new Float32Array(length);\n\n  var index = 0;\n  var inputIndex = 0;\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true);\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nexport default index;\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        DEFAULT_ALPHABET = \"0123456789abcdefghijklmnopqrstuvwxyz\";\r\n\r\n    var supportsNativeBigInt = typeof BigInt === \"function\";\r\n\r\n    function Integer(v, radix, alphabet, caseSensitive) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function NativeBigInt(value) {\r\n        this.value = value;\r\n    }\r\n    NativeBigInt.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    NativeBigInt.prototype.add = function (v) {\r\n        return new NativeBigInt(this.value + parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.plus = NativeBigInt.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    NativeBigInt.prototype.subtract = function (v) {\r\n        return new NativeBigInt(this.value - parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n    NativeBigInt.prototype.negate = function () {\r\n        return new NativeBigInt(-this.value);\r\n    }\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n    NativeBigInt.prototype.abs = function () {\r\n        return new NativeBigInt(this.value >= 0 ? this.value : -this.value);\r\n    }\r\n\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    NativeBigInt.prototype.multiply = function (v) {\r\n        return new NativeBigInt(this.value * parseValue(v).value);\r\n    }\r\n    NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    NativeBigInt.prototype.square = function (v) {\r\n        return new NativeBigInt(this.value * this.value);\r\n    }\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        if (supportsNativeBigInt) {\r\n            return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];\r\n        }\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    NativeBigInt.prototype.over = NativeBigInt.prototype.divide = SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    var pow;\r\n    if (supportsNativeBigInt) {\r\n        // forced to use eval because ** is a syntax error on pre-ECMAScript2017 environments.\r\n        pow = eval(\"(a,b)=>a**b\");\r\n    }\r\n\r\n    NativeBigInt.prototype.pow = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value, b = n.value;\r\n        if (b === BigInt(0)) return Integer[1];\r\n        if (a === BigInt(0)) return Integer[0];\r\n        if (a === BigInt(1)) return Integer[1];\r\n        if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.isNegative()) return new NativeBigInt(BigInt(0));\r\n        return new NativeBigInt(pow(a, b));\r\n    }\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n    NativeBigInt.prototype.compareAbs = function (v) {\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        a = a >= 0 ? a : -a;\r\n        b = b >= 0 ? b : -b;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    NativeBigInt.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n        var a = this.value;\r\n        var b = parseValue(v).value;\r\n        return a === b ? 0 : a > b ? 1 : -1;\r\n    }\r\n    NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n    NativeBigInt.prototype.isEven = function () {\r\n        return (this.value & BigInt(1)) === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n    NativeBigInt.prototype.isOdd = function () {\r\n        return (this.value & BigInt(1)) === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n    NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n    NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n    NativeBigInt.prototype.isUnit = function () {\r\n        return this.abs().value === BigInt(1);\r\n    }\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    NativeBigInt.prototype.isZero = function () {\r\n        return this.value === BigInt(0);\r\n    }\r\n\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        if (n.isZero()) return false;\r\n        if (n.isUnit()) return true;\r\n        if (n.compareAbs(2) === 0) return this.isEven();\r\n        return this.mod(n).isZero();\r\n    };\r\n    NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n\r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next: for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.isUnit() || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;\r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if (bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits.toJSNumber();\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.isZero()) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.isUnit()) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n    NativeBigInt.prototype.next = function () {\r\n        return new NativeBigInt(this.value + BigInt(1));\r\n    }\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n    NativeBigInt.prototype.prev = function () {\r\n        return new NativeBigInt(this.value - BigInt(1));\r\n    }\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return Math.abs(n) <= BASE;\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (v) {\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (v) {\r\n        var remQuo;\r\n        var n = parseValue(v).toJSNumber();\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value,\r\n            x = typeof v === \"number\" ? v | LOBMASK_I :\r\n                typeof v === \"bigint\" ? v | BigInt(LOBMASK_I) :\r\n                    v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var digits = toBase(range, BASE).value;\r\n        var result = [], restricted = true;\r\n        for (var i = 0; i < digits.length; i++) {\r\n            var top = restricted ? digits[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.push(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        return low.add(Integer.fromArray(result, BASE, false));\r\n    }\r\n\r\n    var parseBase = function (text, base, alphabet, caseSensitive) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        text = String(text);\r\n        if (!caseSensitive) {\r\n            text = text.toLowerCase();\r\n            alphabet = alphabet.toLowerCase();\r\n        }\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        var alphabetValues = {};\r\n        for (i = 0; i < alphabet.length; i++) {\r\n            alphabetValues[alphabet[i]] = i;\r\n        }\r\n        for (i = 0; i < length; i++) {\r\n            var c = text[i];\r\n            if (c === \"-\") continue;\r\n            if (c in alphabetValues) {\r\n                if (alphabetValues[c] >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i];\r\n            if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\" && i < text.length);\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit, alphabet) {\r\n        alphabet = alphabet || DEFAULT_ALPHABET;\r\n        if (digit < alphabet.length) {\r\n            return alphabet[digit];\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(n.toJSNumber() - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.isUnit()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(n.toJSNumber()))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base, alphabet) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(function (x) {\r\n            return stringify(x, alphabet);\r\n        }).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    NativeBigInt.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix, alphabet);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix, alphabet) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix, alphabet);\r\n        return String(this.value);\r\n    };\r\n\r\n    NativeBigInt.prototype.toString = SmallInteger.prototype.toString;\r\n\r\n    NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n    NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {\r\n        return parseInt(this.toString(), 10);\r\n    }\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(sign ? \"-\" + v : v));\r\n        }\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (supportsNativeBigInt) {\r\n            return new NativeBigInt(BigInt(v));\r\n        }\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        if (typeof v === \"bigint\") {\r\n            return new NativeBigInt(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = parseValue(i);\r\n        if (i > 0) Integer[-i] = parseValue(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","import { WasmBoyLib } from '../wasmboy/wasmboy';\nimport { WasmBoyAudio } from '../audio/audio';\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\n\n// https://www.npmjs.com/package/audiobuffer-to-wav\n// https://github.com/Jam3/audiobuffer-to-wav/blob/master/demo/index.js\nimport toWav from 'audiobuffer-to-wav';\n\n// https://www.npmjs.com/package/big-integer\nimport bigInt from 'big-integer';\n\nexport const saveCurrentAudioBufferToWav = () => {\n  if (!WasmBoyAudio.audioBuffer) {\n    return;\n  }\n\n  const wav = toWav(WasmBoyAudio.audioBuffer);\n  const blob = new window.Blob([new DataView(wav)], {\n    type: 'audio/wav'\n  });\n\n  const url = window.URL.createObjectURL(blob);\n  const anchor = document.createElement('a');\n  document.body.appendChild(anchor);\n  anchor.style = 'display: none';\n  anchor.href = url;\n  anchor.download = 'audio.wav';\n  anchor.click();\n  window.URL.revokeObjectURL(url);\n};\n\nexport const runWasmExport = async (exportKey, parameters) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n    export: exportKey,\n    parameters\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getWasmMemorySection = async (start, end) => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION,\n    start,\n    end\n  });\n\n  const eventData = getEventData(event);\n  return new Uint8Array(eventData.message.response);\n};\n\nexport const getWasmConstant = async constantKey => {\n  if (!WasmBoyLib.worker) {\n    return;\n  }\n\n  const event = await WasmBoyLib.worker.postMessage({\n    type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n    constant: constantKey\n  });\n\n  const eventData = getEventData(event);\n  return eventData.message.response;\n};\n\nexport const getStepsAsString = async radix => {\n  const stepsPerStepSet = await runWasmExport('getStepsPerStepSet');\n  const stepSets = await runWasmExport('getStepSets');\n  const steps = await runWasmExport('getSteps');\n\n  const bigSteps = bigInt(stepsPerStepSet)\n    .multiply(stepSets)\n    .add(steps);\n\n  if (radix) {\n    return bigSteps.toString(radix);\n  }\n  return bigSteps.toString(10);\n};\n\nexport const getCyclesAsString = async radix => {\n  const cyclesPerCycleSet = await runWasmExport('getCyclesPerCycleSet');\n  const cycleSets = await runWasmExport('getCycleSets');\n  const cycles = await runWasmExport('getCycles');\n\n  const bigCycles = bigInt(cyclesPerCycleSet)\n    .multiply(cycleSets)\n    .add(cycles);\n\n  if (radix) {\n    return bigCycles.toString(radix);\n  }\n  return bigCycles.toString(10);\n};\n","// Functions here are depedent on WasmBoyMemory state.\n// Thus me bound using .bind() on functions\n\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { getEventData } from '../worker/util';\nimport { runWasmExport, getWasmMemorySection, getWasmConstant } from '../debug/debug';\n\n// Functions to handle the lib worker messages\nexport function libWorkerOnMessage(event) {\n  const eventData = getEventData(event);\n\n  if (!eventData.message) {\n    return;\n  }\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.UPDATED: {\n      this.fps = eventData.message.fps;\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.CRASHED: {\n      const crashedTask = async () => {\n        await this.pause();\n\n        console.log('Wasmboy Crashed!');\n\n        let programCounter = await runWasmExport('getProgramCounter');\n        let gameboyMemoryConstant = await getWasmConstant('GAMEBOY_INTERNAL_MEMORY_LOCATION');\n        let opcode = await getWasmMemorySection(gameboyMemoryConstant + programCounter, gameboyMemoryConstant + programCounter + 1);\n\n        console.log(`Program Counter: 0x${programCounter.toString(16)}`);\n        console.log(`Opcode: 0x${opcode[0].toString(16)}`);\n      };\n      crashedTask();\n      return;\n    }\n\n    default: {\n      // Do nothing. This catches all messages so yeah\n    }\n  }\n}\n","// WasmBoy Modules\nimport { WasmBoyGraphics } from '../graphics/graphics';\nimport { WasmBoyAudio } from '../audio/audio';\nimport { WasmBoyMemory } from '../memory/memory';\n\n// Other lib helpers\nimport { instantiateWorkers } from '../worker/instantiate';\nimport { WORKER_MESSAGE_TYPE } from '../worker/constants';\nimport { loadROMToWasmBoy } from './loadrom';\nimport { render } from './render';\nimport { libWorkerOnMessage } from './onmessage';\n\n// requestAnimationFrame() for headless mode\nimport raf from 'raf';\n\n// Our Main Orchestrator of the WasmBoy lib\nclass WasmBoyLibService {\n  // Start the request to our wasm module\n  constructor() {\n    this.worker = undefined;\n    this.coreType = undefined;\n    this.canvasElement = undefined;\n    this.paused = false;\n    this.ready = false;\n    this.loadedAndStarted = false;\n    this.renderId = false;\n    this.loadedROM = false;\n\n    this.fps = 0;\n\n    // Reset our config and stateful elements that depend on it\n    // this.options is set here\n    this._resetConfig();\n\n    // Add some listeners for when we are put into the background\n    if (typeof window !== 'undefined') {\n      window.document.addEventListener('visibilitychange', () => {\n        // fires when user switches tabs, apps, goes to homescreen, etc.\n        if (document.visibilityState === 'hidden') {\n          if (this.options && this.options.disablePauseOnHidden) {\n            return;\n          }\n          this.pause();\n        }\n      });\n    }\n  }\n\n  // Function to initialize/configure Wasmboy\n  config(wasmBoyOptions, canvasElement) {\n    const configTask = async () => {\n      // Pause any currently running game\n      await this.pause();\n\n      // Get our canvas elements\n      await this.setCanvas(canvasElement);\n\n      // Reset our config and stateful elements that depend on it\n      // If we have a new config to take its place\n      if (wasmBoyOptions || !this.options) {\n        this._resetConfig();\n      }\n\n      // set our options\n      if (wasmBoyOptions) {\n        // Set all options\n        Object.keys(wasmBoyOptions).forEach(key => {\n          if (this.options[key] !== undefined) {\n            this.options[key] = wasmBoyOptions[key];\n          }\n        });\n\n        // Aliases\n        // Gameboy Speed / Framerate\n        if (wasmBoyOptions.gameboySpeed) {\n          let gameboyFrameRate = Math.floor(wasmBoyOptions.gameboySpeed * 60);\n          if (gameboyFrameRate <= 0) {\n            gameboyFrameRate = 1;\n          }\n          this.options.gameboyFrameRate = gameboyFrameRate;\n        }\n      }\n    };\n\n    return configTask();\n  }\n\n  // Function to return our current configuration as an object\n  getConfig() {\n    return this.options;\n  }\n\n  // Function to get/set our canvas element\n  // Useful for vaporboy\n  setCanvas(canvasElement) {\n    if (!canvasElement) {\n      return Promise.resolve();\n    }\n\n    const setCanvasTask = async () => {\n      await this.pause();\n\n      // Set our new canvas element, and re-run init on graphics to apply styles and things\n      this.canvasElement = canvasElement;\n\n      await WasmBoyGraphics.initialize(this.canvasElement, this.options.updateGraphicsCallback);\n    };\n\n    return setCanvasTask();\n  }\n\n  getCanvas() {\n    return this.canvasElement;\n  }\n\n  // Finish request for wasm module, and fetch game\n  loadROM(ROM, fetchHeaders) {\n    const boundLoadROM = loadROMToWasmBoy.bind(this);\n    return boundLoadROM(ROM, fetchHeaders);\n  }\n\n  // function to start/resume\n  play() {\n    const playTask = async () => {\n      if (!this.ready) {\n        return;\n      }\n      if (!this.loadedAndStarted) {\n        this.loadedAndStarted = true;\n        if (this.options.onLoadedAndStarted) {\n          this.options.onLoadedAndStarted();\n        }\n      }\n      if (this.options.onPlay) {\n        this.options.onPlay();\n      }\n\n      // Bless the audio, this is to fix any autoplay issues\n      if (!this.options.headless) {\n        WasmBoyAudio.resumeAudioContext();\n        WasmBoyAudio.resetTimeStretch();\n      }\n\n      // Reset the audio queue index to stop weird pauses when trying to load a game\n      await this.worker.postMessage({\n        type: WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE\n      });\n\n      // Undo any pause\n      this.paused = false;\n\n      if (!this.updateId) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PLAY\n        });\n      }\n\n      if (!this.renderId && !this.options.headless) {\n        this.renderId = raf(() => {\n          render.call(this);\n        });\n      }\n    };\n\n    return playTask();\n  }\n\n  // Function to pause the game, returns a promise\n  // Will try to wait until the emulation sync is returned, and then will\n  // Allow any actions\n  pause() {\n    const pauseTask = async () => {\n      this.paused = true;\n      if (this.ready && this.options.onPause) {\n        this.options.onPause();\n      }\n\n      // Cancel our update and render loop\n      raf.cancel(this.renderId);\n      this.renderId = false;\n\n      // Cancel any playing audio\n      // Audio played with latency may be still going on here\n      if (!this.options.headless) {\n        WasmBoyAudio.cancelAllAudio(true);\n      }\n\n      if (this.worker) {\n        await this.worker.postMessage({\n          type: WORKER_MESSAGE_TYPE.PAUSE\n        });\n      }\n\n      // Wait a raf to ensure everything is done\n      await new Promise(resolve => {\n        raf(() => {\n          resolve();\n        });\n      });\n    };\n\n    return pauseTask();\n  }\n\n  // Function to reset wasmBoy, with an optional set of options\n  reset(wasmBoyOptions) {\n    const resetTask = async () => {\n      this.config(wasmBoyOptions, this.canvasElement);\n      // Reload the game if one was already loaded\n      if (this.loadedROM) {\n        return this.loadROM(this.loadedROM);\n      }\n    };\n\n    return resetTask();\n  }\n\n  saveState() {\n    const saveStateTask = async () => {\n      await this.pause();\n      const saveState = await WasmBoyMemory.saveState();\n      return saveState;\n    };\n\n    return saveStateTask();\n  }\n\n  // Function to return the save states for the game\n  getSaveStates() {\n    const getSaveStatesTask = async () => {\n      let cartridgeObject = await WasmBoyMemory.getCartridgeObject();\n      if (!cartridgeObject) {\n        return [];\n      } else {\n        return cartridgeObject.saveStates;\n      }\n    };\n\n    return getSaveStatesTask();\n  }\n\n  loadState(saveState) {\n    const loadStateTask = async () => {\n      await this.pause();\n      await WasmBoyMemory.loadState(saveState);\n    };\n\n    return loadStateTask();\n  }\n\n  // Simply returns the FPS we get back from the lib worker\n  getFPS() {\n    return this.fps;\n  }\n\n  // Simply returns our current Core Type\n  getCoreType() {\n    return this.coreType;\n  }\n\n  // Private Function to reset options to default\n  _resetConfig() {\n    // Reset Fps Metering\n    this.fpsTimeStamps = [];\n    this.frameSkipCounter = 0;\n\n    // Configurable Options\n    // Set callbacks to null and not undefined,\n    // For when configs are passed, we will be sure to\n    // add them as keys\n    this.options = {\n      headless: false,\n      disablePauseOnHidden: false,\n      isAudioEnabled: true,\n      gameboyFrameRate: 60,\n      frameSkip: 0,\n      includeBootROM: false,\n      isGbcEnabled: true,\n      audioBatchProcessing: false,\n      graphicsBatchProcessing: false,\n      timersBatchProcessing: false,\n      graphicsDisableScanlineRendering: false,\n      audioAccumulateSamples: false,\n      tileRendering: false,\n      tileCaching: false,\n      updateGraphicsCallback: null,\n      updateAudioCallback: null,\n      saveStateCallback: null,\n      onReady: null,\n      onPlay: null,\n      onPause: null,\n      onLoadedAndStarted: null\n    };\n  }\n\n  // Function to instantiate and set up our workers\n  // This ensures we don't create workers twice\n  _instantiateWorkers() {\n    const instantiateWorkersTask = async () => {\n      if (this.worker) {\n        return;\n      } else {\n        this.worker = await instantiateWorkers();\n        this.worker.addMessageListener(libWorkerOnMessage.bind(this));\n      }\n    };\n\n    return instantiateWorkersTask();\n  }\n}\n\nexport const WasmBoyLib = new WasmBoyLibService();\n","// Build our public lib api\nimport { WasmBoyLib } from './wasmboy/wasmboy';\nimport { WasmBoyAudio } from './audio/audio';\nimport { WasmBoyController } from './controller/controller';\nimport { WasmBoyMemory } from './memory/memory';\nimport {\n  saveCurrentAudioBufferToWav,\n  runWasmExport,\n  getWasmMemorySection,\n  getWasmConstant,\n  getStepsAsString,\n  getCyclesAsString\n} from './debug/debug';\n\n// Get our package.json\nimport packageJson from '../package.json';\n\n// Debugging properties prepended with _\n\n// export an object that public exposes parts of the singleton\n// Need to bind to preserve this\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind\nexport const WasmBoy = {\n  config: WasmBoyLib.config.bind(WasmBoyLib),\n  getCoreType: WasmBoyLib.getCoreType.bind(WasmBoyLib),\n  getConfig: WasmBoyLib.getConfig.bind(WasmBoyLib),\n  setCanvas: WasmBoyLib.setCanvas.bind(WasmBoyLib),\n  getCanvas: WasmBoyLib.getCanvas.bind(WasmBoyLib),\n  loadROM: WasmBoyLib.loadROM.bind(WasmBoyLib),\n  play: WasmBoyLib.play.bind(WasmBoyLib),\n  pause: WasmBoyLib.pause.bind(WasmBoyLib),\n  reset: WasmBoyLib.reset.bind(WasmBoyLib),\n  isPlaying: () => {\n    return !WasmBoyLib.paused;\n  },\n  isPaused: () => {\n    return WasmBoyLib.paused;\n  },\n  isReady: () => {\n    return WasmBoyLib.ready;\n  },\n  isLoadedAndStarted: () => {\n    return WasmBoyLib.loadedAndStarted;\n  },\n  getVersion: () => {\n    return packageJson.version;\n  },\n  saveState: WasmBoyLib.saveState.bind(WasmBoyLib),\n  getSaveStates: WasmBoyLib.getSaveStates.bind(WasmBoyLib),\n  loadState: WasmBoyLib.loadState.bind(WasmBoyLib),\n  getFPS: WasmBoyLib.getFPS.bind(WasmBoyLib),\n  enableDefaultJoypad: WasmBoyController.enableDefaultJoypad.bind(WasmBoyController),\n  disableDefaultJoypad: WasmBoyController.disableDefaultJoypad.bind(WasmBoyController),\n  setJoypadState: WasmBoyController.setJoypadState.bind(WasmBoyController),\n  addTouchInput: WasmBoyController.addTouchInput.bind(WasmBoyController),\n  removeTouchInput: WasmBoyController.removeTouchInput.bind(WasmBoyController),\n  resumeAudioContext: WasmBoyAudio.resumeAudioContext.bind(WasmBoyAudio),\n  _getCartridgeInfo: WasmBoyMemory.getCartridgeInfo.bind(WasmBoyMemory),\n  _saveCurrentAudioBufferToWav: saveCurrentAudioBufferToWav,\n  _runWasmExport: runWasmExport,\n  _getWasmMemorySection: getWasmMemorySection,\n  _getWasmConstant: getWasmConstant,\n  _getStepsAsString: getStepsAsString,\n  _getCyclesAsString: getCyclesAsString\n};\n"],"names":["GAMEBOY_CAMERA_WIDTH","GAMEBOY_CAMERA_HEIGHT","WORKER_MESSAGE_TYPE","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","WORKER_ID","LIB","GRAPHICS","MEMORY","CONTROLLER","AUDIO","MEMORY_TYPE","CARTRIDGE_RAM","CARTRIDGE_ROM","CARTRIDGE_HEADER","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","getEventData","event","data","isInBrowser","self","readBase64String","base64String","readBase64Buffer","toString","Buffer","from","split","WasmBoyGraphicsService","constructor","worker","undefined","updateGraphicsCallback","frameQueue","frameQueueRenderPromise","canvasElement","canvasContext","canvasImageData","imageDataArray","imageDataArrayChanged","initialize","initializeTask","getContext","width","height","createImageData","style","clearRect","postMessage","type","setWorker","addMessageListener","eventData","message","Uint8ClampedArray","imageDataArrayBuffer","renderFrame","i","length","putImageData","WasmBoyGraphics","DEFAULT_AUDIO_LATENCY_IN_MILLI","WASMBOY_SAMPLE_RATE","DEFAULT_AUDIO_LATENCY_IN_SECONDS","SLOW_TIME_STRETCH_MIN_FPS","WasmBoyAudioService","updateAudioCallback","audioContext","audioBuffer","audioPlaytime","audioSources","averageTimeStretchFps","WASMBOY_SOUND_OUTPUT_LOCATION","cancelAllAudio","_createAudioContextIfNone","resumeAudioContext","state","resume","currentTime","resetTimeStretch","playAudio","fps","allowFastSpeedStretching","numberOfSamples","leftChannel","rightChannel","latency","currentFps","leftChannelBuffer","rightChannelBuffer","fpsDifference","Math","abs","push","floor","shift","reduce","accumulator","currentValue","playbackRate","createBuffer","copyToChannel","Float32Array","getChannelData","set","source","createBufferSource","buffer","setValueAtTime","finalNode","responseNode","connect","destination","audioContextCurrentTime","audioContextCurrentTimeWithLatency","start","sourcePlaybackLength","playtime","stop","pop","playTime","timeUntilSourceEnds","setTimeout","stopCurrentAudio","window","AudioContext","webkitAudioContext","WasmBoyAudio","keyval","dbPromise","idb","open","upgradeDB","createObjectStore","get","key","then","db","transaction","objectStore","val","tx","put","complete","delete","clear","keys","store","iterateKeyCursor","iterateCursor","call","cursor","continue","idbKeyval","WASMBOY_SAVE_STATE_SCHEMA","wasmboyMemory","wasmBoyInternalState","wasmBoyPaletteMemory","gameBoyMemory","cartridgeRam","date","isAuto","getSaveState","saveState","Object","assign","internalState","paletteMemory","gameboyMemory","Date","now","saveStateCallback","_prepareAndStoreAutoSave","bind","saveStateMemoryKeys","Array","prototype","slice","localStorage","setItem","WASMBOY_UNLOAD_STORAGE","JSON","stringify","header","cartridgeHeader","_findAndCommitAutoSave","findAndCommitAutoSaveTask","unloadStorage","getItem","unloadStorageObject","parse","removeItem","Uint8Array","saveCartridgeRam","initializeAutoSave","addEventListener","document","visibilityState","WasmBoyMemoryService","loadedCartridgeMemoryState","ROM","RAM","cartridgeRom","WASMBOY_GAME_BYTES_LOCATION","WASMBOY_GAME_RAM_BANKS_LOCATION","WASMBOY_INTERNAL_STATE_SIZE","WASMBOY_INTERNAL_STATE_LOCATION","WASMBOY_INTERNAL_MEMORY_SIZE","WASMBOY_INTERNAL_MEMORY_LOCATION","WASMBOY_PALETTE_MEMORY_SIZE","WASMBOY_PALETTE_MEMORY_LOCATION","headless","_initializeConstants","memoryTypes","includes","getLoadedCartridgeMemoryState","clearMemory","loadCartridgeRom","loadTask","workerMemoryObject","passedHeader","passedCartridgeRam","saveCartridgeRamTask","Error","cartridgeObject","loadCartridgeRam","loadCartridgeRamTask","passedSaveState","saveStateTask","saveStates","loadState","loadStateTask","saverState","getCartridgeObject","getCartridgeInfo","Promise","reject","getCartridgeInfoTask","cartridgeInfo","nintendoLogo","title","titleAsString","String","fromCharCode","apply","manufacturerCode","CGBFlag","newLicenseeCode","SGBFlag","cartridgeType","ROMSize","RAMSize","destinationCode","oldLicenseeCode","maskROMVersionNumber","headerChecksum","globalChecksum","forEach","WasmBoyMemory","WasmBoyControllerService","isEnabled","enableDefaultJoypad","resolve","updateController","controllerState","ResponsiveGamepad","getState","setJoypadState","setJoypadStateParamsAsArray","UP","RIGHT","DOWN","LEFT","A","B","SELECT","START","enable","KEYMAP_GAMEBOY","disableDefaultJoypad","disable","addTouchInput","keyMapKey","element","direction","removeTouchInput","touchInputId","WasmBoyController","Worker","require","idCounter","generateId","randomId","random","replace","substr","id","getSmartWorkerMessage","messageId","workerId","SmartWorker","workerUrl","messageListeners","workerAsString","eval","on","_onMessageHandler","transfer","messageObject","messageIdListener","responseMessage","messageListener","removeMessageListener","callback","messageListenerIndex","some","index","splice","MessageChannel","instantiateWorkers","libWorkerUrl","wasmboyLibWasmWorkerUrl","libWorker","graphicsWorker","wasmboyGraphicsWorkerUrl","audioWorker","wasmboyAudioWorkerUrl","controllerWorker","wasmboyControllerWorkerUrl","memoryWorker","wasmboyMemoryWorkerUrl","workerReadyPromises","childWorkers","childWorker","messageChannel","workerReadyPromise","messagesReceived","tryResolveWorkerReady","ports","port1","port2","all","UZIP","uzip","buf","rUs","bin","readUshort","rUi","readUint","o","out","eocd","cnu","cnt","csize","coffs","sign","crc32","usize","nl","el","cl","roff","_readLocal","ver","gpflg","cmpr","time","nlen","elen","name","readUTF8","file","inflateRaw","F","inflate","CMF","FLG","byteOffset","deflate","opts","level","off","deflateRaw","crc","adler","encode","obj","tot","wUi","writeUint","wUs","writeUshort","zpd","p","cpr","_noNeed","sizeUTF8","fof","_writeHeader","ioff","fn","ext","toLowerCase","indexOf","t","writeUTF8","table","tab","Uint32Array","n","c","k","update","len","b","l","a","end","eend","min","buff","readASCII","s","writeASCII","charCodeAt","pad","ns","decodeURIComponent","e","str","strl","ci","code","opos","lvl","opt","U","goodIndex","_goodIndex","hash","_hash","putsE","_putsE","pos","cvrd","dlen","_copyExact","lits","strt","prev","li","lc","bs","ebits","nc","ii","_writeBlock","mch","_bestMatch","dst","lgi","of0","lhst","dgi","df0","dhst","exb","dxb","nice","chain","pi","dif","tl","td","dlim","_howLong","maxd","j","ei","curd","oi","saved","BFINAL","o0","l0","putsF","_putsF","T","ML","MD","MH","numl","numd","numh","lset","dset","getTrees","cstSize","fxdSize","contSize","fltree","fdtree","dynSize","ltree","dtree","itree","ihst","BTYPE","makeCodes","revCodes","ordr","_codeTiny","si","qb","_writeLit","qc","p8","_hufTree","_lenCodes","getSecond","nonZero","tree","hst","rst","rsl","nxt","nnxt","prv","lz","zc","MAXL","list","hl","lit","f","l2","sort","i0","i1","i2","r","d","maxl","setDepth","restrictDepth","max","dps","bCost","dbt","od","console","log","v","arr","ch","bitsF","_bitsF","bitsE","_bitsE","decodeTiny","_decodeTiny","codes2map","get17","_get17","noBuf","HLIT","HDIST","HCLEN","lmap","dmap","_check","flmap","fdmap","imap","ml","md","ebs","ldef","dcode","dlit","dbs","ddef","bl","nbuf","LL","mx","ll","ni","MAX_BITS","max_code","bits","bl_count","next_code","map","r15","rev15","rest","p0","imb","dt","_get25","Uint16Array","x","fetchROMAsByteArray","loadOptions","fetchROMAsByteArrayTask","ArrayBuffer","isView","size","byteArray","getROMFromFileReaderAsByteArray","endsWith","parseByteArrayAsZip","fetchHeaders","headers","bytes","fetch","blob","ok","arrayBuffer","fileName","fileReaderByteArray","fileReader","FileReader","onload","result","readAsArrayBuffer","unzipObject","foundROM","unzipObjectKeys","lowercaseKey","loadROMToWasmBoy","ready","loadedAndStarted","initPromises","_instantiateWorkers","options","ROMAsByteArray","responses","response","coreType","loadROMAndConfigTask","loadedROM","config","isGbcEnabled","audioBatchProcessing","graphicsBatchProcessing","timersBatchProcessing","graphicsDisableScanlineRendering","audioAccumulateSamples","tileRendering","tileCaching","gameboyFrameRate","isAudioEnabled","frameSkip","loadROMTask","pause","onReady","this","global","render","paused","shouldSkipRenderingFrame","frameSkipCounter","renderId","raf","saveCurrentAudioBufferToWav","wav","toWav","Blob","DataView","url","URL","createObjectURL","anchor","createElement","body","appendChild","href","download","click","revokeObjectURL","runWasmExport","exportKey","parameters","WasmBoyLib","export","getWasmMemorySection","getWasmConstant","constantKey","constant","getStepsAsString","radix","stepsPerStepSet","stepSets","steps","bigSteps","bigInt","multiply","add","getCyclesAsString","cyclesPerCycleSet","cycleSets","cycles","bigCycles","libWorkerOnMessage","crashedTask","programCounter","gameboyMemoryConstant","opcode","WasmBoyLibService","_resetConfig","disablePauseOnHidden","wasmBoyOptions","configTask","setCanvas","gameboySpeed","getConfig","setCanvasTask","getCanvas","loadROM","boundLoadROM","play","playTask","onLoadedAndStarted","onPlay","updateId","pauseTask","onPause","cancel","reset","resetTask","getSaveStates","getSaveStatesTask","getFPS","getCoreType","fpsTimeStamps","includeBootROM","instantiateWorkersTask","WasmBoy","isPlaying","isPaused","isReady","isLoadedAndStarted","getVersion","packageJson","version","_getCartridgeInfo","_saveCurrentAudioBufferToWav","_runWasmExport","_getWasmMemorySection","_getWasmConstant","_getStepsAsString","_getCyclesAsString"],"mappings":"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"}