const m={CONNECT:"CONNECT",INSTANTIATE_WASM:"INSTANTIATE_WASM",CLEAR_MEMORY:"CLEAR_MEMORY",CLEAR_MEMORY_DONE:"CLEAR_MEMORY_DONE",GET_MEMORY:"GET_MEMORY",SET_MEMORY:"SET_MEMORY",SET_MEMORY_DONE:"SET_MEMORY_DONE",GET_CONSTANTS:"GET_CONSTANTS",GET_CONSTANTS_DONE:"GET_CONSTANTS_DONE",CONFIG:"CONFIG",RESET_AUDIO_QUEUE:"RESET_AUDIO_QUEUE",PLAY:"PLAY",PAUSE:"PAUSE",UPDATED:"UPDATED",CRASHED:"CRASHED",SET_JOYPAD_STATE:"SET_JOYPAD_STATE",AUDIO_LATENCY:"AUDIO_LATENCY",RUN_WASM_EXPORT:"RUN_WASM_EXPORT",
GET_WASM_MEMORY_SECTION:"GET_WASM_MEMORY_SECTION",GET_WASM_CONSTANT:"GET_WASM_CONSTANT"},u={LIB:"LIB",GRAPHICS:"GRAPHICS",MEMORY:"MEMORY",CONTROLLER:"CONTROLLER",AUDIO:"AUDIO"},B={CARTRIDGE_RAM:"CARTRIDGE_RAM",CARTRIDGE_ROM:"CARTRIDGE_ROM",CARTRIDGE_HEADER:"CARTRIDGE_HEADER",GAMEBOY_MEMORY:"GAMEBOY_MEMORY",PALETTE_MEMORY:"PALETTE_MEMORY",INTERNAL_STATE:"INTERNAL_STATE"};function E(a){return a.data?a.data:a}
class aa{constructor(){this.imageDataArray=this.canvasImageData=this.canvasContext=this.canvasElement=this.frameQueueRenderPromise=this.frameQueue=this.updateGraphicsCallback=this.worker=void 0;this.imageDataArrayChanged=!1}initialize(a,b){this.updateGraphicsCallback=b;this.frameQueue=[];return(async()=>{this.canvasElement=a;this.canvasContext=this.canvasElement.getContext("2d");this.canvasElement.width=160;this.canvasElement.height=144;this.canvasImageData=this.canvasContext.createImageData(160,
144);this.canvasElement.style="\n        image-rendering: optimizeSpeed;\n        image-rendering: -moz-crisp-edges;\n        image-rendering: -webkit-optimize-contrast;\n        image-rendering: -o-crisp-edges;\n        image-rendering: pixelated;\n        -ms-interpolation-mode: nearest-neighbor;\n      ";this.canvasContext.clearRect(0,0,this.canvasElement.width,this.canvasElement.height);this.worker&&await this.worker.postMessage({type:m.GET_CONSTANTS})})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>
{a=E(a);switch(a.message.type){case m.UPDATED:this.imageDataArray=new Uint8ClampedArray(a.message.imageDataArrayBuffer),this.imageDataArrayChanged=!0}})}renderFrame(){if(this.imageDataArrayChanged){this.imageDataArrayChanged=!1;this.updateGraphicsCallback&&this.updateGraphicsCallback(this.imageDataArray);for(let a=0;a<this.imageDataArray.length;a++)this.canvasImageData.data[a]=this.imageDataArray[a];this.canvasContext.clearRect(0,0,160,144);this.canvasContext.putImageData(this.canvasImageData,0,0)}}}
const ba=new aa;
class ca{constructor(){this.audioPlaytime=this.audioBuffer=this.audioContext=this.updateAudioCallback=this.worker=void 0;this.audioSources=[];this.averageTimeStretchFps=[];this.WASMBOY_SOUND_OUTPUT_LOCATION=0}initialize(a){return(async()=>{this.updateAudioCallback=a;this.averageTimeStretchFps=[];0<this.audioSources.length&&this.cancelAllAudio();this.audioSources=[];this._createAudioContextIfNone();return this.worker.postMessage({type:m.GET_CONSTANTS})})()}resumeAudioContext(){this._createAudioContextIfNone();"suspended"===
this.audioContext.state&&(this.audioContext.resume(),this.audioPlaytime=this.audioContext.currentTime)}resetTimeStretch(){this.averageTimeStretchFps=[]}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=E(a);switch(a.message.type){case m.UPDATED:this.playAudio(a.message.fps,a.message.allowFastSpeedStretching,a.message.numberOfSamples,a.message.leftChannel,a.message.rightChannel),a=0,this.audioContext.currentTime&&0<this.audioContext.currentTime&&(a=this.audioPlaytime-this.audioContext.currentTime),
this.worker.postMessage({type:m.AUDIO_LATENCY,latency:a})}})}playAudio(a,b,c,d,e){let f=a||60;const g=Math.abs(a-this.averageTimeStretchFps[this.averageTimeStretchFps.length-1]);g&&15<=g&&this.resetTimeStretch();this.averageTimeStretchFps.push(a);171<this.averageTimeStretchFps.length&&this.averageTimeStretchFps.shift();57<=this.averageTimeStretchFps.length&&(f=this.averageTimeStretchFps.reduce((a,b)=>a+b),f=Math.floor(f/this.averageTimeStretchFps.length));a=1;if(57>f||b)a*=f/60,0>=a&&(a=.01);this.audioBuffer=
this.audioContext.createBuffer(2,c,48E3);this.audioBuffer.copyToChannel?(this.audioBuffer.copyToChannel(new Float32Array(d),0,0),this.audioBuffer.copyToChannel(new Float32Array(e),1,0)):(this.audioBuffer.getChannelData(0).set(new Float32Array(d)),this.audioBuffer.getChannelData(1).set(new Float32Array(e)));b=this.audioContext.createBufferSource();b.buffer=this.audioBuffer;b.playbackRate.setValueAtTime(a,this.audioContext.currentTime);d=b;this.updateAudioCallback&&(e=this.updateAudioCallback(this.audioContext,
b))&&(d=e);d.connect(this.audioContext.destination);d=this.audioContext.currentTime;e=d+.1;this.audioPlaytime=this.audioPlaytime||e;this.audioPlaytime<d&&(this.cancelAllAudio(),this.audioPlaytime=e);b.start(this.audioPlaytime);for(this.audioPlaytime+=c/(48E3*a);this.audioSources[this.audioSources.length-1]&&this.audioSources[this.audioSources.length-1].playtime<=this.audioPlaytime;)this.audioSources[this.audioSources.length-1].source.stop(),this.audioSources.pop();this.audioSources.push({source:b,
playTime:this.audioPlaytime,fps:f});setTimeout(()=>{this.audioSources.shift()},this.audioPlaytime-this.audioContext.currentTime+500)}cancelAllAudio(a){if(this.audioContext){for(let b=0;b<this.audioSources.length;b++)(a||this.audioSources[b].playTime>this.audioPlaytime)&&this.audioSources[b].source.stop();this.audioPlaytime=this.audioContext.currentTime+.1}}_createAudioContextIfNone(){this.audioContext||(this.audioContext=new (window.AudioContext||window.webkitAudioContext))}}const F=new ca;
function da(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"===typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable})));d.forEach(function(b){var d=c[b];b in a?Object.defineProperty(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d})}return a}
var ea="undefined"!==typeof window?window:"undefined"!==typeof global?global:"undefined"!==typeof self?self:{};function ja(a,b){return b={exports:{}},a(b,b.exports),b.exports}
var ka=ja(function(a){(function(){function b(a){return new Promise(function(b,c){a.onsuccess=function(){b(a.result)};a.onerror=function(){c(a.error)}})}function c(a,c,d){var e,f=new Promise(function(f,g){e=a[c].apply(a,d);b(e).then(f,g)});f.request=e;return f}function d(a,b,d){var e=c(a,b,d);return e.then(function(a){if(a)return new n(a,e.request)})}function e(a,b,c){c.forEach(function(c){Object.defineProperty(a.prototype,c,{get:function(){return this[b][c]},set:function(a){this[b][c]=a}})})}function f(a,
b,d,e){e.forEach(function(e){e in d.prototype&&(a.prototype[e]=function(){return c(this[b],e,arguments)})})}function g(a,b,c,d){d.forEach(function(d){d in c.prototype&&(a.prototype[d]=function(){return this[b][d].apply(this[b],arguments)})})}function k(a,b,c,e){e.forEach(function(e){e in c.prototype&&(a.prototype[e]=function(){return d(this[b],e,arguments)})})}function l(a){this._index=a}function n(a,b){this._cursor=a;this._request=b}function x(a){this._store=a}function C(a){this._tx=a;this.complete=
new Promise(function(b,c){a.oncomplete=function(){b()};a.onerror=function(){c(a.error)};a.onabort=function(){c(a.error)}})}function w(a,b,c){this._db=a;this.oldVersion=b;this.transaction=new C(c)}function y(a){this._db=a}e(l,"_index",["name","keyPath","multiEntry","unique"]);f(l,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]);k(l,"_index",IDBIndex,["openCursor","openKeyCursor"]);e(n,"_cursor",["direction","key","primaryKey","value"]);f(n,"_cursor",IDBCursor,["update","delete"]);
["advance","continue","continuePrimaryKey"].forEach(function(a){a in IDBCursor.prototype&&(n.prototype[a]=function(){var c=this,d=arguments;return Promise.resolve().then(function(){c._cursor[a].apply(c._cursor,d);return b(c._request).then(function(a){if(a)return new n(a,c._request)})})})});x.prototype.createIndex=function(){return new l(this._store.createIndex.apply(this._store,arguments))};x.prototype.index=function(){return new l(this._store.index.apply(this._store,arguments))};e(x,"_store",["name",
"keyPath","indexNames","autoIncrement"]);f(x,"_store",IDBObjectStore,"put add delete clear get getAll getKey getAllKeys count".split(" "));k(x,"_store",IDBObjectStore,["openCursor","openKeyCursor"]);g(x,"_store",IDBObjectStore,["deleteIndex"]);C.prototype.objectStore=function(){return new x(this._tx.objectStore.apply(this._tx,arguments))};e(C,"_tx",["objectStoreNames","mode"]);g(C,"_tx",IDBTransaction,["abort"]);w.prototype.createObjectStore=function(){return new x(this._db.createObjectStore.apply(this._db,
arguments))};e(w,"_db",["name","version","objectStoreNames"]);g(w,"_db",IDBDatabase,["deleteObjectStore","close"]);y.prototype.transaction=function(){return new C(this._db.transaction.apply(this._db,arguments))};e(y,"_db",["name","version","objectStoreNames"]);g(y,"_db",IDBDatabase,["close"]);["openCursor","openKeyCursor"].forEach(function(a){[x,l].forEach(function(b){a in b.prototype&&(b.prototype[a.replace("open","iterate")]=function(){var b=Array.prototype.slice.call(arguments),c=b[b.length-1],
d=this._store||this._index,e=d[a].apply(d,b.slice(0,-1));e.onsuccess=function(){c(e.result)}})})});[l,x].forEach(function(a){a.prototype.getAll||(a.prototype.getAll=function(a,b){var c=this,d=[];return new Promise(function(e){c.iterateCursor(a,function(a){a?(d.push(a.value),void 0!==b&&d.length==b?e(d):a.continue()):e(d)})})})});a.exports={open:function(a,b,d){a=c(indexedDB,"open",[a,b]);var e=a.request;e&&(e.onupgradeneeded=function(a){d&&d(new w(e.result,a.oldVersion,e.transaction))});return a.then(function(a){return new y(a)})},
delete:function(a){return c(indexedDB,"deleteDatabase",[a])}};a.exports.default=a.exports})()}),la=ja(function(a){a.exports="undefined"!=typeof indexedDB?ka:{open:function(){return Promise.reject("IDB requires a browser environment")},delete:function(){return Promise.reject("IDB requires a browser environment")}}});let ma=!1;
if("undefined"!==typeof window){const a=la.open("wasmboy",1,(b)=>{b.createObjectStore("keyval")});ma={get(b){return a.then((a)=>a.transaction("keyval").objectStore("keyval").get(b))},set(b,c){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").put(c,b);return a.complete})},delete(b){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").delete(b);return a.complete})},clear(){return a.then((a)=>{a=a.transaction("keyval","readwrite");a.objectStore("keyval").clear();
return a.complete})},keys(){return a.then((a)=>{a=a.transaction("keyval");const b=[],d=a.objectStore("keyval");(d.iterateKeyCursor||d.iterateCursor).call(d,(a)=>{a&&(b.push(a.key),a.continue())});return a.complete.then(()=>b)})}}}const G=ma,na={wasmboyMemory:{wasmBoyInternalState:[],wasmBoyPaletteMemory:[],gameBoyMemory:[],cartridgeRam:[]},date:void 0,isAuto:void 0};
function oa(){let a=Object.assign({},na);a.wasmboyMemory.wasmBoyInternalState=this.internalState;a.wasmboyMemory.wasmBoyPaletteMemory=this.paletteMemory;a.wasmboyMemory.gameBoyMemory=this.gameboyMemory;a.wasmboyMemory.cartridgeRam=this.cartridgeRam;a.date=Date.now();a.isAuto=!1;this.saveStateCallback&&this.saveStateCallback(a);return a}
function pa(){if(!this.internalState)return null;const a=oa.bind(this)(),b=Object.keys(a.wasmboyMemory);for(let c=0;c<b.length;c++)a.wasmboyMemory[b[c]]=Array.prototype.slice.call(a.wasmboyMemory[b[c]]);a.isAuto=!0;localStorage.setItem(this.WASMBOY_UNLOAD_STORAGE,JSON.stringify({header:Array.prototype.slice.call(this.cartridgeHeader),cartridgeRam:Array.prototype.slice.call(this.cartridgeRam),saveState:a}));return null}
function ra(){return(async()=>{var a=localStorage.getItem(this.WASMBOY_UNLOAD_STORAGE);if(a){var b=JSON.parse(a);localStorage.removeItem(this.WASMBOY_UNLOAD_STORAGE);a=new Uint8Array(b.header);const c=new Uint8Array(b.cartridgeRam);if(b=b.saveState){const a=Object.keys(b.wasmboyMemory);for(let c=0;c<a.length;c++)b.wasmboyMemory[a[c]]=new Uint8Array(b.wasmboyMemory[a[c]])}await this.saveCartridgeRam(a,c);await this.saveState(a,b)}})()}
function sa(){window.addEventListener("beforeunload",()=>{pa.bind(this)()},!1);window.addEventListener("unload",()=>{pa.bind(this)()},!1);window.addEventListener("pagehide",()=>{pa.bind(this)()},!1);document.addEventListener("visibilitychange",()=>{"hidden"===document.visibilityState&&pa.bind(this)()});return ra.bind(this)()}
class ta{constructor(){this.saveStateCallback=this.worker=void 0;this.loadedCartridgeMemoryState={ROM:!1,RAM:!1};this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0;this.WASMBOY_UNLOAD_STORAGE="WASMBOY_UNLOAD_STORAGE";this.WASMBOY_PALETTE_MEMORY_LOCATION=this.WASMBOY_PALETTE_MEMORY_SIZE=this.WASMBOY_INTERNAL_MEMORY_LOCATION=this.WASMBOY_INTERNAL_MEMORY_SIZE=this.WASMBOY_INTERNAL_STATE_LOCATION=this.WASMBOY_INTERNAL_STATE_SIZE=this.WASMBOY_GAME_RAM_BANKS_LOCATION=
this.WASMBOY_GAME_BYTES_LOCATION=0}initialize(a,b){return(async()=>{a?(this.saveStateCallback=b,await this._initializeConstants()):(this.saveStateCallback=b,await this._initializeConstants(),await sa.call(this))})()}setWorker(a){this.worker=a;this.worker.addMessageListener((a)=>{a=E(a);switch(a.message.type){case m.UPDATED:{const b=Object.keys(a.message);delete b.type;b.includes(B.CARTRIDGE_ROM)&&(this.cartridgeRom=new Uint8Array(a.message[B.CARTRIDGE_ROM]));b.includes(B.CARTRIDGE_RAM)&&(this.cartridgeRam=
new Uint8Array(a.message[B.CARTRIDGE_RAM]));b.includes(B.GAMEBOY_MEMORY)&&(this.gameboyMemory=new Uint8Array(a.message[B.GAMEBOY_MEMORY]));b.includes(B.PALETTE_MEMORY)&&(this.paletteMemory=new Uint8Array(a.message[B.PALETTE_MEMORY]));b.includes(B.INTERNAL_STATE)&&(this.internalState=new Uint8Array(a.message[B.INTERNAL_STATE]))}}})}getLoadedCartridgeMemoryState(){return this.loadedCartridgeMemoryState}clearMemory(){return this.worker.postMessage({type:m.CLEAR_MEMORY}).then(()=>{this.loadedCartridgeMemoryState.ROM=
!1;this.loadedCartridgeMemoryState.RAM=!1;this.internalState=this.paletteMemory=this.gameboyMemory=this.cartridgeRam=this.cartridgeHeader=this.cartridgeRom=void 0})}loadCartridgeRom(a){return(async()=>{const b={};b[B.CARTRIDGE_ROM]=a.buffer;await this.worker.postMessage(da({type:m.SET_MEMORY},b)).then(()=>{this.loadedCartridgeMemoryState.ROM=!0});await this.worker.postMessage({type:m.GET_MEMORY,memoryTypes:[B.CARTRIDGE_ROM,B.CARTRIDGE_HEADER]}).then((a)=>{a=E(a);this.cartridgeRom=new Uint8Array(a.message[B.CARTRIDGE_ROM]);
this.cartridgeHeader=new Uint8Array(a.message[B.CARTRIDGE_HEADER])})})()}saveCartridgeRam(a,b){return(async()=>{let c,d;a&&b?(c=a,d=b):(c=this.cartridgeHeader,d=this.cartridgeRam);if(!c||!d)throw Error("Error parsing the cartridgeRam or cartridge header");let e=await G.get(c);e||(e={});e.cartridgeRam=d;await G.set(c,e)})()}loadCartridgeRam(){return(async()=>{var a=this.cartridgeHeader;if(!a)throw Error("Error parsing the cartridge header");const b=await G.get(a);b&&b.cartridgeRam&&(a={},a[B.CARTRIDGE_RAM]=
b.cartridgeRam.buffer,await this.worker.postMessage(da({type:m.SET_MEMORY},a)).then(()=>{this.loadedCartridgeMemoryState.RAM=!0;this.cartridgeRam=b.cartridgeRam}))})()}saveState(a,b){return(async()=>{let c,d;a&&b?(c=b,d=a):(c=oa.call(this),d=this.cartridgeHeader);if(!d)throw Error("Error parsing the cartridge header");let e=await G.get(d);e||(e={});e.saveStates||(e.saveStates=[]);e.saveStates.push(c);await G.set(d,e);return c})()}loadState(a){return(async()=>{var b=this.cartridgeHeader;if(!b)throw Error("Error getting the cartridge header");
if(!a){b=await G.get(b);if(!b||!b.saveStates)throw Error("No Save State passed, and no cartridge object found");saverState=b.saveStates[0]}b={};b[B.CARTRIDGE_RAM]=a.wasmboyMemory.cartridgeRam.buffer;b[B.GAMEBOY_MEMORY]=a.wasmboyMemory.gameBoyMemory.buffer;b[B.PALETTE_MEMORY]=a.wasmboyMemory.wasmBoyPaletteMemory.buffer;b[B.INTERNAL_STATE]=a.wasmboyMemory.wasmBoyInternalState.buffer;await this.worker.postMessage(da({type:m.SET_MEMORY},b),[b[B.CARTRIDGE_RAM],b[B.GAMEBOY_MEMORY],b[B.PALETTE_MEMORY],b[B.INTERNAL_STATE]]);
await this.worker.postMessage({type:m.GET_MEMORY,memoryTypes:[B.CARTRIDGE_RAM,B.GAMEBOY_MEMORY,B.PALETTE_MEMORY,B.INTERNAL_STATE]}).then((a)=>{a=E(a);this.cartridgeRam=a.message[B.CARTRIDGE_RAM];this.gameboyMemory=a.message[B.GAMEBOY_MEMORY];this.paletteMemory=a.message[B.PALETTE_MEMORY];this.internalState=a.message[B.INTERNAL_STATE]})})()}getCartridgeObject(){return G.get(this.cartridgeHeader)}getCartridgeInfo(){return this.loadedCartridgeMemoryState.ROM?(async()=>{const a={};a.header=this.cartridgeHeader;
a.ROM=this.cartridgeRom;a.RAM=this.cartridgeRam;a.nintendoLogo=a.ROM.slice(260,308);a.title=a.ROM.slice(308,324);a.titleAsString=String.fromCharCode.apply(null,a.title);a.manufacturerCode=a.ROM.slice(319,323);a.CGBFlag=a.ROM[323];a.newLicenseeCode=a.ROM.slice(324,326);a.SGBFlag=a.ROM[326];a.cartridgeType=a.ROM[327];a.ROMSize=a.ROM[328];a.RAMSize=a.ROM[329];a.destinationCode=a.ROM[330];a.oldLicenseeCode=a.ROM[331];a.maskROMVersionNumber=a.ROM[332];a.headerChecksum=a.ROM[333];a.globalChecksum=a.ROM.slice(334,
336);return a})():Promise.reject("No ROM has been loaded")}_initializeConstants(){return this.worker.postMessage({type:m.GET_CONSTANTS}).then((a)=>{const b=E(a);Object.keys(this).forEach((a)=>{void 0!==b.message[a]&&(this[a]=b.message[a])})})}}const H=new ta;
var ua={ID:void 0,ACTIVE:!1,KEY_CODE:void 0},za={ID:void 0,ACTIVE:!1,BUTTON_ID:void 0,JOYSTICK:{AXIS_ID:void 0,IS_POSITIVE:void 0}},Aa={ID:void 0,ACTIVE:!1,ELEMENT:void 0,TYPE:void 0,DIRECTION:void 0,EVENT_HANDLER:void 0,BOUNDING_RECT:void 0},Ba={UP:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},RIGHT:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},DOWN:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},LEFT:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},A:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},B:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]},SELECT:{KEYBOARD:[],
GAMEPAD:[],TOUCHPAD:[]},START:{KEYBOARD:[],GAMEPAD:[],TOUCHPAD:[]}};function Ca(){function a(){return Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10)}return(""+a()+a()).slice()}function J(a){var b=Object.assign({},ua);b.ID=Ca();b.KEY_CODE=a;return b}function K(a,b,c){var d=Object.assign({},za);d.ID=Ca();d.JOYSTICK=Object.assign({},za.JOYSTICK);a||0===a?d.BUTTON_ID=a:void 0!==b&&void 0!==c&&(d.JOYSTICK.AXIS_ID=b,d.JOYSTICK.IS_POSITIVE=c);return d}
function Da(a,b,c,d){function e(a){f.EVENT_HANDLER&&f.EVENT_HANDLER(a)}var f=Object.assign({},Aa);f.ID=Ca();f.ELEMENT=a;f.TYPE=b;f.DIRECTION=c;f.EVENT_HANDLER=d;a=f.ELEMENT.getBoundingClientRect();f.BOUNDING_RECT=a;f.ELEMENT.addEventListener("touchstart",e);f.ELEMENT.addEventListener("touchmove",e);f.ELEMENT.addEventListener("touchend",e);f.ELEMENT.addEventListener("mousedown",e);f.ELEMENT.addEventListener("mouseup",e);return f}
var L={BACKSPACE:8,TAB:9,RETURN:13,SHIFT:16,CTRL:17,ALT:18,ESCAPE:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,ARROW_LEFT:37,ARROW_UP:38,ARROW_RIGHT:39,ARROW_DOWN:40,W:87,A:65,S:83,D:68,Q:81,E:69,X:88,Z:90,SEMI_COLON:186,SINGLE_QUOTE:222,BACK_SLASH:220,NUMPAD_0:96,NUMPAD_1:97,NUMPAD_2:98,NUMPAD_3:99,NUMPAD_4:100,NUMPAD_5:101,NUMPAD_6:102,NUMPAD_7:103,NUMPAD_8:104,NUMPAD_9:105},N=Object.assign({},Ba);N.UP.KEYBOARD.push(J(L.ARROW_UP));N.UP.KEYBOARD.push(J(L.W));N.UP.KEYBOARD.push(J(L.NUMPAD_8));
N.UP.GAMEPAD.push(K(12));N.UP.GAMEPAD.push(K(!1,1,!1));N.UP.GAMEPAD.push(K(!1,3,!1));N.RIGHT.KEYBOARD.push(J(L.ARROW_RIGHT));N.RIGHT.KEYBOARD.push(J(L.D));N.RIGHT.KEYBOARD.push(J(L.NUMPAD_6));N.RIGHT.GAMEPAD.push(K(15));N.RIGHT.GAMEPAD.push(K(!1,0,!0));N.RIGHT.GAMEPAD.push(K(!1,2,!0));N.DOWN.KEYBOARD.push(J(L.ARROW_DOWN));N.DOWN.KEYBOARD.push(J(L.S));N.DOWN.KEYBOARD.push(J(L.NUMPAD_5));N.DOWN.KEYBOARD.push(J(L.NUMPAD_2));N.DOWN.GAMEPAD.push(K(13));N.DOWN.GAMEPAD.push(K(!1,1,!0));
N.DOWN.GAMEPAD.push(K(!1,3,!0));N.LEFT.KEYBOARD.push(J(L.ARROW_LEFT));N.LEFT.KEYBOARD.push(J(L.A));N.LEFT.KEYBOARD.push(J(L.NUMPAD_4));N.LEFT.GAMEPAD.push(K(14));N.LEFT.GAMEPAD.push(K(!1,0,!1));N.LEFT.GAMEPAD.push(K(!1,2,!1));N.A.KEYBOARD.push(J(L.X));N.A.KEYBOARD.push(J(L.SEMI_COLON));N.A.KEYBOARD.push(J(L.NUMPAD_7));N.A.GAMEPAD.push(K(0));N.A.GAMEPAD.push(K(1));N.B.KEYBOARD.push(J(L.Z));N.B.KEYBOARD.push(J(L.ESCAPE));N.B.KEYBOARD.push(J(L.SINGLE_QUOTE));N.B.KEYBOARD.push(J(L.BACKSPACE));N.B.KEYBOARD.push(J(L.NUMPAD_9));
N.B.GAMEPAD.push(K(2));N.B.GAMEPAD.push(K(3));N.START.KEYBOARD.push(J(L.RETURN));N.START.KEYBOARD.push(J(L.SPACE));N.START.KEYBOARD.push(J(L.NUMPAD_3));N.START.GAMEPAD.push(K(9));N.SELECT.KEYBOARD.push(J(L.SHIFT));N.SELECT.KEYBOARD.push(J(L.TAB));N.SELECT.KEYBOARD.push(J(L.BACK_SLASH));N.SELECT.KEYBOARD.push(J(L.NUMPAD_1));N.SELECT.GAMEPAD.push(K(8));
var Ea=function(){function a(a,c){for(var b=0;b<c.length;b++){var e=c[b];e.enumerable=e.enumerable||!1;e.configurable=!0;"value"in e&&(e.writable=!0);Object.defineProperty(a,e.key,e)}}return function(b,c,d){c&&a(b.prototype,c);d&&a(b,d);return b}}(),Fa="input textarea button select option optgroup label datalist".split(" "),Ia=new (function(){function a(){if(!(this instanceof a))throw new TypeError("Cannot call a class as a function");this.gamepadAnalogStickDeadZone=.25;this.keyMapKeys=Object.keys(Object.assign({},
Ba));this.keyMap=JSON.parse(JSON.stringify(N));this.addedEventListeners=this.enabled=!1}Ea(a,[{key:"enable",value:function(a){a&&(this.keyMap=a);this.addedEventListeners||"undefined"===typeof window||(window.addEventListener("keyup",this.updateKeyboard.bind(this)),window.addEventListener("keydown",this.updateKeyboard.bind(this)),window.addEventListener("resize",this.updateTouchpadRect.bind(this)),this.addedEventListeners=!0);this.enabled=!0}},{key:"disable",value:function(){this.keyMap=void 0;this.enabled=
!1}},{key:"isEnabled",value:function(){return this.enabled}},{key:"addTouchInput",value:function(a,c,d,e){var b=this,g=void 0;g=Da(c,d,e,function(c){b.updateTouchpad(a,g,c)});this.keyMap[a].TOUCHPAD.push(g);return g.ID}},{key:"removeTouchInput",value:function(a,c){var b=void 0;this.keyMap[a].TOUCHPAD.some(function(a,d){return a.ID===c?(b=d,!0):!1});return void 0!==b?(this.keyMap[a].TOUCHPAD.splice(b,1),!0):!1}},{key:"getState",value:function(){var a=this;if(!this.enabled)return{};this.updateGamepad();
var c={};this.keyMapKeys.forEach(function(b){a.keyMap[b].KEYBOARD.some(function(a){return a.ACTIVE})?c[b]=!0:a.keyMap[b].GAMEPAD.some(function(a){return a.ACTIVE})?c[b]=!0:a.keyMap[b].TOUCHPAD.some(function(a){return a.ACTIVE})?c[b]=!0:c[b]=!1});return c}},{key:"isIgnoringKeyEvents",value:function(){return"undefined"===typeof window?!0:Fa.some(function(a){return document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1})}},{key:"updateKeyboard",value:function(a){var b=
this;if(this.enabled&&"undefined"!==typeof window&&!(a&&a.target&&a.target.tagName&&Fa.some(function(b){return a&&a.target.tagName.toLowerCase()===b.toLowerCase()?!0:!1}))){var d=!1;"keydown"===a.type&&(d=!0);this.keyMapKeys.forEach(function(c){b.keyMap[c].KEYBOARD.forEach(function(e,g){e.KEY_CODE===a.keyCode&&(b.keyMap[c].KEYBOARD[g].ACTIVE=d)})});a.preventDefault()}}},{key:"updateGamepad",value:function(){function a(a){var b=d[a];if(!b)return"continue";c.keyMapKeys.forEach(function(a){c.keyMap[a].GAMEPAD.forEach(function(d,
e){if(c.keyMap[a].GAMEPAD[e].BUTTON_ID||0===c.keyMap[a].GAMEPAD[e].BUTTON_ID)d=c.keyMap[a].GAMEPAD[e].BUTTON_ID,c.keyMap[a].GAMEPAD[e].ACTIVE=b.buttons[d]?b.buttons[d].pressed:!1;void 0!==c.keyMap[a].GAMEPAD[e].JOYSTICK.AXIS_ID&&void 0!==c.keyMap[a].GAMEPAD[e].JOYSTICK.IS_POSITIVE&&(c.keyMap[a].GAMEPAD[e].ACTIVE=c.keyMap[a].GAMEPAD[e].JOYSTICK.IS_POSITIVE?(b.axes[c.keyMap[a].GAMEPAD[e].JOYSTICK.AXIS_ID]||0)>+c.gamepadAnalogStickDeadZone:(b.axes[c.keyMap[a].GAMEPAD[e].JOYSTICK.AXIS_ID]||0)<-c.gamepadAnalogStickDeadZone)})})}
for(var c=this,d=navigator.getGamepads?navigator.getGamepads():[],e=0;e<d.length;e++)a(e)}},{key:"updateTouchpadRect",value:function(){var a=this;this.keyMapKeys.forEach(function(b){a.keyMap[b].TOUCHPAD.forEach(function(c,e){c=a.keyMap[b].TOUCHPAD[e].ELEMENT.getBoundingClientRect();a.keyMap[b].TOUCHPAD[e].BOUNDING_RECT=c})})}},{key:"resetTouchDpad",value:function(){var a=this;["UP","RIGHT","DOWN","LEFT"].forEach(function(b){a.keyMap[b].TOUCHPAD.forEach(function(a){a.ACTIVE=!1})})}},{key:"updateTouchpad",
value:function(a,c,d){if(this.enabled&&d&&(!d.type.includes("touch")||d.touches))if(d.preventDefault(),"touchstart"===d.type||"touchmove"===d.type||"mousedown"===d.type){if("DPAD"===c.TYPE){a=void 0;d.type.includes("touch")?a=d.touches[0]:d.type.includes("mouse")&&(a=d);d=(c.BOUNDING_RECT.right-c.BOUNDING_RECT.left)/2;var b=a.clientX-c.BOUNDING_RECT.left;a=a.clientY-c.BOUNDING_RECT.top;if(b>d+c.BOUNDING_RECT.width/2+50)return;Math.abs(d-b)+c.BOUNDING_RECT.width/8>Math.abs((c.BOUNDING_RECT.bottom-
c.BOUNDING_RECT.top)/2-a)?Math.abs(c.BOUNDING_RECT.width/2-b)>c.BOUNDING_RECT.width/20&&(a=b<c.BOUNDING_RECT.width/2,c.ACTIVE=a&&"LEFT"===c.DIRECTION?!0:a||"RIGHT"!==c.DIRECTION?!1:!0):(a=a<c.BOUNDING_RECT.height/2,c.ACTIVE=a&&"UP"===c.DIRECTION?!0:a||"DOWN"!==c.DIRECTION?!1:!0)}"BUTTON"===c.TYPE&&(c.ACTIVE=!0)}else"DPAD"===c.TYPE&&this.resetTouchDpad(),"BUTTON"===c.TYPE&&(c.ACTIVE=!1)}}]);return a}());
class Ja{constructor(){this.worker=void 0;this.isEnabled=!1;this.enableDefaultJoypad()}initialize(){return Promise.resolve()}setWorker(a){this.worker=a}updateController(){if(!this.isEnabled)return{};const a=Ia.getState();this.setJoypadState(a);return a}setJoypadState(a){this.worker.postMessage({type:m.SET_JOYPAD_STATE,setJoypadStateParamsAsArray:[a.UP?1:0,a.RIGHT?1:0,a.DOWN?1:0,a.LEFT?1:0,a.A?1:0,a.B?1:0,a.SELECT?1:0,a.START?1:0]})}enableDefaultJoypad(){this.isEnabled=!0;Ia.enable(JSON.parse(JSON.stringify(N)))}disableDefaultJoypad(){this.isEnabled=
!1;Ia.disable(JSON.parse(JSON.stringify(N)))}addTouchInput(a,b,c,d){return Ia.addTouchInput(a,b,c,d)}removeTouchInput(a,b){return Ia.removeTouchInput(a,b)}}const Q=new Ja;let Ka=0;const Ta=()=>{var a=Math.random().toString(36).replace(/[^a-z]+/g,"").substr(2,10);Ka++;a=`${a}-${Ka}`;1E5<Ka&&(Ka=0);return a};function Ua(a,b,c){b||(b=Ta());return{workerId:c,messageId:b,message:a}}
class Va{constructor(a,b){this.id=Ta();b&&(this.id=b);this.messageListeners=[];a=atob(a.split(",")[1]);let c;try{c=new Blob([a],{type:"application/javascript"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder,c=new BlobBuilder,c.append(a),c=c.getBlob()}this.worker=new Worker(URL.createObjectURL(c));this.worker.onmessage=this._onMessageHandler.bind(this)}postMessage(a,b){a=Ua(a,void 0,this.id);const c=a.messageId,d=new Promise((a)=>{this.addMessageListener((b,
d)=>{b=E(b);b.messageId===c&&(this.removeMessageListener(d.id),a(b))})});this.worker.postMessage(a,b);return d}addMessageListener(a){this.messageListeners.push({id:Ta(),callback:a})}removeMessageListener(a){let b;this.messageListeners.some((c,d)=>c.id===a?(b=d,!0):!1);void 0!==b&&this.messageListeners.splice(b,1)}_onMessageHandler(a){this.messageListeners.forEach((b)=>{b.callback(a,b)})}}
const Wa=async()=>{const a=new Va("data:application/javascript;base64,",u.LIB),
b=new Va("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZil7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6ZixtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGs7Y29uc3QgbT0oYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkdFVF9DT05TVEFOVFNfRE9ORSI6ZyhjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlVQREFURUQiOnthPW5ldyBVaW50OENsYW1wZWRBcnJheShhLm1lc3NhZ2UuZ3JhcGhpY3NGcmFtZUJ1ZmZlcik7Y29uc3QgZj1uZXcgVWludDhDbGFtcGVkQXJyYXkoOTIxNjApLGQ9bmV3IFVpbnQ4Q2xhbXBlZEFycmF5KDMpO2ZvcihsZXQgYz0wOzE0ND5jO2MrKylmb3IobGV0IGU9MDsxNjA+ZTtlKyspe3ZhciBiPTMqKDE2MCpjK2UpO2ZvcihsZXQgYz0wOzM+YztjKyspZFtjXT1hW2IrY107Yj00KihlKzE2MCpjKTtmW2JdPWRbMF07ZltiKzFdPWRbMV07ZltiKzJdPWRbMl07ZltiKzNdPTI1NX1hPWZ9ZyhjKHt0eXBlOiJVUERBVEVEIixpbWFnZURhdGFBcnJheUJ1ZmZlcjphLmJ1ZmZlcn0pLFthLmJ1ZmZlcl0pfX07bCgoYSk9PnthPWEuZGF0YT8KYS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjprPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sayk7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmsucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
u.GRAPHICS),c=new Va("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIG0oYSxiKXtoP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpuLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gcChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGgpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoaClzZWxmLm9ubWVzc2FnZT1hO2Vsc2Ugbi5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsZCl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksaysrLGI9YCR7Yn0tJHtrfWAsMUU1PGsmJihrPTApKTtyZXR1cm57d29ya2VySWQ6ZCxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGg9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgbjtofHwobj1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgaz0wO2NvbnN0IHE9KGEpPT57YT0oYS0xKS8xMjctMTsuMDA4Pk1hdGguYWJzKGEpJiYoYT0wKTtyZXR1cm4gYS8yLjV9O2xldCBsO2NvbnN0IHI9KGEpPT57YT1hLmRhdGE/YS5kYXRhOmE7aWYoYS5tZXNzYWdlKXN3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjptKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiVVBEQVRFRCI6e3ZhciBiPW5ldyBVaW50OEFycmF5KGEubWVzc2FnZS5hdWRpb0J1ZmZlcik7dmFyIGQ9YS5tZXNzYWdlLm51bWJlck9mU2FtcGxlcztjb25zdCBjPW5ldyBGbG9hdDMyQXJyYXkoZCk7dmFyIGY9bmV3IEZsb2F0MzJBcnJheShkKTtsZXQgZz0wO2QqPTI7Zm9yKHZhciBlPTA7ZTxkO2UrPTIpY1tnXT1xKGJbZV0pLGcrKztnPTA7Zm9yKGU9MTtlPGQ7ZSs9MilmW2ddPXEoYltlXSksZysrO2I9Yy5idWZmZXI7Zj1mLmJ1ZmZlcn1tKGMoe3R5cGU6IlVQREFURUQiLGxlZnRDaGFubmVsOmIscmlnaHRDaGFubmVsOmYsCm51bWJlck9mU2FtcGxlczphLm1lc3NhZ2UubnVtYmVyT2ZTYW1wbGVzLGZwczphLm1lc3NhZ2UuZnBzLGFsbG93RmFzdFNwZWVkU3RyZXRjaGluZzphLm1lc3NhZ2UuYWxsb3dGYXN0U3BlZWRTdHJldGNoaW5nfSksW2IsZl0pfX07cCgoYSk9PnthPWEuZGF0YT9hLmRhdGE6YTtzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNPTk5FQ1QiOmw9YS5tZXNzYWdlLnBvcnRzWzBdO3AocixsKTttKGModm9pZCAwLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UUyI6bC5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkFVRElPX0xBVEVOQ1kiOmwucG9zdE1lc3NhZ2UoYyhhLm1lc3NhZ2UsYS5tZXNzYWdlSWQpKTticmVhaztkZWZhdWx0OmNvbnNvbGUubG9nKGEpfX0pfSkoKTsK",
u.AUDIO),d=new Va("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXthfHxjb25zb2xlLmVycm9yKCJ3b3JrZXJhcGk6IE5vIGNhbGxiYWNrIHdhcyBwcm92aWRlZCB0byBvbk1lc3NhZ2UhIik7aWYoYilpZihjKWIub25tZXNzYWdlPWE7ZWxzZSBiLm9uKCJtZXNzYWdlIixhKTtlbHNlIGlmKGMpc2VsZi5vbm1lc3NhZ2U9YTtlbHNlIGUub24oIm1lc3NhZ2UiLGEpfWZ1bmN0aW9uIGgoYSxiLGMpe2J8fChiPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnJlcGxhY2UoL1teYS16XSsvZywiIikuc3Vic3RyKDIsMTApLGQrKyxiPWAke2J9LSR7ZH1gLDFFNTxkJiYoZD0wKSk7cmV0dXJue3dvcmtlcklkOmMsbWVzc2FnZUlkOmIsbWVzc2FnZTphfX1jb25zdCBjPSJ1bmRlZmluZWQiIT09dHlwZW9mIHNlbGY7bGV0IGU7Y3x8KGU9cmVxdWlyZSgid29ya2VyX3RocmVhZHMiKS5wYXJlbnRQb3J0KTtsZXQgZD0wLGY7Y29uc3Qgaz0oYSk9Pnt9O2coKGEpPT57YT1hLmRhdGE/YS5kYXRhOgphO3N3aXRjaChhLm1lc3NhZ2UudHlwZSl7Y2FzZSAiQ09OTkVDVCI6Zj1hLm1lc3NhZ2UucG9ydHNbMF07ZyhrLGYpO2E9aCh2b2lkIDAsYS5tZXNzYWdlSWQpO2M/c2VsZi5wb3N0TWVzc2FnZShhLHZvaWQgMCk6ZS5wb3N0TWVzc2FnZShhLHZvaWQgMCk7YnJlYWs7Y2FzZSAiU0VUX0pPWVBBRF9TVEFURSI6Zi5wb3N0TWVzc2FnZShoKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2RlZmF1bHQ6Y29uc29sZS5sb2coYSl9fSl9KSgpOwo=",
u.CONTROLLER),e=new Va("data:application/javascript;base64,J3VzZSBzdHJpY3QnOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGcoYSxiKXtkP3NlbGYucG9zdE1lc3NhZ2UoYSxiKTpoLnBvc3RNZXNzYWdlKGEsYil9ZnVuY3Rpb24gbChhLGIpe2F8fGNvbnNvbGUuZXJyb3IoIndvcmtlcmFwaTogTm8gY2FsbGJhY2sgd2FzIHByb3ZpZGVkIHRvIG9uTWVzc2FnZSEiKTtpZihiKWlmKGQpYi5vbm1lc3NhZ2U9YTtlbHNlIGIub24oIm1lc3NhZ2UiLGEpO2Vsc2UgaWYoZClzZWxmLm9ubWVzc2FnZT1hO2Vsc2UgaC5vbigibWVzc2FnZSIsYSl9ZnVuY3Rpb24gYyhhLGIsYyl7Ynx8KGI9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikucmVwbGFjZSgvW15hLXpdKy9nLCIiKS5zdWJzdHIoMiwxMCksZSsrLGI9YCR7Yn0tJHtlfWAsMUU1PGUmJihlPTApKTtyZXR1cm57d29ya2VySWQ6YyxtZXNzYWdlSWQ6YixtZXNzYWdlOmF9fWNvbnN0IGQ9InVuZGVmaW5lZCIhPT10eXBlb2Ygc2VsZjtsZXQgaDtkfHwoaD1yZXF1aXJlKCJ3b3JrZXJfdGhyZWFkcyIpLnBhcmVudFBvcnQpOwpsZXQgZT0wLGY7Y29uc3Qgaz0oYSxiKT0+e2NvbnN0IGQ9W107T2JqZWN0LmtleXMoYi5tZXNzYWdlKS5mb3JFYWNoKChhKT0+eyJ0eXBlIiE9PWEmJmQucHVzaChiLm1lc3NhZ2VbYV0pfSk7Y29uc3QgZT1jKGIubWVzc2FnZSxiLm1lc3NhZ2VJZCk7YT9mLnBvc3RNZXNzYWdlKGUsZCk6ZyhlLGQpfSxtPShhKT0+e2E9YS5kYXRhP2EuZGF0YTphO2lmKGEubWVzc2FnZSlzd2l0Y2goYS5tZXNzYWdlLnR5cGUpe2Nhc2UgIkNMRUFSX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSxbYS5tZXNzYWdlLndhc21CeXRlTWVtb3J5XSk7YnJlYWs7Y2FzZSAiR0VUX0NPTlNUQU5UU19ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiU0VUX01FTU9SWV9ET05FIjpnKGMoYS5tZXNzYWdlLGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6ayghMSxhKTticmVhaztjYXNlICJVUERBVEVEIjprKCExLGEpfX07bCgoYSk9PnthPQphLmRhdGE/YS5kYXRhOmE7c3dpdGNoKGEubWVzc2FnZS50eXBlKXtjYXNlICJDT05ORUNUIjpmPWEubWVzc2FnZS5wb3J0c1swXTtsKG0sZik7ZyhjKHZvaWQgMCxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkNMRUFSX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKHt0eXBlOiJDTEVBUl9NRU1PUlkifSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIkdFVF9DT05TVEFOVFMiOmYucG9zdE1lc3NhZ2UoYyh7dHlwZToiR0VUX0NPTlNUQU5UUyJ9LGEubWVzc2FnZUlkKSk7YnJlYWs7Y2FzZSAiR0VUX01FTU9SWSI6Zi5wb3N0TWVzc2FnZShjKGEubWVzc2FnZSxhLm1lc3NhZ2VJZCkpO2JyZWFrO2Nhc2UgIlNFVF9NRU1PUlkiOmsoITAsYSk7YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmxvZyhhKX19KX0pKCk7Cg==",
u.MEMORY),f=[];[b,c,d,e].forEach((b)=>{const c=new MessageChannel,d=new Promise((d)=>{let e=0;a.postMessage({type:m.CONNECT,workerId:b.id,ports:[c.port1]},[c.port1]).then(()=>{e++;2<=e&&d()});b.postMessage({type:m.CONNECT,workerId:a.id,ports:[c.port2]},[c.port2]).then(()=>{e++;2<=e&&d()})});f.push(d)});await Promise.all(f);ba.setWorker(b);F.setWorker(c);Q.setWorker(d);H.setWorker(e);return a};
let R={parse:function(a){let b=R.bin.readUshort,c=R.bin.readUint;var d;let e={};a=new Uint8Array(a);for(d=a.length-4;101010256!=c(a,d);)d--;d=d+4+4;let f=b(a,d);d+=2;b(a,d);d+=2;c(a,d);d+=4;d=c(a,d);for(let g=0;g<f;g++){c(a,d);d+=4;d+=4;d+=4;d+=4;c(a,d);d+=4;let f=c(a,d);d+=4;let g=c(a,d);d+=4;let n=b(a,d),x=b(a,d+2),C=b(a,d+4);d+=6;d+=8;let w=c(a,d);d+=4;d+=n+x+C;R._readLocal(a,w,e,f,g)}return e},_readLocal:function(a,b,c,d,e){var f=R.bin.readUshort,g=R.bin.readUint;g(a,b);b+=4;f(a,b);b+=2;f(a,b);
b+=2;let k=f(a,b);b+=2;g(a,b);b+=4;g(a,b);b=b+4+8;g=f(a,b);b+=2;let l=f(a,b);b+=2;f=R.bin.readUTF8(a,b,g);b=b+g+l;a=new Uint8Array(a.buffer,b);if(0==k)c[f]=new Uint8Array(a.buffer.slice(b,b+d));else if(8==k)b=new Uint8Array(e),R.inflateRaw(a,b),c[f]=b;else throw"unknown compression method: "+k;},inflateRaw:function(a,b){return R.F.inflate(a,b)},inflate:function(a,b){return R.inflateRaw(new Uint8Array(a.buffer,a.byteOffset+2,a.length-6),b)},deflate:function(a,b){null==b&&(b={level:6});let c=0,d=new Uint8Array(50+
Math.floor(1.1*a.length));d[c]=120;d[c+1]=156;c=R.F.deflateRaw(a,d,c+2,b.level);a=R.adler(a,0,a.length);d[c+0]=a>>>24&255;d[c+1]=a>>>16&255;d[c+2]=a>>>8&255;d[c+3]=a>>>0&255;return new Uint8Array(d.buffer,0,c+4)},deflateRaw:function(a,b){null==b&&(b={level:6});let c=new Uint8Array(50+Math.floor(1.1*a.length)),d;d=R.F.deflateRaw(a,c,d,b.level);return new Uint8Array(c.buffer,0,d)},encode:function(a){var b=0;let c=R.bin.writeUint,d=R.bin.writeUshort;var e={};for(var f in a){var g=!R._noNeed(f),k=a[f];
let b=R.crc.crc(k,0,k.length);e[f]={cpr:g,usize:k.length,crc:b,file:g?R.deflateRaw(k):k}}for(let a in e)b+=e[a].file.length+30+46+2*R.bin.sizeUTF8(a);a=new Uint8Array(b+22);b=0;f=[];for(var l in e)g=e[l],f.push(b),b=R._writeHeader(a,b,l,g,0);l=0;g=b;for(let c in e)k=e[c],f.push(b),b=R._writeHeader(a,b,c,k,1,f[l++]);e=b-g;c(a,b,101010256);b=b+4+4;d(a,b,l);b+=2;d(a,b,l);b+=2;c(a,b,e);c(a,b+4,g);return a.buffer},_noNeed:function(a){a=a.split(".").pop().toLowerCase();return-1!="png,jpg,jpeg,zip".indexOf(a)},
_writeHeader:function(a,b,c,d,e,f){let g=R.bin.writeUint,k=R.bin.writeUshort,l=d.file;g(a,b,0==e?67324752:33639248);b+=4;1==e&&(b+=2);k(a,b,20);b+=2;k(a,b,0);b+=2;k(a,b,d.cpr?8:0);b+=2;g(a,b,0);b+=4;g(a,b,d.crc);b+=4;g(a,b,l.length);b+=4;g(a,b,d.usize);b+=4;k(a,b,R.bin.sizeUTF8(c));b+=2;k(a,b,0);b+=2;1==e&&(b=b+2+2+6,g(a,b,f),b+=4);c=R.bin.writeUTF8(a,b,c);b+=c;0==e&&(a.set(l,b),b+=l.length);return b}};var Xa;
{let a=new Uint32Array(256);for(let b=0;256>b;b++){let c=b;for(let a=0;8>a;a++)c=c&1?3988292384^c>>>1:c>>>1;a[b]=c}Xa=a}R.crc={table:Xa,update:function(a,b,c,d){for(let e=0;e<d;e++)a=R.crc.table[(a^b[c+e])&255]^a>>>8;return a},crc:function(a,b,c){return R.crc.update(4294967295,a,b,c)^4294967295}};R.adler=function(a,b,c){let d=1,e=0,f=b;for(b+=c;f<b;){for(c=Math.min(f+5552,b);f<c;)d+=a[f++],e+=d;d%=65521;e%=65521}return e<<16|d};
R.bin={readUshort:function(a,b){return a[b]|a[b+1]<<8},writeUshort:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255},readUint:function(a,b){return 16777216*a[b+3]+(a[b+2]<<16|a[b+1]<<8|a[b])},writeUint:function(a,b,c){a[b]=c&255;a[b+1]=c>>8&255;a[b+2]=c>>16&255;a[b+3]=c>>24&255},readASCII:function(a,b,c){let d="";for(let e=0;e<c;e++)d+=String.fromCharCode(a[b+e]);return d},writeASCII:function(a,b,c){for(let d=0;d<c.length;d++)a[b+d]=c.charCodeAt(d)},pad:function(a){return 2>a.length?"0"+a:a},readUTF8:function(a,
b,c){let d="",e;for(let e=0;e<c;e++)d+="%"+R.bin.pad(a[b+e].toString(16));try{e=decodeURIComponent(d)}catch(f){return R.bin.readASCII(a,b,c)}return e},writeUTF8:function(a,b,c){let d=c.length,e=0;for(let f=0;f<d;f++){let d=c.charCodeAt(f);if(0==(d&4294967168))a[b+e]=d,e++;else if(0==(d&4294965248))a[b+e]=192|d>>6,a[b+e+1]=128|d>>0&63,e+=2;else if(0==(d&4294901760))a[b+e]=224|d>>12,a[b+e+1]=128|d>>6&63,a[b+e+2]=128|d>>0&63,e+=3;else if(0==(d&4292870144))a[b+e]=240|d>>18,a[b+e+1]=128|d>>12&63,a[b+e+
2]=128|d>>6&63,a[b+e+3]=128|d>>0&63,e+=4;else throw"e";}return e},sizeUTF8:function(a){let b=a.length,c=0;for(let d=0;d<b;d++){let b=a.charCodeAt(d);if(0==(b&4294967168))c++;else if(0==(b&4294965248))c+=2;else if(0==(b&4294901760))c+=3;else if(0==(b&4292870144))c+=4;else throw"e";}return c}};R.F={};
R.F.deflateRaw=function(a,b,c,d){var e=[[0,0,0,0,0],[4,4,8,4,0],[4,5,16,8,0],[4,6,16,16,0],[4,10,16,32,0],[8,16,32,32,0],[8,16,128,128,0],[8,32,128,256,0],[32,128,258,1024,1],[32,258,258,4096,1]][d];let f=R.F.U,g=R.F._goodIndex;var k=R.F._putsE;let l=0;c<<=3;let n=0,x=a.length;if(0==d){for(;l<x;)e=Math.min(65535,x-l),k(b,c,l+e==x?1:0),c=R.F._copyExact(a,l,e,b,c+8),l+=e;return c>>>3}k=f.lits;d=f.strt;let C=f.prev,w=0,y=0,r=0,v=0;let t=0;2<x&&(t=R.F._hash(a,0),d[t]=0);for(l=0;l<x;l++){var A=t;if(l+
1<x-2){t=R.F._hash(a,l+1);var p=l+1&32767;C[p]=d[t];d[t]=p}if(n<=l){if(14E3<w||26697<y)n<l&&(k[w]=l-n,w+=2,n=l),c=R.F._writeBlock(l==x-1||n==x?1:0,k,w,v,a,r,l-r,b,c),w=y=v=0,r=l;p=0;l<x-2&&(p=R.F._bestMatch(a,l,C,A,Math.min(e[2],x-l),e[3]));if(0!=p){A=p>>>16;p&=65535;let a=g(A,f.of0);f.lhst[257+a]++;let b=g(p,f.df0);f.dhst[b]++;v+=f.exb[a]+f.dxb[b];k[w]=A<<23|l-n;k[w+1]=p<<16|a<<8|b;w+=2;n=l+A}else f.lhst[a[l]]++;y++}}if(r!=l||0==a.length)n<l&&(k[w]=l-n,w+=2),c=R.F._writeBlock(1,k,w,v,a,r,l-r,b,c);
for(;0!=(c&7);)c++;return c>>>3};R.F._bestMatch=function(a,b,c,d,e,f){var g=b&32767;let k=c[g],l=g-k+32768&32767;if(k==g||d!=R.F._hash(a,b-l))return 0;let n=d=0,x=Math.min(32767,b);for(;l<=x&&0!=--f&&k!=g;){if(0==d||a[b+d]==a[b+d-l])if(g=R.F._howLong(a,b,l),g>d){d=g;n=l;if(d>=e)break;l+2<g&&(g=l+2);let a=0;for(let d=0;d<g-2;d++){let e=b-l+d+32768&32767,f=e-c[e]+32768&32767;f>a&&(a=f,k=e)}}g=k;k=c[g];l+=g-k+32768&32767}return d<<16|n};
R.F._howLong=function(a,b,c){if(a[b]!=a[b-c]||a[b+1]!=a[b+1-c]||a[b+2]!=a[b+2-c])return 0;let d=b,e=Math.min(a.length,b+258);for(b+=3;b<e&&a[b]==a[b-c];)b++;return b-d};R.F._hash=function(a,b){return(a[b]<<8|a[b+1])+(a[b+2]<<4)&65535};R.saved=0;
R.F._writeBlock=function(a,b,c,d,e,f,g,k,l){let n=R.F.U,x=R.F._putsF,C=R.F._putsE;let w,y,r,v;n.lhst[256]++;var t=R.F.getTrees();var A=t[0];w=t[1];y=t[2];r=t[3];v=t[4];var p=t[5];var O=t[6];t=t[7];var I=(0==(l+3&7)?0:8-(l+3&7))+32+(g<<3);let P=d+R.F.contSize(n.fltree,n.lhst)+R.F.contSize(n.fdtree,n.dhst);d=d+R.F.contSize(n.ltree,n.lhst)+R.F.contSize(n.dtree,n.dhst);d+=14+3*p+R.F.contSize(n.itree,n.ihst)+(2*n.ihst[16]+3*n.ihst[17]+7*n.ihst[18]);for(var D=0;286>D;D++)n.lhst[D]=0;for(D=0;30>D;D++)n.dhst[D]=
0;for(D=0;19>D;D++)n.ihst[D]=0;I=I<P&&I<d?0:P<d?1:2;x(k,l,a);x(k,l+1,I);l+=3;if(0==I){for(;0!=(l&7);)l++;l=R.F._copyExact(e,f,g,k,l)}else{let d,D;1==I&&(d=n.fltree,D=n.fdtree);if(2==I){R.F.makeCodes(n.ltree,A);R.F.revCodes(n.ltree,A);R.F.makeCodes(n.dtree,w);R.F.revCodes(n.dtree,w);R.F.makeCodes(n.itree,y);R.F.revCodes(n.itree,y);d=n.ltree;D=n.dtree;C(k,l,r-257);l+=5;C(k,l,v-1);l+=5;C(k,l,p-4);l+=4;for(a=0;a<p;a++)C(k,l+3*a,n.itree[(n.ordr[a]<<1)+1]);l=R.F._codeTiny(O,n.itree,k,l+3*p);l=R.F._codeTiny(t,
n.itree,k,l)}for(p=0;p<c;p+=2){a=b[p];O=a>>>23;for(a=f+(a&8388607);f<a;)l=R.F._writeLit(e[f++],d,k,l);0!=O&&(A=b[p+1],a=A>>16,g=A>>8&255,A&=255,l=R.F._writeLit(257+g,d,k,l),C(k,l,O-n.of0[g]),l+=n.exb[g],l=R.F._writeLit(A,D,k,l),x(k,l,a-n.df0[A]),l+=n.dxb[A],f+=O)}l=R.F._writeLit(256,d,k,l)}return l};R.F._copyExact=function(a,b,c,d,e){let f=e>>>3;d[f]=c;d[f+1]=c>>>8;d[f+2]=255-d[f];d[f+3]=255-d[f+1];f+=4;d.set(new Uint8Array(a.buffer,b,c),f);return e+(c+4<<3)};
R.F.getTrees=function(){let a=R.F.U,b=R.F._hufTree(a.lhst,a.ltree,15),c=R.F._hufTree(a.dhst,a.dtree,15),d=[],e=R.F._lenCodes(a.ltree,d),f=[],g=R.F._lenCodes(a.dtree,f);for(var k=0;k<d.length;k+=2)a.ihst[d[k]]++;for(k=0;k<f.length;k+=2)a.ihst[f[k]]++;k=R.F._hufTree(a.ihst,a.itree,7);let l=19;for(;4<l&&0==a.itree[(a.ordr[l-1]<<1)+1];)l--;return[b,c,k,e,g,l,d,f]};R.F.getSecond=function(a){let b=[];for(let c=0;c<a.length;c+=2)b.push(a[c+1]);return b};
R.F.nonZero=function(a){let b="";for(let c=0;c<a.length;c+=2)0!=a[c+1]&&(b+=(c>>1)+",");return b};R.F.contSize=function(a,b){let c=0;for(let d=0;d<b.length;d++)c+=b[d]*a[(d<<1)+1];return c};R.F._codeTiny=function(a,b,c,d){for(let e=0;e<a.length;e+=2){let f=a[e],g=a[e+1];d=R.F._writeLit(f,b,c,d);let k=16==f?2:17==f?3:7;15<f&&(R.F._putsE(c,d,g,k),d+=k)}return d};
R.F._lenCodes=function(a,b){let c=a.length;for(;2!=c&&0==a[c-1];)c-=2;for(let f=0;f<c;f+=2){var d=a[f+1],e=f+3<c?a[f+3]:-1;let g=f+5<c?a[f+5]:-1,k=0==f?-1:a[f-1];if(0==d&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,138);11>d?b.push(17,d-3):b.push(18,d-11);f+=2*d-2}else if(d==k&&e==d&&g==d){for(e=f+5;e+2<c&&a[e+2]==d;)e+=2;d=Math.min(e+1-f>>>1,6);b.push(16,d-3);f+=2*d-2}else b.push(d,0)}return c>>>1};
R.F._hufTree=function(a,b,c){var d=[],e=a.length,f=b.length,g=0;for(g=0;g<f;g+=2)b[g]=0,b[g+1]=0;for(g=0;g<e;g++)0!=a[g]&&d.push({lit:g,f:a[g]});a=d.length;e=d.slice(0);if(0==a)return 0;if(1==a)return c=d[0].lit,d=0==c?1:0,b[(c<<1)+1]=1,b[(d<<1)+1]=1;d.sort(function(a,b){return a.f-b.f});g=d[0];f=d[1];let k=0,l=1,n=2;for(d[0]={lit:-1,f:g.f+f.f,l:g,r:f,d:0};l!=a-1;)g=k!=l&&(n==a||d[k].f<d[n].f)?d[k++]:d[n++],f=k!=l&&(n==a||d[k].f<d[n].f)?d[k++]:d[n++],d[l++]={lit:-1,f:g.f+f.f,l:g,r:f};d=R.F.setDepth(d[l-
1],0);d>c&&(R.F.restrictDepth(e,c,d),d=c);for(g=0;g<a;g++)b[(e[g].lit<<1)+1]=e[g].d;return d};R.F.setDepth=function(a,b){return-1!=a.lit?a.d=b:Math.max(R.F.setDepth(a.l,b+1),R.F.setDepth(a.r,b+1))};R.F.restrictDepth=function(a,b,c){let d=0,e=1<<c-b,f=0;a.sort(function(a,b){return b.d==a.d?a.f-b.f:b.d-a.d});for(d=0;d<a.length;d++)if(a[d].d>b){let g=a[d].d;a[d].d=b;f+=e-(1<<c-g)}else break;for(f>>>=c-b;0<f;)c=a[d].d,c<b?(a[d].d++,f-=1<<b-c-1):d++;for(;0<=d;d--)a[d].d==b&&0>f&&(a[d].d--,f++);0!=f&&console.log("debt left")};
R.F._goodIndex=function(a,b){let c=0;b[c|16]<=a&&(c|=16);b[c|8]<=a&&(c|=8);b[c|4]<=a&&(c|=4);b[c|2]<=a&&(c|=2);b[c|1]<=a&&(c|=1);return c};R.F._writeLit=function(a,b,c,d){R.F._putsF(c,d,b[a<<1]);return d+b[(a<<1)+1]};
R.F.inflate=function(a,b){if(3==a[0]&&0==a[1])return b?b:new Uint8Array(0);var c=R.F;let d=c._bitsF,e=c._bitsE,f=c._decodeTiny,g=c.makeCodes,k=c.codes2map,l=c._get17;c=c.U;let n=null==b;n&&(b=new Uint8Array(a.length>>2<<3));let x=0;var C,w;let y=w=C=0;for(var r=0,v;0==x;){x=d(a,r,1);var t=d(a,r+1,2);r+=3;if(0==t)0!=(r&7)&&(r+=8-(r&7)),r=(r>>>3)+4,t=a[r-4]|a[r-3]<<8,n&&(b=R.F._check(b,y+t)),b.set(new Uint8Array(a.buffer,a.byteOffset+r,t),y),r=r+t<<3,y+=t;else{n&&(b=R.F._check(b,y+131072));if(1==t){var A=
c.flmap;v=c.fdmap;C=511;w=31}if(2==t){C=e(a,r,5)+257;w=e(a,r+5,5)+1;A=e(a,r+10,4)+4;r+=14;for(v=0;38>v;v+=2)c.itree[v]=0,c.itree[v+1]=0;t=1;for(v=0;v<A;v++){var p=e(a,r+3*v,3);c.itree[(c.ordr[v]<<1)+1]=p;p>t&&(t=p)}r+=3*A;g(c.itree,t);k(c.itree,t,c.imap);A=c.lmap;v=c.dmap;p=f(c.imap,(1<<t)-1,C,a,r,c.ltree);C=(1<<(p>>>24))-1;r+=p&16777215;g(c.ltree,p>>>24);k(c.ltree,p>>>24,A);t=f(c.imap,(1<<t)-1,w,a,r,c.dtree);w=(1<<(t>>>24))-1;r+=t&16777215;g(c.dtree,t>>>24);k(c.dtree,t>>>24,v)}for(;;)if(t=A[l(a,
r)&C],r+=t&15,p=t>>>4,0==p>>>8)b[y++]=p;else if(256==p)break;else{t=y+p-254;264<p&&(p=c.ldef[p-257],t=y+(p>>>3)+e(a,r,p&7),r+=p&7);p=v[l(a,r)&w];r+=p&15;p=c.ddef[p>>>4];let f=(p>>>4)+d(a,r,p&15);for(r+=p&15;y<t;)b[y]=b[y++-f],b[y]=b[y++-f],b[y]=b[y++-f],b[y]=b[y++-f];y=t}}}return b.length==y?b:b.slice(0,y)};R.F._check=function(a,b){let c=a.length;if(b<=c)return a;b=new Uint8Array(c<<1);for(let d=0;d<c;d+=4)b[d]=a[d],b[d+1]=a[d+1],b[d+2]=a[d+2],b[d+3]=a[d+3];return b};
R.F._decodeTiny=function(a,b,c,d,e,f){let g=e,k=R.F._bitsE,l=R.F._get17,n=c<<1,x=c=0;for(;c<n;){var C=a[l(d,e)&b];e+=C&15;var w=C>>>4;if(15>=w)f[c]=0,f[c+1]=w,w>x&&(x=w),c+=2;else{let a=C=0;16==w?(a=3+k(d,e,2)<<1,e+=2,C=f[c-1]):17==w?(a=3+k(d,e,3)<<1,e+=3):18==w&&(a=11+k(d,e,7)<<1,e+=7);for(w=c+a;c<w;)f[c]=0,f[c+1]=C,c+=2}}for(a=f.length;c<a;)f[c+1]=0,c+=2;return x<<24|e-g};
R.F.makeCodes=function(a,b){var c=R.F.U;let d=a.length;var e;let f;var g=c.bl_count;for(e=0;e<=b;e++)g[e]=0;for(e=1;e<d;e+=2)g[a[e]]++;c=c.next_code;e=0;g[0]=0;for(f=1;f<=b;f++)e=e+g[f-1]<<1,c[f]=e;for(b=0;b<d;b+=2)g=a[b+1],0!=g&&(a[b]=c[g],c[g]++)};R.F.codes2map=function(a,b,c){let d=a.length,e=R.F.U.rev15;for(let k=0;k<d;k+=2)if(0!=a[k+1]){var f=a[k+1];let d=k>>1<<4|f;var g=b-f;f=a[k]<<g;for(g=f+(1<<g);f!=g;)c[e[f]>>>15-b]=d,f++}};
R.F.revCodes=function(a,b){let c=R.F.U.rev15,d=15-b;for(let e=0;e<a.length;e+=2)a[e]=c[a[e]<<b-a[e+1]]>>>d};R.F._putsE=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8};R.F._putsF=function(a,b,c){c<<=b&7;b>>>=3;a[b]|=c;a[b+1]|=c>>>8;a[b+2]|=c>>>16};R.F._bitsE=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8)>>>(b&7)&(1<<c)-1};R.F._bitsF=function(a,b,c){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)&(1<<c)-1};
R.F._get17=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16)>>>(b&7)};R.F._get25=function(a,b){return(a[b>>>3]|a[(b>>>3)+1]<<8|a[(b>>>3)+2]<<16|a[(b>>>3)+3]<<24)>>>(b&7)};
R.F.U={next_code:new Uint16Array(16),bl_count:new Uint16Array(16),ordr:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],of0:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],exb:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],ldef:new Uint16Array(32),df0:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],dxb:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,
10,11,11,12,12,13,13,0,0],ddef:new Uint32Array(32),flmap:new Uint16Array(512),fltree:[],fdmap:new Uint16Array(32),fdtree:[],lmap:new Uint16Array(32768),ltree:[],dmap:new Uint16Array(32768),dtree:[],imap:new Uint16Array(512),itree:[],rev15:new Uint16Array(32768),lhst:new Uint32Array(286),dhst:new Uint32Array(30),ihst:new Uint32Array(19),lits:new Uint32Array(15E3),strt:new Uint16Array(65536),prev:new Uint16Array(32768)};
{let a=R.F.U;for(let b=0;32768>b;b++){let c=b;c=(c&2863311530)>>>1|(c&1431655765)<<1;c=(c&3435973836)>>>2|(c&858993459)<<2;c=(c&4042322160)>>>4|(c&252645135)<<4;c=(c&4278255360)>>>8|(c&16711935)<<8;a.rev15[b]=(c>>>16|c<<16)>>>17}for(let b=0;32>b;b++)a.ldef[b]=a.of0[b]<<3|a.exb[b],a.ddef[b]=a.df0[b]<<4|a.dxb[b];let b=0;for(;143>=b;b++)a.fltree.push(0,8);for(;255>=b;b++)a.fltree.push(0,9);for(;279>=b;b++)a.fltree.push(0,7);for(;287>=b;b++)a.fltree.push(0,8);R.F.makeCodes(a.fltree,9);R.F.codes2map(a.fltree,
9,a.flmap);R.F.revCodes(a.fltree,9);for(b=0;32>b;b++)a.fdtree.push(0,5);R.F.makeCodes(a.fdtree,5);R.F.codes2map(a.fdtree,5,a.fdmap);R.F.revCodes(a.fdtree,5);for(let b=0;19>b;b++)a.itree.push(0,0);for(let b=0;286>b;b++)a.ltree.push(0,0);for(let b=0;30>b;b++)a.dtree.push(0,0)}
const $a=(a,b)=>(async()=>{if(ArrayBuffer.isView(a)&&a.constructor===Uint8Array)return a;if("object"===typeof a&&a.size){var c=await Ya(a);return a.name.toLowerCase().endsWith(".zip")?await Za(c):c}c={};b&&b.headers&&(c.headers=b.headers);var d=await fetch(a,c).then((a)=>a.ok?a.arrayBuffer():Promise.reject(a));c=a;b&&b.fileName&&(c=b.fileName);d=new Uint8Array(d);return c.toLowerCase().endsWith(".zip")?await Za(d):d})(),Ya=async(a)=>await new Promise((b)=>{const c=new FileReader;c.onload=()=>{const a=
new Uint8Array(c.result);b(a)};c.readAsArrayBuffer(a)}),Za=async(a)=>{const b=await R.parse(a);let c=!1;Object.keys(b).some((a)=>{const d=a.toLowerCase();return d.includes(".gb")||d.includes(".gbc")?(c=b[a],!0):!1});if(!c)throw Error("Could not find a ROM in zip...");return c};
function ab(a,b){this.loadedAndStarted=this.ready=!1;const c=async()=>{const c=[$a(a,b),this._instantiateWorkers()];!this.options.headless&&H.getLoadedCartridgeMemoryState().RAM&&c.push(H.saveCartridgeRam());let d;await Promise.all(c).then((a)=>{d=a[0]});this.coreType=(await this.worker.postMessage({type:m.INSTANTIATE_WASM})).message.type;return d},d=async(a)=>{await H.clearMemory();await H.loadCartridgeRom(a);this.loadedROM=a;await this.worker.postMessage({type:m.CONFIG,config:[0,this.options.isGbcEnabled?
1:0,this.options.audioBatchProcessing?1:0,this.options.graphicsBatchProcessing?1:0,this.options.timersBatchProcessing?1:0,this.options.graphicsDisableScanlineRendering?1:0,this.options.audioAccumulateSamples?1:0,this.options.tileRendering?1:0,this.options.tileCaching?1:0],options:{gameboyFrameRate:this.options.gameboyFrameRate,headless:this.options.headless,isAudioEnabled:this.options.isAudioEnabled,frameSkip:this.options.frameSkip}})};return(async()=>{await this.pause();let a=await c();this.options.headless?
(await H.initialize(this.options.headless,this.options.saveStateCallback),await d(a)):(await Promise.all([ba.initialize(this.canvasElement,this.options.updateGraphicsCallback),F.initialize(this.options.updateAudioCallback),Q.initialize(),H.initialize(this.options.headless,this.options.saveStateCallback)]),await d(a),await H.loadCartridgeRam());this.ready=!0;if(this.options.onReady)this.options.onReady()})()}
for(var bb=ja(function(a){(function(){if("undefined"!==typeof performance&&null!==performance&&performance.now)a.exports=function(){return performance.now()};else if("undefined"!==typeof process&&null!==process&&process.hrtime){a.exports=function(){return(c()-f)/1E6};var b=process.hrtime;var c=function(){var a=b();return 1E9*a[0]+a[1]};var d=c();var e=1E9*process.uptime();var f=d-e}else if(Date.now){a.exports=function(){return Date.now()-g};var g=Date.now()}else a.exports=function(){return(new Date).getTime()-
g},g=(new Date).getTime()}).call(ea)}),S="undefined"===typeof window?ea:window,cb=["moz","webkit"],db=S.requestAnimationFrame,eb=S.cancelAnimationFrame||S.cancelRequestAnimationFrame,fb=0;!db&&fb<cb.length;fb++)db=S[cb[fb]+"RequestAnimationFrame"],eb=S[cb[fb]+"CancelAnimationFrame"]||S[cb[fb]+"CancelRequestAnimationFrame"];
if(!db||!eb){var gb=0,hb=0,T=[],ib=1E3/60;db=function(a){if(0===T.length){var b=bb(),c=Math.max(0,ib-(b-gb));gb=c+b;setTimeout(function(){for(var a=T.slice(0),b=T.length=0;b<a.length;b++)if(!a[b].cancelled)try{a[b].callback(gb)}catch(f){setTimeout(function(){throw f;},0)}},Math.round(c))}T.push({handle:++hb,callback:a,cancelled:!1});return hb};eb=function(a){for(var b=0;b<T.length;b++)T[b].handle===a&&(T[b].cancelled=!0)}}function jb(a){return db.call(S,a)}function kb(){eb.apply(S,arguments)}
jb.cancel=null;jb.polyfill=null;function lb(){if(this.paused)return!0;let a=!1;this.frameSkip&&0<this.frameSkip&&(this.frameSkipCounter++,this.frameSkipCounter<this.frameSkip?a=!0:this.frameSkipCounter=0);a||ba.renderFrame();Q.updateController();this.renderId=jb(()=>{lb.call(this)})}function mb(a,b,c){for(var d=0;d<c.length;d++)a.setUint8(b+d,c.charCodeAt(d))}
var nb=ja(function(a){var b=function(a){function c(a,b,d,e){if("undefined"===typeof a)return c[0];if("undefined"!==typeof b){if(10!==+b||d){var h=d||"0123456789abcdefghijklmnopqrstuvwxyz";a=String(a);e||(a=a.toLowerCase(),h=h.toLowerCase());var q=a.length,f=Math.abs(b);d={};for(e=0;e<h.length;e++)d[h[e]]=e;for(e=0;e<q;e++)if(h=a[e],"-"!==h&&h in d&&d[h]>=f&&("1"!==h||1!==f))throw Error(h+" is not a valid digit in base "+b+".");b=z(b);q=[];for(e=(f="-"===a[0])?1:0;e<a.length;e++)if(h=a[e],h in d)q.push(z(d[h]));
else if("<"===h){h=e;do e++;while(">"!==a[e]&&e<a.length);q.push(z(a.slice(h+1,e)))}else throw Error(h+" is not a valid character");b=La(q,b,f)}else b=z(a);return b}return z(a)}function e(a,b){this.value=a;this.sign=b;this.isSmall=!1}function f(a){this.value=a;this.sign=0>a;this.isSmall=!0}function g(a){this.value=a}function k(a){return-9007199254740992<a&&9007199254740992>a}function l(a){return 1E7>a?[a]:1E14>a?[a%1E7,Math.floor(a/1E7)]:[a%1E7,Math.floor(a/1E7)%1E7,Math.floor(a/1E14)]}function n(a){x(a);
var b=a.length;if(4>b&&0>V(a,va))switch(b){case 0:return 0;case 1:return a[0];case 2:return a[0]+1E7*a[1];default:return a[0]+1E7*(a[1]+1E7*a[2])}return a}function x(a){for(var b=a.length;0===a[--b];);a.length=b+1}function C(a){for(var b=Array(a),c=-1;++c<a;)b[c]=0;return b}function w(a){return 0<a?Math.floor(a):Math.ceil(a)}function y(a,b){var c=a.length,h=b.length,d=Array(c),e=0,q;for(q=0;q<h;q++){var f=a[q]+b[q]+e;e=1E7<=f?1:0;d[q]=f-1E7*e}for(;q<c;)f=a[q]+e,e=1E7===f?1:0,d[q++]=f-1E7*e;0<e&&d.push(e);
return d}function r(a,b){return a.length>=b.length?y(a,b):y(b,a)}function v(a,b){var c=a.length,h=Array(c),d;for(d=0;d<c;d++){var e=a[d]-1E7+b;b=Math.floor(e/1E7);h[d]=e-1E7*b;b+=1}for(;0<b;)h[d++]=b%1E7,b=Math.floor(b/1E7);return h}function t(a,b){var c=a.length,h=b.length,d=Array(c),e=0,q;for(q=0;q<h;q++){var f=a[q]-e-b[q];0>f?(f+=1E7,e=1):e=0;d[q]=f}for(q=h;q<c;q++){f=a[q]-e;if(0>f)f+=1E7;else{d[q++]=f;break}d[q]=f}for(;q<c;q++)d[q]=a[q];x(d);return d}function A(a,b,c){var h=a.length,d=Array(h);
b=-b;var q;for(q=0;q<h;q++){var g=a[q]+b;b=Math.floor(g/1E7);g%=1E7;d[q]=0>g?g+1E7:g}d=n(d);return"number"===typeof d?(c&&(d=-d),new f(d)):new e(d,c)}function p(a,b){var c=a.length,h=b.length,d=C(c+h),e;for(e=0;e<c;++e){var q=a[e];for(var f=0;f<h;++f){var g=b[f];g=q*g+d[e+f];var l=Math.floor(g/1E7);d[e+f]=g-1E7*l;d[e+f+1]+=l}}x(d);return d}function O(a,b){var c=a.length,h=Array(c),d=0,e;for(e=0;e<c;e++){var q=a[e]*b+d;d=Math.floor(q/1E7);h[e]=q-1E7*d}for(;0<d;)h[e++]=d%1E7,d=Math.floor(d/1E7);return h}
function I(a,b){for(var c=[];0<b--;)c.push(0);return c.concat(a)}function P(a,b){var c=Math.max(a.length,b.length);if(30>=c)return p(a,b);c=Math.ceil(c/2);var h=a.slice(c);a=a.slice(0,c);var d=b.slice(c),e=b.slice(0,c);b=P(a,e);var f=P(h,d);h=P(r(a,h),r(e,d));c=r(r(b,I(t(t(h,b),f),c)),I(f,2*c));x(c);return c}function D(a,b,c){return 1E7>a?new e(O(b,a),c):new e(p(b,l(a)),c)}function Ga(a){var b=a.length,c=C(b+b),h;for(h=0;h<b;h++){var d=a[h];var e=-(d*d);for(var f=h;f<b;f++){var g=a[f];g=2*d*g+c[h+
f]+e;e=Math.floor(g/1E7);c[h+f]=g-1E7*e}c[h+b]=e}x(c);return c}function Ha(a,b){var c=a.length,h=C(c);var d=0;for(--c;0<=c;--c){d=1E7*d+a[c];var e=w(d/b);d-=e*b;h[c]=e|0}return[h,d|0]}function W(a,b){b=z(b);if(fa)return[new g(a.value/b.value),new g(a.value%b.value)];var h=a.value;var d=b.value;if(0===d)throw Error("Cannot divide by zero");if(a.isSmall)return b.isSmall?[new f(w(h/d)),new f(h%d)]:[c[0],a];if(b.isSmall){if(1===d)return[a,c[0]];if(-1==d)return[a.negate(),c[0]];d=Math.abs(d);if(1E7>d)return d=
Ha(h,d),h=n(d[0]),d=d[1],a.sign&&(d=-d),"number"===typeof h?(a.sign!==b.sign&&(h=-h),[new f(h),new f(d)]):[new e(h,a.sign!==b.sign),new f(d)];d=l(d)}var q=V(h,d);if(-1===q)return[c[0],a];if(0===q)return[c[a.sign===b.sign?1:-1],c[0]];if(200>=h.length+d.length){var k=d,p=h.length;d=k.length;q=C(k.length);var r=k[d-1],y=Math.ceil(1E7/(2*r));h=O(h,y);k=O(k,y);var v,A,D;h.length<=p&&h.push(0);k.push(0);r=k[d-1];for(v=p-d;0<=v;v--){p=9999999;h[v+d]!==r&&(p=Math.floor((1E7*h[v+d]+h[v+d-1])/r));var I=A=0;
var M=k.length;for(D=0;D<M;D++){A+=p*k[D];var P=Math.floor(A/1E7);I+=h[v+D]-(A-1E7*P);A=P;0>I?(h[v+D]=I+1E7,I=-1):(h[v+D]=I,I=0)}for(;0!==I;){--p;for(D=A=0;D<M;D++)A+=h[v+D]-1E7+k[D],0>A?(h[v+D]=A+1E7,A=0):(h[v+D]=A,A=1);I+=A}q[v]=p}h=Ha(h,y)[0];d=[n(q),n(h)]}else{q=h.length;r=d.length;y=[];for(k=[];q;)if(k.unshift(h[--q]),x(k),0>V(k,d))y.push(0);else{p=k.length;v=1E7*k[p-1]+k[p-2];A=1E7*d[r-1]+d[r-2];p>r&&(v=1E7*(v+1));p=Math.ceil(v/A);do{v=O(d,p);if(0>=V(v,k))break;p--}while(p);y.push(p);k=t(k,
v)}y.reverse();d=[n(y),n(k)]}h=d[0];b=a.sign!==b.sign;d=d[1];a=a.sign;"number"===typeof h?(b&&(h=-h),h=new f(h)):h=new e(h,b);"number"===typeof d?(a&&(d=-d),d=new f(d)):d=new e(d,a);return[h,d]}function V(a,b){if(a.length!==b.length)return a.length>b.length?1:-1;for(var c=a.length-1;0<=c;c--)if(a[c]!==b[c])return a[c]>b[c]?1:-1;return 0}function Ma(a){a=a.abs();if(a.isUnit())return!1;if(a.equals(2)||a.equals(3)||a.equals(5))return!0;if(a.isEven()||a.isDivisibleBy(3)||a.isDivisibleBy(5))return!1;if(a.lesser(49))return!0}
function wa(a,c){for(var d=a.prev(),h=d,e=0,f,q,g;h.isEven();)h=h.divide(2),e++;q=0;a:for(;q<c.length;q++)if(!a.lesser(c[q])&&(g=b(c[q]).modPow(h,a),!g.isUnit()&&!g.equals(d))){for(f=e-1;0!=f;f--){g=g.square().mod(a);if(g.isUnit())break;if(g.equals(d))continue a}return!1}return!0}function xa(a,c,d){c=z(c);var h=a.isNegative(),e=c.isNegative();a=h?a.not():a;var f=e?c.not():c;for(c=[];!a.isZero()||!f.isZero();){a=W(a,X);var q=a[1].toJSNumber();h&&(q=X-1-q);f=W(f,X);var g=f[1].toJSNumber();e&&(g=X-1-
g);a=a[0];f=f[0];c.push(d(q,g))}d=0!==d(h?1:0,e?1:0)?b(-1):b(0);for(h=c.length-1;0<=h;--h)d=d.multiply(X).add(b(c[h]));return d}function qa(a){a=a.value;a="number"===typeof a?a|1073741824:"bigint"===typeof a?a|BigInt(1073741824):a[0]+1E7*a[1]|1073758208;return a&-a}function Na(a,c){if(0>=c.compareTo(a)){var d=Na(a,c.square(c)),h=d.p;d=d.e;c=h.multiply(c);return 0>=c.compareTo(a)?{p:c,e:2*d+1}:{p:h,e:2*d}}return{p:b(1),e:0}}function Oa(a,b){a=z(a);b=z(b);return a.greater(b)?a:b}function ya(a,b){a=
z(a);b=z(b);return a.lesser(b)?a:b}function Pa(a,b){a=z(a).abs();b=z(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;for(var d=c[1],h;a.isEven()&&b.isEven();)h=ya(qa(a),qa(b)),a=a.divide(h),b=b.divide(h),d=d.multiply(h);for(;a.isEven();)a=a.divide(qa(a));do{for(;b.isEven();)b=b.divide(qa(b));a.greater(b)&&(h=b,b=a,a=h);b=b.subtract(a)}while(!b.isZero());return d.isUnit()?a:a.multiply(d)}function La(a,b,d){var h=c[0],e=c[1],f;for(f=a.length-1;0<=f;f--)h=h.add(a[f].times(e)),
e=e.times(b);return d?h.negate():h}function ha(a,c){c=b(c);if(c.isZero()){if(a.isZero())return{value:[0],isNegative:!1};throw Error("Cannot convert nonzero numbers to base 0.");}if(c.equals(-1)){if(a.isZero())return{value:[0],isNegative:!1};if(a.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-a.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:!1};c=Array.apply(null,Array(a.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);c.unshift([1]);return{value:[].concat.apply([],
c),isNegative:!1}}var d=!1;a.isNegative()&&c.isPositive()&&(d=!0,a=a.abs());if(c.isUnit())return a.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(a.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:d};for(var h=[],e;a.isNegative()||0<=a.compareAbs(c);)e=a.divmod(c),a=e.quotient,e=e.remainder,e.isNegative()&&(e=c.minus(e).abs(),a=a.next()),h.push(e.toJSNumber());h.push(a.toJSNumber());return{value:h.reverse(),isNegative:d}}function Qa(a,b,c){a=ha(a,b);return(a.isNegative?
"-":"")+a.value.map(function(a){var b=c;b=b||"0123456789abcdefghijklmnopqrstuvwxyz";a=a<b.length?b[a]:"<"+a+">";return a}).join("")}function Ra(a){if(k(+a)){var b=+a;if(b===w(b))return fa?new g(BigInt(b)):new f(b);throw Error("Invalid integer: "+a);}(b="-"===a[0])&&(a=a.slice(1));var c=a.split(/e/i);if(2<c.length)throw Error("Invalid integer: "+c.join("e"));if(2===c.length){a=c[1];"+"===a[0]&&(a=a.slice(1));a=+a;if(a!==w(a)||!k(a))throw Error("Invalid integer: "+a+" is not a valid exponent.");c=c[0];
var d=c.indexOf(".");0<=d&&(a-=c.length-d-1,c=c.slice(0,d)+c.slice(d+1));if(0>a)throw Error("Cannot include negative exponent part for integers");a=c+=Array(a+1).join("0")}if(!/^([0-9][0-9]*)$/.test(a))throw Error("Invalid integer: "+a);if(fa)return new g(BigInt(b?"-"+a:a));c=[];d=a.length;for(var h=d-7;0<d;)c.push(+a.slice(h,d)),h-=7,0>h&&(h=0),d-=7;x(c);return new e(c,b)}function z(a){if("number"===typeof a){if(fa)a=new g(BigInt(a));else if(k(a)){if(a!==w(a))throw Error(a+" is not an integer.");
a=new f(a)}else a=Ra(a.toString());return a}return"string"===typeof a?Ra(a):"bigint"===typeof a?new g(a):a}var va=l(9007199254740992),fa="function"===typeof BigInt;e.prototype=Object.create(c.prototype);f.prototype=Object.create(c.prototype);g.prototype=Object.create(c.prototype);e.prototype.add=function(a){a=z(a);if(this.sign!==a.sign)return this.subtract(a.negate());var b=this.value,c=a.value;return a.isSmall?new e(v(b,Math.abs(c)),this.sign):new e(r(b,c),this.sign)};e.prototype.plus=e.prototype.add;
f.prototype.add=function(a){a=z(a);var b=this.value;if(0>b!==a.sign)return this.subtract(a.negate());var c=a.value;if(a.isSmall){if(k(b+c))return new f(b+c);c=l(Math.abs(c))}return new e(v(c,Math.abs(b)),0>b)};f.prototype.plus=f.prototype.add;g.prototype.add=function(a){return new g(this.value+z(a).value)};g.prototype.plus=g.prototype.add;e.prototype.subtract=function(a){var b=z(a);if(this.sign!==b.sign)return this.add(b.negate());a=this.value;var c=b.value;if(b.isSmall)return A(a,Math.abs(c),this.sign);
b=this.sign;0<=V(a,c)?a=t(a,c):(a=t(c,a),b=!b);a=n(a);"number"===typeof a?(b&&(a=-a),a=new f(a)):a=new e(a,b);return a};e.prototype.minus=e.prototype.subtract;f.prototype.subtract=function(a){a=z(a);var b=this.value;if(0>b!==a.sign)return this.add(a.negate());var c=a.value;return a.isSmall?new f(b-c):A(c,Math.abs(b),0<=b)};f.prototype.minus=f.prototype.subtract;g.prototype.subtract=function(a){return new g(this.value-z(a).value)};g.prototype.minus=g.prototype.subtract;e.prototype.negate=function(){return new e(this.value,
!this.sign)};f.prototype.negate=function(){var a=this.sign,b=new f(-this.value);b.sign=!a;return b};g.prototype.negate=function(){return new g(-this.value)};e.prototype.abs=function(){return new e(this.value,!1)};f.prototype.abs=function(){return new f(Math.abs(this.value))};g.prototype.abs=function(){return new g(0<=this.value?this.value:-this.value)};e.prototype.multiply=function(a){var b=z(a);a=this.value;var d=b.value,h=this.sign!==b.sign;if(b.isSmall){if(0===d)return c[0];if(1===d)return this;
if(-1===d)return this.negate();d=Math.abs(d);if(1E7>d)return new e(O(a,d),h);d=l(d)}b=a.length;var f=d.length;return 0<-.012*b-.012*f+1.5E-5*b*f?new e(P(a,d),h):new e(p(a,d),h)};e.prototype.times=e.prototype.multiply;f.prototype._multiplyBySmall=function(a){return k(a.value*this.value)?new f(a.value*this.value):D(Math.abs(a.value),l(Math.abs(this.value)),this.sign!==a.sign)};e.prototype._multiplyBySmall=function(a){return 0===a.value?c[0]:1===a.value?this:-1===a.value?this.negate():D(Math.abs(a.value),
this.value,this.sign!==a.sign)};f.prototype.multiply=function(a){return z(a)._multiplyBySmall(this)};f.prototype.times=f.prototype.multiply;g.prototype.multiply=function(a){return new g(this.value*z(a).value)};g.prototype.times=g.prototype.multiply;e.prototype.square=function(){return new e(Ga(this.value),!1)};f.prototype.square=function(){var a=this.value*this.value;return k(a)?new f(a):new e(Ga(l(Math.abs(this.value))),!1)};g.prototype.square=function(){return new g(this.value*this.value)};e.prototype.divmod=
function(a){a=W(this,a);return{quotient:a[0],remainder:a[1]}};g.prototype.divmod=f.prototype.divmod=e.prototype.divmod;e.prototype.divide=function(a){return W(this,a)[0]};g.prototype.over=g.prototype.divide=f.prototype.over=f.prototype.divide=e.prototype.over=e.prototype.divide;e.prototype.mod=function(a){return W(this,a)[1]};g.prototype.mod=g.prototype.remainder=f.prototype.remainder=f.prototype.mod=e.prototype.remainder=e.prototype.mod;e.prototype.pow=function(a){var b=z(a),d=this.value;a=b.value;
var e;if(0===a)return c[1];if(0===d)return c[0];if(1===d)return c[1];if(-1===d)return b.isEven()?c[1]:c[-1];if(b.sign)return c[0];if(!b.isSmall)throw Error("The exponent "+b.toString()+" is too large.");if(this.isSmall&&k(e=Math.pow(d,a)))return new f(w(e));e=this;for(b=c[1];;){a&1&&(b=b.times(e),--a);if(0===a)break;a/=2;e=e.square()}return b};f.prototype.pow=e.prototype.pow;var Sa;fa&&(Sa=eval("(a,b)=>a**b"));g.prototype.pow=function(a){a=z(a);var b=this.value,d=a.value;return d===BigInt(0)?c[1]:
b===BigInt(0)?c[0]:b===BigInt(1)?c[1]:b===BigInt(-1)?a.isEven()?c[1]:c[-1]:a.isNegative()?new g(BigInt(0)):new g(Sa(b,d))};e.prototype.modPow=function(a,b){a=z(a);b=z(b);if(b.isZero())throw Error("Cannot take modPow with modulus 0");for(var d=c[1],e=this.mod(b);a.isPositive();){if(e.isZero())return c[0];a.isOdd()&&(d=d.multiply(e).mod(b));a=a.divide(2);e=e.square().mod(b)}return d};g.prototype.modPow=f.prototype.modPow=e.prototype.modPow;e.prototype.compareAbs=function(a){a=z(a);return a.isSmall?
1:V(this.value,a.value)};f.prototype.compareAbs=function(a){a=z(a);var b=Math.abs(this.value),c=a.value;return a.isSmall?(c=Math.abs(c),b===c?0:b>c?1:-1):-1};g.prototype.compareAbs=function(a){var b=this.value;a=z(a).value;b=0<=b?b:-b;a=0<=a?a:-a;return b===a?0:b>a?1:-1};e.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=z(a);return this.sign!==a.sign?a.sign?1:-1:a.isSmall?this.sign?-1:1:V(this.value,a.value)*(this.sign?-1:1)};e.prototype.compareTo=e.prototype.compare;
f.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;a=z(a);var b=this.value,c=a.value;return a.isSmall?b==c?0:b>c?1:-1:0>b!==a.sign?0>b?-1:1:0>b?1:-1};f.prototype.compareTo=f.prototype.compare;g.prototype.compare=function(a){if(Infinity===a)return-1;if(-Infinity===a)return 1;var b=this.value;a=z(a).value;return b===a?0:b>a?1:-1};g.prototype.compareTo=g.prototype.compare;e.prototype.equals=function(a){return 0===this.compare(a)};g.prototype.eq=g.prototype.equals=f.prototype.eq=
f.prototype.equals=e.prototype.eq=e.prototype.equals;e.prototype.notEquals=function(a){return 0!==this.compare(a)};g.prototype.neq=g.prototype.notEquals=f.prototype.neq=f.prototype.notEquals=e.prototype.neq=e.prototype.notEquals;e.prototype.greater=function(a){return 0<this.compare(a)};g.prototype.gt=g.prototype.greater=f.prototype.gt=f.prototype.greater=e.prototype.gt=e.prototype.greater;e.prototype.lesser=function(a){return 0>this.compare(a)};g.prototype.lt=g.prototype.lesser=f.prototype.lt=f.prototype.lesser=
e.prototype.lt=e.prototype.lesser;e.prototype.greaterOrEquals=function(a){return 0<=this.compare(a)};g.prototype.geq=g.prototype.greaterOrEquals=f.prototype.geq=f.prototype.greaterOrEquals=e.prototype.geq=e.prototype.greaterOrEquals;e.prototype.lesserOrEquals=function(a){return 0>=this.compare(a)};g.prototype.leq=g.prototype.lesserOrEquals=f.prototype.leq=f.prototype.lesserOrEquals=e.prototype.leq=e.prototype.lesserOrEquals;e.prototype.isEven=function(){return 0===(this.value[0]&1)};f.prototype.isEven=
function(){return 0===(this.value&1)};g.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};e.prototype.isOdd=function(){return 1===(this.value[0]&1)};f.prototype.isOdd=function(){return 1===(this.value&1)};g.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};e.prototype.isPositive=function(){return!this.sign};f.prototype.isPositive=function(){return 0<this.value};g.prototype.isPositive=f.prototype.isPositive;e.prototype.isNegative=function(){return this.sign};
f.prototype.isNegative=function(){return 0>this.value};g.prototype.isNegative=f.prototype.isNegative;e.prototype.isUnit=function(){return!1};f.prototype.isUnit=function(){return 1===Math.abs(this.value)};g.prototype.isUnit=function(){return this.abs().value===BigInt(1)};e.prototype.isZero=function(){return!1};f.prototype.isZero=function(){return 0===this.value};g.prototype.isZero=function(){return this.value===BigInt(0)};e.prototype.isDivisibleBy=function(a){a=z(a);return a.isZero()?!1:a.isUnit()?
!0:0===a.compareAbs(2)?this.isEven():this.mod(a).isZero()};g.prototype.isDivisibleBy=f.prototype.isDivisibleBy=e.prototype.isDivisibleBy;e.prototype.isPrime=function(c){var d=Ma(this);if(d!==a)return d;d=this.abs();var e=d.bitLength();if(64>=e)return wa(d,[2,325,9375,28178,450775,9780504,1795265022]);e=Math.log(2)*e.toJSNumber();c=Math.ceil(!0===c?2*Math.pow(e,2):e);e=[];for(var f=0;f<c;f++)e.push(b(f+2));return wa(d,e)};g.prototype.isPrime=f.prototype.isPrime=e.prototype.isPrime;e.prototype.isProbablePrime=
function(c){var d=Ma(this);if(d!==a)return d;d=this.abs();c=c===a?5:c;for(var e=[],f=0;f<c;f++)e.push(b.randBetween(2,d.minus(2)));return wa(d,e)};g.prototype.isProbablePrime=f.prototype.isProbablePrime=e.prototype.isProbablePrime;e.prototype.modInv=function(a){for(var c=b.zero,d=b.one,e=z(a),f=this.abs(),g,h,k;!f.isZero();)g=e.divide(f),h=c,k=e,c=d,e=f,d=h.subtract(g.multiply(d)),f=k.subtract(g.multiply(f));if(!e.isUnit())throw Error(this.toString()+" and "+a.toString()+" are not co-prime");-1===
c.compare(0)&&(c=c.add(a));return this.isNegative()?c.negate():c};g.prototype.modInv=f.prototype.modInv=e.prototype.modInv;e.prototype.next=function(){var a=this.value;return this.sign?A(a,1,this.sign):new e(v(a,1),this.sign)};f.prototype.next=function(){var a=this.value;return 9007199254740992>a+1?new f(a+1):new e(va,!1)};g.prototype.next=function(){return new g(this.value+BigInt(1))};e.prototype.prev=function(){var a=this.value;return this.sign?new e(v(a,1),!0):A(a,1,this.sign)};f.prototype.prev=
function(){var a=this.value;return-9007199254740992<a-1?new f(a-1):new e(va,!0)};g.prototype.prev=function(){return new g(this.value-BigInt(1))};for(var M=[1];1E7>=2*M[M.length-1];)M.push(2*M[M.length-1]);var ia=M.length,X=M[ia-1];e.prototype.shiftLeft=function(a){a=z(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");if(0>a)return this.shiftRight(-a);var b=this;if(b.isZero())return b;for(;a>=ia;)b=b.multiply(X),a-=ia-1;return b.multiply(M[a])};g.prototype.shiftLeft=
f.prototype.shiftLeft=e.prototype.shiftLeft;e.prototype.shiftRight=function(a){var b;a=z(a).toJSNumber();if(!(1E7>=Math.abs(a)))throw Error(String(a)+" is too large for shifting.");if(0>a)return this.shiftLeft(-a);for(b=this;a>=ia;){if(b.isZero()||b.isNegative()&&b.isUnit())return b;b=W(b,X);b=b[1].isNegative()?b[0].prev():b[0];a-=ia-1}b=W(b,M[a]);return b[1].isNegative()?b[0].prev():b[0]};g.prototype.shiftRight=f.prototype.shiftRight=e.prototype.shiftRight;e.prototype.not=function(){return this.negate().prev()};
g.prototype.not=f.prototype.not=e.prototype.not;e.prototype.and=function(a){return xa(this,a,function(a,b){return a&b})};g.prototype.and=f.prototype.and=e.prototype.and;e.prototype.or=function(a){return xa(this,a,function(a,b){return a|b})};g.prototype.or=f.prototype.or=e.prototype.or;e.prototype.xor=function(a){return xa(this,a,function(a,b){return a^b})};g.prototype.xor=f.prototype.xor=e.prototype.xor;e.prototype.bitLength=function(){var a=this;0>a.compareTo(b(0))&&(a=a.negate().subtract(b(1)));
return 0===a.compareTo(b(0))?b(0):b(Na(a,b(2)).e).add(b(1))};g.prototype.bitLength=f.prototype.bitLength=e.prototype.bitLength;e.prototype.toArray=function(a){return ha(this,a)};f.prototype.toArray=function(a){return ha(this,a)};g.prototype.toArray=function(a){return ha(this,a)};e.prototype.toString=function(b,c){b===a&&(b=10);if(10!==b)return Qa(this,b,c);b=this.value;c=b.length;for(var d=String(b[--c]),e;0<=--c;)e=String(b[c]),d+="0000000".slice(e.length)+e;return(this.sign?"-":"")+d};f.prototype.toString=
function(b,c){b===a&&(b=10);return 10!=b?Qa(this,b,c):String(this.value)};g.prototype.toString=f.prototype.toString;g.prototype.toJSON=e.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()};e.prototype.valueOf=function(){return parseInt(this.toString(),10)};e.prototype.toJSNumber=e.prototype.valueOf;f.prototype.valueOf=function(){return this.value};f.prototype.toJSNumber=f.prototype.valueOf;g.prototype.valueOf=g.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};
for(var Y=0;1E3>Y;Y++)c[Y]=z(Y),0<Y&&(c[-Y]=z(-Y));c.one=c[1];c.zero=c[0];c.minusOne=c[-1];c.max=Oa;c.min=ya;c.gcd=Pa;c.lcm=function(a,b){a=z(a).abs();b=z(b).abs();return a.divide(Pa(a,b)).multiply(b)};c.isInstance=function(a){return a instanceof e||a instanceof f||a instanceof g};c.randBetween=function(a,b){a=z(a);b=z(b);var d=ya(a,b);a=Oa(a,b).subtract(d).add(1);if(a.isSmall)return d.add(Math.floor(Math.random()*a));a=ha(a,1E7).value;b=[];for(var e=!0,f=0;f<a.length;f++){var g=e?a[f]:1E7,h=w(Math.random()*
g);b.push(h);h<g&&(e=!1)}return d.add(c.fromArray(b,1E7,!1))};c.fromArray=function(a,b,c){return La(a.map(z),z(b||10),c)};return c}();a.hasOwnProperty("exports")&&(a.exports=b)});
const Z=async(a,b)=>{if(U.worker)return a=await U.worker.postMessage({type:m.RUN_WASM_EXPORT,export:a,parameters:b}),E(a).message.response},ob=async(a,b)=>{if(U.worker)return a=await U.worker.postMessage({type:m.GET_WASM_MEMORY_SECTION,start:a,end:b}),a=E(a),new Uint8Array(a.message.response)},pb=async(a)=>{if(U.worker)return a=await U.worker.postMessage({type:m.GET_WASM_CONSTANT,constant:a}),E(a).message.response};
function qb(a){a=E(a);if(a.message)switch(a.message.type){case m.UPDATED:this.fps=a.message.fps;break;case m.CRASHED:(async()=>{await this.pause();console.log("Wasmboy Crashed!");let a=await Z("getProgramCounter");var c=await pb("GAMEBOY_INTERNAL_MEMORY_LOCATION");c=await ob(c+a,c+a+1);console.log(`Program Counter: 0x${a.toString(16)}`);console.log(`Opcode: 0x${c[0].toString(16)}`)})()}}
class rb{constructor(){this.canvasElement=this.coreType=this.worker=void 0;this.loadedROM=this.renderId=this.loadedAndStarted=this.ready=this.paused=!1;this.fps=0;this._resetConfig();"undefined"!==typeof window&&window.document.addEventListener("visibilitychange",()=>{"hidden"!==document.visibilityState||this.options&&this.options.disablePauseOnHidden||this.pause()})}config(a,b){return(async()=>{await this.pause();await this.setCanvas(b);!a&&this.options||this._resetConfig();if(a&&(Object.keys(a).forEach((b)=>
{void 0!==this.options[b]&&(this.options[b]=a[b])}),a.gameboySpeed)){let b=Math.floor(60*a.gameboySpeed);0>=b&&(b=1);this.options.gameboyFrameRate=b}})()}getConfig(){return this.options}setCanvas(a){return a?(async()=>{await this.pause();this.canvasElement=a;this.wasmInstance&&this.wasmByteMemory&&await ba.initialize(this.canvasElement,this.wasmInstance,this.wasmByteMemory,this.options.updateGraphicsCallback)})():Promise.resolve()}getCanvas(){return this.canvasElement}loadROM(a,b){return ab.bind(this)(a,
b)}play(){return(async()=>{if(this.ready){if(!this.loadedAndStarted&&(this.loadedAndStarted=!0,this.options.onLoadedAndStarted))this.options.onLoadedAndStarted();if(this.options.onPlay)this.options.onPlay();this.options.headless||(F.resumeAudioContext(),F.resetTimeStretch());await this.worker.postMessage({type:m.RESET_AUDIO_QUEUE});this.paused=!1;this.updateId||await this.worker.postMessage({type:m.PLAY});this.renderId||this.options.headless||(this.renderId=jb(()=>{lb.call(this)}))}})()}pause(){return(async()=>
{this.paused=!0;if(this.ready&&this.options.onPause)this.options.onPause();kb(this.renderId);this.renderId=!1;this.options.headless||F.cancelAllAudio(!0);this.worker&&await this.worker.postMessage({type:m.PAUSE});await new Promise((a)=>{jb(()=>{a()})})})()}reset(a){return(async()=>{this.config(a,this.canvasElement);if(this.loadedROM)return this.loadROM(this.loadedROM)})()}saveState(){return(async()=>{await this.pause();return await H.saveState()})()}getSaveStates(){return(async()=>{let a=await H.getCartridgeObject();
return a?a.saveStates:[]})()}loadState(a){return(async()=>{await this.pause();await H.loadState(a)})()}getFPS(){return this.fps}getCoreType(){return this.coreType}_resetConfig(){this.fpsTimeStamps=[];this.frameSkipCounter=0;this.options={headless:!1,disablePauseOnHidden:!1,isAudioEnabled:!0,gameboyFrameRate:60,frameSkip:0,includeBootROM:!1,isGbcEnabled:!0,audioBatchProcessing:!1,graphicsBatchProcessing:!1,timersBatchProcessing:!1,graphicsDisableScanlineRendering:!1,audioAccumulateSamples:!1,tileRendering:!1,
tileCaching:!1,updateGraphicsCallback:null,updateAudioCallback:null,saveStateCallback:null,onReady:null,onPlay:null,onPause:null,onLoadedAndStarted:null}}_instantiateWorkers(){return(async()=>{this.worker||(this.worker=await Wa(),this.worker.addMessageListener(qb.bind(this)))})()}}const U=new rb;
var sb={name:"wasmboy",description:"Gameboy / Gameboy Color Emulator written for Web Assembly using AssemblyScript. Shell/Debugger in Preact",keywords:"web-assembly webassembly gameboy emulator emulation assemblyscript gameboy-color".split(" "),author:"Aaron Turner",version:"0.3.3",license:"Apache-2.0",homepage:"https://wasmboy.app",repository:{type:"git",url:"git+https://github.com/torch2424/wasmBoy.git"},bugs:{url:"https://github.com/torch2424/wasmBoy/issues"},main:"dist/wasmboy.wasm.cjs.js",module:"dist/wasmboy.wasm.esm.js",
browser:"dist/wasmboy.wasm.umd.js",iife:"dist/wasmboy.wasm.iife.js",scripts:{prepare:"npx run-s core:build lib:build",start:'npx concurrently --kill-others --names "DEBUGGER,CORE,LIB" -c "bgBlue.bold,bgMagenta.bold,bgGreen.bold" "npm run debugger:watch" "npm run core:watch" "npm run lib:watch:wasm"',"start:ts":'npx concurrently --kill-others --names "DEBUGGER,LIBANDCORETS" -c "bgBlue.bold,bgGreen.bold" "npm run debugger:watch" "npm run lib:watch:ts"',dev:"npm run start",watch:"npm run start","dev:ts":"npm run start:ts",
"watch:ts":"npm run start:ts",build:"npx run-s core:build lib:build:wasm",deploy:"npx run-s lib:deploy demo:deploy",prettier:"npm run prettier:lint:fix","prettier:lint":"npx run-s prettier:lint:message prettier:lint:list","prettier:lint:message":'echo "Listing unlinted files, will show nothing if everything is fine."',"prettier:lint:list":"npx prettier --config .prettierrc --list-different rollup.*.js preact.config.js demo/**/*.js demo/**/*.css lib/**/*.js core/**/*.ts","prettier:lint:fix":"npx prettier --config .prettierrc --write rollup.*.js preact.config.js demo/**/*.js demo/**/*.css lib/**/*.js core/**/*.ts",
precommit:"npx pretty-quick --staged","core:watch":'npx watch "npm run core:build" core',"core:build":"npx run-s core:build:asc core:build:dist core:build:done","core:build:asc":"npx asc core/index.ts -b dist/core/core.untouched.wasm -t dist/core/core.untouched.wast -O3 --validate --sourceMap core/dist/core.untouched.wasm.map --memoryBase 0","core:build:asc:measure":"npm run core:build:asc -- --measure --noEmit","core:build:ts:measure":"npx tsc --project core/tsconfig.json --noEmit --extendedDiagnostics",
"core:build:dist":"npx run-s core:build:dist:mkdir core:build:dist:cp","core:build:dist:mkdir":"mkdir -p build/assets","core:build:dist:cp":"cp dist/core/*.untouched.* build/assets","core:build:done":'echo "Built Core!"',"lib:build":"npx run-s lib:build:wasm lib:build:ts lib:build:ts:getcoreclosure","lib:watch:wasm":"npx rollup -c -w --environment WASM","lib:build:wasm":"npx rollup -c --environment PROD,WASM","lib:watch:ts":"npx rollup -c -w --environment TS","lib:build:ts":"npx rollup -c --environment PROD,TS",
"lib:build:ts:esnext":"npx rollup -c --environment PROD,TS,ES_NEXT","lib:build:ts:getcoreclosure":"npx rollup -c --environment PROD,TS,GET_CORE_CLOSURE","lib:deploy":"npx run-s core:build lib:build:wasm lib:build:ts lib:deploy:np","lib:deploy:np":"npx np",test:"npm run test:accuracy","test:accuracy":"npx run-s build test:accuracy:nobuild","test:accuracy:nobuild":"node --experimental-worker node_modules/mocha/bin/_mocha test/accuracy/accuracy-test.js --exit","test:perf":"npm run test:performance",
"test:performance":"npx run-s build test:performance:nobuild","test:performance:nobuild":"node --experimental-worker node_modules/mocha/bin/_mocha test/performance/performance-test.js --exit","debugger:dev":"npm run debugger:watch","debugger:watch":"npx preact watch --src demo/debugger","debugger:serve":"npx run-s debugger:build debugger:serve:nobuild","debugger:serve:nobuild":"npx preact serve","debugger:build":"npx preact build -p --src demo/debugger --no-prerender --service-worker=false","benchmark:build":"npx rollup -c --environment PROD,TS,BENCHMARK",
"benchmark:build:skiplib":"npx rollup -c --environment PROD,TS,BENCHMARK,SKIP_LIB","benchmark:dev":"npm run benchmark:watch","benchmark:watch":"npx rollup -c -w --environment TS,BENCHMARK,SERVE","amp:build":"npx rollup -c --environment PROD,TS,AMP","amp:build:skiplib":"npx rollup -c --environment PROD,TS,AMP,SKIP_LIB","amp:dev":"npm run amp:watch","amp:watch":"npx rollup -c -w --environment TS,AMP,SERVE","demo:cname":"echo 'wasmboy.app' > build/CNAME","demo:build":"npx run-s core:build lib:build demo:build:apps",
"demo:build:apps":"npx run-s debugger:build benchmark:build:skiplib amp:build:skiplib demo:build:serviceworker","demo:build:serviceworker":"rm build/sw.js && cp demo/sw.js build","demo:dist":"cp -r dist/ build/dist","demo:gh-pages":"npx gh-pages -d build","demo:deploy":"npx run-s demo:build demo:dist demo:cname demo:gh-pages"},files:["dist","README.md","LICENSE"],dependencies:{"audiobuffer-to-wav":"git+https://github.com/torch2424/audiobuffer-to-wav.git#es-module-rollup",idb:"^2.1.3",raf:"^3.4.0",
"responsive-gamepad":"0.1.3"},devDependencies:{"@ampproject/rollup-plugin-closure-compiler":"^0.7.2","@babel/core":"^7.1.2","@babel/plugin-proposal-class-properties":"^7.1.0","@babel/plugin-proposal-object-rest-spread":"^7.0.0","@babel/plugin-transform-react-jsx":"^7.0.0",assemblyscript:"github:AssemblyScript/assemblyscript#c769f65bacd5392e5c9efab112b33244fc0a0c8f","babel-plugin-filter-imports":"^2.0.3","babel-preset-env":"^1.6.1","big-integer":"^1.6.38","browser-detect":"^0.2.28",bulma:"^0.7.1",
"chart.js":"^2.7.3","chartjs-plugin-downsample":"^1.0.2",concurrently:"^3.5.1","gh-pages":"^1.1.0",husky:"^1.0.0-rc.8","load-script":"^1.0.0","markdown-table":"^1.1.1",microseconds:"^0.1.0",mocha:"^5.0.1",np:"^3.1.0","npm-run-all":"^4.1.5","performance-now":"^2.1.0","pngjs-image":"^0.11.7",preact:"^8.2.1","preact-cli":"^2.2.1","preact-compat":"^3.17.0","preact-portal":"^1.1.3",prettier:"^1.12.1","pretty-quick":"^1.6.0","recursive-readdir-sync":"^1.0.6",rollup:"^0.66.1","rollup-plugin-babel":"^4.0.3",
"rollup-plugin-bundle-size":"^1.0.2","rollup-plugin-commonjs":"^9.2.0","rollup-plugin-copy-glob":"^0.2.2","rollup-plugin-json":"^3.1.0","rollup-plugin-node-resolve":"^3.4.0","rollup-plugin-postcss":"^1.6.2","rollup-plugin-replace":"^2.1.0","rollup-plugin-serve":"^0.6.0","rollup-plugin-typescript":"^1.0.0","rollup-plugin-url":"^1.4.0","source-map-loader":"^0.2.4","stats-lite":"^2.2.0",tslib:"^1.9.3",typescript:"^3.1.3","uglifyjs-webpack-plugin":"^1.2.3","url-loader":"^1.0.1",valoo:"^2.1.0",watch:"^1.0.2",
"webpack-dev-server":"^3.1.10"}};
const tb={config:U.config.bind(U),getCoreType:U.getCoreType.bind(U),getConfig:U.getConfig.bind(U),setCanvas:U.setCanvas.bind(U),getCanvas:U.getCanvas.bind(U),loadROM:U.loadROM.bind(U),play:U.play.bind(U),pause:U.pause.bind(U),reset:U.reset.bind(U),isPlaying:()=>!U.paused,isPaused:()=>U.paused,isReady:()=>U.ready,isLoadedAndStarted:()=>U.loadedAndStarted,getVersion:()=>sb.version,saveState:U.saveState.bind(U),getSaveStates:U.getSaveStates.bind(U),loadState:U.loadState.bind(U),getFPS:U.getFPS.bind(U),
enableDefaultJoypad:Q.enableDefaultJoypad.bind(Q),disableDefaultJoypad:Q.disableDefaultJoypad.bind(Q),setJoypadState:Q.setJoypadState.bind(Q),addTouchInput:Q.addTouchInput.bind(Q),removeTouchInput:Q.removeTouchInput.bind(Q),resumeAudioContext:F.resumeAudioContext.bind(F),_getCartridgeInfo:H.getCartridgeInfo.bind(H),_saveCurrentAudioBufferToWav:()=>{if(F.audioBuffer){var a=F.audioBuffer;var b={};var c=a.numberOfChannels,d=a.sampleRate;b=b.float32?3:1;var e=3===b?32:16;if(2===c){var f=a.getChannelData(0);
a=a.getChannelData(1);for(var g=f.length+a.length,k=new Float32Array(g),l=0,n=0;l<g;)k[l++]=f[n],k[l++]=a[n],n++;f=k}else f=a.getChannelData(0);k=e/8;l=c*k;a=new ArrayBuffer(44+f.length*k);g=new DataView(a);mb(g,0,"RIFF");g.setUint32(4,36+f.length*k,!0);mb(g,8,"WAVE");mb(g,12,"fmt ");g.setUint32(16,16,!0);g.setUint16(20,b,!0);g.setUint16(22,c,!0);g.setUint32(24,d,!0);g.setUint32(28,d*l,!0);g.setUint16(32,l,!0);g.setUint16(34,e,!0);mb(g,36,"data");g.setUint32(40,f.length*k,!0);if(1===b)for(c=44,d=
0;d<f.length;d++,c+=2)b=Math.max(-1,Math.min(1,f[d])),g.setInt16(c,0>b?32768*b:32767*b,!0);else for(c=44,d=0;d<f.length;d++,c+=4)g.setFloat32(c,f[d],!0);c=new window.Blob([new DataView(a)],{type:"audio/wav"});c=window.URL.createObjectURL(c);d=document.createElement("a");document.body.appendChild(d);d.style="display: none";d.href=c;d.download="audio.wav";d.click();window.URL.revokeObjectURL(c)}},_runWasmExport:Z,_getWasmMemorySection:ob,_getWasmConstant:pb,_getStepsAsString:async(a)=>{var b=await Z("getStepsPerStepSet");
const c=await Z("getStepSets"),d=await Z("getSteps");b=nb(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)},_getCyclesAsString:async(a)=>{var b=await Z("getCyclesPerCycleSet");const c=await Z("getCycleSets"),d=await Z("getCycles");b=nb(b).multiply(c).add(d);return a?b.toString(a):b.toString(10)}};var WasmBoy=tb;export{WasmBoy};
//# sourceMappingURL=wasmboy.wasm.esm.js.map
